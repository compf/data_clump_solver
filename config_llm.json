{
    "ProgrammingLanguageIdentifier": "Java",
    "Objects": {
        "LanguageModelInterface": {
            "type": "ChatGPTInterface",
            "args": {
                "model": "gpt-4-1106-preview",
                "temperature": 0.9
            }
        },
        
        "DataClumpSizeMetric":{
           
        },
        "DataClumpOccurenceMetric":{
            
        },
        "AffectedFilesMetric":{
            
        },
        "ByTypeNameKeyFilter":{
            "args":{
                "typeNameKey":     [
                    "java.lang.String authority",
                    "java.lang.String fullMethodName",
                    "io.micrometer.core.instrument.binder.grpc.io.grpc.Metadata headers",
                    "java.lang.String methodName",
                    "io.micrometer.core.instrument.binder.grpc.io.grpc.MethodDescriptor.MethodType methodType",
                    "java.lang.String serviceName",
                    "io.micrometer.core.instrument.binder.grpc.io.grpc.Status.Code statusCode",
                    "io.micrometer.core.instrument.binder.grpc.io.grpc.Metadata trailers"
                ]
                    

                
            }
        },
        "SystemInstructionHandler": {
            "args": {
                "instructionPath": "chatGPT_templates/detectAndRefactor/definitionBased/fromScratch/instruction.template"
            }
        },
        "AllFilesHandler": {},
        "SendAndClearHandler": {},
        "LanguageModelTemplateResolver": {
            "args": {
                "${programming_language}": "Java",
                "%{examples}": "chatGPT_templates/DataClumpExamples.java",
                "%{refactor_instruction}": "chatGPT_templates/refactor_one_data_clump.template",
                "%{detected_data_clumps}": "chatGPT_templates/refactor/detected_data_clumps_minified.json",
                "%{output_format_refactor}":"chatGPT_templates/json_format_refactor_piecewise.json",
                "%{llm_output_format}":"chatGPT_templates/use_markdown.template"
            }
        },
        "RandomRanker": {
            "type": "RandomRanker"
        },
        "MetricCombiner":{
            "args":{
                "metrics":[
                    {"name":"DataClumpSizeMetric","weight":1},
                    {"name":"DataClumpOccurenceMetric","weight":100},
                    {"name":"AffectedFilesMetric","weight":-100}
                ]
            }
        }
    },
    "PipeLine": {
        "CodeObtaining": {
            "handler": "SimpleCodeObtainingStepHandler",
            "args": {
                "path": null,
                "useArgPath": true
            }
        },
        "DataClumpFiltering":{
            "handler":"DataClumpFilterStepHandler",
            "args":{
               "filterName":"ByTypeNameKeyFilter"
            }
        },
        "DataClumpDetection": {
            "handler": "DataClumpDetectorStep",
            "args": {
                "metricCombiner": "MetricCombiner",
                "languageModel": "LanguageModelInterface",
                "ranker": "RandomRanker"
            }
        },
       
        "Refactoring": {
            "handler": "LanguageModelDetectOrRefactorHandler",
            "args":{
                "handlers":[
                    "SystemInstructionHandler",
                    "AllFilesHandler"
                ]
            }
        }
       
    }
}