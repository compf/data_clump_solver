{
    "report_version": "unknown",
    "report_timestamp": "2024-05-31T08:31:16.072Z",
    "target_language": "java",
    "report_summary": {
        "additional": null,
        "amount_classes_or_interfaces_with_data_clumps": 45,
        "amount_files_with_data_clumps": 41,
        "amount_methods_with_data_clumps": 145,
        "fields_to_fields_data_clump": 2,
        "parameters_to_fields_data_clump": 1,
        "parameters_to_parameters_data_clump": 97,
        "amount_data_clumps": 0
    },
    "project_info": {
        "project_url": "git@github.com:compf/javaTest",
        "project_name": "unknown_project_name",
        "project_version": "1",
        "project_commit_hash": "unknown",
        "project_tag": null,
        "project_commit_date": null,
        "additional": {},
        "number_of_files": 11,
        "number_of_classes_or_interfaces": 13,
        "number_of_methods": 48,
        "number_of_data_fields": 32,
        "number_of_method_parameters": 47
    },
    "detector": {
        "name": "data-clumps-doctor",
        "url": "https://github.com/NilsBaumgartner1994/data-clumps-doctor",
        "version": "unknown",
        "options": {
            "typeVariablesConsidered": false,
            "similarityModifierOfVariablesWithUnknownType": 0,
            "fieldsOfClassesWithUnknownHierarchyProbabilityModifier": 0,
            "sharedFieldsToFieldsAmountMinimum": 3,
            "analyseFieldsInClassesOrInterfacesInheritedFromSuperClassesOrInterfaces": false,
            "sharedParametersToParametersAmountMinimum": 3,
            "sharedParametersToFieldsAmountMinimum": 3,
            "methodsOfClassesOrInterfacesWithUnknownHierarchyProbabilityModifier": 0
        }
    },
    "data_clumps": {
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)-databuilderTypesource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)-databuilderTypesource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "getEmptyExpression",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "appendBuildCode",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/data": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/data",
                    "name": "data",
                    "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)/parameter/data",
                        "name": "data",
                        "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 384,
                            "startColumn": 53,
                            "endLine": 384,
                            "endColumn": 57
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 92,
                        "endLine": 505,
                        "endColumn": 96
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/builderType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 384,
                            "startColumn": 69,
                            "endLine": 384,
                            "endColumn": 80
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 108,
                        "endLine": 505,
                        "endColumn": 119
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 384,
                            "startColumn": 92,
                            "endLine": 384,
                            "endColumn": 98
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 131,
                        "endLine": 505,
                        "endColumn": 137
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/core/handlers/HandlerUtil.java-lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)-lombok.core.handlers.HandlerUtil/method/toGetterName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean)-astaccessorsfieldNameisBoolean": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/core/handlers/HandlerUtil.java-lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)-lombok.core.handlers.HandlerUtil/method/toGetterName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean)-astaccessorsfieldNameisBoolean",
            "probability": 1,
            "from_file_path": "src/core/lombok/core/handlers/HandlerUtil.java",
            "from_class_or_interface_name": "HandlerUtil",
            "from_class_or_interface_key": "lombok.core.handlers.HandlerUtil",
            "from_method_name": "toAccessorName",
            "from_method_key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)",
            "to_file_path": "src/core/lombok/core/handlers/HandlerUtil.java",
            "to_class_or_interface_name": "HandlerUtil",
            "to_class_or_interface_key": "lombok.core.handlers.HandlerUtil",
            "to_method_name": "toGetterName",
            "to_method_key": "lombok.core.handlers.HandlerUtil/method/toGetterName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/ast": {
                    "key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/ast",
                    "name": "ast",
                    "type": "lombok.core.handlers.lombok.core.AST<?, ?, ?>",
                    "displayedType": "AST<?, ?, ?>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/toGetterName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean)/parameter/ast",
                        "name": "ast",
                        "type": "lombok.core.handlers.lombok.core.AST<?, ?, ?>",
                        "displayedType": "AST<?, ?, ?>",
                        "modifiers": [],
                        "position": {
                            "startLine": 633,
                            "startColumn": 49,
                            "endLine": 633,
                            "endColumn": 52
                        }
                    },
                    "position": {
                        "startLine": 698,
                        "startColumn": 52,
                        "endLine": 698,
                        "endColumn": 55
                    }
                },
                "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/accessors": {
                    "key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/accessors",
                    "name": "accessors",
                    "type": "lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors>",
                    "displayedType": "AnnotationValues<Accessors>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/toGetterName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean)/parameter/accessors",
                        "name": "accessors",
                        "type": "lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors>",
                        "displayedType": "AnnotationValues<Accessors>",
                        "modifiers": [],
                        "position": {
                            "startLine": 633,
                            "startColumn": 82,
                            "endLine": 633,
                            "endColumn": 91
                        }
                    },
                    "position": {
                        "startLine": 698,
                        "startColumn": 85,
                        "endLine": 698,
                        "endColumn": 94
                    }
                },
                "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/fieldName": {
                    "key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/fieldName",
                    "name": "fieldName",
                    "type": "java.lang.CharSequence",
                    "displayedType": "CharSequence",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/toGetterName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean)/parameter/fieldName",
                        "name": "fieldName",
                        "type": "java.lang.CharSequence",
                        "displayedType": "CharSequence",
                        "modifiers": [],
                        "position": {
                            "startLine": 633,
                            "startColumn": 106,
                            "endLine": 633,
                            "endColumn": 115
                        }
                    },
                    "position": {
                        "startLine": 698,
                        "startColumn": 109,
                        "endLine": 698,
                        "endColumn": 118
                    }
                },
                "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/isBoolean": {
                    "key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/isBoolean",
                    "name": "isBoolean",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/toGetterName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean)/parameter/isBoolean",
                        "name": "isBoolean",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 633,
                            "startColumn": 125,
                            "endLine": 633,
                            "endColumn": 134
                        }
                    },
                    "position": {
                        "startLine": 698,
                        "startColumn": 128,
                        "endLine": 698,
                        "endColumn": 137
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleStandardException.java-lombok.javac.handlers.HandleStandardException/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, boolean msgParam, boolean causeParam, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCStatement> statements)-lombok.javac.handlers.HandleStandardException/method/generateCauseOnlyConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode source)-leveltypeNodesource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleStandardException.java-lombok.javac.handlers.HandleStandardException/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, boolean msgParam, boolean causeParam, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCStatement> statements)-lombok.javac.handlers.HandleStandardException/method/generateCauseOnlyConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode source)-leveltypeNodesource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleStandardException.java",
            "from_class_or_interface_name": "HandleStandardException",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleStandardException",
            "from_method_name": "createConstructor",
            "from_method_key": "lombok.javac.handlers.HandleStandardException/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, boolean msgParam, boolean causeParam, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCStatement> statements)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleStandardException.java",
            "to_class_or_interface_name": "HandleStandardException",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleStandardException",
            "to_method_name": "generateCauseOnlyConstructor",
            "to_method_key": "lombok.javac.handlers.HandleStandardException/method/generateCauseOnlyConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleStandardException/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, boolean msgParam, boolean causeParam, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCStatement> statements)/parameter/level": {
                    "key": "lombok.javac.handlers.HandleStandardException/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, boolean msgParam, boolean causeParam, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCStatement> statements)/parameter/level",
                    "name": "level",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleStandardException/method/generateCauseOnlyConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                        "name": "level",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 100,
                            "startColumn": 76,
                            "endLine": 100,
                            "endColumn": 81
                        }
                    },
                    "position": {
                        "startLine": 174,
                        "startColumn": 93,
                        "endLine": 174,
                        "endColumn": 98
                    }
                },
                "lombok.javac.handlers.HandleStandardException/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, boolean msgParam, boolean causeParam, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCStatement> statements)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleStandardException/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, boolean msgParam, boolean causeParam, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCStatement> statements)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleStandardException/method/generateCauseOnlyConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 100,
                            "startColumn": 54,
                            "endLine": 100,
                            "endColumn": 62
                        }
                    },
                    "position": {
                        "startLine": 174,
                        "startColumn": 110,
                        "endLine": 174,
                        "endColumn": 118
                    }
                },
                "lombok.javac.handlers.HandleStandardException/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, boolean msgParam, boolean causeParam, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCStatement> statements)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleStandardException/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, boolean msgParam, boolean causeParam, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCStatement> statements)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleStandardException/method/generateCauseOnlyConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 100,
                            "startColumn": 93,
                            "endLine": 100,
                            "endColumn": 99
                        }
                    },
                    "position": {
                        "startLine": 174,
                        "startColumn": 168,
                        "endLine": 174,
                        "endColumn": 174
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-makerdatabuilderTypesource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-makerdatabuilderTypesource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "getEmptyExpression",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "generateSingularMethod",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/maker": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/maker",
                    "name": "maker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/maker",
                        "name": "maker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 309,
                            "startColumn": 102,
                            "endLine": 309,
                            "endColumn": 107
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 72,
                        "endLine": 505,
                        "endColumn": 77
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/data": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/data",
                    "name": "data",
                    "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data",
                        "name": "data",
                        "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 309,
                            "startColumn": 176,
                            "endLine": 309,
                            "endColumn": 180
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 92,
                        "endLine": 505,
                        "endColumn": 96
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/builderType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 309,
                            "startColumn": 192,
                            "endLine": 309,
                            "endColumn": 203
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 108,
                        "endLine": 505,
                        "endColumn": 119
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 309,
                            "startColumn": 215,
                            "endLine": 309,
                            "endColumn": 221
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 131,
                        "endLine": 505,
                        "endColumn": 137
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/toWithByName(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)-lombok.eclipse.handlers.EclipseHandlerUtil/method/toAllWithNames(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)-fieldisBooleanaccessors": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/toWithByName(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)-lombok.eclipse.handlers.EclipseHandlerUtil/method/toAllWithNames(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)-fieldisBooleanaccessors",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "from_class_or_interface_name": "EclipseHandlerUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "from_method_name": "toWithByName",
            "from_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/toWithByName(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)",
            "to_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "to_class_or_interface_name": "EclipseHandlerUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "to_method_name": "toAllWithNames",
            "to_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/toAllWithNames(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/toWithByName(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)/parameter/field": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/toWithByName(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)/parameter/field",
                    "name": "field",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/toAllWithNames(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)/parameter/field",
                        "name": "field",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 1689,
                            "startColumn": 66,
                            "endLine": 1689,
                            "endColumn": 71
                        }
                    },
                    "position": {
                        "startLine": 1741,
                        "startColumn": 48,
                        "endLine": 1741,
                        "endColumn": 53
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/toWithByName(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)/parameter/isBoolean": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/toWithByName(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)/parameter/isBoolean",
                    "name": "isBoolean",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/toAllWithNames(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)/parameter/isBoolean",
                        "name": "isBoolean",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 1689,
                            "startColumn": 81,
                            "endLine": 1689,
                            "endColumn": 90
                        }
                    },
                    "position": {
                        "startLine": 1741,
                        "startColumn": 63,
                        "endLine": 1741,
                        "endColumn": 72
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/toWithByName(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)/parameter/accessors": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/toWithByName(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)/parameter/accessors",
                    "name": "accessors",
                    "type": "lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors>",
                    "displayedType": "AnnotationValues<Accessors>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/toAllWithNames(lombok.eclipse.handlers.lombok.eclipse.EclipseNode field, boolean isBoolean, lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors> accessors)/parameter/accessors",
                        "name": "accessors",
                        "type": "lombok.eclipse.handlers.lombok.core.AnnotationValues<lombok.eclipse.handlers.lombok.experimental.Accessors>",
                        "displayedType": "AnnotationValues<Accessors>",
                        "modifiers": [],
                        "position": {
                            "startLine": 1689,
                            "startColumn": 120,
                            "endLine": 1689,
                            "endColumn": 129
                        }
                    },
                    "position": {
                        "startLine": 1741,
                        "startColumn": 102,
                        "endLine": 1741,
                        "endColumn": 111
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/cloneParamType(int index, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)-makerbuilderTypesource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/cloneParamType(int index, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)-makerbuilderTypesource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "getEmptyExpression",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "cloneParamType",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/cloneParamType(int index, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/maker": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/maker",
                    "name": "maker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/cloneParamType(int index, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/maker",
                        "name": "maker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 480,
                            "startColumn": 67,
                            "endLine": 480,
                            "endColumn": 72
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 72,
                        "endLine": 505,
                        "endColumn": 77
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/builderType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/cloneParamType(int index, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 480,
                            "startColumn": 113,
                            "endLine": 480,
                            "endColumn": 124
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 108,
                        "endLine": 505,
                        "endColumn": 119
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/cloneParamType(int index, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 480,
                            "startColumn": 136,
                            "endLine": 480,
                            "endColumn": 142
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 131,
                        "endLine": 505,
                        "endColumn": 137
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateClearStatements(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType)-makerdatabuilderType": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateClearStatements(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType)-makerdatabuilderType",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "getEmptyExpression",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "generateClearStatements",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateClearStatements(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/maker": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/maker",
                    "name": "maker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateClearStatements(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType)/parameter/maker",
                        "name": "maker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 307,
                            "startColumn": 73,
                            "endLine": 307,
                            "endColumn": 78
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 72,
                        "endLine": 505,
                        "endColumn": 77
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/data": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/data",
                    "name": "data",
                    "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateClearStatements(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType)/parameter/data",
                        "name": "data",
                        "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 307,
                            "startColumn": 93,
                            "endLine": 307,
                            "endColumn": 97
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 92,
                        "endLine": 505,
                        "endColumn": 96
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/builderType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/getEmptyExpression(java.lang.String target, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateClearStatements(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 307,
                            "startColumn": 109,
                            "endLine": 307,
                            "endColumn": 120
                        }
                    },
                    "position": {
                        "startLine": 505,
                        "startColumn": 108,
                        "endLine": 505,
                        "endColumn": 119
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/support/lombok/website/WebsiteMaker.java-lombok.website.WebsiteMaker/method/buildChangelog(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)-lombok.website.WebsiteMaker/method/buildDownloadEdge(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)-versionfullVersionargInargOut": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/support/lombok/website/WebsiteMaker.java-lombok.website.WebsiteMaker/method/buildChangelog(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)-lombok.website.WebsiteMaker/method/buildDownloadEdge(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)-versionfullVersionargInargOut",
            "probability": 1,
            "from_file_path": "src/support/lombok/website/WebsiteMaker.java",
            "from_class_or_interface_name": "WebsiteMaker",
            "from_class_or_interface_key": "lombok.website.WebsiteMaker",
            "from_method_name": "buildChangelog",
            "from_method_key": "lombok.website.WebsiteMaker/method/buildChangelog(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)",
            "to_file_path": "src/support/lombok/website/WebsiteMaker.java",
            "to_class_or_interface_name": "WebsiteMaker",
            "to_class_or_interface_key": "lombok.website.WebsiteMaker",
            "to_method_name": "buildDownloadEdge",
            "to_method_key": "lombok.website.WebsiteMaker/method/buildDownloadEdge(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.website.WebsiteMaker/method/buildChangelog(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/version": {
                    "key": "lombok.website.WebsiteMaker/method/buildChangelog(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/version",
                    "name": "version",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.website.WebsiteMaker/method/buildDownloadEdge(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/version",
                        "name": "version",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 144,
                            "startColumn": 47,
                            "endLine": 144,
                            "endColumn": 54
                        }
                    },
                    "position": {
                        "startLine": 122,
                        "startColumn": 44,
                        "endLine": 122,
                        "endColumn": 51
                    }
                },
                "lombok.website.WebsiteMaker/method/buildChangelog(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/fullVersion": {
                    "key": "lombok.website.WebsiteMaker/method/buildChangelog(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/fullVersion",
                    "name": "fullVersion",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.website.WebsiteMaker/method/buildDownloadEdge(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/fullVersion",
                        "name": "fullVersion",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 144,
                            "startColumn": 63,
                            "endLine": 144,
                            "endColumn": 74
                        }
                    },
                    "position": {
                        "startLine": 122,
                        "startColumn": 60,
                        "endLine": 122,
                        "endColumn": 71
                    }
                },
                "lombok.website.WebsiteMaker/method/buildChangelog(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/argIn": {
                    "key": "lombok.website.WebsiteMaker/method/buildChangelog(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/argIn",
                    "name": "argIn",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.website.WebsiteMaker/method/buildDownloadEdge(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/argIn",
                        "name": "argIn",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 144,
                            "startColumn": 83,
                            "endLine": 144,
                            "endColumn": 88
                        }
                    },
                    "position": {
                        "startLine": 122,
                        "startColumn": 80,
                        "endLine": 122,
                        "endColumn": 85
                    }
                },
                "lombok.website.WebsiteMaker/method/buildChangelog(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/argOut": {
                    "key": "lombok.website.WebsiteMaker/method/buildChangelog(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/argOut",
                    "name": "argOut",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.website.WebsiteMaker/method/buildDownloadEdge(java.lang.String version, java.lang.String fullVersion, java.lang.String argIn, java.lang.String argOut)/parameter/argOut",
                        "name": "argOut",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 144,
                            "startColumn": 97,
                            "endLine": 144,
                            "endColumn": 103
                        }
                    },
                    "position": {
                        "startLine": 122,
                        "startColumn": 94,
                        "endLine": 122,
                        "endColumn": 100
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNullableAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.util.List<lombok.eclipse.handlers.lombok.core.configuration.NullAnnotationLibrary> applied)-lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNonNullAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth)-typeNodeargmth": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNullableAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.util.List<lombok.eclipse.handlers.lombok.core.configuration.NullAnnotationLibrary> applied)-lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNonNullAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth)-typeNodeargmth",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "from_class_or_interface_name": "EclipseHandlerUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "from_method_name": "createRelevantNullableAnnotation",
            "from_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNullableAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.util.List<lombok.eclipse.handlers.lombok.core.configuration.NullAnnotationLibrary> applied)",
            "to_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "to_class_or_interface_name": "EclipseHandlerUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "to_method_name": "createRelevantNonNullAnnotation",
            "to_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNonNullAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNullableAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.util.List<lombok.eclipse.handlers.lombok.core.configuration.NullAnnotationLibrary> applied)/parameter/typeNode": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNullableAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.util.List<lombok.eclipse.handlers.lombok.core.configuration.NullAnnotationLibrary> applied)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNonNullAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 2605,
                            "startColumn": 65,
                            "endLine": 2605,
                            "endColumn": 73
                        }
                    },
                    "position": {
                        "startLine": 2598,
                        "startColumn": 66,
                        "endLine": 2598,
                        "endColumn": 74
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNullableAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.util.List<lombok.eclipse.handlers.lombok.core.configuration.NullAnnotationLibrary> applied)/parameter/arg": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNullableAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.util.List<lombok.eclipse.handlers.lombok.core.configuration.NullAnnotationLibrary> applied)/parameter/arg",
                    "name": "arg",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument",
                    "displayedType": "Argument",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNonNullAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth)/parameter/arg",
                        "name": "arg",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument",
                        "displayedType": "Argument",
                        "modifiers": [],
                        "position": {
                            "startLine": 2605,
                            "startColumn": 84,
                            "endLine": 2605,
                            "endColumn": 87
                        }
                    },
                    "position": {
                        "startLine": 2598,
                        "startColumn": 85,
                        "endLine": 2598,
                        "endColumn": 88
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNullableAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.util.List<lombok.eclipse.handlers.lombok.core.configuration.NullAnnotationLibrary> applied)/parameter/mth": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNullableAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.util.List<lombok.eclipse.handlers.lombok.core.configuration.NullAnnotationLibrary> applied)/parameter/mth",
                    "name": "mth",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration",
                    "displayedType": "MethodDeclaration",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/createRelevantNonNullAnnotation(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth)/parameter/mth",
                        "name": "mth",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration",
                        "displayedType": "MethodDeclaration",
                        "modifiers": [],
                        "position": {
                            "startLine": 2605,
                            "startColumn": 107,
                            "endLine": 2605,
                            "endColumn": 110
                        }
                    },
                    "position": {
                        "startLine": 2598,
                        "startColumn": 108,
                        "endLine": 2598,
                        "endColumn": 111
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleStandardException.java-lombok.eclipse.handlers.HandleStandardException/method/generateNoArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)-lombok.eclipse.handlers.HandleStandardException/method/generateFullConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)-typeNodelevelsource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleStandardException.java-lombok.eclipse.handlers.HandleStandardException/method/generateNoArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)-lombok.eclipse.handlers.HandleStandardException/method/generateFullConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)-typeNodelevelsource",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleStandardException.java",
            "from_class_or_interface_name": "HandleStandardException",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleStandardException",
            "from_method_name": "generateNoArgsConstructor",
            "from_method_key": "lombok.eclipse.handlers.HandleStandardException/method/generateNoArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleStandardException.java",
            "to_class_or_interface_name": "HandleStandardException",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleStandardException",
            "to_method_name": "generateFullConstructor",
            "to_method_key": "lombok.eclipse.handlers.HandleStandardException/method/generateFullConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleStandardException/method/generateNoArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)/parameter/typeNode": {
                    "key": "lombok.eclipse.handlers.HandleStandardException/method/generateNoArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleStandardException/method/generateFullConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 107,
                            "startColumn": 51,
                            "endLine": 107,
                            "endColumn": 59
                        }
                    },
                    "position": {
                        "startLine": 69,
                        "startColumn": 53,
                        "endLine": 69,
                        "endColumn": 61
                    }
                },
                "lombok.eclipse.handlers.HandleStandardException/method/generateNoArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)/parameter/level": {
                    "key": "lombok.eclipse.handlers.HandleStandardException/method/generateNoArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)/parameter/level",
                    "name": "level",
                    "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleStandardException/method/generateFullConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)/parameter/level",
                        "name": "level",
                        "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 107,
                            "startColumn": 73,
                            "endLine": 107,
                            "endColumn": 78
                        }
                    },
                    "position": {
                        "startLine": 69,
                        "startColumn": 75,
                        "endLine": 69,
                        "endColumn": 80
                    }
                },
                "lombok.eclipse.handlers.HandleStandardException/method/generateNoArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)/parameter/source": {
                    "key": "lombok.eclipse.handlers.HandleStandardException/method/generateNoArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleStandardException/method/generateFullConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode source)/parameter/source",
                        "name": "source",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 107,
                            "startColumn": 92,
                            "endLine": 107,
                            "endColumn": 98
                        }
                    },
                    "position": {
                        "startLine": 69,
                        "startColumn": 94,
                        "endLine": 69,
                        "endColumn": 100
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)-cfvdeprecatemakerreturnTypereturnStatementdatabuilderTypesourceaccess": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)-cfvdeprecatemakerreturnTypereturnStatementdatabuilderTypesourceaccess",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "generateSingularMethod",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "finishAndInjectMethod",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv",
                    "name": "cfv",
                    "type": "lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion",
                    "displayedType": "CheckerFrameworkVersion",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/cfv",
                        "name": "cfv",
                        "type": "lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion",
                        "displayedType": "CheckerFrameworkVersion",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 62,
                            "endLine": 276,
                            "endColumn": 65
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 63,
                        "endLine": 309,
                        "endColumn": 66
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 211,
                            "endLine": 276,
                            "endColumn": 220
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 76,
                        "endLine": 309,
                        "endColumn": 85
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/maker": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/maker",
                    "name": "maker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/maker",
                        "name": "maker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 82,
                            "endLine": 276,
                            "endColumn": 87
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 102,
                        "endLine": 309,
                        "endColumn": 107
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnType",
                    "name": "returnType",
                    "type": "com.sun.tools.javac.tree.JCTree$JCExpression",
                    "displayedType": "JCExpression",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/returnType",
                        "name": "returnType",
                        "type": "com.sun.tools.javac.tree.JCTree$JCExpression",
                        "displayedType": "JCExpression",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 102,
                            "endLine": 276,
                            "endColumn": 112
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 122,
                        "endLine": 309,
                        "endColumn": 132
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnStatement": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnStatement",
                    "name": "returnStatement",
                    "type": "com.sun.tools.javac.tree.JCTree$JCStatement",
                    "displayedType": "JCStatement",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/returnStatement",
                        "name": "returnStatement",
                        "type": "com.sun.tools.javac.tree.JCTree$JCStatement",
                        "displayedType": "JCStatement",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 126,
                            "endLine": 276,
                            "endColumn": 141
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 146,
                        "endLine": 309,
                        "endColumn": 161
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data",
                    "name": "data",
                    "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/data",
                        "name": "data",
                        "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 156,
                            "endLine": 276,
                            "endColumn": 160
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 176,
                        "endLine": 309,
                        "endColumn": 180
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 172,
                            "endLine": 276,
                            "endColumn": 183
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 192,
                        "endLine": 309,
                        "endColumn": 203
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 195,
                            "endLine": 276,
                            "endColumn": 201
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 215,
                        "endLine": 309,
                        "endColumn": 221
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access",
                    "name": "access",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/access",
                        "name": "access",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 363,
                            "endLine": 276,
                            "endColumn": 369
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 251,
                        "endLine": 309,
                        "endColumn": 257
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleConstructor.java-lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-lombok.eclipse.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-typeNodelevelstaticNameskipIfConstructorExistsonConstructorsourceNode": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleConstructor.java-lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-lombok.eclipse.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-typeNodelevelstaticNameskipIfConstructorExistsonConstructorsourceNode",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleConstructor.java",
            "from_class_or_interface_name": "HandleConstructor",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleConstructor",
            "from_method_name": "generateRequiredArgsConstructor",
            "from_method_key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleConstructor.java",
            "to_class_or_interface_name": "HandleConstructor",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleConstructor",
            "to_method_name": "generateAllArgsConstructor",
            "to_method_key": "lombok.eclipse.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/typeNode": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 236,
                            "startColumn": 16,
                            "endLine": 236,
                            "endColumn": 24
                        }
                    },
                    "position": {
                        "startLine": 229,
                        "startColumn": 16,
                        "endLine": 229,
                        "endColumn": 24
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/level": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/level",
                    "name": "level",
                    "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/level",
                        "name": "level",
                        "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 236,
                            "startColumn": 38,
                            "endLine": 236,
                            "endColumn": 43
                        }
                    },
                    "position": {
                        "startLine": 229,
                        "startColumn": 38,
                        "endLine": 229,
                        "endColumn": 43
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/staticName": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/staticName",
                    "name": "staticName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/staticName",
                        "name": "staticName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 236,
                            "startColumn": 52,
                            "endLine": 236,
                            "endColumn": 62
                        }
                    },
                    "position": {
                        "startLine": 229,
                        "startColumn": 52,
                        "endLine": 229,
                        "endColumn": 62
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/skipIfConstructorExists": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/skipIfConstructorExists",
                    "name": "skipIfConstructorExists",
                    "type": "lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists",
                    "displayedType": "SkipIfConstructorExists",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/skipIfConstructorExists",
                        "name": "skipIfConstructorExists",
                        "type": "lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists",
                        "displayedType": "SkipIfConstructorExists",
                        "modifiers": [],
                        "position": {
                            "startLine": 236,
                            "startColumn": 88,
                            "endLine": 236,
                            "endColumn": 111
                        }
                    },
                    "position": {
                        "startLine": 229,
                        "startColumn": 88,
                        "endLine": 229,
                        "endColumn": 111
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/onConstructor": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/onConstructor",
                    "name": "onConstructor",
                    "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                    "displayedType": "List<Annotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/onConstructor",
                        "name": "onConstructor",
                        "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                        "displayedType": "List<Annotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 237,
                            "startColumn": 21,
                            "endLine": 237,
                            "endColumn": 34
                        }
                    },
                    "position": {
                        "startLine": 230,
                        "startColumn": 21,
                        "endLine": 230,
                        "endColumn": 34
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/sourceNode": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/sourceNode",
                    "name": "sourceNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/sourceNode",
                        "name": "sourceNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 237,
                            "startColumn": 48,
                            "endLine": 237,
                            "endColumn": 58
                        }
                    },
                    "position": {
                        "startLine": 230,
                        "startColumn": 48,
                        "endLine": 230,
                        "endColumn": 58
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodelevelstaticNameskipIfConstructorExistssource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodelevelstaticNameskipIfConstructorExistssource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "from_class_or_interface_name": "HandleConstructor",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "from_method_name": "generateRequiredArgsConstructor",
            "from_method_key": "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "to_class_or_interface_name": "HandleConstructor",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "to_method_name": "generateAllArgsConstructor",
            "to_method_key": "lombok.javac.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 215,
                            "startColumn": 51,
                            "endLine": 215,
                            "endColumn": 59
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 56,
                        "endLine": 211,
                        "endColumn": 64
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                    "name": "level",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                        "name": "level",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 215,
                            "startColumn": 73,
                            "endLine": 215,
                            "endColumn": 78
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 78,
                        "endLine": 211,
                        "endColumn": 83
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/staticName": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/staticName",
                    "name": "staticName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/staticName",
                        "name": "staticName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 215,
                            "startColumn": 87,
                            "endLine": 215,
                            "endColumn": 97
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 92,
                        "endLine": 211,
                        "endColumn": 102
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/skipIfConstructorExists": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/skipIfConstructorExists",
                    "name": "skipIfConstructorExists",
                    "type": "lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists",
                    "displayedType": "SkipIfConstructorExists",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/skipIfConstructorExists",
                        "name": "skipIfConstructorExists",
                        "type": "lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists",
                        "displayedType": "SkipIfConstructorExists",
                        "modifiers": [],
                        "position": {
                            "startLine": 215,
                            "startColumn": 123,
                            "endLine": 215,
                            "endColumn": 146
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 128,
                        "endLine": 211,
                        "endColumn": 151
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateAllArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 215,
                            "startColumn": 158,
                            "endLine": 215,
                            "endColumn": 164
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 163,
                        "endLine": 211,
                        "endColumn": 169
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java-lombok.eclipse.agent.PatchExtensionMethod/method/nonStaticAccessToStaticMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode location, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend)-lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)-problemReportermethodmessageSend": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java-lombok.eclipse.agent.PatchExtensionMethod/method/nonStaticAccessToStaticMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode location, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend)-lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)-problemReportermethodmessageSend",
            "probability": 1,
            "from_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java",
            "from_class_or_interface_name": "PatchExtensionMethod",
            "from_class_or_interface_key": "lombok.eclipse.agent.PatchExtensionMethod",
            "from_method_name": "nonStaticAccessToStaticMethod",
            "from_method_key": "lombok.eclipse.agent.PatchExtensionMethod/method/nonStaticAccessToStaticMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode location, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend)",
            "to_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java",
            "to_class_or_interface_name": "PostponedInvalidMethodError",
            "to_class_or_interface_key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError",
            "to_method_name": "invoke",
            "to_method_key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.agent.PatchExtensionMethod/method/nonStaticAccessToStaticMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode location, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend)/parameter/problemReporter": {
                    "key": "lombok.eclipse.agent.PatchExtensionMethod/method/nonStaticAccessToStaticMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode location, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend)/parameter/problemReporter",
                    "name": "problemReporter",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter",
                    "displayedType": "ProblemReporter",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/problemReporter",
                        "name": "problemReporter",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter",
                        "displayedType": "ProblemReporter",
                        "modifiers": [],
                        "position": {
                            "startLine": 121,
                            "startColumn": 38,
                            "endLine": 121,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 250,
                        "startColumn": 67,
                        "endLine": 250,
                        "endColumn": 82
                    }
                },
                "lombok.eclipse.agent.PatchExtensionMethod/method/nonStaticAccessToStaticMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode location, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend)/parameter/method": {
                    "key": "lombok.eclipse.agent.PatchExtensionMethod/method/nonStaticAccessToStaticMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode location, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend)/parameter/method",
                    "name": "method",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding",
                    "displayedType": "MethodBinding",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/method",
                        "name": "method",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding",
                        "displayedType": "MethodBinding",
                        "modifiers": [],
                        "position": {
                            "startLine": 121,
                            "startColumn": 94,
                            "endLine": 121,
                            "endColumn": 100
                        }
                    },
                    "position": {
                        "startLine": 250,
                        "startColumn": 116,
                        "endLine": 250,
                        "endColumn": 122
                    }
                },
                "lombok.eclipse.agent.PatchExtensionMethod/method/nonStaticAccessToStaticMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode location, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend)/parameter/messageSend": {
                    "key": "lombok.eclipse.agent.PatchExtensionMethod/method/nonStaticAccessToStaticMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode location, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend)/parameter/messageSend",
                    "name": "messageSend",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend",
                    "displayedType": "MessageSend",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/messageSend",
                        "name": "messageSend",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend",
                        "displayedType": "MessageSend",
                        "modifiers": [],
                        "position": {
                            "startLine": 121,
                            "startColumn": 67,
                            "endLine": 121,
                            "endColumn": 78
                        }
                    },
                    "position": {
                        "startLine": 250,
                        "startColumn": 136,
                        "endLine": 250,
                        "endColumn": 147
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/utils/lombok/permit/Permit.java-lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)-lombok.permit.Permit/method/invoke(java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)-mreceiverargs": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/utils/lombok/permit/Permit.java-lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)-lombok.permit.Permit/method/invoke(java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)-mreceiverargs",
            "probability": 1,
            "from_file_path": "src/utils/lombok/permit/Permit.java",
            "from_class_or_interface_name": "Permit",
            "from_class_or_interface_key": "lombok.permit.Permit",
            "from_method_name": "invokeSneaky",
            "from_method_key": "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)",
            "to_file_path": "src/utils/lombok/permit/Permit.java",
            "to_class_or_interface_name": "Permit",
            "to_class_or_interface_key": "lombok.permit.Permit",
            "to_method_name": "invoke",
            "to_method_key": "lombok.permit.Permit/method/invoke(java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/m": {
                    "key": "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/m",
                    "name": "m",
                    "type": "java.lang.reflect.Method",
                    "displayedType": "Method",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.permit.Permit/method/invoke(java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/m",
                        "name": "m",
                        "type": "java.lang.reflect.Method",
                        "displayedType": "Method",
                        "modifiers": [],
                        "position": {
                            "startLine": 194,
                            "startColumn": 37,
                            "endLine": 194,
                            "endColumn": 38
                        }
                    },
                    "position": {
                        "startLine": 217,
                        "startColumn": 64,
                        "endLine": 217,
                        "endColumn": 65
                    }
                },
                "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/receiver": {
                    "key": "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/receiver",
                    "name": "receiver",
                    "type": "java.lang.Object",
                    "displayedType": "Object",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.permit.Permit/method/invoke(java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/receiver",
                        "name": "receiver",
                        "type": "java.lang.Object",
                        "displayedType": "Object",
                        "modifiers": [],
                        "position": {
                            "startLine": 194,
                            "startColumn": 47,
                            "endLine": 194,
                            "endColumn": 55
                        }
                    },
                    "position": {
                        "startLine": 217,
                        "startColumn": 74,
                        "endLine": 217,
                        "endColumn": 82
                    }
                },
                "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/args": {
                    "key": "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/args",
                    "name": "args",
                    "type": "java.lang.Object[]",
                    "displayedType": "Object[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.permit.Permit/method/invoke(java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/args",
                        "name": "args",
                        "type": "java.lang.Object[]",
                        "displayedType": "Object[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 194,
                            "startColumn": 67,
                            "endLine": 194,
                            "endColumn": 71
                        }
                    },
                    "position": {
                        "startLine": 217,
                        "startColumn": 94,
                        "endLine": 217,
                        "endColumn": 98
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)-cfvdeprecatedatabuilderTypesourcefluentaccess": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)-cfvdeprecatedatabuilderTypesourcefluentaccess",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "generateSingularMethod",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "doGenerateMethods",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv",
                    "name": "cfv",
                    "type": "lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion",
                    "displayedType": "CheckerFrameworkVersion",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv",
                        "name": "cfv",
                        "type": "lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion",
                        "displayedType": "CheckerFrameworkVersion",
                        "modifiers": [],
                        "position": {
                            "startLine": 269,
                            "startColumn": 60,
                            "endLine": 269,
                            "endColumn": 63
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 63,
                        "endLine": 309,
                        "endColumn": 66
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 269,
                            "startColumn": 92,
                            "endLine": 269,
                            "endColumn": 101
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 76,
                        "endLine": 309,
                        "endColumn": 85
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data",
                    "name": "data",
                    "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data",
                        "name": "data",
                        "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 269,
                            "startColumn": 78,
                            "endLine": 269,
                            "endColumn": 82
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 176,
                        "endLine": 309,
                        "endColumn": 180
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 269,
                            "startColumn": 113,
                            "endLine": 269,
                            "endColumn": 124
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 192,
                        "endLine": 309,
                        "endColumn": 203
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 269,
                            "startColumn": 136,
                            "endLine": 269,
                            "endColumn": 142
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 215,
                        "endLine": 309,
                        "endColumn": 221
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/fluent": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/fluent",
                    "name": "fluent",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/fluent",
                        "name": "fluent",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 269,
                            "startColumn": 152,
                            "endLine": 269,
                            "endColumn": 158
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 231,
                        "endLine": 309,
                        "endColumn": 237
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access",
                    "name": "access",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access",
                        "name": "access",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 269,
                            "startColumn": 242,
                            "endLine": 269,
                            "endColumn": 248
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 251,
                        "endLine": 309,
                        "endColumn": 257
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleSetter/method/createSetter(long access, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-accessfieldtreeMakersourceonMethodonParam": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleSetter/method/createSetter(long access, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-accessfieldtreeMakersourceonMethodonParam",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "from_class_or_interface_name": "HandleSetter",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "from_method_name": "createSetter",
            "from_method_key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "to_class_or_interface_name": "HandleSetter",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "to_method_name": "createSetter",
            "to_method_key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/access": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/access",
                    "name": "access",
                    "type": "long",
                    "displayedType": "long",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/access",
                        "name": "access",
                        "type": "long",
                        "displayedType": "long",
                        "modifiers": [],
                        "position": {
                            "startLine": 194,
                            "startColumn": 47,
                            "endLine": 194,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 47,
                        "endLine": 202,
                        "endColumn": 53
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/field": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/field",
                    "name": "field",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/field",
                        "name": "field",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 194,
                            "startColumn": 65,
                            "endLine": 194,
                            "endColumn": 70
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 84,
                        "endLine": 202,
                        "endColumn": 89
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/treeMaker": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/treeMaker",
                    "name": "treeMaker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/treeMaker",
                        "name": "treeMaker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 194,
                            "startColumn": 87,
                            "endLine": 194,
                            "endColumn": 96
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 106,
                        "endLine": 202,
                        "endColumn": 115
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 194,
                            "startColumn": 108,
                            "endLine": 194,
                            "endColumn": 114
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 212,
                        "endLine": 202,
                        "endColumn": 218
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 194,
                            "startColumn": 135,
                            "endLine": 194,
                            "endColumn": 143
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 239,
                        "endLine": 202,
                        "endColumn": 247
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                    "name": "onParam",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                        "name": "onParam",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 194,
                            "startColumn": 164,
                            "endLine": 194,
                            "endColumn": 171
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 268,
                        "endLine": 202,
                        "endColumn": 275
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)-cfvdatadeprecatebuilderTypesourceaccess": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)-cfvdatadeprecatebuilderTypesourceaccess",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "doGenerateMethods",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "finishAndInjectMethod",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv",
                    "name": "cfv",
                    "type": "lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion",
                    "displayedType": "CheckerFrameworkVersion",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/cfv",
                        "name": "cfv",
                        "type": "lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion",
                        "displayedType": "CheckerFrameworkVersion",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 62,
                            "endLine": 276,
                            "endColumn": 65
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 60,
                        "endLine": 269,
                        "endColumn": 63
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data",
                    "name": "data",
                    "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/data",
                        "name": "data",
                        "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 156,
                            "endLine": 276,
                            "endColumn": 160
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 78,
                        "endLine": 269,
                        "endColumn": 82
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 211,
                            "endLine": 276,
                            "endColumn": 220
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 92,
                        "endLine": 269,
                        "endColumn": 101
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 172,
                            "endLine": 276,
                            "endColumn": 183
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 113,
                        "endLine": 269,
                        "endColumn": 124
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 195,
                            "endLine": 276,
                            "endColumn": 201
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 136,
                        "endLine": 269,
                        "endColumn": 142
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access",
                    "name": "access",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/access",
                        "name": "access",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 276,
                            "startColumn": 363,
                            "endLine": 276,
                            "endColumn": 369
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 242,
                        "endLine": 269,
                        "endColumn": 248
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)-fromtocopyMode": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)-fromtocopyMode",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "from_class_or_interface_name": "EclipseHandlerUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "from_method_name": "copyJavadoc",
            "from_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)",
            "to_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "to_class_or_interface_name": "EclipseHandlerUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "to_method_name": "copyJavadoc",
            "to_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/from": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/from",
                    "name": "from",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)/parameter/from",
                        "name": "from",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 2911,
                            "startColumn": 45,
                            "endLine": 2911,
                            "endColumn": 49
                        }
                    },
                    "position": {
                        "startLine": 2938,
                        "startColumn": 45,
                        "endLine": 2938,
                        "endColumn": 49
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/to": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/to",
                    "name": "to",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                    "displayedType": "ASTNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)/parameter/to",
                        "name": "to",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                        "displayedType": "ASTNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 2911,
                            "startColumn": 59,
                            "endLine": 2911,
                            "endColumn": 61
                        }
                    },
                    "position": {
                        "startLine": 2938,
                        "startColumn": 59,
                        "endLine": 2938,
                        "endColumn": 61
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/copyMode": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/copyMode",
                    "name": "copyMode",
                    "type": "lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc",
                    "displayedType": "CopyJavadoc",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)/parameter/copyMode",
                        "name": "copyMode",
                        "type": "lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc",
                        "displayedType": "CopyJavadoc",
                        "modifiers": [],
                        "position": {
                            "startLine": 2911,
                            "startColumn": 75,
                            "endLine": 2911,
                            "endColumn": 83
                        }
                    },
                    "position": {
                        "startLine": 2938,
                        "startColumn": 97,
                        "endLine": 2938,
                        "endColumn": 105
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleConstructor.java-lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-lombok.eclipse.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, java.lang.String staticName, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source)-typeNodelevelstaticName": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleConstructor.java-lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-lombok.eclipse.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, java.lang.String staticName, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source)-typeNodelevelstaticName",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleConstructor.java",
            "from_class_or_interface_name": "HandleConstructor",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleConstructor",
            "from_method_name": "generateRequiredArgsConstructor",
            "from_method_key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleConstructor.java",
            "to_class_or_interface_name": "HandleConstructor",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleConstructor",
            "to_method_name": "generateStaticConstructor",
            "to_method_key": "lombok.eclipse.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, java.lang.String staticName, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/typeNode": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, java.lang.String staticName, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 294,
                            "startColumn": 83,
                            "endLine": 294,
                            "endColumn": 91
                        }
                    },
                    "position": {
                        "startLine": 229,
                        "startColumn": 16,
                        "endLine": 229,
                        "endColumn": 24
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/level": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/level",
                    "name": "level",
                    "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, java.lang.String staticName, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source)/parameter/level",
                        "name": "level",
                        "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 294,
                            "startColumn": 124,
                            "endLine": 294,
                            "endColumn": 129
                        }
                    },
                    "position": {
                        "startLine": 229,
                        "startColumn": 38,
                        "endLine": 229,
                        "endColumn": 43
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/staticName": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/staticName",
                    "name": "staticName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, java.lang.String staticName, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source)/parameter/staticName",
                        "name": "staticName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 294,
                            "startColumn": 100,
                            "endLine": 294,
                            "endColumn": 110
                        }
                    },
                    "position": {
                        "startLine": 229,
                        "startColumn": 52,
                        "endLine": 229,
                        "endColumn": 62
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-accessdeprecatefieldtreeMakersetterNameparamNamebooleanFieldToSetsourceonMethodonParam": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-accessdeprecatefieldtreeMakersetterNameparamNamebooleanFieldToSetsourceonMethodonParam",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "from_class_or_interface_name": "HandleSetter",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "from_method_name": "createSetter",
            "from_method_key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "to_class_or_interface_name": "HandleSetter",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "to_method_name": "createSetter",
            "to_method_key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/access": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/access",
                    "name": "access",
                    "type": "long",
                    "displayedType": "long",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/access",
                        "name": "access",
                        "type": "long",
                        "displayedType": "long",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 47,
                            "endLine": 227,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 47,
                        "endLine": 202,
                        "endColumn": 53
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/deprecate": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 63,
                            "endLine": 227,
                            "endColumn": 72
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 63,
                        "endLine": 202,
                        "endColumn": 72
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/field": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/field",
                    "name": "field",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/field",
                        "name": "field",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 84,
                            "endLine": 227,
                            "endColumn": 89
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 84,
                        "endLine": 202,
                        "endColumn": 89
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/treeMaker": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/treeMaker",
                    "name": "treeMaker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/treeMaker",
                        "name": "treeMaker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 106,
                            "endLine": 227,
                            "endColumn": 115
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 106,
                        "endLine": 202,
                        "endColumn": 115
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/setterName": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/setterName",
                    "name": "setterName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/setterName",
                        "name": "setterName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 124,
                            "endLine": 227,
                            "endColumn": 134
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 124,
                        "endLine": 202,
                        "endColumn": 134
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/paramName": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/paramName",
                    "name": "paramName",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/paramName",
                        "name": "paramName",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 141,
                            "endLine": 227,
                            "endColumn": 150
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 141,
                        "endLine": 202,
                        "endColumn": 150
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/booleanFieldToSet": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/booleanFieldToSet",
                    "name": "booleanFieldToSet",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/booleanFieldToSet",
                        "name": "booleanFieldToSet",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 157,
                            "endLine": 227,
                            "endColumn": 174
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 157,
                        "endLine": 202,
                        "endColumn": 174
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 240,
                            "endLine": 227,
                            "endColumn": 246
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 212,
                        "endLine": 202,
                        "endColumn": 218
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 267,
                            "endLine": 227,
                            "endColumn": 275
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 239,
                        "endLine": 202,
                        "endColumn": 247
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                    "name": "onParam",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                        "name": "onParam",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 296,
                            "endLine": 227,
                            "endColumn": 303
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 268,
                        "endLine": 202,
                        "endColumn": 275
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/core/configuration/ConfigurationParser.java-lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)-lombok.core.configuration.ConfigurationParser.Collector/method/add(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)-keyvaluecontextlineNumber": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/core/configuration/ConfigurationParser.java-lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)-lombok.core.configuration.ConfigurationParser.Collector/method/add(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)-keyvaluecontextlineNumber",
            "probability": 1,
            "from_file_path": "src/core/lombok/core/configuration/ConfigurationParser.java",
            "from_class_or_interface_name": "Collector",
            "from_class_or_interface_key": "lombok.core.configuration.ConfigurationParser.Collector",
            "from_method_name": "set",
            "from_method_key": "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)",
            "to_file_path": "src/core/lombok/core/configuration/ConfigurationParser.java",
            "to_class_or_interface_name": "Collector",
            "to_class_or_interface_key": "lombok.core.configuration.ConfigurationParser.Collector",
            "to_method_name": "add",
            "to_method_key": "lombok.core.configuration.ConfigurationParser.Collector/method/add(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/key": {
                    "key": "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/key",
                    "name": "key",
                    "type": "lombok.core.configuration.ConfigurationKey<?>",
                    "displayedType": "ConfigurationKey<?>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.configuration.ConfigurationParser.Collector/method/add(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/key",
                        "name": "key",
                        "type": "lombok.core.configuration.ConfigurationKey<?>",
                        "displayedType": "ConfigurationKey<?>",
                        "modifiers": [],
                        "position": {
                            "startLine": 144,
                            "startColumn": 32,
                            "endLine": 144,
                            "endColumn": 35
                        }
                    },
                    "position": {
                        "startLine": 143,
                        "startColumn": 32,
                        "endLine": 143,
                        "endColumn": 35
                    }
                },
                "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/value": {
                    "key": "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/value",
                    "name": "value",
                    "type": "java.lang.Object",
                    "displayedType": "Object",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.configuration.ConfigurationParser.Collector/method/add(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/value",
                        "name": "value",
                        "type": "java.lang.Object",
                        "displayedType": "Object",
                        "modifiers": [],
                        "position": {
                            "startLine": 144,
                            "startColumn": 44,
                            "endLine": 144,
                            "endColumn": 49
                        }
                    },
                    "position": {
                        "startLine": 143,
                        "startColumn": 44,
                        "endLine": 143,
                        "endColumn": 49
                    }
                },
                "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/context": {
                    "key": "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/context",
                    "name": "context",
                    "type": "lombok.core.configuration.ConfigurationFile",
                    "displayedType": "ConfigurationFile",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.configuration.ConfigurationParser.Collector/method/add(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/context",
                        "name": "context",
                        "type": "lombok.core.configuration.ConfigurationFile",
                        "displayedType": "ConfigurationFile",
                        "modifiers": [],
                        "position": {
                            "startLine": 144,
                            "startColumn": 69,
                            "endLine": 144,
                            "endColumn": 76
                        }
                    },
                    "position": {
                        "startLine": 143,
                        "startColumn": 69,
                        "endLine": 143,
                        "endColumn": 76
                    }
                },
                "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/lineNumber": {
                    "key": "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/lineNumber",
                    "name": "lineNumber",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.configuration.ConfigurationParser.Collector/method/add(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/lineNumber",
                        "name": "lineNumber",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 144,
                            "startColumn": 82,
                            "endLine": 144,
                            "endColumn": 92
                        }
                    },
                    "position": {
                        "startLine": 143,
                        "startColumn": 82,
                        "endLine": 143,
                        "endColumn": 92
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/createStaticConstructor(java.lang.String name, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodelevelfieldssource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/createStaticConstructor(java.lang.String name, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodelevelfieldssource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "from_class_or_interface_name": "HandleConstructor",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "from_method_name": "generateStaticConstructor",
            "from_method_key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "to_class_or_interface_name": "HandleConstructor",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "to_method_name": "createStaticConstructor",
            "to_method_key": "lombok.javac.handlers.HandleConstructor/method/createStaticConstructor(java.lang.String name, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/createStaticConstructor(java.lang.String name, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 438,
                            "startColumn": 88,
                            "endLine": 438,
                            "endColumn": 96
                        }
                    },
                    "position": {
                        "startLine": 259,
                        "startColumn": 81,
                        "endLine": 259,
                        "endColumn": 89
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                    "name": "level",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/createStaticConstructor(java.lang.String name, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                        "name": "level",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 438,
                            "startColumn": 71,
                            "endLine": 438,
                            "endColumn": 76
                        }
                    },
                    "position": {
                        "startLine": 259,
                        "startColumn": 122,
                        "endLine": 259,
                        "endColumn": 127
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/fields": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/fields",
                    "name": "fields",
                    "type": "com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode>",
                    "displayedType": "List<JavacNode>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/createStaticConstructor(java.lang.String name, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/fields",
                        "name": "fields",
                        "type": "com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode>",
                        "displayedType": "List<JavacNode>",
                        "modifiers": [],
                        "position": {
                            "startLine": 438,
                            "startColumn": 114,
                            "endLine": 438,
                            "endColumn": 120
                        }
                    },
                    "position": {
                        "startLine": 259,
                        "startColumn": 167,
                        "endLine": 259,
                        "endColumn": 173
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/createStaticConstructor(java.lang.String name, lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 438,
                            "startColumn": 132,
                            "endLine": 438,
                            "endColumn": 138
                        }
                    },
                    "position": {
                        "startLine": 259,
                        "startColumn": 185,
                        "endLine": 259,
                        "endColumn": 191
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendCleaningCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements)-databuilderTypesourcestatements": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendCleaningCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements)-databuilderTypesourcestatements",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "appendBuildCode",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "appendCleaningCode",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendCleaningCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)/parameter/data": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)/parameter/data",
                    "name": "data",
                    "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendCleaningCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements)/parameter/data",
                        "name": "data",
                        "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 398,
                            "startColumn": 47,
                            "endLine": 398,
                            "endColumn": 51
                        }
                    },
                    "position": {
                        "startLine": 384,
                        "startColumn": 53,
                        "endLine": 384,
                        "endColumn": 57
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)/parameter/builderType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendCleaningCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 398,
                            "startColumn": 63,
                            "endLine": 398,
                            "endColumn": 74
                        }
                    },
                    "position": {
                        "startLine": 384,
                        "startColumn": 69,
                        "endLine": 384,
                        "endColumn": 80
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendCleaningCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 398,
                            "startColumn": 86,
                            "endLine": 398,
                            "endColumn": 92
                        }
                    },
                    "position": {
                        "startLine": 384,
                        "startColumn": 92,
                        "endLine": 384,
                        "endColumn": 98
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)/parameter/statements": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendBuildCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name targetVariableName, java.lang.String builderVariable)/parameter/statements",
                    "name": "statements",
                    "type": "com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement>",
                    "displayedType": "ListBuffer<JCStatement>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/appendCleaningCode(lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements)/parameter/statements",
                        "name": "statements",
                        "type": "com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement>",
                        "displayedType": "ListBuffer<JCStatement>",
                        "modifiers": [],
                        "position": {
                            "startLine": 398,
                            "startColumn": 118,
                            "endLine": 398,
                            "endColumn": 128
                        }
                    },
                    "position": {
                        "startLine": 384,
                        "startColumn": 124,
                        "endLine": 384,
                        "endColumn": 134
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/utils/lombok/core/FieldAugment.java-lombok.core.FieldAugment/method/augment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name)-lombok.core.FieldAugment/method/tryCreateReflectionAugment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name, F defaultValue)-typefieldTypename": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/utils/lombok/core/FieldAugment.java-lombok.core.FieldAugment/method/augment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name)-lombok.core.FieldAugment/method/tryCreateReflectionAugment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name, F defaultValue)-typefieldTypename",
            "probability": 1,
            "from_file_path": "src/utils/lombok/core/FieldAugment.java",
            "from_class_or_interface_name": "FieldAugment",
            "from_class_or_interface_key": "lombok.core.FieldAugment",
            "from_method_name": "augment",
            "from_method_key": "lombok.core.FieldAugment/method/augment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name)",
            "to_file_path": "src/utils/lombok/core/FieldAugment.java",
            "to_class_or_interface_name": "FieldAugment",
            "to_class_or_interface_key": "lombok.core.FieldAugment",
            "to_method_name": "tryCreateReflectionAugment",
            "to_method_key": "lombok.core.FieldAugment/method/tryCreateReflectionAugment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name, F defaultValue)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.FieldAugment/method/augment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name)/parameter/type": {
                    "key": "lombok.core.FieldAugment/method/augment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name)/parameter/type",
                    "name": "type",
                    "type": "java.lang.Class<T>",
                    "displayedType": "Class<T>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.FieldAugment/method/tryCreateReflectionAugment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name, F defaultValue)/parameter/type",
                        "name": "type",
                        "type": "java.lang.Class<T>",
                        "displayedType": "Class<T>",
                        "modifiers": [],
                        "position": {
                            "startLine": 103,
                            "startColumn": 79,
                            "endLine": 103,
                            "endColumn": 83
                        }
                    },
                    "position": {
                        "startLine": 68,
                        "startColumn": 59,
                        "endLine": 68,
                        "endColumn": 63
                    }
                },
                "lombok.core.FieldAugment/method/augment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name)/parameter/fieldType": {
                    "key": "lombok.core.FieldAugment/method/augment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name)/parameter/fieldType",
                    "name": "fieldType",
                    "type": "java.lang.Class<? super F>",
                    "displayedType": "Class<? super F>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.FieldAugment/method/tryCreateReflectionAugment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name, F defaultValue)/parameter/fieldType",
                        "name": "fieldType",
                        "type": "java.lang.Class<? super F>",
                        "displayedType": "Class<? super F>",
                        "modifiers": [],
                        "position": {
                            "startLine": 103,
                            "startColumn": 102,
                            "endLine": 103,
                            "endColumn": 111
                        }
                    },
                    "position": {
                        "startLine": 68,
                        "startColumn": 82,
                        "endLine": 68,
                        "endColumn": 91
                    }
                },
                "lombok.core.FieldAugment/method/augment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name)/parameter/name": {
                    "key": "lombok.core.FieldAugment/method/augment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name)/parameter/name",
                    "name": "name",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.FieldAugment/method/tryCreateReflectionAugment(java.lang.Class<T> type, java.lang.Class<? super F> fieldType, java.lang.String name, F defaultValue)/parameter/name",
                        "name": "name",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 103,
                            "startColumn": 120,
                            "endLine": 103,
                            "endColumn": 124
                        }
                    },
                    "position": {
                        "startLine": 68,
                        "startColumn": 100,
                        "endLine": 68,
                        "endColumn": 104
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/core/configuration/ConfigurationParser.java-lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)-lombok.core.configuration.ConfigurationParser.Collector/method/clear(lombok.core.configuration.ConfigurationKey<?> key, lombok.core.configuration.ConfigurationFile context, int lineNumber)-keycontextlineNumber": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/core/configuration/ConfigurationParser.java-lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)-lombok.core.configuration.ConfigurationParser.Collector/method/clear(lombok.core.configuration.ConfigurationKey<?> key, lombok.core.configuration.ConfigurationFile context, int lineNumber)-keycontextlineNumber",
            "probability": 1,
            "from_file_path": "src/core/lombok/core/configuration/ConfigurationParser.java",
            "from_class_or_interface_name": "Collector",
            "from_class_or_interface_key": "lombok.core.configuration.ConfigurationParser.Collector",
            "from_method_name": "set",
            "from_method_key": "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)",
            "to_file_path": "src/core/lombok/core/configuration/ConfigurationParser.java",
            "to_class_or_interface_name": "Collector",
            "to_class_or_interface_key": "lombok.core.configuration.ConfigurationParser.Collector",
            "to_method_name": "clear",
            "to_method_key": "lombok.core.configuration.ConfigurationParser.Collector/method/clear(lombok.core.configuration.ConfigurationKey<?> key, lombok.core.configuration.ConfigurationFile context, int lineNumber)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/key": {
                    "key": "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/key",
                    "name": "key",
                    "type": "lombok.core.configuration.ConfigurationKey<?>",
                    "displayedType": "ConfigurationKey<?>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.configuration.ConfigurationParser.Collector/method/clear(lombok.core.configuration.ConfigurationKey<?> key, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/key",
                        "name": "key",
                        "type": "lombok.core.configuration.ConfigurationKey<?>",
                        "displayedType": "ConfigurationKey<?>",
                        "modifiers": [],
                        "position": {
                            "startLine": 142,
                            "startColumn": 34,
                            "endLine": 142,
                            "endColumn": 37
                        }
                    },
                    "position": {
                        "startLine": 143,
                        "startColumn": 32,
                        "endLine": 143,
                        "endColumn": 35
                    }
                },
                "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/context": {
                    "key": "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/context",
                    "name": "context",
                    "type": "lombok.core.configuration.ConfigurationFile",
                    "displayedType": "ConfigurationFile",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.configuration.ConfigurationParser.Collector/method/clear(lombok.core.configuration.ConfigurationKey<?> key, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/context",
                        "name": "context",
                        "type": "lombok.core.configuration.ConfigurationFile",
                        "displayedType": "ConfigurationFile",
                        "modifiers": [],
                        "position": {
                            "startLine": 142,
                            "startColumn": 57,
                            "endLine": 142,
                            "endColumn": 64
                        }
                    },
                    "position": {
                        "startLine": 143,
                        "startColumn": 69,
                        "endLine": 143,
                        "endColumn": 76
                    }
                },
                "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/lineNumber": {
                    "key": "lombok.core.configuration.ConfigurationParser.Collector/method/set(lombok.core.configuration.ConfigurationKey<?> key, java.lang.Object value, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/lineNumber",
                    "name": "lineNumber",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.configuration.ConfigurationParser.Collector/method/clear(lombok.core.configuration.ConfigurationKey<?> key, lombok.core.configuration.ConfigurationFile context, int lineNumber)/parameter/lineNumber",
                        "name": "lineNumber",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 142,
                            "startColumn": 70,
                            "endLine": 142,
                            "endColumn": 80
                        }
                    },
                    "position": {
                        "startLine": 143,
                        "startColumn": 82,
                        "endLine": 143,
                        "endColumn": 92
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/core/debug/DebugSnapshotStore.java-lombok.core.debug.DebugSnapshotStore/method/log(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)-lombok.core.debug.DebugSnapshotStore/method/print(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)-ownermessageparams": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/core/debug/DebugSnapshotStore.java-lombok.core.debug.DebugSnapshotStore/method/log(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)-lombok.core.debug.DebugSnapshotStore/method/print(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)-ownermessageparams",
            "probability": 1,
            "from_file_path": "src/core/lombok/core/debug/DebugSnapshotStore.java",
            "from_class_or_interface_name": "DebugSnapshotStore",
            "from_class_or_interface_key": "lombok.core.debug.DebugSnapshotStore",
            "from_method_name": "log",
            "from_method_key": "lombok.core.debug.DebugSnapshotStore/method/log(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)",
            "to_file_path": "src/core/lombok/core/debug/DebugSnapshotStore.java",
            "to_class_or_interface_name": "DebugSnapshotStore",
            "to_class_or_interface_key": "lombok.core.debug.DebugSnapshotStore",
            "to_method_name": "print",
            "to_method_key": "lombok.core.debug.DebugSnapshotStore/method/print(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.debug.DebugSnapshotStore/method/log(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)/parameter/owner": {
                    "key": "lombok.core.debug.DebugSnapshotStore/method/log(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)/parameter/owner",
                    "name": "owner",
                    "type": "lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration",
                    "displayedType": "CompilationUnitDeclaration",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.debug.DebugSnapshotStore/method/print(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)/parameter/owner",
                        "name": "owner",
                        "type": "lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration",
                        "displayedType": "CompilationUnitDeclaration",
                        "modifiers": [],
                        "position": {
                            "startLine": 82,
                            "startColumn": 49,
                            "endLine": 82,
                            "endColumn": 54
                        }
                    },
                    "position": {
                        "startLine": 63,
                        "startColumn": 45,
                        "endLine": 63,
                        "endColumn": 50
                    }
                },
                "lombok.core.debug.DebugSnapshotStore/method/log(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)/parameter/message": {
                    "key": "lombok.core.debug.DebugSnapshotStore/method/log(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)/parameter/message",
                    "name": "message",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.debug.DebugSnapshotStore/method/print(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)/parameter/message",
                        "name": "message",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 82,
                            "startColumn": 63,
                            "endLine": 82,
                            "endColumn": 70
                        }
                    },
                    "position": {
                        "startLine": 63,
                        "startColumn": 59,
                        "endLine": 63,
                        "endColumn": 66
                    }
                },
                "lombok.core.debug.DebugSnapshotStore/method/log(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)/parameter/params": {
                    "key": "lombok.core.debug.DebugSnapshotStore/method/log(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)/parameter/params",
                    "name": "params",
                    "type": "java.lang.Object[]",
                    "displayedType": "Object[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.debug.DebugSnapshotStore/method/print(lombok.core.debug.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration owner, java.lang.String message, java.lang.Object[] params)/parameter/params",
                        "name": "params",
                        "type": "java.lang.Object[]",
                        "displayedType": "Object[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 82,
                            "startColumn": 82,
                            "endLine": 82,
                            "endColumn": 88
                        }
                    },
                    "position": {
                        "startLine": 63,
                        "startColumn": 78,
                        "endLine": 63,
                        "endColumn": 84
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleLockedUtil.java-lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)-lombok.eclipse.handlers.HandleLockedUtil/method/createLockField(java.lang.String name, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, char[][] lockTypeClass, char[][] lockImplClass, java.util.concurrent.atomic.AtomicBoolean isStatic, boolean reportErrors)-annotationNodelockTypeClasslockImplClass": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleLockedUtil.java-lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)-lombok.eclipse.handlers.HandleLockedUtil/method/createLockField(java.lang.String name, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, char[][] lockTypeClass, char[][] lockImplClass, java.util.concurrent.atomic.AtomicBoolean isStatic, boolean reportErrors)-annotationNodelockTypeClasslockImplClass",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleLockedUtil.java",
            "from_class_or_interface_name": "HandleLockedUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleLockedUtil",
            "from_method_name": "handle",
            "from_method_key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleLockedUtil.java",
            "to_class_or_interface_name": "HandleLockedUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleLockedUtil",
            "to_method_name": "createLockField",
            "to_method_key": "lombok.eclipse.handlers.HandleLockedUtil/method/createLockField(java.lang.String name, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, char[][] lockTypeClass, char[][] lockImplClass, java.util.concurrent.atomic.AtomicBoolean isStatic, boolean reportErrors)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationNode": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationNode",
                    "name": "annotationNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/createLockField(java.lang.String name, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, char[][] lockTypeClass, char[][] lockImplClass, java.util.concurrent.atomic.AtomicBoolean isStatic, boolean reportErrors)/parameter/annotationNode",
                        "name": "annotationNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 73,
                            "startColumn": 65,
                            "endLine": 73,
                            "endColumn": 79
                        }
                    },
                    "position": {
                        "startLine": 153,
                        "startColumn": 83,
                        "endLine": 153,
                        "endColumn": 97
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockTypeClass": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockTypeClass",
                    "name": "lockTypeClass",
                    "type": "char[][]",
                    "displayedType": "char[][]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/createLockField(java.lang.String name, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, char[][] lockTypeClass, char[][] lockImplClass, java.util.concurrent.atomic.AtomicBoolean isStatic, boolean reportErrors)/parameter/lockTypeClass",
                        "name": "lockTypeClass",
                        "type": "char[][]",
                        "displayedType": "char[][]",
                        "modifiers": [],
                        "position": {
                            "startLine": 73,
                            "startColumn": 90,
                            "endLine": 73,
                            "endColumn": 103
                        }
                    },
                    "position": {
                        "startLine": 154,
                        "startColumn": 35,
                        "endLine": 154,
                        "endColumn": 48
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockImplClass": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockImplClass",
                    "name": "lockImplClass",
                    "type": "char[][]",
                    "displayedType": "char[][]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/createLockField(java.lang.String name, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, char[][] lockTypeClass, char[][] lockImplClass, java.util.concurrent.atomic.AtomicBoolean isStatic, boolean reportErrors)/parameter/lockImplClass",
                        "name": "lockImplClass",
                        "type": "char[][]",
                        "displayedType": "char[][]",
                        "modifiers": [],
                        "position": {
                            "startLine": 73,
                            "startColumn": 114,
                            "endLine": 73,
                            "endColumn": 127
                        }
                    },
                    "position": {
                        "startLine": 154,
                        "startColumn": 59,
                        "endLine": 154,
                        "endColumn": 72
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)-deprecatemakeraccess": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)-deprecatemakeraccess",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "generateSingularMethod",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "makeMods",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 185,
                            "startColumn": 80,
                            "endLine": 185,
                            "endColumn": 89
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 76,
                        "endLine": 309,
                        "endColumn": 85
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/maker": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/maker",
                    "name": "maker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)/parameter/maker",
                        "name": "maker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 185,
                            "startColumn": 49,
                            "endLine": 185,
                            "endColumn": 54
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 102,
                        "endLine": 309,
                        "endColumn": 107
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access",
                    "name": "access",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)/parameter/access",
                        "name": "access",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 185,
                            "startColumn": 103,
                            "endLine": 185,
                            "endColumn": 109
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 251,
                        "endLine": 309,
                        "endColumn": 257
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/launch/PatchFixesHider.java-lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.Object output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)-lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.StringBuilder output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)-methodDeclarationtabtype": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/launch/PatchFixesHider.java-lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.Object output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)-lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.StringBuilder output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)-methodDeclarationtabtype",
            "probability": 1,
            "from_file_path": "src/eclipseAgent/lombok/launch/PatchFixesHider.java",
            "from_class_or_interface_name": "Tests",
            "from_class_or_interface_key": "lombok.launch.PatchFixesHider.Tests",
            "from_method_name": "printMethod",
            "from_method_key": "lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.Object output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)",
            "to_file_path": "src/eclipseAgent/lombok/launch/PatchFixesHider.java",
            "to_class_or_interface_name": "Tests",
            "to_class_or_interface_key": "lombok.launch.PatchFixesHider.Tests",
            "to_method_name": "printMethod",
            "to_method_key": "lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.StringBuilder output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.Object output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)/parameter/methodDeclaration": {
                    "key": "lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.Object output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)/parameter/methodDeclaration",
                    "name": "methodDeclaration",
                    "type": "lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration",
                    "displayedType": "AbstractMethodDeclaration",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.StringBuilder output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)/parameter/methodDeclaration",
                        "name": "methodDeclaration",
                        "type": "lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration",
                        "displayedType": "AbstractMethodDeclaration",
                        "modifiers": [],
                        "position": {
                            "startLine": 1015,
                            "startColumn": 69,
                            "endLine": 1015,
                            "endColumn": 86
                        }
                    },
                    "position": {
                        "startLine": 1019,
                        "startColumn": 62,
                        "endLine": 1019,
                        "endColumn": 79
                    }
                },
                "lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.Object output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)/parameter/tab": {
                    "key": "lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.Object output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)/parameter/tab",
                    "name": "tab",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.StringBuilder output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)/parameter/tab",
                        "name": "tab",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 1015,
                            "startColumn": 92,
                            "endLine": 1015,
                            "endColumn": 95
                        }
                    },
                    "position": {
                        "startLine": 1019,
                        "startColumn": 85,
                        "endLine": 1019,
                        "endColumn": 88
                    }
                },
                "lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.Object output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)/parameter/type": {
                    "key": "lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.Object output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)/parameter/type",
                    "name": "type",
                    "type": "lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration",
                    "displayedType": "TypeDeclaration",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.launch.PatchFixesHider.Tests/method/printMethod(lombok.launch.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration, int tab, java.lang.StringBuilder output, lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type)/parameter/type",
                        "name": "type",
                        "type": "lombok.launch.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration",
                        "displayedType": "TypeDeclaration",
                        "modifiers": [],
                        "position": {
                            "startLine": 1015,
                            "startColumn": 135,
                            "endLine": 1015,
                            "endColumn": 139
                        }
                    },
                    "position": {
                        "startLine": 1019,
                        "startColumn": 121,
                        "endLine": 1019,
                        "endColumn": 125
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/launch/PatchFixesHider.java-lombok.launch.PatchFixesHider.ExtensionMethod/method/nonStaticAccessToStaticMethod(java.lang.Object problemReporter, java.lang.Object location, java.lang.Object method, java.lang.Object messageSend)-lombok.launch.PatchFixesHider.ExtensionMethod/method/invalidMethod(java.lang.Object problemReporter, java.lang.Object messageSend, java.lang.Object method)-problemReportermethodmessageSend": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/launch/PatchFixesHider.java-lombok.launch.PatchFixesHider.ExtensionMethod/method/nonStaticAccessToStaticMethod(java.lang.Object problemReporter, java.lang.Object location, java.lang.Object method, java.lang.Object messageSend)-lombok.launch.PatchFixesHider.ExtensionMethod/method/invalidMethod(java.lang.Object problemReporter, java.lang.Object messageSend, java.lang.Object method)-problemReportermethodmessageSend",
            "probability": 1,
            "from_file_path": "src/eclipseAgent/lombok/launch/PatchFixesHider.java",
            "from_class_or_interface_name": "ExtensionMethod",
            "from_class_or_interface_key": "lombok.launch.PatchFixesHider.ExtensionMethod",
            "from_method_name": "nonStaticAccessToStaticMethod",
            "from_method_key": "lombok.launch.PatchFixesHider.ExtensionMethod/method/nonStaticAccessToStaticMethod(java.lang.Object problemReporter, java.lang.Object location, java.lang.Object method, java.lang.Object messageSend)",
            "to_file_path": "src/eclipseAgent/lombok/launch/PatchFixesHider.java",
            "to_class_or_interface_name": "ExtensionMethod",
            "to_class_or_interface_key": "lombok.launch.PatchFixesHider.ExtensionMethod",
            "to_method_name": "invalidMethod",
            "to_method_key": "lombok.launch.PatchFixesHider.ExtensionMethod/method/invalidMethod(java.lang.Object problemReporter, java.lang.Object messageSend, java.lang.Object method)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.launch.PatchFixesHider.ExtensionMethod/method/nonStaticAccessToStaticMethod(java.lang.Object problemReporter, java.lang.Object location, java.lang.Object method, java.lang.Object messageSend)/parameter/problemReporter": {
                    "key": "lombok.launch.PatchFixesHider.ExtensionMethod/method/nonStaticAccessToStaticMethod(java.lang.Object problemReporter, java.lang.Object location, java.lang.Object method, java.lang.Object messageSend)/parameter/problemReporter",
                    "name": "problemReporter",
                    "type": "java.lang.Object",
                    "displayedType": "Object",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.launch.PatchFixesHider.ExtensionMethod/method/invalidMethod(java.lang.Object problemReporter, java.lang.Object messageSend, java.lang.Object method)/parameter/problemReporter",
                        "name": "problemReporter",
                        "type": "java.lang.Object",
                        "displayedType": "Object",
                        "modifiers": [],
                        "position": {
                            "startLine": 428,
                            "startColumn": 43,
                            "endLine": 428,
                            "endColumn": 58
                        }
                    },
                    "position": {
                        "startLine": 436,
                        "startColumn": 59,
                        "endLine": 436,
                        "endColumn": 74
                    }
                },
                "lombok.launch.PatchFixesHider.ExtensionMethod/method/nonStaticAccessToStaticMethod(java.lang.Object problemReporter, java.lang.Object location, java.lang.Object method, java.lang.Object messageSend)/parameter/method": {
                    "key": "lombok.launch.PatchFixesHider.ExtensionMethod/method/nonStaticAccessToStaticMethod(java.lang.Object problemReporter, java.lang.Object location, java.lang.Object method, java.lang.Object messageSend)/parameter/method",
                    "name": "method",
                    "type": "java.lang.Object",
                    "displayedType": "Object",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.launch.PatchFixesHider.ExtensionMethod/method/invalidMethod(java.lang.Object problemReporter, java.lang.Object messageSend, java.lang.Object method)/parameter/method",
                        "name": "method",
                        "type": "java.lang.Object",
                        "displayedType": "Object",
                        "modifiers": [],
                        "position": {
                            "startLine": 428,
                            "startColumn": 87,
                            "endLine": 428,
                            "endColumn": 93
                        }
                    },
                    "position": {
                        "startLine": 436,
                        "startColumn": 100,
                        "endLine": 436,
                        "endColumn": 106
                    }
                },
                "lombok.launch.PatchFixesHider.ExtensionMethod/method/nonStaticAccessToStaticMethod(java.lang.Object problemReporter, java.lang.Object location, java.lang.Object method, java.lang.Object messageSend)/parameter/messageSend": {
                    "key": "lombok.launch.PatchFixesHider.ExtensionMethod/method/nonStaticAccessToStaticMethod(java.lang.Object problemReporter, java.lang.Object location, java.lang.Object method, java.lang.Object messageSend)/parameter/messageSend",
                    "name": "messageSend",
                    "type": "java.lang.Object",
                    "displayedType": "Object",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.launch.PatchFixesHider.ExtensionMethod/method/invalidMethod(java.lang.Object problemReporter, java.lang.Object messageSend, java.lang.Object method)/parameter/messageSend",
                        "name": "messageSend",
                        "type": "java.lang.Object",
                        "displayedType": "Object",
                        "modifiers": [],
                        "position": {
                            "startLine": 428,
                            "startColumn": 67,
                            "endLine": 428,
                            "endColumn": 78
                        }
                    },
                    "position": {
                        "startLine": 436,
                        "startColumn": 115,
                        "endLine": 436,
                        "endColumn": 126
                    }
                }
            }
        },
        "fields_to_fields_data_clump-test/transform/resource/before/FieldNameConstantsHandrolled.java-FieldNameConstantsHandrolled3-FieldNameConstantsHandrolled2-alsoAFieldthirdFieldfield1": {
            "type": "data_clump",
            "key": "fields_to_fields_data_clump-test/transform/resource/before/FieldNameConstantsHandrolled.java-FieldNameConstantsHandrolled3-FieldNameConstantsHandrolled2-alsoAFieldthirdFieldfield1",
            "probability": 1,
            "from_file_path": "test/transform/resource/before/FieldNameConstantsHandrolled.java",
            "from_class_or_interface_name": "FieldNameConstantsHandrolled3",
            "from_class_or_interface_key": "FieldNameConstantsHandrolled3",
            "from_method_name": null,
            "from_method_key": null,
            "to_file_path": "test/transform/resource/before/FieldNameConstantsHandrolled.java",
            "to_class_or_interface_key": "FieldNameConstantsHandrolled2",
            "to_class_or_interface_name": "FieldNameConstantsHandrolled2",
            "to_method_key": null,
            "to_method_name": null,
            "data_clump_type": "fields_to_fields_data_clump",
            "data_clump_data": {
                "FieldNameConstantsHandrolled3/memberField/alsoAField": {
                    "key": "FieldNameConstantsHandrolled3/memberField/alsoAField",
                    "name": "alsoAField",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "FieldNameConstantsHandrolled2/memberField/alsoAField",
                        "name": "alsoAField",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 15,
                            "startColumn": 14,
                            "endLine": 15,
                            "endColumn": 24
                        }
                    },
                    "position": {
                        "startLine": 28,
                        "startColumn": 14,
                        "endLine": 28,
                        "endColumn": 24
                    }
                },
                "FieldNameConstantsHandrolled3/memberField/thirdField": {
                    "key": "FieldNameConstantsHandrolled3/memberField/thirdField",
                    "name": "thirdField",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "FieldNameConstantsHandrolled2/memberField/thirdField",
                        "name": "thirdField",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 15,
                            "startColumn": 26,
                            "endLine": 15,
                            "endColumn": 36
                        }
                    },
                    "position": {
                        "startLine": 28,
                        "startColumn": 26,
                        "endLine": 28,
                        "endColumn": 36
                    }
                },
                "FieldNameConstantsHandrolled3/memberField/field1": {
                    "key": "FieldNameConstantsHandrolled3/memberField/field1",
                    "name": "field1",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "FieldNameConstantsHandrolled2/memberField/field1",
                        "name": "field1",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 15,
                            "startColumn": 6,
                            "endLine": 15,
                            "endColumn": 12
                        }
                    },
                    "position": {
                        "startLine": 28,
                        "startColumn": 6,
                        "endLine": 28,
                        "endColumn": 12
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodestaticNamelevelallToDefaultfieldssource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodestaticNamelevelallToDefaultfieldssource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "from_class_or_interface_name": "HandleConstructor",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "from_method_name": "generateStaticConstructor",
            "from_method_key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "to_class_or_interface_name": "HandleConstructor",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "to_method_name": "generateConstructor",
            "to_method_key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 219,
                            "startColumn": 44,
                            "endLine": 219,
                            "endColumn": 52
                        }
                    },
                    "position": {
                        "startLine": 259,
                        "startColumn": 81,
                        "endLine": 259,
                        "endColumn": 89
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/staticName": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/staticName",
                    "name": "staticName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/staticName",
                        "name": "staticName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 219,
                            "startColumn": 160,
                            "endLine": 219,
                            "endColumn": 170
                        }
                    },
                    "position": {
                        "startLine": 259,
                        "startColumn": 98,
                        "endLine": 259,
                        "endColumn": 108
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                    "name": "level",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                        "name": "level",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 219,
                            "startColumn": 66,
                            "endLine": 219,
                            "endColumn": 71
                        }
                    },
                    "position": {
                        "startLine": 259,
                        "startColumn": 122,
                        "endLine": 259,
                        "endColumn": 127
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/allToDefault": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/allToDefault",
                    "name": "allToDefault",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/allToDefault",
                        "name": "allToDefault",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 219,
                            "startColumn": 139,
                            "endLine": 219,
                            "endColumn": 151
                        }
                    },
                    "position": {
                        "startLine": 259,
                        "startColumn": 137,
                        "endLine": 259,
                        "endColumn": 149
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/fields": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/fields",
                    "name": "fields",
                    "type": "com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode>",
                    "displayedType": "List<JavacNode>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/fields",
                        "name": "fields",
                        "type": "com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode>",
                        "displayedType": "List<JavacNode>",
                        "modifiers": [],
                        "position": {
                            "startLine": 219,
                            "startColumn": 123,
                            "endLine": 219,
                            "endColumn": 129
                        }
                    },
                    "position": {
                        "startLine": 259,
                        "startColumn": 167,
                        "endLine": 259,
                        "endColumn": 173
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 219,
                            "startColumn": 231,
                            "endLine": 219,
                            "endColumn": 237
                        }
                    },
                    "position": {
                        "startLine": 259,
                        "startColumn": 185,
                        "endLine": 259,
                        "endColumn": 191
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/singulars/JavacJavaUtilSingularizer.java-lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)-lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, lombok.javac.handlers.singulars.lombok.javac.JavacNode source)-makerdatabuilderTypemapModesource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/singulars/JavacJavaUtilSingularizer.java-lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)-lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, lombok.javac.handlers.singulars.lombok.javac.JavacNode source)-makerdatabuilderTypemapModesource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/singulars/JavacJavaUtilSingularizer.java",
            "from_class_or_interface_name": "JavacJavaUtilSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer",
            "from_method_name": "createJavaUtilSetMapInitialCapacitySwitchStatements",
            "from_method_key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)",
            "to_file_path": "src/core/lombok/javac/handlers/singulars/JavacJavaUtilSingularizer.java",
            "to_class_or_interface_name": "JavacJavaUtilSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer",
            "to_method_name": "createConstructBuilderVarIfNeeded",
            "to_method_key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, lombok.javac.handlers.singulars.lombok.javac.JavacNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/maker": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/maker",
                    "name": "maker",
                    "type": "lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, lombok.javac.handlers.singulars.lombok.javac.JavacNode source)/parameter/maker",
                        "name": "maker",
                        "type": "lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 90,
                            "startColumn": 73,
                            "endLine": 90,
                            "endColumn": 78
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 97,
                        "endLine": 40,
                        "endColumn": 102
                    }
                },
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/data": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/data",
                    "name": "data",
                    "type": "lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, lombok.javac.handlers.singulars.lombok.javac.JavacNode source)/parameter/data",
                        "name": "data",
                        "type": "lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 90,
                            "startColumn": 93,
                            "endLine": 90,
                            "endColumn": 97
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 117,
                        "endLine": 40,
                        "endColumn": 121
                    }
                },
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/builderType": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.singulars.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, lombok.javac.handlers.singulars.lombok.javac.JavacNode source)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.singulars.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 90,
                            "startColumn": 109,
                            "endLine": 90,
                            "endColumn": 120
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 133,
                        "endLine": 40,
                        "endColumn": 144
                    }
                },
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/mapMode": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/mapMode",
                    "name": "mapMode",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, lombok.javac.handlers.singulars.lombok.javac.JavacNode source)/parameter/mapMode",
                        "name": "mapMode",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 90,
                            "startColumn": 130,
                            "endLine": 90,
                            "endColumn": 137
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 154,
                        "endLine": 40,
                        "endColumn": 161
                    }
                },
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/source": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.singulars.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, lombok.javac.handlers.singulars.lombok.javac.JavacNode source)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.singulars.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 90,
                            "startColumn": 149,
                            "endLine": 90,
                            "endColumn": 155
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 256,
                        "endLine": 40,
                        "endColumn": 262
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleConstructor.java-lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)-levelforceDefaultsonConstructorsourceNode": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleConstructor.java-lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)-levelforceDefaultsonConstructorsourceNode",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleConstructor.java",
            "from_class_or_interface_name": "HandleConstructor",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleConstructor",
            "from_method_name": "generateConstructor",
            "from_method_key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleConstructor.java",
            "to_class_or_interface_name": "HandleConstructor",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleConstructor",
            "to_method_name": "createConstructor",
            "to_method_key": "lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/level": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/level",
                    "name": "level",
                    "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)/parameter/level",
                        "name": "level",
                        "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 364,
                            "startColumn": 15,
                            "endLine": 364,
                            "endColumn": 20
                        }
                    },
                    "position": {
                        "startLine": 243,
                        "startColumn": 37,
                        "endLine": 243,
                        "endColumn": 42
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/forceDefaults": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/forceDefaults",
                    "name": "forceDefaults",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)/parameter/forceDefaults",
                        "name": "forceDefaults",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 364,
                            "startColumn": 87,
                            "endLine": 364,
                            "endColumn": 100
                        }
                    },
                    "position": {
                        "startLine": 243,
                        "startColumn": 85,
                        "endLine": 243,
                        "endColumn": 98
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/onConstructor": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/onConstructor",
                    "name": "onConstructor",
                    "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                    "displayedType": "List<Annotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)/parameter/onConstructor",
                        "name": "onConstructor",
                        "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                        "displayedType": "List<Annotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 365,
                            "startColumn": 44,
                            "endLine": 365,
                            "endColumn": 57
                        }
                    },
                    "position": {
                        "startLine": 244,
                        "startColumn": 20,
                        "endLine": 244,
                        "endColumn": 33
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/sourceNode": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/sourceNode",
                    "name": "sourceNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)/parameter/sourceNode",
                        "name": "sourceNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 365,
                            "startColumn": 15,
                            "endLine": 365,
                            "endColumn": 25
                        }
                    },
                    "position": {
                        "startLine": 244,
                        "startColumn": 47,
                        "endLine": 244,
                        "endColumn": 57
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleLockedUtil.java-lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)-lombok.eclipse.handlers.HandleLockedUtil/method/preHandle(java.lang.String annotationValue, char[][] lockTypeClass, char[][] lockImplClass, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode)-annotationValueannotationNodelockTypeClasslockImplClass": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleLockedUtil.java-lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)-lombok.eclipse.handlers.HandleLockedUtil/method/preHandle(java.lang.String annotationValue, char[][] lockTypeClass, char[][] lockImplClass, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode)-annotationValueannotationNodelockTypeClasslockImplClass",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleLockedUtil.java",
            "from_class_or_interface_name": "HandleLockedUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleLockedUtil",
            "from_method_name": "handle",
            "from_method_key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleLockedUtil.java",
            "to_class_or_interface_name": "HandleLockedUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleLockedUtil",
            "to_method_name": "preHandle",
            "to_method_key": "lombok.eclipse.handlers.HandleLockedUtil/method/preHandle(java.lang.String annotationValue, char[][] lockTypeClass, char[][] lockImplClass, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationValue": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationValue",
                    "name": "annotationValue",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/preHandle(java.lang.String annotationValue, char[][] lockTypeClass, char[][] lockImplClass, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode)/parameter/annotationValue",
                        "name": "annotationValue",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 64,
                            "startColumn": 38,
                            "endLine": 64,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 153,
                        "startColumn": 35,
                        "endLine": 153,
                        "endColumn": 50
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationNode": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationNode",
                    "name": "annotationNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/preHandle(java.lang.String annotationValue, char[][] lockTypeClass, char[][] lockImplClass, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode)/parameter/annotationNode",
                        "name": "annotationNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 64,
                            "startColumn": 115,
                            "endLine": 64,
                            "endColumn": 129
                        }
                    },
                    "position": {
                        "startLine": 153,
                        "startColumn": 83,
                        "endLine": 153,
                        "endColumn": 97
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockTypeClass": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockTypeClass",
                    "name": "lockTypeClass",
                    "type": "char[][]",
                    "displayedType": "char[][]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/preHandle(java.lang.String annotationValue, char[][] lockTypeClass, char[][] lockImplClass, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode)/parameter/lockTypeClass",
                        "name": "lockTypeClass",
                        "type": "char[][]",
                        "displayedType": "char[][]",
                        "modifiers": [],
                        "position": {
                            "startLine": 64,
                            "startColumn": 64,
                            "endLine": 64,
                            "endColumn": 77
                        }
                    },
                    "position": {
                        "startLine": 154,
                        "startColumn": 35,
                        "endLine": 154,
                        "endColumn": 48
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockImplClass": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockImplClass",
                    "name": "lockImplClass",
                    "type": "char[][]",
                    "displayedType": "char[][]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/preHandle(java.lang.String annotationValue, char[][] lockTypeClass, char[][] lockImplClass, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode)/parameter/lockImplClass",
                        "name": "lockImplClass",
                        "type": "char[][]",
                        "displayedType": "char[][]",
                        "modifiers": [],
                        "position": {
                            "startLine": 64,
                            "startColumn": 88,
                            "endLine": 64,
                            "endColumn": 101
                        }
                    },
                    "position": {
                        "startLine": 154,
                        "startColumn": 59,
                        "endLine": 154,
                        "endColumn": 72
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fieldsToParam, boolean forceDefaults, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodelevelonConstructorsource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fieldsToParam, boolean forceDefaults, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodelevelonConstructorsource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "from_class_or_interface_name": "HandleConstructor",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "from_method_name": "generateConstructor",
            "from_method_key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "to_class_or_interface_name": "HandleConstructor",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "to_method_name": "createConstructor",
            "to_method_key": "lombok.javac.handlers.HandleConstructor/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fieldsToParam, boolean forceDefaults, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fieldsToParam, boolean forceDefaults, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 301,
                            "startColumn": 143,
                            "endLine": 301,
                            "endColumn": 151
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 44,
                        "endLine": 219,
                        "endColumn": 52
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                    "name": "level",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fieldsToParam, boolean forceDefaults, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                        "name": "level",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 301,
                            "startColumn": 92,
                            "endLine": 301,
                            "endColumn": 97
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 66,
                        "endLine": 219,
                        "endColumn": 71
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/onConstructor": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/onConstructor",
                    "name": "onConstructor",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fieldsToParam, boolean forceDefaults, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/onConstructor",
                        "name": "onConstructor",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 301,
                            "startColumn": 118,
                            "endLine": 301,
                            "endColumn": 131
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 92,
                        "endLine": 219,
                        "endColumn": 105
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/createConstructor(lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, lombok.javac.handlers.lombok.javac.JavacNode typeNode, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fieldsToParam, boolean forceDefaults, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 301,
                            "startColumn": 217,
                            "endLine": 301,
                            "endColumn": 223
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 231,
                        "endLine": 219,
                        "endColumn": 237
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodelevelstaticNamesource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodelevelstaticNamesource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "from_class_or_interface_name": "HandleConstructor",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "from_method_name": "generateRequiredArgsConstructor",
            "from_method_key": "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "to_class_or_interface_name": "HandleConstructor",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "to_method_name": "generateStaticConstructor",
            "to_method_key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 259,
                            "startColumn": 81,
                            "endLine": 259,
                            "endColumn": 89
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 56,
                        "endLine": 211,
                        "endColumn": 64
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                    "name": "level",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                        "name": "level",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 259,
                            "startColumn": 122,
                            "endLine": 259,
                            "endColumn": 127
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 78,
                        "endLine": 211,
                        "endColumn": 83
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/staticName": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/staticName",
                    "name": "staticName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/staticName",
                        "name": "staticName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 259,
                            "startColumn": 98,
                            "endLine": 259,
                            "endColumn": 108
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 92,
                        "endLine": 211,
                        "endColumn": 102
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generateStaticConstructor(boolean staticConstrRequired, lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.lang.String staticName, lombok.javac.handlers.lombok.AccessLevel level, boolean allToDefault, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 259,
                            "startColumn": 185,
                            "endLine": 259,
                            "endColumn": 191
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 163,
                        "endLine": 211,
                        "endColumn": 169
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)-lombok.eclipse.handlers.EclipseHandlerUtil/method/generateNameReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, long p)-parentnamep": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)-lombok.eclipse.handlers.EclipseHandlerUtil/method/generateNameReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, long p)-parentnamep",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "from_class_or_interface_name": "EclipseHandlerUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "from_method_name": "generateParameterizedTypeReference",
            "from_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)",
            "to_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "to_class_or_interface_name": "EclipseHandlerUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "to_method_name": "generateNameReference",
            "to_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateNameReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, long p)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/parent": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/parent",
                    "name": "parent",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateNameReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, long p)/parameter/parent",
                        "name": "parent",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 970,
                            "startColumn": 64,
                            "endLine": 970,
                            "endColumn": 70
                        }
                    },
                    "position": {
                        "startLine": 917,
                        "startColumn": 77,
                        "endLine": 917,
                        "endColumn": 83
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/name": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/name",
                    "name": "name",
                    "type": "char[]",
                    "displayedType": "char[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateNameReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, long p)/parameter/name",
                        "name": "name",
                        "type": "char[]",
                        "displayedType": "char[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 970,
                            "startColumn": 79,
                            "endLine": 970,
                            "endColumn": 83
                        }
                    },
                    "position": {
                        "startLine": 917,
                        "startColumn": 92,
                        "endLine": 917,
                        "endColumn": 96
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/p": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/p",
                    "name": "p",
                    "type": "long",
                    "displayedType": "long",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateNameReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, long p)/parameter/p",
                        "name": "p",
                        "type": "long",
                        "displayedType": "long",
                        "modifiers": [],
                        "position": {
                            "startLine": 970,
                            "startColumn": 90,
                            "endLine": 970,
                            "endColumn": 91
                        }
                    },
                    "position": {
                        "startLine": 917,
                        "startColumn": 149,
                        "endLine": 917,
                        "endColumn": 150
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleConstructor.java-lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)-levelonConstructorsourceNode": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleConstructor.java-lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)-levelonConstructorsourceNode",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleConstructor.java",
            "from_class_or_interface_name": "HandleConstructor",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleConstructor",
            "from_method_name": "generateRequiredArgsConstructor",
            "from_method_key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleConstructor.java",
            "to_class_or_interface_name": "HandleConstructor",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleConstructor",
            "to_method_name": "createConstructor",
            "to_method_key": "lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/level": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/level",
                    "name": "level",
                    "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)/parameter/level",
                        "name": "level",
                        "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 364,
                            "startColumn": 15,
                            "endLine": 364,
                            "endColumn": 20
                        }
                    },
                    "position": {
                        "startLine": 229,
                        "startColumn": 38,
                        "endLine": 229,
                        "endColumn": 43
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/onConstructor": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/onConstructor",
                    "name": "onConstructor",
                    "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                    "displayedType": "List<Annotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)/parameter/onConstructor",
                        "name": "onConstructor",
                        "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                        "displayedType": "List<Annotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 365,
                            "startColumn": 44,
                            "endLine": 365,
                            "endColumn": 57
                        }
                    },
                    "position": {
                        "startLine": 230,
                        "startColumn": 21,
                        "endLine": 230,
                        "endColumn": 34
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/sourceNode": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateRequiredArgsConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/sourceNode",
                    "name": "sourceNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/createConstructor(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor)/parameter/sourceNode",
                        "name": "sourceNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 365,
                            "startColumn": 15,
                            "endLine": 365,
                            "endColumn": 25
                        }
                    },
                    "position": {
                        "startLine": 230,
                        "startColumn": 48,
                        "endLine": 230,
                        "endColumn": 58
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/singulars/EclipseJavaUtilSingularizer.java-lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode)-lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)-databuilderTypemapMode": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/singulars/EclipseJavaUtilSingularizer.java-lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode)-lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)-databuilderTypemapMode",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/singulars/EclipseJavaUtilSingularizer.java",
            "from_class_or_interface_name": "EclipseJavaUtilSingularizer",
            "from_class_or_interface_key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer",
            "from_method_name": "createConstructBuilderVarIfNeeded",
            "from_method_key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode)",
            "to_file_path": "src/core/lombok/eclipse/handlers/singulars/EclipseJavaUtilSingularizer.java",
            "to_class_or_interface_name": "EclipseJavaUtilSingularizer",
            "to_class_or_interface_key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer",
            "to_method_name": "createJavaUtilSimpleCreationAndFillStatements",
            "to_method_key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode)/parameter/data": {
                    "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode)/parameter/data",
                    "name": "data",
                    "type": "lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/data",
                        "name": "data",
                        "type": "lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 160,
                            "startColumn": 87,
                            "endLine": 160,
                            "endColumn": 91
                        }
                    },
                    "position": {
                        "startLine": 257,
                        "startColumn": 69,
                        "endLine": 257,
                        "endColumn": 73
                    }
                },
                "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode)/parameter/builderType": {
                    "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 160,
                            "startColumn": 105,
                            "endLine": 160,
                            "endColumn": 116
                        }
                    },
                    "position": {
                        "startLine": 257,
                        "startColumn": 87,
                        "endLine": 257,
                        "endColumn": 98
                    }
                },
                "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode)/parameter/mapMode": {
                    "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createConstructBuilderVarIfNeeded(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode)/parameter/mapMode",
                    "name": "mapMode",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/mapMode",
                        "name": "mapMode",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 160,
                            "startColumn": 126,
                            "endLine": 160,
                            "endColumn": 133
                        }
                    },
                    "position": {
                        "startLine": 257,
                        "startColumn": 108,
                        "endLine": 257,
                        "endColumn": 115
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/JavacResolution.java-lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)-lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowVoid)-typeastallowVoid": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/JavacResolution.java-lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)-lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowVoid)-typeastallowVoid",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/JavacResolution.java",
            "from_class_or_interface_name": "JavacResolution",
            "from_class_or_interface_key": "lombok.javac.JavacResolution",
            "from_method_name": "typeToJCTree",
            "from_method_key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)",
            "to_file_path": "src/core/lombok/javac/JavacResolution.java",
            "to_class_or_interface_name": "JavacResolution",
            "to_class_or_interface_key": "lombok.javac.JavacResolution",
            "to_method_name": "typeToJCTree",
            "to_method_key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowVoid)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/type": {
                    "key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/type",
                    "name": "type",
                    "type": "com.sun.tools.javac.code.Type",
                    "displayedType": "Type",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowVoid)/parameter/type",
                        "name": "type",
                        "type": "com.sun.tools.javac.code.Type",
                        "displayedType": "Type",
                        "modifiers": [],
                        "position": {
                            "startLine": 359,
                            "startColumn": 47,
                            "endLine": 359,
                            "endColumn": 51
                        }
                    },
                    "position": {
                        "startLine": 371,
                        "startColumn": 48,
                        "endLine": 371,
                        "endColumn": 52
                    }
                },
                "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/ast": {
                    "key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/ast",
                    "name": "ast",
                    "type": "lombok.javac.JavacAST",
                    "displayedType": "JavacAST",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowVoid)/parameter/ast",
                        "name": "ast",
                        "type": "lombok.javac.JavacAST",
                        "displayedType": "JavacAST",
                        "modifiers": [],
                        "position": {
                            "startLine": 359,
                            "startColumn": 62,
                            "endLine": 359,
                            "endColumn": 65
                        }
                    },
                    "position": {
                        "startLine": 371,
                        "startColumn": 63,
                        "endLine": 371,
                        "endColumn": 66
                    }
                },
                "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/allowVoid": {
                    "key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/allowVoid",
                    "name": "allowVoid",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowVoid)/parameter/allowVoid",
                        "name": "allowVoid",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 359,
                            "startColumn": 75,
                            "endLine": 359,
                            "endColumn": 84
                        }
                    },
                    "position": {
                        "startLine": 371,
                        "startColumn": 99,
                        "endLine": 371,
                        "endColumn": 108
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/utils/lombok/javac/JavacTreeMaker.java-lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)-lombok.javac.JavacTreeMaker/method/ClassDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCExpression extending, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> implementing, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree> defs)-modsnametyparams": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/utils/lombok/javac/JavacTreeMaker.java-lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)-lombok.javac.JavacTreeMaker/method/ClassDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCExpression extending, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> implementing, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree> defs)-modsnametyparams",
            "probability": 1,
            "from_file_path": "src/utils/lombok/javac/JavacTreeMaker.java",
            "from_class_or_interface_name": "JavacTreeMaker",
            "from_class_or_interface_key": "lombok.javac.JavacTreeMaker",
            "from_method_name": "MethodDef",
            "from_method_key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)",
            "to_file_path": "src/utils/lombok/javac/JavacTreeMaker.java",
            "to_class_or_interface_name": "JavacTreeMaker",
            "to_class_or_interface_key": "lombok.javac.JavacTreeMaker",
            "to_method_name": "ClassDef",
            "to_method_key": "lombok.javac.JavacTreeMaker/method/ClassDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCExpression extending, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> implementing, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree> defs)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/mods": {
                    "key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/mods",
                    "name": "mods",
                    "type": "com.sun.tools.javac.tree.JCTree$JCModifiers",
                    "displayedType": "JCModifiers",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacTreeMaker/method/ClassDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCExpression extending, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> implementing, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree> defs)/parameter/mods",
                        "name": "mods",
                        "type": "com.sun.tools.javac.tree.JCTree$JCModifiers",
                        "displayedType": "JCModifiers",
                        "modifiers": [],
                        "position": {
                            "startLine": 505,
                            "startColumn": 42,
                            "endLine": 505,
                            "endColumn": 46
                        }
                    },
                    "position": {
                        "startLine": 511,
                        "startColumn": 44,
                        "endLine": 511,
                        "endColumn": 48
                    }
                },
                "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/name": {
                    "key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/name",
                    "name": "name",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacTreeMaker/method/ClassDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCExpression extending, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> implementing, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree> defs)/parameter/name",
                        "name": "name",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 505,
                            "startColumn": 53,
                            "endLine": 505,
                            "endColumn": 57
                        }
                    },
                    "position": {
                        "startLine": 511,
                        "startColumn": 55,
                        "endLine": 511,
                        "endColumn": 59
                    }
                },
                "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/typarams": {
                    "key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/typarams",
                    "name": "typarams",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter>",
                    "displayedType": "List<JCTypeParameter>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacTreeMaker/method/ClassDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCExpression extending, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> implementing, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree> defs)/parameter/typarams",
                        "name": "typarams",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter>",
                        "displayedType": "List<JCTypeParameter>",
                        "modifiers": [],
                        "position": {
                            "startLine": 505,
                            "startColumn": 81,
                            "endLine": 505,
                            "endColumn": 89
                        }
                    },
                    "position": {
                        "startLine": 511,
                        "startColumn": 105,
                        "endLine": 511,
                        "endColumn": 113
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java-lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleEqualsAndHashCode/method/createCanEqual(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-typeNodesourceonParam": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java-lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleEqualsAndHashCode/method/createCanEqual(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-typeNodesourceonParam",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java",
            "from_class_or_interface_name": "HandleEqualsAndHashCode",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleEqualsAndHashCode",
            "from_method_name": "generateMethods",
            "from_method_key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java",
            "to_class_or_interface_name": "HandleEqualsAndHashCode",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleEqualsAndHashCode",
            "to_method_name": "createCanEqual",
            "to_method_key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createCanEqual(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createCanEqual(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 563,
                            "startColumn": 47,
                            "endLine": 563,
                            "endColumn": 55
                        }
                    },
                    "position": {
                        "startLine": 117,
                        "startColumn": 40,
                        "endLine": 117,
                        "endColumn": 48
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createCanEqual(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 563,
                            "startColumn": 67,
                            "endLine": 563,
                            "endColumn": 73
                        }
                    },
                    "position": {
                        "startLine": 117,
                        "startColumn": 60,
                        "endLine": 117,
                        "endColumn": 66
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                    "name": "onParam",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createCanEqual(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                        "name": "onParam",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 563,
                            "startColumn": 94,
                            "endLine": 563,
                            "endColumn": 101
                        }
                    },
                    "position": {
                        "startLine": 118,
                        "startColumn": 112,
                        "endLine": 118,
                        "endColumn": 119
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacHandlerUtil.java-lombok.javac.handlers.JavacHandlerUtil/method/addAnnotation(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, java.lang.String annotationTypeFqn, com.sun.tools.javac.tree.JCTree$JCExpression arg)-lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)-modsnodesource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacHandlerUtil.java-lombok.javac.handlers.JavacHandlerUtil/method/addAnnotation(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, java.lang.String annotationTypeFqn, com.sun.tools.javac.tree.JCTree$JCExpression arg)-lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)-modsnodesource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacHandlerUtil.java",
            "from_class_or_interface_name": "JavacHandlerUtil",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacHandlerUtil",
            "from_method_name": "addAnnotation",
            "from_method_key": "lombok.javac.handlers.JavacHandlerUtil/method/addAnnotation(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, java.lang.String annotationTypeFqn, com.sun.tools.javac.tree.JCTree$JCExpression arg)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacHandlerUtil.java",
            "to_class_or_interface_name": "JavacHandlerUtil",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacHandlerUtil",
            "to_method_name": "addSuppressWarningsAll",
            "to_method_key": "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacHandlerUtil/method/addAnnotation(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, java.lang.String annotationTypeFqn, com.sun.tools.javac.tree.JCTree$JCExpression arg)/parameter/mods": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/addAnnotation(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, java.lang.String annotationTypeFqn, com.sun.tools.javac.tree.JCTree$JCExpression arg)/parameter/mods",
                    "name": "mods",
                    "type": "com.sun.tools.javac.tree.JCTree$JCModifiers",
                    "displayedType": "JCModifiers",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/mods",
                        "name": "mods",
                        "type": "com.sun.tools.javac.tree.JCTree$JCModifiers",
                        "displayedType": "JCModifiers",
                        "modifiers": [],
                        "position": {
                            "startLine": 1511,
                            "startColumn": 56,
                            "endLine": 1511,
                            "endColumn": 60
                        }
                    },
                    "position": {
                        "startLine": 1550,
                        "startColumn": 47,
                        "endLine": 1550,
                        "endColumn": 51
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/addAnnotation(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, java.lang.String annotationTypeFqn, com.sun.tools.javac.tree.JCTree$JCExpression arg)/parameter/node": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/addAnnotation(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, java.lang.String annotationTypeFqn, com.sun.tools.javac.tree.JCTree$JCExpression arg)/parameter/node",
                    "name": "node",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/node",
                        "name": "node",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 1511,
                            "startColumn": 72,
                            "endLine": 1511,
                            "endColumn": 76
                        }
                    },
                    "position": {
                        "startLine": 1550,
                        "startColumn": 63,
                        "endLine": 1550,
                        "endColumn": 67
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/addAnnotation(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, java.lang.String annotationTypeFqn, com.sun.tools.javac.tree.JCTree$JCExpression arg)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/addAnnotation(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, java.lang.String annotationTypeFqn, com.sun.tools.javac.tree.JCTree$JCExpression arg)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 1511,
                            "startColumn": 88,
                            "endLine": 1511,
                            "endColumn": 94
                        }
                    },
                    "position": {
                        "startLine": 1550,
                        "startColumn": 79,
                        "endLine": 1550,
                        "endColumn": 85
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)-accessdeprecatefieldtreeMakersetterNameparamNamebooleanFieldToSetmethodTypereturnStatementsourceonMethodonParam": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)-accessdeprecatefieldtreeMakersetterNameparamNamebooleanFieldToSetmethodTypereturnStatementsourceonMethodonParam",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "from_class_or_interface_name": "HandleSetter",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "from_method_name": "createSetter",
            "from_method_key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "to_class_or_interface_name": "HandleSetter",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "to_method_name": "createSetterWithRecv",
            "to_method_key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/access": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/access",
                    "name": "access",
                    "type": "long",
                    "displayedType": "long",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/access",
                        "name": "access",
                        "type": "long",
                        "displayedType": "long",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 55,
                            "endLine": 231,
                            "endColumn": 61
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 47,
                        "endLine": 227,
                        "endColumn": 53
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/deprecate": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 71,
                            "endLine": 231,
                            "endColumn": 80
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 63,
                        "endLine": 227,
                        "endColumn": 72
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/field": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/field",
                    "name": "field",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/field",
                        "name": "field",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 92,
                            "endLine": 231,
                            "endColumn": 97
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 84,
                        "endLine": 227,
                        "endColumn": 89
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/treeMaker": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/treeMaker",
                    "name": "treeMaker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/treeMaker",
                        "name": "treeMaker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 114,
                            "endLine": 231,
                            "endColumn": 123
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 106,
                        "endLine": 227,
                        "endColumn": 115
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/setterName": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/setterName",
                    "name": "setterName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/setterName",
                        "name": "setterName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 132,
                            "endLine": 231,
                            "endColumn": 142
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 124,
                        "endLine": 227,
                        "endColumn": 134
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/paramName": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/paramName",
                    "name": "paramName",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/paramName",
                        "name": "paramName",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 149,
                            "endLine": 231,
                            "endColumn": 158
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 141,
                        "endLine": 227,
                        "endColumn": 150
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/booleanFieldToSet": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/booleanFieldToSet",
                    "name": "booleanFieldToSet",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/booleanFieldToSet",
                        "name": "booleanFieldToSet",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 165,
                            "endLine": 231,
                            "endColumn": 182
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 157,
                        "endLine": 227,
                        "endColumn": 174
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/methodType": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/methodType",
                    "name": "methodType",
                    "type": "com.sun.tools.javac.tree.JCTree$JCExpression",
                    "displayedType": "JCExpression",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/methodType",
                        "name": "methodType",
                        "type": "com.sun.tools.javac.tree.JCTree$JCExpression",
                        "displayedType": "JCExpression",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 197,
                            "endLine": 231,
                            "endColumn": 207
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 189,
                        "endLine": 227,
                        "endColumn": 199
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/returnStatement": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/returnStatement",
                    "name": "returnStatement",
                    "type": "com.sun.tools.javac.tree.JCTree$JCStatement",
                    "displayedType": "JCStatement",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/returnStatement",
                        "name": "returnStatement",
                        "type": "com.sun.tools.javac.tree.JCTree$JCStatement",
                        "displayedType": "JCStatement",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 221,
                            "endLine": 231,
                            "endColumn": 236
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 213,
                        "endLine": 227,
                        "endColumn": 228
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 248,
                            "endLine": 231,
                            "endColumn": 254
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 240,
                        "endLine": 227,
                        "endColumn": 246
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 275,
                            "endLine": 231,
                            "endColumn": 283
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 267,
                        "endLine": 227,
                        "endColumn": 275
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                    "name": "onParam",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/onParam",
                        "name": "onParam",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 304,
                            "endLine": 231,
                            "endColumn": 311
                        }
                    },
                    "position": {
                        "startLine": 227,
                        "startColumn": 296,
                        "endLine": 227,
                        "endColumn": 303
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)-lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)-accessdeprecatefieldtreeMakersetterNameparamNamebooleanFieldToSetsourceonMethodonParamrecv": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)-lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)-accessdeprecatefieldtreeMakersetterNameparamNamebooleanFieldToSetsourceonMethodonParamrecv",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "from_class_or_interface_name": "HandleSetter",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "from_method_name": "createSetterWithRecv",
            "from_method_key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "to_class_or_interface_name": "HandleSetter",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "to_method_name": "createSetterWithRecv",
            "to_method_key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/access": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/access",
                    "name": "access",
                    "type": "long",
                    "displayedType": "long",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/access",
                        "name": "access",
                        "type": "long",
                        "displayedType": "long",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 55,
                            "endLine": 231,
                            "endColumn": 61
                        }
                    },
                    "position": {
                        "startLine": 214,
                        "startColumn": 55,
                        "endLine": 214,
                        "endColumn": 61
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/deprecate": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 71,
                            "endLine": 231,
                            "endColumn": 80
                        }
                    },
                    "position": {
                        "startLine": 214,
                        "startColumn": 71,
                        "endLine": 214,
                        "endColumn": 80
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/field": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/field",
                    "name": "field",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/field",
                        "name": "field",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 92,
                            "endLine": 231,
                            "endColumn": 97
                        }
                    },
                    "position": {
                        "startLine": 214,
                        "startColumn": 92,
                        "endLine": 214,
                        "endColumn": 97
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/treeMaker": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/treeMaker",
                    "name": "treeMaker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/treeMaker",
                        "name": "treeMaker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 114,
                            "endLine": 231,
                            "endColumn": 123
                        }
                    },
                    "position": {
                        "startLine": 214,
                        "startColumn": 114,
                        "endLine": 214,
                        "endColumn": 123
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/setterName": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/setterName",
                    "name": "setterName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/setterName",
                        "name": "setterName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 132,
                            "endLine": 231,
                            "endColumn": 142
                        }
                    },
                    "position": {
                        "startLine": 214,
                        "startColumn": 132,
                        "endLine": 214,
                        "endColumn": 142
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/paramName": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/paramName",
                    "name": "paramName",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/paramName",
                        "name": "paramName",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 149,
                            "endLine": 231,
                            "endColumn": 158
                        }
                    },
                    "position": {
                        "startLine": 214,
                        "startColumn": 149,
                        "endLine": 214,
                        "endColumn": 158
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/booleanFieldToSet": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/booleanFieldToSet",
                    "name": "booleanFieldToSet",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/booleanFieldToSet",
                        "name": "booleanFieldToSet",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 165,
                            "endLine": 231,
                            "endColumn": 182
                        }
                    },
                    "position": {
                        "startLine": 214,
                        "startColumn": 165,
                        "endLine": 214,
                        "endColumn": 182
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 248,
                            "endLine": 231,
                            "endColumn": 254
                        }
                    },
                    "position": {
                        "startLine": 214,
                        "startColumn": 220,
                        "endLine": 214,
                        "endColumn": 226
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/onMethod": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 275,
                            "endLine": 231,
                            "endColumn": 283
                        }
                    },
                    "position": {
                        "startLine": 214,
                        "startColumn": 247,
                        "endLine": 214,
                        "endColumn": 255
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/onParam": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/onParam",
                    "name": "onParam",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/onParam",
                        "name": "onParam",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 304,
                            "endLine": 231,
                            "endColumn": 311
                        }
                    },
                    "position": {
                        "startLine": 214,
                        "startColumn": 276,
                        "endLine": 214,
                        "endColumn": 283
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/recv": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/recv",
                    "name": "recv",
                    "type": "com.sun.tools.javac.tree.JCTree$JCVariableDecl",
                    "displayedType": "JCVariableDecl",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, com.sun.tools.javac.tree.JCTree$JCExpression methodType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/recv",
                        "name": "recv",
                        "type": "com.sun.tools.javac.tree.JCTree$JCVariableDecl",
                        "displayedType": "JCVariableDecl",
                        "modifiers": [],
                        "position": {
                            "startLine": 231,
                            "startColumn": 328,
                            "endLine": 231,
                            "endColumn": 332
                        }
                    },
                    "position": {
                        "startLine": 214,
                        "startColumn": 300,
                        "endLine": 214,
                        "endColumn": 304
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)-accessdeprecatefieldtreeMakersetterNameparamNamebooleanFieldToSetshouldReturnThissourceonMethodonParam": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)-accessdeprecatefieldtreeMakersetterNameparamNamebooleanFieldToSetshouldReturnThissourceonMethodonParam",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "from_class_or_interface_name": "HandleSetter",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "from_method_name": "createSetter",
            "from_method_key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "to_class_or_interface_name": "HandleSetter",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "to_method_name": "createSetterWithRecv",
            "to_method_key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/access": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/access",
                    "name": "access",
                    "type": "long",
                    "displayedType": "long",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/access",
                        "name": "access",
                        "type": "long",
                        "displayedType": "long",
                        "modifiers": [],
                        "position": {
                            "startLine": 214,
                            "startColumn": 55,
                            "endLine": 214,
                            "endColumn": 61
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 47,
                        "endLine": 202,
                        "endColumn": 53
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/deprecate": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 214,
                            "startColumn": 71,
                            "endLine": 214,
                            "endColumn": 80
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 63,
                        "endLine": 202,
                        "endColumn": 72
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/field": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/field",
                    "name": "field",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/field",
                        "name": "field",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 214,
                            "startColumn": 92,
                            "endLine": 214,
                            "endColumn": 97
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 84,
                        "endLine": 202,
                        "endColumn": 89
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/treeMaker": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/treeMaker",
                    "name": "treeMaker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/treeMaker",
                        "name": "treeMaker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 214,
                            "startColumn": 114,
                            "endLine": 214,
                            "endColumn": 123
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 106,
                        "endLine": 202,
                        "endColumn": 115
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/setterName": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/setterName",
                    "name": "setterName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/setterName",
                        "name": "setterName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 214,
                            "startColumn": 132,
                            "endLine": 214,
                            "endColumn": 142
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 124,
                        "endLine": 202,
                        "endColumn": 134
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/paramName": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/paramName",
                    "name": "paramName",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/paramName",
                        "name": "paramName",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 214,
                            "startColumn": 149,
                            "endLine": 214,
                            "endColumn": 158
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 141,
                        "endLine": 202,
                        "endColumn": 150
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/booleanFieldToSet": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/booleanFieldToSet",
                    "name": "booleanFieldToSet",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/booleanFieldToSet",
                        "name": "booleanFieldToSet",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 214,
                            "startColumn": 165,
                            "endLine": 214,
                            "endColumn": 182
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 157,
                        "endLine": 202,
                        "endColumn": 174
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/shouldReturnThis": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/shouldReturnThis",
                    "name": "shouldReturnThis",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/shouldReturnThis",
                        "name": "shouldReturnThis",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 214,
                            "startColumn": 192,
                            "endLine": 214,
                            "endColumn": 208
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 184,
                        "endLine": 202,
                        "endColumn": 200
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 214,
                            "startColumn": 220,
                            "endLine": 214,
                            "endColumn": 226
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 212,
                        "endLine": 202,
                        "endColumn": 218
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 214,
                            "startColumn": 247,
                            "endLine": 214,
                            "endColumn": 255
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 239,
                        "endLine": 202,
                        "endColumn": 247
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetter(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                    "name": "onParam",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/createSetterWithRecv(long access, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode field, lombok.javac.handlers.lombok.javac.JavacTreeMaker treeMaker, java.lang.String setterName, com.sun.tools.javac.util.Name paramName, com.sun.tools.javac.util.Name booleanFieldToSet, boolean shouldReturnThis, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam, com.sun.tools.javac.tree.JCTree$JCVariableDecl recv)/parameter/onParam",
                        "name": "onParam",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 214,
                            "startColumn": 276,
                            "endLine": 214,
                            "endColumn": 283
                        }
                    },
                    "position": {
                        "startLine": 202,
                        "startColumn": 268,
                        "endLine": 202,
                        "endColumn": 275
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleSetter.java-lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)-lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)-parentdeprecatefieldNodenameparamNamebooleanFieldToSetmodifiersourceNodeonMethodonParam": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleSetter.java-lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)-lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)-parentdeprecatefieldNodenameparamNamebooleanFieldToSetmodifiersourceNodeonMethodonParam",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleSetter.java",
            "from_class_or_interface_name": "HandleSetter",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleSetter",
            "from_method_name": "createSetter",
            "from_method_key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleSetter.java",
            "to_class_or_interface_name": "HandleSetter",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleSetter",
            "to_method_name": "createSetter",
            "to_method_key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/parent": {
                    "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/parent",
                    "name": "parent",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration",
                    "displayedType": "TypeDeclaration",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/parent",
                        "name": "parent",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration",
                        "displayedType": "TypeDeclaration",
                        "modifiers": [],
                        "position": {
                            "startLine": 211,
                            "startColumn": 56,
                            "endLine": 211,
                            "endColumn": 62
                        }
                    },
                    "position": {
                        "startLine": 194,
                        "startColumn": 56,
                        "endLine": 194,
                        "endColumn": 62
                    }
                },
                "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/deprecate": {
                    "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 211,
                            "startColumn": 72,
                            "endLine": 211,
                            "endColumn": 81
                        }
                    },
                    "position": {
                        "startLine": 194,
                        "startColumn": 72,
                        "endLine": 194,
                        "endColumn": 81
                    }
                },
                "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/fieldNode": {
                    "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/fieldNode",
                    "name": "fieldNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/fieldNode",
                        "name": "fieldNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 211,
                            "startColumn": 95,
                            "endLine": 211,
                            "endColumn": 104
                        }
                    },
                    "position": {
                        "startLine": 194,
                        "startColumn": 95,
                        "endLine": 194,
                        "endColumn": 104
                    }
                },
                "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/name": {
                    "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/name",
                    "name": "name",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/name",
                        "name": "name",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 211,
                            "startColumn": 113,
                            "endLine": 211,
                            "endColumn": 117
                        }
                    },
                    "position": {
                        "startLine": 194,
                        "startColumn": 113,
                        "endLine": 194,
                        "endColumn": 117
                    }
                },
                "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/paramName": {
                    "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/paramName",
                    "name": "paramName",
                    "type": "char[]",
                    "displayedType": "char[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/paramName",
                        "name": "paramName",
                        "type": "char[]",
                        "displayedType": "char[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 211,
                            "startColumn": 126,
                            "endLine": 211,
                            "endColumn": 135
                        }
                    },
                    "position": {
                        "startLine": 194,
                        "startColumn": 126,
                        "endLine": 194,
                        "endColumn": 135
                    }
                },
                "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/booleanFieldToSet": {
                    "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/booleanFieldToSet",
                    "name": "booleanFieldToSet",
                    "type": "char[]",
                    "displayedType": "char[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/booleanFieldToSet",
                        "name": "booleanFieldToSet",
                        "type": "char[]",
                        "displayedType": "char[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 211,
                            "startColumn": 144,
                            "endLine": 211,
                            "endColumn": 161
                        }
                    },
                    "position": {
                        "startLine": 194,
                        "startColumn": 144,
                        "endLine": 194,
                        "endColumn": 161
                    }
                },
                "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/modifier": {
                    "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/modifier",
                    "name": "modifier",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/modifier",
                        "name": "modifier",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 211,
                            "startColumn": 220,
                            "endLine": 211,
                            "endColumn": 228
                        }
                    },
                    "position": {
                        "startLine": 194,
                        "startColumn": 193,
                        "endLine": 194,
                        "endColumn": 201
                    }
                },
                "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/sourceNode": {
                    "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/sourceNode",
                    "name": "sourceNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/sourceNode",
                        "name": "sourceNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 211,
                            "startColumn": 242,
                            "endLine": 211,
                            "endColumn": 252
                        }
                    },
                    "position": {
                        "startLine": 194,
                        "startColumn": 215,
                        "endLine": 194,
                        "endColumn": 225
                    }
                },
                "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/onMethod": {
                    "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                    "displayedType": "List<Annotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                        "displayedType": "List<Annotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 211,
                            "startColumn": 271,
                            "endLine": 211,
                            "endColumn": 279
                        }
                    },
                    "position": {
                        "startLine": 194,
                        "startColumn": 244,
                        "endLine": 194,
                        "endColumn": 252
                    }
                },
                "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/onParam": {
                    "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, boolean shouldReturnThis, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/onParam",
                    "name": "onParam",
                    "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                    "displayedType": "List<Annotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleSetter/method/createSetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, boolean deprecate, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, char[] paramName, char[] booleanFieldToSet, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference returnType, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Statement returnStatement, int modifier, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/onParam",
                        "name": "onParam",
                        "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                        "displayedType": "List<Annotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 211,
                            "startColumn": 298,
                            "endLine": 211,
                            "endColumn": 305
                        }
                    },
                    "position": {
                        "startLine": 194,
                        "startColumn": 271,
                        "endLine": 194,
                        "endColumn": 278
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-cfvdeprecatemakerreturnTypereturnStatementdatabuilderTypesourcefluentaccess": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)-cfvdeprecatemakerreturnTypereturnStatementdatabuilderTypesourcefluentaccess",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "generateSingularMethod",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "generatePluralMethod",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv",
                    "name": "cfv",
                    "type": "lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion",
                    "displayedType": "CheckerFrameworkVersion",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv",
                        "name": "cfv",
                        "type": "lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion",
                        "displayedType": "CheckerFrameworkVersion",
                        "modifiers": [],
                        "position": {
                            "startLine": 341,
                            "startColumn": 61,
                            "endLine": 341,
                            "endColumn": 64
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 63,
                        "endLine": 309,
                        "endColumn": 66
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 341,
                            "startColumn": 74,
                            "endLine": 341,
                            "endColumn": 83
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 76,
                        "endLine": 309,
                        "endColumn": 85
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/maker": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/maker",
                    "name": "maker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/maker",
                        "name": "maker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 341,
                            "startColumn": 100,
                            "endLine": 341,
                            "endColumn": 105
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 102,
                        "endLine": 309,
                        "endColumn": 107
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnType",
                    "name": "returnType",
                    "type": "com.sun.tools.javac.tree.JCTree$JCExpression",
                    "displayedType": "JCExpression",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnType",
                        "name": "returnType",
                        "type": "com.sun.tools.javac.tree.JCTree$JCExpression",
                        "displayedType": "JCExpression",
                        "modifiers": [],
                        "position": {
                            "startLine": 341,
                            "startColumn": 120,
                            "endLine": 341,
                            "endColumn": 130
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 122,
                        "endLine": 309,
                        "endColumn": 132
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnStatement": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnStatement",
                    "name": "returnStatement",
                    "type": "com.sun.tools.javac.tree.JCTree$JCStatement",
                    "displayedType": "JCStatement",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnStatement",
                        "name": "returnStatement",
                        "type": "com.sun.tools.javac.tree.JCTree$JCStatement",
                        "displayedType": "JCStatement",
                        "modifiers": [],
                        "position": {
                            "startLine": 341,
                            "startColumn": 144,
                            "endLine": 341,
                            "endColumn": 159
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 146,
                        "endLine": 309,
                        "endColumn": 161
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data",
                    "name": "data",
                    "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data",
                        "name": "data",
                        "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 341,
                            "startColumn": 174,
                            "endLine": 341,
                            "endColumn": 178
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 176,
                        "endLine": 309,
                        "endColumn": 180
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 341,
                            "startColumn": 190,
                            "endLine": 341,
                            "endColumn": 201
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 192,
                        "endLine": 309,
                        "endColumn": 203
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 341,
                            "startColumn": 213,
                            "endLine": 341,
                            "endColumn": 219
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 215,
                        "endLine": 309,
                        "endColumn": 221
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/fluent": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/fluent",
                    "name": "fluent",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/fluent",
                        "name": "fluent",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 341,
                            "startColumn": 229,
                            "endLine": 341,
                            "endColumn": 235
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 231,
                        "endLine": 309,
                        "endColumn": 237
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateSingularMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access",
                    "name": "access",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generatePluralMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access",
                        "name": "access",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 341,
                            "startColumn": 249,
                            "endLine": 341,
                            "endColumn": 255
                        }
                    },
                    "position": {
                        "startLine": 309,
                        "startColumn": 251,
                        "endLine": 309,
                        "endColumn": 257
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)-cfvdatadeprecatebuilderTypesourcefluentreturnTypeMakerreturnStatementMakeraccess": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)-cfvdatadeprecatebuilderTypesourcefluentreturnTypeMakerreturnStatementMakeraccess",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "doGenerateMethods",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "generateMethods",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv",
                    "name": "cfv",
                    "type": "lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion",
                    "displayedType": "CheckerFrameworkVersion",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/cfv",
                        "name": "cfv",
                        "type": "lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion",
                        "displayedType": "CheckerFrameworkVersion",
                        "modifiers": [],
                        "position": {
                            "startLine": 267,
                            "startColumn": 64,
                            "endLine": 267,
                            "endColumn": 67
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 60,
                        "endLine": 269,
                        "endColumn": 63
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data",
                    "name": "data",
                    "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/data",
                        "name": "data",
                        "type": "lombok.javac.handlers.JavacSingularsRecipes$SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 267,
                            "startColumn": 82,
                            "endLine": 267,
                            "endColumn": 86
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 78,
                        "endLine": 269,
                        "endColumn": 82
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 267,
                            "startColumn": 96,
                            "endLine": 267,
                            "endColumn": 105
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 92,
                        "endLine": 269,
                        "endColumn": 101
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 267,
                            "startColumn": 117,
                            "endLine": 267,
                            "endColumn": 128
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 113,
                        "endLine": 269,
                        "endColumn": 124
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 267,
                            "startColumn": 140,
                            "endLine": 267,
                            "endColumn": 146
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 136,
                        "endLine": 269,
                        "endColumn": 142
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/fluent": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/fluent",
                    "name": "fluent",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/fluent",
                        "name": "fluent",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 267,
                            "startColumn": 156,
                            "endLine": 267,
                            "endColumn": 162
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 152,
                        "endLine": 269,
                        "endColumn": 158
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnTypeMaker": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnTypeMaker",
                    "name": "returnTypeMaker",
                    "type": "lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker",
                    "displayedType": "ExpressionMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnTypeMaker",
                        "name": "returnTypeMaker",
                        "type": "lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker",
                        "displayedType": "ExpressionMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 267,
                            "startColumn": 180,
                            "endLine": 267,
                            "endColumn": 195
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 176,
                        "endLine": 269,
                        "endColumn": 191
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnStatementMaker": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnStatementMaker",
                    "name": "returnStatementMaker",
                    "type": "lombok.javac.handlers.JavacSingularsRecipes$StatementMaker",
                    "displayedType": "StatementMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/returnStatementMaker",
                        "name": "returnStatementMaker",
                        "type": "lombok.javac.handlers.JavacSingularsRecipes$StatementMaker",
                        "displayedType": "StatementMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 267,
                            "startColumn": 212,
                            "endLine": 267,
                            "endColumn": 232
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 208,
                        "endLine": 269,
                        "endColumn": 228
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/doGenerateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access",
                    "name": "access",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/generateMethods(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, boolean deprecate, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean fluent, lombok.javac.handlers.JavacSingularsRecipes$ExpressionMaker returnTypeMaker, lombok.javac.handlers.JavacSingularsRecipes$StatementMaker returnStatementMaker, lombok.javac.handlers.lombok.AccessLevel access)/parameter/access",
                        "name": "access",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 267,
                            "startColumn": 246,
                            "endLine": 267,
                            "endColumn": 252
                        }
                    },
                    "position": {
                        "startLine": 269,
                        "startColumn": 242,
                        "endLine": 269,
                        "endColumn": 248
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleConstructor.java-lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-lombok.eclipse.handlers.HandleConstructor/method/generate(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, boolean noArgs)-typeNodelevelfieldsToParamforceDefaultsstaticNameskipIfConstructorExistsonConstructorsourceNode": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleConstructor.java-lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)-lombok.eclipse.handlers.HandleConstructor/method/generate(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, boolean noArgs)-typeNodelevelfieldsToParamforceDefaultsstaticNameskipIfConstructorExistsonConstructorsourceNode",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleConstructor.java",
            "from_class_or_interface_name": "HandleConstructor",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleConstructor",
            "from_method_name": "generateConstructor",
            "from_method_key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleConstructor.java",
            "to_class_or_interface_name": "HandleConstructor",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleConstructor",
            "to_method_name": "generate",
            "to_method_key": "lombok.eclipse.handlers.HandleConstructor/method/generate(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, boolean noArgs)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/typeNode": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generate(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, boolean noArgs)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 250,
                            "startColumn": 16,
                            "endLine": 250,
                            "endColumn": 24
                        }
                    },
                    "position": {
                        "startLine": 243,
                        "startColumn": 15,
                        "endLine": 243,
                        "endColumn": 23
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/level": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/level",
                    "name": "level",
                    "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generate(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, boolean noArgs)/parameter/level",
                        "name": "level",
                        "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 250,
                            "startColumn": 38,
                            "endLine": 250,
                            "endColumn": 43
                        }
                    },
                    "position": {
                        "startLine": 243,
                        "startColumn": 37,
                        "endLine": 243,
                        "endColumn": 42
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/fieldsToParam": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/fieldsToParam",
                    "name": "fieldsToParam",
                    "type": "java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode>",
                    "displayedType": "List<EclipseNode>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generate(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, boolean noArgs)/parameter/fieldsToParam",
                        "name": "fieldsToParam",
                        "type": "java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode>",
                        "displayedType": "List<EclipseNode>",
                        "modifiers": [],
                        "position": {
                            "startLine": 250,
                            "startColumn": 63,
                            "endLine": 250,
                            "endColumn": 76
                        }
                    },
                    "position": {
                        "startLine": 243,
                        "startColumn": 62,
                        "endLine": 243,
                        "endColumn": 75
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/forceDefaults": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/forceDefaults",
                    "name": "forceDefaults",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generate(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, boolean noArgs)/parameter/forceDefaults",
                        "name": "forceDefaults",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 250,
                            "startColumn": 86,
                            "endLine": 250,
                            "endColumn": 99
                        }
                    },
                    "position": {
                        "startLine": 243,
                        "startColumn": 85,
                        "endLine": 243,
                        "endColumn": 98
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/staticName": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/staticName",
                    "name": "staticName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generate(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, boolean noArgs)/parameter/staticName",
                        "name": "staticName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 250,
                            "startColumn": 108,
                            "endLine": 250,
                            "endColumn": 118
                        }
                    },
                    "position": {
                        "startLine": 243,
                        "startColumn": 107,
                        "endLine": 243,
                        "endColumn": 117
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/skipIfConstructorExists": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/skipIfConstructorExists",
                    "name": "skipIfConstructorExists",
                    "type": "lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists",
                    "displayedType": "SkipIfConstructorExists",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generate(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, boolean noArgs)/parameter/skipIfConstructorExists",
                        "name": "skipIfConstructorExists",
                        "type": "lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists",
                        "displayedType": "SkipIfConstructorExists",
                        "modifiers": [],
                        "position": {
                            "startLine": 250,
                            "startColumn": 144,
                            "endLine": 250,
                            "endColumn": 167
                        }
                    },
                    "position": {
                        "startLine": 243,
                        "startColumn": 143,
                        "endLine": 243,
                        "endColumn": 166
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/onConstructor": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/onConstructor",
                    "name": "onConstructor",
                    "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                    "displayedType": "List<Annotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generate(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, boolean noArgs)/parameter/onConstructor",
                        "name": "onConstructor",
                        "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                        "displayedType": "List<Annotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 251,
                            "startColumn": 21,
                            "endLine": 251,
                            "endColumn": 34
                        }
                    },
                    "position": {
                        "startLine": 244,
                        "startColumn": 20,
                        "endLine": 244,
                        "endColumn": 33
                    }
                },
                "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/sourceNode": {
                    "key": "lombok.eclipse.handlers.HandleConstructor/method/generateConstructor(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode)/parameter/sourceNode",
                    "name": "sourceNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleConstructor/method/generate(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldsToParam, boolean forceDefaults, java.lang.String staticName, lombok.eclipse.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onConstructor, lombok.eclipse.handlers.lombok.eclipse.EclipseNode sourceNode, boolean noArgs)/parameter/sourceNode",
                        "name": "sourceNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 251,
                            "startColumn": 48,
                            "endLine": 251,
                            "endColumn": 58
                        }
                    },
                    "position": {
                        "startLine": 244,
                        "startColumn": 47,
                        "endLine": 244,
                        "endColumn": 57
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/utils/lombok/javac/JavacTreeMaker.java-lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)-lombok.javac.JavacTreeMaker/method/MethodDefWithRecvParam(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCVariableDecl recvparam, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)-modsnameresTypetyparamsparamsthrownbodydefaultValue": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/utils/lombok/javac/JavacTreeMaker.java-lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)-lombok.javac.JavacTreeMaker/method/MethodDefWithRecvParam(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCVariableDecl recvparam, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)-modsnameresTypetyparamsparamsthrownbodydefaultValue",
            "probability": 1,
            "from_file_path": "src/utils/lombok/javac/JavacTreeMaker.java",
            "from_class_or_interface_name": "JavacTreeMaker",
            "from_class_or_interface_key": "lombok.javac.JavacTreeMaker",
            "from_method_name": "MethodDef",
            "from_method_key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)",
            "to_file_path": "src/utils/lombok/javac/JavacTreeMaker.java",
            "to_class_or_interface_name": "JavacTreeMaker",
            "to_class_or_interface_key": "lombok.javac.JavacTreeMaker",
            "to_method_name": "MethodDefWithRecvParam",
            "to_method_key": "lombok.javac.JavacTreeMaker/method/MethodDefWithRecvParam(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCVariableDecl recvparam, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/mods": {
                    "key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/mods",
                    "name": "mods",
                    "type": "com.sun.tools.javac.tree.JCTree$JCModifiers",
                    "displayedType": "JCModifiers",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacTreeMaker/method/MethodDefWithRecvParam(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCVariableDecl recvparam, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/mods",
                        "name": "mods",
                        "type": "com.sun.tools.javac.tree.JCTree$JCModifiers",
                        "displayedType": "JCModifiers",
                        "modifiers": [],
                        "position": {
                            "startLine": 521,
                            "startColumn": 57,
                            "endLine": 521,
                            "endColumn": 61
                        }
                    },
                    "position": {
                        "startLine": 511,
                        "startColumn": 44,
                        "endLine": 511,
                        "endColumn": 48
                    }
                },
                "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/name": {
                    "key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/name",
                    "name": "name",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacTreeMaker/method/MethodDefWithRecvParam(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCVariableDecl recvparam, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/name",
                        "name": "name",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 521,
                            "startColumn": 68,
                            "endLine": 521,
                            "endColumn": 72
                        }
                    },
                    "position": {
                        "startLine": 511,
                        "startColumn": 55,
                        "endLine": 511,
                        "endColumn": 59
                    }
                },
                "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/resType": {
                    "key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/resType",
                    "name": "resType",
                    "type": "com.sun.tools.javac.tree.JCTree$JCExpression",
                    "displayedType": "JCExpression",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacTreeMaker/method/MethodDefWithRecvParam(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCVariableDecl recvparam, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/resType",
                        "name": "resType",
                        "type": "com.sun.tools.javac.tree.JCTree$JCExpression",
                        "displayedType": "JCExpression",
                        "modifiers": [],
                        "position": {
                            "startLine": 521,
                            "startColumn": 87,
                            "endLine": 521,
                            "endColumn": 94
                        }
                    },
                    "position": {
                        "startLine": 511,
                        "startColumn": 74,
                        "endLine": 511,
                        "endColumn": 81
                    }
                },
                "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/typarams": {
                    "key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/typarams",
                    "name": "typarams",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter>",
                    "displayedType": "List<JCTypeParameter>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacTreeMaker/method/MethodDefWithRecvParam(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCVariableDecl recvparam, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/typarams",
                        "name": "typarams",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter>",
                        "displayedType": "List<JCTypeParameter>",
                        "modifiers": [],
                        "position": {
                            "startLine": 521,
                            "startColumn": 118,
                            "endLine": 521,
                            "endColumn": 126
                        }
                    },
                    "position": {
                        "startLine": 511,
                        "startColumn": 105,
                        "endLine": 511,
                        "endColumn": 113
                    }
                },
                "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/params": {
                    "key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/params",
                    "name": "params",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl>",
                    "displayedType": "List<JCVariableDecl>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacTreeMaker/method/MethodDefWithRecvParam(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCVariableDecl recvparam, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/params",
                        "name": "params",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl>",
                        "displayedType": "List<JCVariableDecl>",
                        "modifiers": [],
                        "position": {
                            "startLine": 521,
                            "startColumn": 175,
                            "endLine": 521,
                            "endColumn": 181
                        }
                    },
                    "position": {
                        "startLine": 511,
                        "startColumn": 136,
                        "endLine": 511,
                        "endColumn": 142
                    }
                },
                "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/thrown": {
                    "key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/thrown",
                    "name": "thrown",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression>",
                    "displayedType": "List<JCExpression>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacTreeMaker/method/MethodDefWithRecvParam(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCVariableDecl recvparam, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/thrown",
                        "name": "thrown",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression>",
                        "displayedType": "List<JCExpression>",
                        "modifiers": [],
                        "position": {
                            "startLine": 521,
                            "startColumn": 202,
                            "endLine": 521,
                            "endColumn": 208
                        }
                    },
                    "position": {
                        "startLine": 511,
                        "startColumn": 163,
                        "endLine": 511,
                        "endColumn": 169
                    }
                },
                "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/body": {
                    "key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/body",
                    "name": "body",
                    "type": "com.sun.tools.javac.tree.JCTree$JCBlock",
                    "displayedType": "JCBlock",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacTreeMaker/method/MethodDefWithRecvParam(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCVariableDecl recvparam, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/body",
                        "name": "body",
                        "type": "com.sun.tools.javac.tree.JCTree$JCBlock",
                        "displayedType": "JCBlock",
                        "modifiers": [],
                        "position": {
                            "startLine": 521,
                            "startColumn": 218,
                            "endLine": 521,
                            "endColumn": 222
                        }
                    },
                    "position": {
                        "startLine": 511,
                        "startColumn": 179,
                        "endLine": 511,
                        "endColumn": 183
                    }
                },
                "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/defaultValue": {
                    "key": "lombok.javac.JavacTreeMaker/method/MethodDef(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/defaultValue",
                    "name": "defaultValue",
                    "type": "com.sun.tools.javac.tree.JCTree$JCExpression",
                    "displayedType": "JCExpression",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacTreeMaker/method/MethodDefWithRecvParam(com.sun.tools.javac.tree.JCTree$JCModifiers mods, com.sun.tools.javac.util.Name name, com.sun.tools.javac.tree.JCTree$JCExpression resType, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> typarams, com.sun.tools.javac.tree.JCTree$JCVariableDecl recvparam, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> thrown, com.sun.tools.javac.tree.JCTree$JCBlock body, com.sun.tools.javac.tree.JCTree$JCExpression defaultValue)/parameter/defaultValue",
                        "name": "defaultValue",
                        "type": "com.sun.tools.javac.tree.JCTree$JCExpression",
                        "displayedType": "JCExpression",
                        "modifiers": [],
                        "position": {
                            "startLine": 521,
                            "startColumn": 237,
                            "endLine": 521,
                            "endColumn": 249
                        }
                    },
                    "position": {
                        "startLine": 511,
                        "startColumn": 198,
                        "endLine": 511,
                        "endColumn": 210
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/generate(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source, boolean noArgs)-typeNodelevelonConstructorfieldsallToDefaultstaticNameskipIfConstructorExistssource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleConstructor.java-lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleConstructor/method/generate(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source, boolean noArgs)-typeNodelevelonConstructorfieldsallToDefaultstaticNameskipIfConstructorExistssource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "from_class_or_interface_name": "HandleConstructor",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "from_method_name": "generateConstructor",
            "from_method_key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleConstructor.java",
            "to_class_or_interface_name": "HandleConstructor",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleConstructor",
            "to_method_name": "generate",
            "to_method_key": "lombok.javac.handlers.HandleConstructor/method/generate(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source, boolean noArgs)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generate(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source, boolean noArgs)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 34,
                            "endLine": 223,
                            "endColumn": 42
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 44,
                        "endLine": 219,
                        "endColumn": 52
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/level",
                    "name": "level",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generate(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source, boolean noArgs)/parameter/level",
                        "name": "level",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 56,
                            "endLine": 223,
                            "endColumn": 61
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 66,
                        "endLine": 219,
                        "endColumn": 71
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/onConstructor": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/onConstructor",
                    "name": "onConstructor",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generate(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source, boolean noArgs)/parameter/onConstructor",
                        "name": "onConstructor",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 82,
                            "endLine": 223,
                            "endColumn": 95
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 92,
                        "endLine": 219,
                        "endColumn": 105
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/fields": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/fields",
                    "name": "fields",
                    "type": "com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode>",
                    "displayedType": "List<JavacNode>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generate(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source, boolean noArgs)/parameter/fields",
                        "name": "fields",
                        "type": "com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode>",
                        "displayedType": "List<JavacNode>",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 113,
                            "endLine": 223,
                            "endColumn": 119
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 123,
                        "endLine": 219,
                        "endColumn": 129
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/allToDefault": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/allToDefault",
                    "name": "allToDefault",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generate(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source, boolean noArgs)/parameter/allToDefault",
                        "name": "allToDefault",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 129,
                            "endLine": 223,
                            "endColumn": 141
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 139,
                        "endLine": 219,
                        "endColumn": 151
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/staticName": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/staticName",
                    "name": "staticName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generate(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source, boolean noArgs)/parameter/staticName",
                        "name": "staticName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 150,
                            "endLine": 223,
                            "endColumn": 160
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 160,
                        "endLine": 219,
                        "endColumn": 170
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/skipIfConstructorExists": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/skipIfConstructorExists",
                    "name": "skipIfConstructorExists",
                    "type": "lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists",
                    "displayedType": "SkipIfConstructorExists",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generate(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source, boolean noArgs)/parameter/skipIfConstructorExists",
                        "name": "skipIfConstructorExists",
                        "type": "lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists",
                        "displayedType": "SkipIfConstructorExists",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 186,
                            "endLine": 223,
                            "endColumn": 209
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 196,
                        "endLine": 219,
                        "endColumn": 219
                    }
                },
                "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleConstructor/method/generateConstructor(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleConstructor/method/generate(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onConstructor, com.sun.tools.javac.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean allToDefault, java.lang.String staticName, lombok.javac.handlers.HandleConstructor$SkipIfConstructorExists skipIfConstructorExists, lombok.javac.handlers.lombok.javac.JavacNode source, boolean noArgs)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 221,
                            "endLine": 223,
                            "endColumn": 227
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 231,
                        "endLine": 219,
                        "endColumn": 237
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/core/handlers/HandlerUtil.java-lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)-lombok.core.handlers.HandlerUtil/method/toAllAccessorNames(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)-astaccessorsfieldNameisBooleanbooleanPrefixnormalPrefixadhereToFluent": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/core/handlers/HandlerUtil.java-lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)-lombok.core.handlers.HandlerUtil/method/toAllAccessorNames(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)-astaccessorsfieldNameisBooleanbooleanPrefixnormalPrefixadhereToFluent",
            "probability": 1,
            "from_file_path": "src/core/lombok/core/handlers/HandlerUtil.java",
            "from_class_or_interface_name": "HandlerUtil",
            "from_class_or_interface_key": "lombok.core.handlers.HandlerUtil",
            "from_method_name": "toAccessorName",
            "from_method_key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)",
            "to_file_path": "src/core/lombok/core/handlers/HandlerUtil.java",
            "to_class_or_interface_name": "HandlerUtil",
            "to_class_or_interface_key": "lombok.core.handlers.HandlerUtil",
            "to_method_name": "toAllAccessorNames",
            "to_method_key": "lombok.core.handlers.HandlerUtil/method/toAllAccessorNames(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/ast": {
                    "key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/ast",
                    "name": "ast",
                    "type": "lombok.core.handlers.lombok.core.AST<?, ?, ?>",
                    "displayedType": "AST<?, ?, ?>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/toAllAccessorNames(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/ast",
                        "name": "ast",
                        "type": "lombok.core.handlers.lombok.core.AST<?, ?, ?>",
                        "displayedType": "AST<?, ?, ?>",
                        "modifiers": [],
                        "position": {
                            "startLine": 788,
                            "startColumn": 62,
                            "endLine": 788,
                            "endColumn": 65
                        }
                    },
                    "position": {
                        "startLine": 698,
                        "startColumn": 52,
                        "endLine": 698,
                        "endColumn": 55
                    }
                },
                "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/accessors": {
                    "key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/accessors",
                    "name": "accessors",
                    "type": "lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors>",
                    "displayedType": "AnnotationValues<Accessors>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/toAllAccessorNames(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/accessors",
                        "name": "accessors",
                        "type": "lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors>",
                        "displayedType": "AnnotationValues<Accessors>",
                        "modifiers": [],
                        "position": {
                            "startLine": 788,
                            "startColumn": 95,
                            "endLine": 788,
                            "endColumn": 104
                        }
                    },
                    "position": {
                        "startLine": 698,
                        "startColumn": 85,
                        "endLine": 698,
                        "endColumn": 94
                    }
                },
                "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/fieldName": {
                    "key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/fieldName",
                    "name": "fieldName",
                    "type": "java.lang.CharSequence",
                    "displayedType": "CharSequence",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/toAllAccessorNames(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/fieldName",
                        "name": "fieldName",
                        "type": "java.lang.CharSequence",
                        "displayedType": "CharSequence",
                        "modifiers": [],
                        "position": {
                            "startLine": 788,
                            "startColumn": 119,
                            "endLine": 788,
                            "endColumn": 128
                        }
                    },
                    "position": {
                        "startLine": 698,
                        "startColumn": 109,
                        "endLine": 698,
                        "endColumn": 118
                    }
                },
                "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/isBoolean": {
                    "key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/isBoolean",
                    "name": "isBoolean",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/toAllAccessorNames(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/isBoolean",
                        "name": "isBoolean",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 788,
                            "startColumn": 138,
                            "endLine": 788,
                            "endColumn": 147
                        }
                    },
                    "position": {
                        "startLine": 698,
                        "startColumn": 128,
                        "endLine": 698,
                        "endColumn": 137
                    }
                },
                "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/booleanPrefix": {
                    "key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/booleanPrefix",
                    "name": "booleanPrefix",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/toAllAccessorNames(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/booleanPrefix",
                        "name": "booleanPrefix",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 789,
                            "startColumn": 11,
                            "endLine": 789,
                            "endColumn": 24
                        }
                    },
                    "position": {
                        "startLine": 699,
                        "startColumn": 11,
                        "endLine": 699,
                        "endColumn": 24
                    }
                },
                "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/normalPrefix": {
                    "key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/normalPrefix",
                    "name": "normalPrefix",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/toAllAccessorNames(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/normalPrefix",
                        "name": "normalPrefix",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 789,
                            "startColumn": 33,
                            "endLine": 789,
                            "endColumn": 45
                        }
                    },
                    "position": {
                        "startLine": 699,
                        "startColumn": 33,
                        "endLine": 699,
                        "endColumn": 45
                    }
                },
                "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/adhereToFluent": {
                    "key": "lombok.core.handlers.HandlerUtil/method/toAccessorName(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/adhereToFluent",
                    "name": "adhereToFluent",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/toAllAccessorNames(lombok.core.handlers.lombok.core.AST<?, ?, ?> ast, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.experimental.Accessors> accessors, java.lang.CharSequence fieldName, boolean isBoolean, java.lang.String booleanPrefix, java.lang.String normalPrefix, boolean adhereToFluent)/parameter/adhereToFluent",
                        "name": "adhereToFluent",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 789,
                            "startColumn": 55,
                            "endLine": 789,
                            "endColumn": 69
                        }
                    },
                    "position": {
                        "startLine": 699,
                        "startColumn": 55,
                        "endLine": 699,
                        "endColumn": 69
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/core/handlers/InclusionExclusionUtils.java-lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)-lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)-inclTypereplaceNameexclTypetypeNodeannotationannotationNodeincludeTransient": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/core/handlers/InclusionExclusionUtils.java-lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)-lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)-inclTypereplaceNameexclTypetypeNodeannotationannotationNodeincludeTransient",
            "probability": 1,
            "from_file_path": "src/core/lombok/core/handlers/InclusionExclusionUtils.java",
            "from_class_or_interface_name": "InclusionExclusionUtils",
            "from_class_or_interface_key": "lombok.core.handlers.InclusionExclusionUtils",
            "from_method_name": "handleIncludeExcludeMarking",
            "from_method_key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)",
            "to_file_path": "src/core/lombok/core/handlers/InclusionExclusionUtils.java",
            "to_class_or_interface_name": "InclusionExclusionUtils",
            "to_class_or_interface_key": "lombok.core.handlers.InclusionExclusionUtils",
            "to_method_name": "handleIncludeExcludeMarking",
            "to_method_key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/inclType": {
                    "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/inclType",
                    "name": "inclType",
                    "type": "java.lang.Class<I>",
                    "displayedType": "Class<I>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/inclType",
                        "name": "inclType",
                        "type": "java.lang.Class<I>",
                        "displayedType": "Class<I>",
                        "modifiers": [],
                        "position": {
                            "startLine": 120,
                            "startColumn": 156,
                            "endLine": 120,
                            "endColumn": 164
                        }
                    },
                    "position": {
                        "startLine": 115,
                        "startColumn": 156,
                        "endLine": 115,
                        "endColumn": 164
                    }
                },
                "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/replaceName": {
                    "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/replaceName",
                    "name": "replaceName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/replaceName",
                        "name": "replaceName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 120,
                            "startColumn": 205,
                            "endLine": 120,
                            "endColumn": 216
                        }
                    },
                    "position": {
                        "startLine": 115,
                        "startColumn": 173,
                        "endLine": 115,
                        "endColumn": 184
                    }
                },
                "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/exclType": {
                    "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/exclType",
                    "name": "exclType",
                    "type": "java.lang.Class<? extends java.lang.annotation.Annotation>",
                    "displayedType": "Class<? extends Annotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/exclType",
                        "name": "exclType",
                        "type": "java.lang.Class<? extends java.lang.annotation.Annotation>",
                        "displayedType": "Class<? extends Annotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 120,
                            "startColumn": 246,
                            "endLine": 120,
                            "endColumn": 254
                        }
                    },
                    "position": {
                        "startLine": 115,
                        "startColumn": 214,
                        "endLine": 115,
                        "endColumn": 222
                    }
                },
                "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/typeNode": {
                    "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.core.handlers.lombok.core.LombokNode<A, L, N>",
                    "displayedType": "LombokNode<A, L, N>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.core.handlers.lombok.core.LombokNode<A, L, N>",
                        "displayedType": "LombokNode<A, L, N>",
                        "modifiers": [],
                        "position": {
                            "startLine": 120,
                            "startColumn": 276,
                            "endLine": 120,
                            "endColumn": 284
                        }
                    },
                    "position": {
                        "startLine": 115,
                        "startColumn": 244,
                        "endLine": 115,
                        "endColumn": 252
                    }
                },
                "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/annotation": {
                    "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/annotation",
                    "name": "annotation",
                    "type": "lombok.core.handlers.lombok.core.AnnotationValues<?>",
                    "displayedType": "AnnotationValues<?>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/annotation",
                        "name": "annotation",
                        "type": "lombok.core.handlers.lombok.core.AnnotationValues<?>",
                        "displayedType": "AnnotationValues<?>",
                        "modifiers": [],
                        "position": {
                            "startLine": 120,
                            "startColumn": 306,
                            "endLine": 120,
                            "endColumn": 316
                        }
                    },
                    "position": {
                        "startLine": 115,
                        "startColumn": 274,
                        "endLine": 115,
                        "endColumn": 284
                    }
                },
                "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/annotationNode": {
                    "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/annotationNode",
                    "name": "annotationNode",
                    "type": "lombok.core.handlers.lombok.core.LombokNode<A, L, N>",
                    "displayedType": "LombokNode<A, L, N>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/annotationNode",
                        "name": "annotationNode",
                        "type": "lombok.core.handlers.lombok.core.LombokNode<A, L, N>",
                        "displayedType": "LombokNode<A, L, N>",
                        "modifiers": [],
                        "position": {
                            "startLine": 120,
                            "startColumn": 338,
                            "endLine": 120,
                            "endColumn": 352
                        }
                    },
                    "position": {
                        "startLine": 115,
                        "startColumn": 306,
                        "endLine": 115,
                        "endColumn": 320
                    }
                },
                "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/includeTransient": {
                    "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/includeTransient",
                    "name": "includeTransient",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/includeTransient",
                        "name": "includeTransient",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 120,
                            "startColumn": 362,
                            "endLine": 120,
                            "endColumn": 378
                        }
                    },
                    "position": {
                        "startLine": 115,
                        "startColumn": 330,
                        "endLine": 115,
                        "endColumn": 346
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleLockedUtil.java-lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)-lombok.eclipse.handlers.HandleLockedUtil/method/getLockable(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)-sourcetypeNodelockableMethodNameisStaticp1p2pos": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleLockedUtil.java-lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)-lombok.eclipse.handlers.HandleLockedUtil/method/getLockable(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)-sourcetypeNodelockableMethodNameisStaticp1p2pos",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleLockedUtil.java",
            "from_class_or_interface_name": "HandleLockedUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleLockedUtil",
            "from_method_name": "getLockingStatement",
            "from_method_key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleLockedUtil.java",
            "to_class_or_interface_name": "HandleLockedUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleLockedUtil",
            "to_method_name": "getLockable",
            "to_method_key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockable(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/source": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/source",
                    "name": "source",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                    "displayedType": "ASTNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockable(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/source",
                        "name": "source",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                        "displayedType": "ASTNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 222,
                            "startColumn": 48,
                            "endLine": 222,
                            "endColumn": 54
                        }
                    },
                    "position": {
                        "startLine": 210,
                        "startColumn": 55,
                        "endLine": 210,
                        "endColumn": 61
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/typeNode": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockable(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 222,
                            "startColumn": 68,
                            "endLine": 222,
                            "endColumn": 76
                        }
                    },
                    "position": {
                        "startLine": 210,
                        "startColumn": 75,
                        "endLine": 210,
                        "endColumn": 83
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/lockableMethodName": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/lockableMethodName",
                    "name": "lockableMethodName",
                    "type": "char[]",
                    "displayedType": "char[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockable(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/lockableMethodName",
                        "name": "lockableMethodName",
                        "type": "char[]",
                        "displayedType": "char[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 10,
                            "endLine": 223,
                            "endColumn": 28
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 37,
                        "endLine": 211,
                        "endColumn": 55
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/isStatic": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/isStatic",
                    "name": "isStatic",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockable(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/isStatic",
                        "name": "isStatic",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 38,
                            "endLine": 223,
                            "endColumn": 46
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 65,
                        "endLine": 211,
                        "endColumn": 73
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/p1": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/p1",
                    "name": "p1",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockable(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/p1",
                        "name": "p1",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 52,
                            "endLine": 223,
                            "endColumn": 54
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 79,
                        "endLine": 211,
                        "endColumn": 81
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/p2": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/p2",
                    "name": "p2",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockable(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/p2",
                        "name": "p2",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 60,
                            "endLine": 223,
                            "endColumn": 62
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 87,
                        "endLine": 211,
                        "endColumn": 89
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/pos": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockingStatement(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockMethod, char[] lockableObjectName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/pos",
                    "name": "pos",
                    "type": "long",
                    "displayedType": "long",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/getLockable(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, char[] lockName, char[] lockableMethodName, boolean isStatic, int p1, int p2, long pos)/parameter/pos",
                        "name": "pos",
                        "type": "long",
                        "displayedType": "long",
                        "modifiers": [],
                        "position": {
                            "startLine": 223,
                            "startColumn": 69,
                            "endLine": 223,
                            "endColumn": 72
                        }
                    },
                    "position": {
                        "startLine": 211,
                        "startColumn": 96,
                        "endLine": 211,
                        "endColumn": 99
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleLockedUtil.java-lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)-lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass)-annotationValueastannotationNodeannotationClassannotationNamelockTypeClasslockImplClass": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleLockedUtil.java-lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)-lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass)-annotationValueastannotationNodeannotationClassannotationNamelockTypeClasslockImplClass",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleLockedUtil.java",
            "from_class_or_interface_name": "HandleLockedUtil",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleLockedUtil",
            "from_method_name": "handle",
            "from_method_key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleLockedUtil.java",
            "to_class_or_interface_name": "HandleLockedUtil",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleLockedUtil",
            "to_method_name": "handle",
            "to_method_key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/annotationValue": {
                    "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/annotationValue",
                    "name": "annotationValue",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass)/parameter/annotationValue",
                        "name": "annotationValue",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 55,
                            "startColumn": 58,
                            "endLine": 55,
                            "endColumn": 73
                        }
                    },
                    "position": {
                        "startLine": 84,
                        "startColumn": 58,
                        "endLine": 84,
                        "endColumn": 73
                    }
                },
                "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/ast": {
                    "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/ast",
                    "name": "ast",
                    "type": "com.sun.tools.javac.tree.JCTree$JCAnnotation",
                    "displayedType": "JCTree.JCAnnotation",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass)/parameter/ast",
                        "name": "ast",
                        "type": "com.sun.tools.javac.tree.JCTree$JCAnnotation",
                        "displayedType": "JCTree.JCAnnotation",
                        "modifiers": [],
                        "position": {
                            "startLine": 55,
                            "startColumn": 95,
                            "endLine": 55,
                            "endColumn": 98
                        }
                    },
                    "position": {
                        "startLine": 84,
                        "startColumn": 95,
                        "endLine": 84,
                        "endColumn": 98
                    }
                },
                "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/annotationNode": {
                    "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/annotationNode",
                    "name": "annotationNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass)/parameter/annotationNode",
                        "name": "annotationNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 55,
                            "startColumn": 110,
                            "endLine": 55,
                            "endColumn": 124
                        }
                    },
                    "position": {
                        "startLine": 84,
                        "startColumn": 110,
                        "endLine": 84,
                        "endColumn": 124
                    }
                },
                "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/annotationClass": {
                    "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/annotationClass",
                    "name": "annotationClass",
                    "type": "java.lang.Class<T>",
                    "displayedType": "Class<T>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass)/parameter/annotationClass",
                        "name": "annotationClass",
                        "type": "java.lang.Class<T>",
                        "displayedType": "Class<T>",
                        "modifiers": [],
                        "position": {
                            "startLine": 55,
                            "startColumn": 135,
                            "endLine": 55,
                            "endColumn": 150
                        }
                    },
                    "position": {
                        "startLine": 84,
                        "startColumn": 135,
                        "endLine": 84,
                        "endColumn": 150
                    }
                },
                "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/annotationName": {
                    "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/annotationName",
                    "name": "annotationName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass)/parameter/annotationName",
                        "name": "annotationName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 55,
                            "startColumn": 159,
                            "endLine": 55,
                            "endColumn": 173
                        }
                    },
                    "position": {
                        "startLine": 84,
                        "startColumn": 159,
                        "endLine": 84,
                        "endColumn": 173
                    }
                },
                "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/lockTypeClass": {
                    "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/lockTypeClass",
                    "name": "lockTypeClass",
                    "type": "java.lang.String[]",
                    "displayedType": "String[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass)/parameter/lockTypeClass",
                        "name": "lockTypeClass",
                        "type": "java.lang.String[]",
                        "displayedType": "String[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 55,
                            "startColumn": 184,
                            "endLine": 55,
                            "endColumn": 197
                        }
                    },
                    "position": {
                        "startLine": 84,
                        "startColumn": 184,
                        "endLine": 84,
                        "endColumn": 197
                    }
                },
                "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/lockImplClass": {
                    "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass, java.lang.String lockableMethodName)/parameter/lockImplClass",
                    "name": "lockImplClass",
                    "type": "java.lang.String[]",
                    "displayedType": "String[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, com.sun.tools.javac.tree.JCTree$JCAnnotation ast, lombok.javac.handlers.lombok.javac.JavacNode annotationNode, java.lang.Class<T> annotationClass, java.lang.String annotationName, java.lang.String[] lockTypeClass, java.lang.String[] lockImplClass)/parameter/lockImplClass",
                        "name": "lockImplClass",
                        "type": "java.lang.String[]",
                        "displayedType": "String[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 55,
                            "startColumn": 208,
                            "endLine": 55,
                            "endColumn": 221
                        }
                    },
                    "position": {
                        "startLine": 84,
                        "startColumn": 208,
                        "endLine": 84,
                        "endColumn": 221
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/singulars/JavacJavaUtilSingularizer.java-lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)-lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)-makerdatabuilderTypemapModetargetTypesourcebuilderVariable": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/singulars/JavacJavaUtilSingularizer.java-lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)-lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)-makerdatabuilderTypemapModetargetTypesourcebuilderVariable",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/singulars/JavacJavaUtilSingularizer.java",
            "from_class_or_interface_name": "JavacJavaUtilSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer",
            "from_method_name": "createJavaUtilSetMapInitialCapacitySwitchStatements",
            "from_method_key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)",
            "to_file_path": "src/core/lombok/javac/handlers/singulars/JavacJavaUtilSingularizer.java",
            "to_class_or_interface_name": "JavacJavaUtilSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer",
            "to_method_name": "createJavaUtilSimpleCreationAndFillStatements",
            "to_method_key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/maker": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/maker",
                    "name": "maker",
                    "type": "lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/maker",
                        "name": "maker",
                        "type": "lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 119,
                            "startColumn": 91,
                            "endLine": 119,
                            "endColumn": 96
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 97,
                        "endLine": 40,
                        "endColumn": 102
                    }
                },
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/data": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/data",
                    "name": "data",
                    "type": "lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/data",
                        "name": "data",
                        "type": "lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 119,
                            "startColumn": 111,
                            "endLine": 119,
                            "endColumn": 115
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 117,
                        "endLine": 40,
                        "endColumn": 121
                    }
                },
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/builderType": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.javac.handlers.singulars.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.javac.handlers.singulars.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 119,
                            "startColumn": 127,
                            "endLine": 119,
                            "endColumn": 138
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 133,
                        "endLine": 40,
                        "endColumn": 144
                    }
                },
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/mapMode": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/mapMode",
                    "name": "mapMode",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/mapMode",
                        "name": "mapMode",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 119,
                            "startColumn": 148,
                            "endLine": 119,
                            "endColumn": 155
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 154,
                        "endLine": 40,
                        "endColumn": 161
                    }
                },
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/targetType": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/targetType",
                    "name": "targetType",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/targetType",
                        "name": "targetType",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 119,
                            "startColumn": 233,
                            "endLine": 119,
                            "endColumn": 243
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 234,
                        "endLine": 40,
                        "endColumn": 244
                    }
                },
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/source": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.singulars.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.singulars.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 119,
                            "startColumn": 255,
                            "endLine": 119,
                            "endColumn": 261
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 256,
                        "endLine": 40,
                        "endColumn": 262
                    }
                },
                "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/builderVariable": {
                    "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/builderVariable",
                    "name": "builderVariable",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.singulars.JavacJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.javac.handlers.singulars.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.singulars.lombok.javac.handlers.JavacSingularsRecipes.SingularData data, lombok.javac.handlers.singulars.lombok.javac.JavacNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, lombok.javac.handlers.singulars.lombok.javac.JavacNode source, java.lang.String builderVariable)/parameter/builderVariable",
                        "name": "builderVariable",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 119,
                            "startColumn": 270,
                            "endLine": 119,
                            "endColumn": 285
                        }
                    },
                    "position": {
                        "startLine": 40,
                        "startColumn": 271,
                        "endLine": 40,
                        "endColumn": 286
                    }
                }
            }
        },
        "fields_to_fields_data_clump-src/delombok/lombok/delombok/Delombok.java-lombok.delombok.Delombok.CmdArgs-lombok.delombok.Delombok-verboseonlyChangedbootclasspathclasspathmodulepathdisablePreviewsourcepath": {
            "type": "data_clump",
            "key": "fields_to_fields_data_clump-src/delombok/lombok/delombok/Delombok.java-lombok.delombok.Delombok.CmdArgs-lombok.delombok.Delombok-verboseonlyChangedbootclasspathclasspathmodulepathdisablePreviewsourcepath",
            "probability": 1,
            "from_file_path": "src/delombok/lombok/delombok/Delombok.java",
            "from_class_or_interface_name": "CmdArgs",
            "from_class_or_interface_key": "lombok.delombok.Delombok.CmdArgs",
            "from_method_name": null,
            "from_method_key": null,
            "to_file_path": "src/delombok/lombok/delombok/Delombok.java",
            "to_class_or_interface_key": "lombok.delombok.Delombok",
            "to_class_or_interface_name": "Delombok",
            "to_method_key": null,
            "to_method_name": null,
            "data_clump_type": "fields_to_fields_data_clump",
            "data_clump_data": {
                "lombok.delombok.Delombok.CmdArgs/memberField/verbose": {
                    "key": "lombok.delombok.Delombok.CmdArgs/memberField/verbose",
                    "name": "verbose",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [
                        "PRIVATE"
                    ],
                    "to_variable": {
                        "key": "lombok.delombok.Delombok/memberField/verbose",
                        "name": "verbose",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [
                            "PRIVATE"
                        ],
                        "position": {
                            "startLine": 97,
                            "startColumn": 18,
                            "endLine": 97,
                            "endColumn": 25
                        }
                    },
                    "position": {
                        "startLine": 115,
                        "startColumn": 19,
                        "endLine": 115,
                        "endColumn": 26
                    }
                },
                "lombok.delombok.Delombok.CmdArgs/memberField/onlyChanged": {
                    "key": "lombok.delombok.Delombok.CmdArgs/memberField/onlyChanged",
                    "name": "onlyChanged",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [
                        "PRIVATE"
                    ],
                    "to_variable": {
                        "key": "lombok.delombok.Delombok/memberField/onlyChanged",
                        "name": "onlyChanged",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [
                            "PRIVATE"
                        ],
                        "position": {
                            "startLine": 99,
                            "startColumn": 18,
                            "endLine": 99,
                            "endColumn": 29
                        }
                    },
                    "position": {
                        "startLine": 166,
                        "startColumn": 19,
                        "endLine": 166,
                        "endColumn": 30
                    }
                },
                "lombok.delombok.Delombok.CmdArgs/memberField/bootclasspath": {
                    "key": "lombok.delombok.Delombok.CmdArgs/memberField/bootclasspath",
                    "name": "bootclasspath",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [
                        "PRIVATE"
                    ],
                    "to_variable": {
                        "key": "lombok.delombok.Delombok/memberField/bootclasspath",
                        "name": "bootclasspath",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [
                            "PRIVATE"
                        ],
                        "position": {
                            "startLine": 102,
                            "startColumn": 40,
                            "endLine": 102,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 151,
                        "startColumn": 18,
                        "endLine": 151,
                        "endColumn": 31
                    }
                },
                "lombok.delombok.Delombok.CmdArgs/memberField/classpath": {
                    "key": "lombok.delombok.Delombok.CmdArgs/memberField/classpath",
                    "name": "classpath",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [
                        "PRIVATE"
                    ],
                    "to_variable": {
                        "key": "lombok.delombok.Delombok/memberField/classpath",
                        "name": "classpath",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [
                            "PRIVATE"
                        ],
                        "position": {
                            "startLine": 102,
                            "startColumn": 17,
                            "endLine": 102,
                            "endColumn": 26
                        }
                    },
                    "position": {
                        "startLine": 144,
                        "startColumn": 18,
                        "endLine": 144,
                        "endColumn": 27
                    }
                },
                "lombok.delombok.Delombok.CmdArgs/memberField/modulepath": {
                    "key": "lombok.delombok.Delombok.CmdArgs/memberField/modulepath",
                    "name": "modulepath",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [
                        "PRIVATE"
                    ],
                    "to_variable": {
                        "key": "lombok.delombok.Delombok/memberField/modulepath",
                        "name": "modulepath",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [
                            "PRIVATE"
                        ],
                        "position": {
                            "startLine": 102,
                            "startColumn": 55,
                            "endLine": 102,
                            "endColumn": 65
                        }
                    },
                    "position": {
                        "startLine": 155,
                        "startColumn": 18,
                        "endLine": 155,
                        "endColumn": 28
                    }
                },
                "lombok.delombok.Delombok.CmdArgs/memberField/disablePreview": {
                    "key": "lombok.delombok.Delombok.CmdArgs/memberField/disablePreview",
                    "name": "disablePreview",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [
                        "PRIVATE"
                    ],
                    "to_variable": {
                        "key": "lombok.delombok.Delombok/memberField/disablePreview",
                        "name": "disablePreview",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [
                            "PRIVATE"
                        ],
                        "position": {
                            "startLine": 101,
                            "startColumn": 18,
                            "endLine": 101,
                            "endColumn": 32
                        }
                    },
                    "position": {
                        "startLine": 170,
                        "startColumn": 19,
                        "endLine": 170,
                        "endColumn": 33
                    }
                },
                "lombok.delombok.Delombok.CmdArgs/memberField/sourcepath": {
                    "key": "lombok.delombok.Delombok.CmdArgs/memberField/sourcepath",
                    "name": "sourcepath",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [
                        "PRIVATE"
                    ],
                    "to_variable": {
                        "key": "lombok.delombok.Delombok/memberField/sourcepath",
                        "name": "sourcepath",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [
                            "PRIVATE"
                        ],
                        "position": {
                            "startLine": 102,
                            "startColumn": 28,
                            "endLine": 102,
                            "endColumn": 38
                        }
                    },
                    "position": {
                        "startLine": 148,
                        "startColumn": 18,
                        "endLine": 148,
                        "endColumn": 28
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleFieldNameConstants.java-lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)-lombok.eclipse.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.lombok.AccessLevel level, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)-typeNodeerrorNodelevelasEnuminnerTypeNameuppercase": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleFieldNameConstants.java-lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)-lombok.eclipse.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.lombok.AccessLevel level, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)-typeNodeerrorNodelevelasEnuminnerTypeNameuppercase",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleFieldNameConstants.java",
            "from_class_or_interface_name": "HandleFieldNameConstants",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleFieldNameConstants",
            "from_method_name": "createInnerTypeFieldNameConstants",
            "from_method_key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleFieldNameConstants.java",
            "to_class_or_interface_name": "HandleFieldNameConstants",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleFieldNameConstants",
            "to_method_name": "generateFieldNameConstantsForType",
            "to_method_key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.lombok.AccessLevel level, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/typeNode": {
                    "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.lombok.AccessLevel level, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 62,
                            "startColumn": 60,
                            "endLine": 62,
                            "endColumn": 68
                        }
                    },
                    "position": {
                        "startLine": 129,
                        "startColumn": 61,
                        "endLine": 129,
                        "endColumn": 69
                    }
                },
                "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/errorNode": {
                    "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/errorNode",
                    "name": "errorNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.lombok.AccessLevel level, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/errorNode",
                        "name": "errorNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 62,
                            "startColumn": 82,
                            "endLine": 62,
                            "endColumn": 91
                        }
                    },
                    "position": {
                        "startLine": 129,
                        "startColumn": 83,
                        "endLine": 129,
                        "endColumn": 92
                    }
                },
                "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/level": {
                    "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/level",
                    "name": "level",
                    "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.lombok.AccessLevel level, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/level",
                        "name": "level",
                        "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 62,
                            "startColumn": 105,
                            "endLine": 62,
                            "endColumn": 110
                        }
                    },
                    "position": {
                        "startLine": 129,
                        "startColumn": 122,
                        "endLine": 129,
                        "endColumn": 127
                    }
                },
                "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/asEnum": {
                    "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/asEnum",
                    "name": "asEnum",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.lombok.AccessLevel level, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/asEnum",
                        "name": "asEnum",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 62,
                            "startColumn": 120,
                            "endLine": 62,
                            "endColumn": 126
                        }
                    },
                    "position": {
                        "startLine": 129,
                        "startColumn": 163,
                        "endLine": 129,
                        "endColumn": 169
                    }
                },
                "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/innerTypeName": {
                    "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/innerTypeName",
                    "name": "innerTypeName",
                    "type": "lombok.eclipse.handlers.lombok.core.configuration.IdentifierName",
                    "displayedType": "IdentifierName",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.lombok.AccessLevel level, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/innerTypeName",
                        "name": "innerTypeName",
                        "type": "lombok.eclipse.handlers.lombok.core.configuration.IdentifierName",
                        "displayedType": "IdentifierName",
                        "modifiers": [],
                        "position": {
                            "startLine": 62,
                            "startColumn": 143,
                            "endLine": 62,
                            "endColumn": 156
                        }
                    },
                    "position": {
                        "startLine": 129,
                        "startColumn": 186,
                        "endLine": 129,
                        "endColumn": 199
                    }
                },
                "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/uppercase": {
                    "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.lombok.AccessLevel level, java.util.List<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fields, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/uppercase",
                    "name": "uppercase",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.lombok.AccessLevel level, boolean asEnum, lombok.eclipse.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/uppercase",
                        "name": "uppercase",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 62,
                            "startColumn": 188,
                            "endLine": 62,
                            "endColumn": 197
                        }
                    },
                    "position": {
                        "startLine": 129,
                        "startColumn": 209,
                        "endLine": 129,
                        "endColumn": 218
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleGetter.java-lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-lombok.eclipse.handlers.HandleGetter/method/createGetterForFields(lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldNodes, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-levelerrorNodesourcewhineIfExistslazyonMethod": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleGetter.java-lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-lombok.eclipse.handlers.HandleGetter/method/createGetterForFields(lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldNodes, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-levelerrorNodesourcewhineIfExistslazyonMethod",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleGetter.java",
            "from_class_or_interface_name": "HandleGetter",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleGetter",
            "from_method_name": "createGetterForField",
            "from_method_key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleGetter.java",
            "to_class_or_interface_name": "HandleGetter",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleGetter",
            "to_method_name": "createGetterForFields",
            "to_method_key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForFields(lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldNodes, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/level": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/level",
                    "name": "level",
                    "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForFields(lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldNodes, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/level",
                        "name": "level",
                        "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 165,
                            "startColumn": 48,
                            "endLine": 165,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 171,
                        "startColumn": 47,
                        "endLine": 171,
                        "endColumn": 52
                    }
                },
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/errorNode": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/errorNode",
                    "name": "errorNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForFields(lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldNodes, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/errorNode",
                        "name": "errorNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 165,
                            "startColumn": 103,
                            "endLine": 165,
                            "endColumn": 112
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 39,
                        "endLine": 172,
                        "endColumn": 48
                    }
                },
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/source": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/source",
                    "name": "source",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                    "displayedType": "ASTNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForFields(lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldNodes, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/source",
                        "name": "source",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                        "displayedType": "ASTNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 165,
                            "startColumn": 122,
                            "endLine": 165,
                            "endColumn": 128
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 58,
                        "endLine": 172,
                        "endColumn": 64
                    }
                },
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/whineIfExists": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/whineIfExists",
                    "name": "whineIfExists",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForFields(lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldNodes, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/whineIfExists",
                        "name": "whineIfExists",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 165,
                            "startColumn": 138,
                            "endLine": 165,
                            "endColumn": 151
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 74,
                        "endLine": 172,
                        "endColumn": 87
                    }
                },
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/lazy": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/lazy",
                    "name": "lazy",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForFields(lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldNodes, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/lazy",
                        "name": "lazy",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 165,
                            "startColumn": 161,
                            "endLine": 165,
                            "endColumn": 165
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 97,
                        "endLine": 172,
                        "endColumn": 101
                    }
                },
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/onMethod": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                    "displayedType": "List<Annotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForFields(lombok.eclipse.handlers.lombok.AccessLevel level, java.util.Collection<lombok.eclipse.handlers.lombok.eclipse.EclipseNode> fieldNodes, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                        "displayedType": "List<Annotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 165,
                            "startColumn": 184,
                            "endLine": 165,
                            "endColumn": 192
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 120,
                        "endLine": 172,
                        "endColumn": 128
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleFieldNameConstants.java-lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)-lombok.javac.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, java.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)-typeNodeerrorNodelevelasEnuminnerTypeNameuppercase": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleFieldNameConstants.java-lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)-lombok.javac.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, java.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)-typeNodeerrorNodelevelasEnuminnerTypeNameuppercase",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleFieldNameConstants.java",
            "from_class_or_interface_name": "HandleFieldNameConstants",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleFieldNameConstants",
            "from_method_name": "generateFieldNameConstantsForType",
            "from_method_key": "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleFieldNameConstants.java",
            "to_class_or_interface_name": "HandleFieldNameConstants",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleFieldNameConstants",
            "to_method_name": "createInnerTypeFieldNameConstants",
            "to_method_key": "lombok.javac.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, java.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, java.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 133,
                            "startColumn": 59,
                            "endLine": 133,
                            "endColumn": 67
                        }
                    },
                    "position": {
                        "startLine": 59,
                        "startColumn": 58,
                        "endLine": 59,
                        "endColumn": 66
                    }
                },
                "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/errorNode": {
                    "key": "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/errorNode",
                    "name": "errorNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, java.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/errorNode",
                        "name": "errorNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 133,
                            "startColumn": 79,
                            "endLine": 133,
                            "endColumn": 88
                        }
                    },
                    "position": {
                        "startLine": 59,
                        "startColumn": 78,
                        "endLine": 59,
                        "endColumn": 87
                    }
                },
                "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/level": {
                    "key": "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/level",
                    "name": "level",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, java.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/level",
                        "name": "level",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 133,
                            "startColumn": 102,
                            "endLine": 133,
                            "endColumn": 107
                        }
                    },
                    "position": {
                        "startLine": 59,
                        "startColumn": 101,
                        "endLine": 59,
                        "endColumn": 106
                    }
                },
                "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/asEnum": {
                    "key": "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/asEnum",
                    "name": "asEnum",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, java.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/asEnum",
                        "name": "asEnum",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 133,
                            "startColumn": 151,
                            "endLine": 133,
                            "endColumn": 157
                        }
                    },
                    "position": {
                        "startLine": 59,
                        "startColumn": 116,
                        "endLine": 59,
                        "endColumn": 122
                    }
                },
                "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/innerTypeName": {
                    "key": "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/innerTypeName",
                    "name": "innerTypeName",
                    "type": "lombok.javac.handlers.lombok.core.configuration.IdentifierName",
                    "displayedType": "IdentifierName",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, java.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/innerTypeName",
                        "name": "innerTypeName",
                        "type": "lombok.javac.handlers.lombok.core.configuration.IdentifierName",
                        "displayedType": "IdentifierName",
                        "modifiers": [],
                        "position": {
                            "startLine": 133,
                            "startColumn": 174,
                            "endLine": 133,
                            "endColumn": 187
                        }
                    },
                    "position": {
                        "startLine": 59,
                        "startColumn": 139,
                        "endLine": 59,
                        "endColumn": 152
                    }
                },
                "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/uppercase": {
                    "key": "lombok.javac.handlers.HandleFieldNameConstants/method/generateFieldNameConstantsForType(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean onlyExplicit, boolean uppercase)/parameter/uppercase",
                    "name": "uppercase",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleFieldNameConstants/method/createInnerTypeFieldNameConstants(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode errorNode, lombok.javac.handlers.lombok.AccessLevel level, java.util.List<lombok.javac.handlers.lombok.javac.JavacNode> fields, boolean asEnum, lombok.javac.handlers.lombok.core.configuration.IdentifierName innerTypeName, boolean uppercase)/parameter/uppercase",
                        "name": "uppercase",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 133,
                            "startColumn": 197,
                            "endLine": 133,
                            "endColumn": 206
                        }
                    },
                    "position": {
                        "startLine": 59,
                        "startColumn": 184,
                        "endLine": 59,
                        "endColumn": 193
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/core/AST.java-lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)-lombok.core.AST/method/replaceStatementInCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, N oldN, N newN)-fieldfieldRefchaincollectionnewN": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/core/AST.java-lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)-lombok.core.AST/method/replaceStatementInCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, N oldN, N newN)-fieldfieldRefchaincollectionnewN",
            "probability": 1,
            "from_file_path": "src/core/lombok/core/AST.java",
            "from_class_or_interface_name": "AST",
            "from_class_or_interface_key": "lombok.core.AST",
            "from_method_name": "setElementInASTCollection",
            "from_method_key": "lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)",
            "to_file_path": "src/core/lombok/core/AST.java",
            "to_class_or_interface_name": "AST",
            "to_class_or_interface_key": "lombok.core.AST",
            "to_method_name": "replaceStatementInCollection",
            "to_method_key": "lombok.core.AST/method/replaceStatementInCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, N oldN, N newN)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)/parameter/field": {
                    "key": "lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)/parameter/field",
                    "name": "field",
                    "type": "java.lang.reflect.Field",
                    "displayedType": "Field",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.AST/method/replaceStatementInCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, N oldN, N newN)/parameter/field",
                        "name": "field",
                        "type": "java.lang.reflect.Field",
                        "displayedType": "Field",
                        "modifiers": [],
                        "position": {
                            "startLine": 332,
                            "startColumn": 53,
                            "endLine": 332,
                            "endColumn": 58
                        }
                    },
                    "position": {
                        "startLine": 364,
                        "startColumn": 49,
                        "endLine": 364,
                        "endColumn": 54
                    }
                },
                "lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)/parameter/fieldRef": {
                    "key": "lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)/parameter/fieldRef",
                    "name": "fieldRef",
                    "type": "java.lang.Object",
                    "displayedType": "Object",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.AST/method/replaceStatementInCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, N oldN, N newN)/parameter/fieldRef",
                        "name": "fieldRef",
                        "type": "java.lang.Object",
                        "displayedType": "Object",
                        "modifiers": [],
                        "position": {
                            "startLine": 332,
                            "startColumn": 67,
                            "endLine": 332,
                            "endColumn": 75
                        }
                    },
                    "position": {
                        "startLine": 364,
                        "startColumn": 63,
                        "endLine": 364,
                        "endColumn": 71
                    }
                },
                "lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)/parameter/chain": {
                    "key": "lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)/parameter/chain",
                    "name": "chain",
                    "type": "java.util.List<java.util.Collection<?>>",
                    "displayedType": "List<Collection<?>>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.AST/method/replaceStatementInCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, N oldN, N newN)/parameter/chain",
                        "name": "chain",
                        "type": "java.util.List<java.util.Collection<?>>",
                        "displayedType": "List<Collection<?>>",
                        "modifiers": [],
                        "position": {
                            "startLine": 332,
                            "startColumn": 97,
                            "endLine": 332,
                            "endColumn": 102
                        }
                    },
                    "position": {
                        "startLine": 364,
                        "startColumn": 93,
                        "endLine": 364,
                        "endColumn": 98
                    }
                },
                "lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)/parameter/collection": {
                    "key": "lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)/parameter/collection",
                    "name": "collection",
                    "type": "java.util.Collection<?>",
                    "displayedType": "Collection<?>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.AST/method/replaceStatementInCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, N oldN, N newN)/parameter/collection",
                        "name": "collection",
                        "type": "java.util.Collection<?>",
                        "displayedType": "Collection<?>",
                        "modifiers": [],
                        "position": {
                            "startLine": 332,
                            "startColumn": 118,
                            "endLine": 332,
                            "endColumn": 128
                        }
                    },
                    "position": {
                        "startLine": 364,
                        "startColumn": 114,
                        "endLine": 364,
                        "endColumn": 124
                    }
                },
                "lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)/parameter/newN": {
                    "key": "lombok.core.AST/method/setElementInASTCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, int idx, N newN)/parameter/newN",
                    "name": "newN",
                    "type": "N",
                    "displayedType": "N",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.AST/method/replaceStatementInCollection(java.lang.reflect.Field field, java.lang.Object fieldRef, java.util.List<java.util.Collection<?>> chain, java.util.Collection<?> collection, N oldN, N newN)/parameter/newN",
                        "name": "newN",
                        "type": "N",
                        "displayedType": "N",
                        "modifiers": [],
                        "position": {
                            "startLine": 332,
                            "startColumn": 140,
                            "endLine": 332,
                            "endColumn": 144
                        }
                    },
                    "position": {
                        "startLine": 364,
                        "startColumn": 137,
                        "endLine": 364,
                        "endColumn": 141
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchDelegate.java-lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)-lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings0(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)-listbindingbanListfieldNameresponsible": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchDelegate.java-lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)-lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings0(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)-listbindingbanListfieldNameresponsible",
            "probability": 1,
            "from_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchDelegate.java",
            "from_class_or_interface_name": "PatchDelegate",
            "from_class_or_interface_key": "lombok.eclipse.agent.PatchDelegate",
            "from_method_name": "addAllMethodBindings",
            "from_method_key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)",
            "to_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchDelegate.java",
            "to_class_or_interface_name": "PatchDelegate",
            "to_class_or_interface_key": "lombok.eclipse.agent.PatchDelegate",
            "to_method_name": "addAllMethodBindings0",
            "to_method_key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings0(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/list": {
                    "key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/list",
                    "name": "list",
                    "type": "java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple>",
                    "displayedType": "List<BindingTuple>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings0(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/list",
                        "name": "list",
                        "type": "java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple>",
                        "displayedType": "List<BindingTuple>",
                        "modifiers": [],
                        "position": {
                            "startLine": 911,
                            "startColumn": 63,
                            "endLine": 911,
                            "endColumn": 67
                        }
                    },
                    "position": {
                        "startLine": 897,
                        "startColumn": 62,
                        "endLine": 897,
                        "endColumn": 66
                    }
                },
                "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/binding": {
                    "key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/binding",
                    "name": "binding",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding",
                    "displayedType": "TypeBinding",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings0(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/binding",
                        "name": "binding",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding",
                        "displayedType": "TypeBinding",
                        "modifiers": [],
                        "position": {
                            "startLine": 911,
                            "startColumn": 81,
                            "endLine": 911,
                            "endColumn": 88
                        }
                    },
                    "position": {
                        "startLine": 897,
                        "startColumn": 80,
                        "endLine": 897,
                        "endColumn": 87
                    }
                },
                "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/banList": {
                    "key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/banList",
                    "name": "banList",
                    "type": "java.util.Set<java.lang.String>",
                    "displayedType": "Set<String>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings0(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/banList",
                        "name": "banList",
                        "type": "java.util.Set<java.lang.String>",
                        "displayedType": "Set<String>",
                        "modifiers": [],
                        "position": {
                            "startLine": 911,
                            "startColumn": 102,
                            "endLine": 911,
                            "endColumn": 109
                        }
                    },
                    "position": {
                        "startLine": 897,
                        "startColumn": 101,
                        "endLine": 897,
                        "endColumn": 108
                    }
                },
                "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/fieldName": {
                    "key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/fieldName",
                    "name": "fieldName",
                    "type": "char[]",
                    "displayedType": "char[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings0(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/fieldName",
                        "name": "fieldName",
                        "type": "char[]",
                        "displayedType": "char[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 911,
                            "startColumn": 118,
                            "endLine": 911,
                            "endColumn": 127
                        }
                    },
                    "position": {
                        "startLine": 897,
                        "startColumn": 117,
                        "endLine": 897,
                        "endColumn": 126
                    }
                },
                "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/responsible": {
                    "key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/responsible",
                    "name": "responsible",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                    "displayedType": "ASTNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchDelegate/method/addAllMethodBindings0(java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> list, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding, java.util.Set<java.lang.String> banList, char[] fieldName, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode responsible)/parameter/responsible",
                        "name": "responsible",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                        "displayedType": "ASTNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 911,
                            "startColumn": 137,
                            "endLine": 911,
                            "endColumn": 148
                        }
                    },
                    "position": {
                        "startLine": 897,
                        "startColumn": 136,
                        "endLine": 897,
                        "endColumn": 147
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleEqualsAndHashCode.java-lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)-lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess)-typememberscallSupersourcefieldAccess": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleEqualsAndHashCode.java-lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)-lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess)-typememberscallSupersourcefieldAccess",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleEqualsAndHashCode.java",
            "from_class_or_interface_name": "HandleEqualsAndHashCode",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleEqualsAndHashCode",
            "from_method_name": "createEquals",
            "from_method_key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleEqualsAndHashCode.java",
            "to_class_or_interface_name": "HandleEqualsAndHashCode",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleEqualsAndHashCode",
            "to_method_name": "createHashCode",
            "to_method_key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/type": {
                    "key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/type",
                    "name": "type",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess)/parameter/type",
                        "name": "type",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 256,
                            "startColumn": 54,
                            "endLine": 256,
                            "endColumn": 58
                        }
                    },
                    "position": {
                        "startLine": 606,
                        "startColumn": 52,
                        "endLine": 606,
                        "endColumn": 56
                    }
                },
                "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/members": {
                    "key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/members",
                    "name": "members",
                    "type": "java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>>",
                    "displayedType": "Collection<Included<EclipseNode, EqualsAndHashCode.Include>>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess)/parameter/members",
                        "name": "members",
                        "type": "java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>>",
                        "displayedType": "Collection<Included<EclipseNode, EqualsAndHashCode.Include>>",
                        "modifiers": [],
                        "position": {
                            "startLine": 256,
                            "startColumn": 121,
                            "endLine": 256,
                            "endColumn": 128
                        }
                    },
                    "position": {
                        "startLine": 606,
                        "startColumn": 119,
                        "endLine": 606,
                        "endColumn": 126
                    }
                },
                "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/callSuper": {
                    "key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/callSuper",
                    "name": "callSuper",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess)/parameter/callSuper",
                        "name": "callSuper",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 256,
                            "startColumn": 138,
                            "endLine": 256,
                            "endColumn": 147
                        }
                    },
                    "position": {
                        "startLine": 606,
                        "startColumn": 136,
                        "endLine": 606,
                        "endColumn": 145
                    }
                },
                "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/source": {
                    "key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/source",
                    "name": "source",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                    "displayedType": "ASTNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess)/parameter/source",
                        "name": "source",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                        "displayedType": "ASTNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 256,
                            "startColumn": 180,
                            "endLine": 256,
                            "endColumn": 186
                        }
                    },
                    "position": {
                        "startLine": 606,
                        "startColumn": 155,
                        "endLine": 606,
                        "endColumn": 161
                    }
                },
                "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/fieldAccess": {
                    "key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess, boolean needsCanEqual, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onParam)/parameter/fieldAccess",
                    "name": "fieldAccess",
                    "type": "lombok.eclipse.handlers.FieldAccess",
                    "displayedType": "FieldAccess",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.eclipse.handlers.lombok.eclipse.EclipseNode type, java.util.Collection<lombok.eclipse.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.eclipse.handlers.lombok.eclipse.EclipseNode, lombok.eclipse.handlers.lombok.EqualsAndHashCode#lombok.eclipse.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, lombok.eclipse.handlers.FieldAccess fieldAccess)/parameter/fieldAccess",
                        "name": "fieldAccess",
                        "type": "lombok.eclipse.handlers.FieldAccess",
                        "displayedType": "FieldAccess",
                        "modifiers": [],
                        "position": {
                            "startLine": 256,
                            "startColumn": 200,
                            "endLine": 256,
                            "endColumn": 211
                        }
                    },
                    "position": {
                        "startLine": 606,
                        "startColumn": 175,
                        "endLine": 606,
                        "endColumn": 186
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleLockedUtil.java-lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)-lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass)-annotationValueannotationNodeannotationNamelockTypeClasslockImplClass": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleLockedUtil.java-lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)-lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass)-annotationValueannotationNodeannotationNamelockTypeClasslockImplClass",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleLockedUtil.java",
            "from_class_or_interface_name": "HandleLockedUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleLockedUtil",
            "from_method_name": "handle",
            "from_method_key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleLockedUtil.java",
            "to_class_or_interface_name": "HandleLockedUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleLockedUtil",
            "to_method_name": "handle",
            "to_method_key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationValue": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationValue",
                    "name": "annotationValue",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass)/parameter/annotationValue",
                        "name": "annotationValue",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 130,
                            "startColumn": 35,
                            "endLine": 130,
                            "endColumn": 50
                        }
                    },
                    "position": {
                        "startLine": 153,
                        "startColumn": 35,
                        "endLine": 153,
                        "endColumn": 50
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationNode": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationNode",
                    "name": "annotationNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass)/parameter/annotationNode",
                        "name": "annotationNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 130,
                            "startColumn": 80,
                            "endLine": 130,
                            "endColumn": 94
                        }
                    },
                    "position": {
                        "startLine": 153,
                        "startColumn": 83,
                        "endLine": 153,
                        "endColumn": 97
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationName": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/annotationName",
                    "name": "annotationName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass)/parameter/annotationName",
                        "name": "annotationName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 130,
                            "startColumn": 103,
                            "endLine": 130,
                            "endColumn": 117
                        }
                    },
                    "position": {
                        "startLine": 154,
                        "startColumn": 10,
                        "endLine": 154,
                        "endColumn": 24
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockTypeClass": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockTypeClass",
                    "name": "lockTypeClass",
                    "type": "char[][]",
                    "displayedType": "char[][]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass)/parameter/lockTypeClass",
                        "name": "lockTypeClass",
                        "type": "char[][]",
                        "displayedType": "char[][]",
                        "modifiers": [],
                        "position": {
                            "startLine": 130,
                            "startColumn": 128,
                            "endLine": 130,
                            "endColumn": 141
                        }
                    },
                    "position": {
                        "startLine": 154,
                        "startColumn": 35,
                        "endLine": 154,
                        "endColumn": 48
                    }
                },
                "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockImplClass": {
                    "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation source, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass, char[] lockableMethodName)/parameter/lockImplClass",
                    "name": "lockImplClass",
                    "type": "char[][]",
                    "displayedType": "char[][]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleLockedUtil/method/handle(java.lang.String annotationValue, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.handlers.lombok.eclipse.EclipseNode annotationNode, java.lang.String annotationName, char[][] lockTypeClass, char[][] lockImplClass)/parameter/lockImplClass",
                        "name": "lockImplClass",
                        "type": "char[][]",
                        "displayedType": "char[][]",
                        "modifiers": [],
                        "position": {
                            "startLine": 130,
                            "startColumn": 152,
                            "endLine": 130,
                            "endColumn": 165
                        }
                    },
                    "position": {
                        "startLine": 154,
                        "startColumn": 59,
                        "endLine": 154,
                        "endColumn": 72
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/singulars/EclipseJavaUtilSingularizer.java-lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)-lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, java.lang.String builderVariable)-databuilderTypemapModetargetTypebuilderVariable": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/singulars/EclipseJavaUtilSingularizer.java-lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)-lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, java.lang.String builderVariable)-databuilderTypemapModetargetTypebuilderVariable",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/singulars/EclipseJavaUtilSingularizer.java",
            "from_class_or_interface_name": "EclipseJavaUtilSingularizer",
            "from_class_or_interface_key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer",
            "from_method_name": "createJavaUtilSimpleCreationAndFillStatements",
            "from_method_key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)",
            "to_file_path": "src/core/lombok/eclipse/handlers/singulars/EclipseJavaUtilSingularizer.java",
            "to_class_or_interface_name": "EclipseJavaUtilSingularizer",
            "to_class_or_interface_key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer",
            "to_method_name": "createJavaUtilSetMapInitialCapacitySwitchStatements",
            "to_method_key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, java.lang.String builderVariable)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/data": {
                    "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/data",
                    "name": "data",
                    "type": "lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData",
                    "displayedType": "SingularData",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, java.lang.String builderVariable)/parameter/data",
                        "name": "data",
                        "type": "lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData",
                        "displayedType": "SingularData",
                        "modifiers": [],
                        "position": {
                            "startLine": 93,
                            "startColumn": 93,
                            "endLine": 93,
                            "endColumn": 97
                        }
                    },
                    "position": {
                        "startLine": 160,
                        "startColumn": 87,
                        "endLine": 160,
                        "endColumn": 91
                    }
                },
                "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/builderType": {
                    "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/builderType",
                    "name": "builderType",
                    "type": "lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, java.lang.String builderVariable)/parameter/builderType",
                        "name": "builderType",
                        "type": "lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 93,
                            "startColumn": 111,
                            "endLine": 93,
                            "endColumn": 122
                        }
                    },
                    "position": {
                        "startLine": 160,
                        "startColumn": 105,
                        "endLine": 160,
                        "endColumn": 116
                    }
                },
                "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/mapMode": {
                    "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/mapMode",
                    "name": "mapMode",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, java.lang.String builderVariable)/parameter/mapMode",
                        "name": "mapMode",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 93,
                            "startColumn": 132,
                            "endLine": 93,
                            "endColumn": 139
                        }
                    },
                    "position": {
                        "startLine": 160,
                        "startColumn": 126,
                        "endLine": 160,
                        "endColumn": 133
                    }
                },
                "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/targetType": {
                    "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/targetType",
                    "name": "targetType",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, java.lang.String builderVariable)/parameter/targetType",
                        "name": "targetType",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 93,
                            "startColumn": 212,
                            "endLine": 93,
                            "endColumn": 222
                        }
                    },
                    "position": {
                        "startLine": 160,
                        "startColumn": 211,
                        "endLine": 160,
                        "endColumn": 221
                    }
                },
                "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/builderVariable": {
                    "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSimpleCreationAndFillStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, boolean defineVar, boolean addInitialCapacityArg, boolean nullGuard, java.lang.String targetType, java.lang.String builderVariable)/parameter/builderVariable",
                    "name": "builderVariable",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.singulars.EclipseJavaUtilSingularizer/method/createJavaUtilSetMapInitialCapacitySwitchStatements(lombok.eclipse.handlers.singulars.lombok.eclipse.handlers.EclipseSingularsRecipes.SingularData data, lombok.eclipse.handlers.singulars.lombok.eclipse.EclipseNode builderType, boolean mapMode, java.lang.String emptyCollectionMethod, java.lang.String singletonCollectionMethod, java.lang.String targetType, java.lang.String builderVariable)/parameter/builderVariable",
                        "name": "builderVariable",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 93,
                            "startColumn": 231,
                            "endLine": 93,
                            "endColumn": 246
                        }
                    },
                    "position": {
                        "startLine": 160,
                        "startColumn": 230,
                        "endLine": 160,
                        "endColumn": 245
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/JavacResolution.java-lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)-lombok.javac.JavacResolution/method/typeToJCTree0(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)-typeastallowCompoundallowVoidallowCapture": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/JavacResolution.java-lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)-lombok.javac.JavacResolution/method/typeToJCTree0(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)-typeastallowCompoundallowVoidallowCapture",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/JavacResolution.java",
            "from_class_or_interface_name": "JavacResolution",
            "from_class_or_interface_key": "lombok.javac.JavacResolution",
            "from_method_name": "typeToJCTree",
            "from_method_key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)",
            "to_file_path": "src/core/lombok/javac/JavacResolution.java",
            "to_class_or_interface_name": "JavacResolution",
            "to_class_or_interface_key": "lombok.javac.JavacResolution",
            "to_method_name": "typeToJCTree0",
            "to_method_key": "lombok.javac.JavacResolution/method/typeToJCTree0(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/type": {
                    "key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/type",
                    "name": "type",
                    "type": "com.sun.tools.javac.code.Type",
                    "displayedType": "Type",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacResolution/method/typeToJCTree0(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/type",
                        "name": "type",
                        "type": "com.sun.tools.javac.code.Type",
                        "displayedType": "Type",
                        "modifiers": [],
                        "position": {
                            "startLine": 431,
                            "startColumn": 49,
                            "endLine": 431,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 371,
                        "startColumn": 48,
                        "endLine": 371,
                        "endColumn": 52
                    }
                },
                "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/ast": {
                    "key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/ast",
                    "name": "ast",
                    "type": "lombok.javac.JavacAST",
                    "displayedType": "JavacAST",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacResolution/method/typeToJCTree0(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/ast",
                        "name": "ast",
                        "type": "lombok.javac.JavacAST",
                        "displayedType": "JavacAST",
                        "modifiers": [],
                        "position": {
                            "startLine": 431,
                            "startColumn": 64,
                            "endLine": 431,
                            "endColumn": 67
                        }
                    },
                    "position": {
                        "startLine": 371,
                        "startColumn": 63,
                        "endLine": 371,
                        "endColumn": 66
                    }
                },
                "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/allowCompound": {
                    "key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/allowCompound",
                    "name": "allowCompound",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacResolution/method/typeToJCTree0(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/allowCompound",
                        "name": "allowCompound",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 431,
                            "startColumn": 77,
                            "endLine": 431,
                            "endColumn": 90
                        }
                    },
                    "position": {
                        "startLine": 371,
                        "startColumn": 76,
                        "endLine": 371,
                        "endColumn": 89
                    }
                },
                "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/allowVoid": {
                    "key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/allowVoid",
                    "name": "allowVoid",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacResolution/method/typeToJCTree0(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/allowVoid",
                        "name": "allowVoid",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 431,
                            "startColumn": 100,
                            "endLine": 431,
                            "endColumn": 109
                        }
                    },
                    "position": {
                        "startLine": 371,
                        "startColumn": 99,
                        "endLine": 371,
                        "endColumn": 108
                    }
                },
                "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/allowCapture": {
                    "key": "lombok.javac.JavacResolution/method/typeToJCTree(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/allowCapture",
                    "name": "allowCapture",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.JavacResolution/method/typeToJCTree0(com.sun.tools.javac.code.Type type, lombok.javac.JavacAST ast, boolean allowCompound, boolean allowVoid, boolean allowCapture)/parameter/allowCapture",
                        "name": "allowCapture",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 431,
                            "startColumn": 119,
                            "endLine": 431,
                            "endColumn": 131
                        }
                    },
                    "position": {
                        "startLine": 371,
                        "startColumn": 118,
                        "endLine": 371,
                        "endColumn": 130
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java-lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-typeNodememberscallSuperfieldAccesssource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java-lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-typeNodememberscallSuperfieldAccesssource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java",
            "from_class_or_interface_name": "HandleEqualsAndHashCode",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleEqualsAndHashCode",
            "from_method_name": "createHashCode",
            "from_method_key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java",
            "to_class_or_interface_name": "HandleEqualsAndHashCode",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleEqualsAndHashCode",
            "to_method_name": "createEquals",
            "to_method_key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 426,
                            "startColumn": 45,
                            "endLine": 426,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 47,
                        "endLine": 219,
                        "endColumn": 55
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/members": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/members",
                    "name": "members",
                    "type": "java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>>",
                    "displayedType": "java.util.List<Included<JavacNode, EqualsAndHashCode.Include>>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/members",
                        "name": "members",
                        "type": "java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>>",
                        "displayedType": "java.util.List<Included<JavacNode, EqualsAndHashCode.Include>>",
                        "modifiers": [],
                        "position": {
                            "startLine": 426,
                            "startColumn": 118,
                            "endLine": 426,
                            "endColumn": 125
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 120,
                        "endLine": 219,
                        "endColumn": 127
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/callSuper": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/callSuper",
                    "name": "callSuper",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/callSuper",
                        "name": "callSuper",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 426,
                            "startColumn": 135,
                            "endLine": 426,
                            "endColumn": 144
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 137,
                        "endLine": 219,
                        "endColumn": 146
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/fieldAccess": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/fieldAccess",
                    "name": "fieldAccess",
                    "type": "lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess",
                    "displayedType": "FieldAccess",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/fieldAccess",
                        "name": "fieldAccess",
                        "type": "lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess",
                        "displayedType": "FieldAccess",
                        "modifiers": [],
                        "position": {
                            "startLine": 426,
                            "startColumn": 158,
                            "endLine": 426,
                            "endColumn": 169
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 183,
                        "endLine": 219,
                        "endColumn": 194
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 426,
                            "startColumn": 204,
                            "endLine": 426,
                            "endColumn": 210
                        }
                    },
                    "position": {
                        "startLine": 219,
                        "startColumn": 206,
                        "endLine": 219,
                        "endColumn": 212
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java-lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-typeNodesourcemembersfieldAccessonParam": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java-lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-typeNodesourcemembersfieldAccessonParam",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java",
            "from_class_or_interface_name": "HandleEqualsAndHashCode",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleEqualsAndHashCode",
            "from_method_name": "generateMethods",
            "from_method_key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java",
            "to_class_or_interface_name": "HandleEqualsAndHashCode",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleEqualsAndHashCode",
            "to_method_name": "createEquals",
            "to_method_key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 426,
                            "startColumn": 45,
                            "endLine": 426,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 117,
                        "startColumn": 40,
                        "endLine": 117,
                        "endColumn": 48
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 426,
                            "startColumn": 204,
                            "endLine": 426,
                            "endColumn": 210
                        }
                    },
                    "position": {
                        "startLine": 117,
                        "startColumn": 60,
                        "endLine": 117,
                        "endColumn": 66
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/members": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/members",
                    "name": "members",
                    "type": "java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>>",
                    "displayedType": "java.util.List<Included<JavacNode, EqualsAndHashCode.Include>>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/members",
                        "name": "members",
                        "type": "java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>>",
                        "displayedType": "java.util.List<Included<JavacNode, EqualsAndHashCode.Include>>",
                        "modifiers": [],
                        "position": {
                            "startLine": 426,
                            "startColumn": 118,
                            "endLine": 426,
                            "endColumn": 125
                        }
                    },
                    "position": {
                        "startLine": 117,
                        "startColumn": 131,
                        "endLine": 117,
                        "endColumn": 138
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/fieldAccess": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/fieldAccess",
                    "name": "fieldAccess",
                    "type": "lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess",
                    "displayedType": "FieldAccess",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/fieldAccess",
                        "name": "fieldAccess",
                        "type": "lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess",
                        "displayedType": "FieldAccess",
                        "modifiers": [],
                        "position": {
                            "startLine": 426,
                            "startColumn": 158,
                            "endLine": 426,
                            "endColumn": 169
                        }
                    },
                    "position": {
                        "startLine": 118,
                        "startColumn": 80,
                        "endLine": 118,
                        "endColumn": 91
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                    "name": "onParam",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createEquals(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, boolean needsCanEqual, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                        "name": "onParam",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 426,
                            "startColumn": 231,
                            "endLine": 426,
                            "endColumn": 238
                        }
                    },
                    "position": {
                        "startLine": 118,
                        "startColumn": 112,
                        "endLine": 118,
                        "endColumn": 119
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java-lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodesourcememberscacheHashCodefieldAccess": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java-lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)-typeNodesourcememberscacheHashCodefieldAccess",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java",
            "from_class_or_interface_name": "HandleEqualsAndHashCode",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleEqualsAndHashCode",
            "from_method_name": "generateMethods",
            "from_method_key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java",
            "to_class_or_interface_name": "HandleEqualsAndHashCode",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleEqualsAndHashCode",
            "to_method_name": "createHashCode",
            "to_method_key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/typeNode": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 219,
                            "startColumn": 47,
                            "endLine": 219,
                            "endColumn": 55
                        }
                    },
                    "position": {
                        "startLine": 117,
                        "startColumn": 40,
                        "endLine": 117,
                        "endColumn": 48
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 219,
                            "startColumn": 206,
                            "endLine": 219,
                            "endColumn": 212
                        }
                    },
                    "position": {
                        "startLine": 117,
                        "startColumn": 60,
                        "endLine": 117,
                        "endColumn": 66
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/members": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/members",
                    "name": "members",
                    "type": "java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>>",
                    "displayedType": "java.util.List<Included<JavacNode, EqualsAndHashCode.Include>>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/members",
                        "name": "members",
                        "type": "java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>>",
                        "displayedType": "java.util.List<Included<JavacNode, EqualsAndHashCode.Include>>",
                        "modifiers": [],
                        "position": {
                            "startLine": 219,
                            "startColumn": 120,
                            "endLine": 219,
                            "endColumn": 127
                        }
                    },
                    "position": {
                        "startLine": 117,
                        "startColumn": 131,
                        "endLine": 117,
                        "endColumn": 138
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/cacheHashCode": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/cacheHashCode",
                    "name": "cacheHashCode",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/cacheHashCode",
                        "name": "cacheHashCode",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 219,
                            "startColumn": 156,
                            "endLine": 219,
                            "endColumn": 169
                        }
                    },
                    "position": {
                        "startLine": 118,
                        "startColumn": 53,
                        "endLine": 118,
                        "endColumn": 66
                    }
                },
                "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/fieldAccess": {
                    "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/generateMethods(lombok.javac.handlers.lombok.javac.JavacNode typeNode, lombok.javac.handlers.lombok.javac.JavacNode source, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, java.lang.Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/fieldAccess",
                    "name": "fieldAccess",
                    "type": "lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess",
                    "displayedType": "FieldAccess",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleEqualsAndHashCode/method/createHashCode(lombok.javac.handlers.lombok.javac.JavacNode typeNode, java.util.List<lombok.javac.handlers.lombok.core.handlers.InclusionExclusionUtils.Included<lombok.javac.handlers.lombok.javac.JavacNode, lombok.javac.handlers.lombok.EqualsAndHashCode#lombok.javac.handlers.Include>> members, boolean callSuper, boolean cacheHashCode, lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess fieldAccess, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/fieldAccess",
                        "name": "fieldAccess",
                        "type": "lombok.javac.handlers.lombok.core.handlers.HandlerUtil.FieldAccess",
                        "displayedType": "FieldAccess",
                        "modifiers": [],
                        "position": {
                            "startLine": 219,
                            "startColumn": 183,
                            "endLine": 219,
                            "endColumn": 194
                        }
                    },
                    "position": {
                        "startLine": 118,
                        "startColumn": 80,
                        "endLine": 118,
                        "endColumn": 91
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleSetter/method/generateSetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-levelfieldNodesourceNodeonMethodonParam": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleSetter.java-lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-lombok.javac.handlers.HandleSetter/method/generateSetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)-levelfieldNodesourceNodeonMethodonParam",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "from_class_or_interface_name": "HandleSetter",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "from_method_name": "createSetterForField",
            "from_method_key": "lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleSetter.java",
            "to_class_or_interface_name": "HandleSetter",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleSetter",
            "to_method_name": "generateSetterForField",
            "to_method_key": "lombok.javac.handlers.HandleSetter/method/generateSetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/level": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/level",
                    "name": "level",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/generateSetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/level",
                        "name": "level",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 105,
                            "startColumn": 92,
                            "endLine": 105,
                            "endColumn": 97
                        }
                    },
                    "position": {
                        "startLine": 150,
                        "startColumn": 47,
                        "endLine": 150,
                        "endColumn": 52
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/fieldNode": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/fieldNode",
                    "name": "fieldNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/generateSetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/fieldNode",
                        "name": "fieldNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 105,
                            "startColumn": 47,
                            "endLine": 105,
                            "endColumn": 56
                        }
                    },
                    "position": {
                        "startLine": 150,
                        "startColumn": 64,
                        "endLine": 150,
                        "endColumn": 73
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/sourceNode": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/sourceNode",
                    "name": "sourceNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/generateSetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/sourceNode",
                        "name": "sourceNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 105,
                            "startColumn": 68,
                            "endLine": 105,
                            "endColumn": 78
                        }
                    },
                    "position": {
                        "startLine": 150,
                        "startColumn": 85,
                        "endLine": 150,
                        "endColumn": 95
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/generateSetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 105,
                            "startColumn": 118,
                            "endLine": 105,
                            "endColumn": 126
                        }
                    },
                    "position": {
                        "startLine": 150,
                        "startColumn": 139,
                        "endLine": 150,
                        "endColumn": 147
                    }
                },
                "lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam": {
                    "key": "lombok.javac.handlers.HandleSetter/method/createSetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, boolean whineIfExists, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                    "name": "onParam",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleSetter/method/generateSetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode sourceNode, lombok.javac.handlers.lombok.AccessLevel level, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onParam)/parameter/onParam",
                        "name": "onParam",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 105,
                            "startColumn": 147,
                            "endLine": 105,
                            "endColumn": 154
                        }
                    },
                    "position": {
                        "startLine": 150,
                        "startColumn": 168,
                        "endLine": 150,
                        "endColumn": 175
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacHandlerUtil.java-lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)-lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> annotations)-makerparentTypetypeNameinstanceparams": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacHandlerUtil.java-lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)-lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> annotations)-makerparentTypetypeNameinstanceparams",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacHandlerUtil.java",
            "from_class_or_interface_name": "JavacHandlerUtil",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacHandlerUtil",
            "from_method_name": "namePlusTypeParamsToTypeReference",
            "from_method_key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacHandlerUtil.java",
            "to_class_or_interface_name": "JavacHandlerUtil",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacHandlerUtil",
            "to_method_name": "namePlusTypeParamsToTypeReference",
            "to_method_key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> annotations)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)/parameter/maker": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)/parameter/maker",
                    "name": "maker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> annotations)/parameter/maker",
                        "name": "maker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 2065,
                            "startColumn": 78,
                            "endLine": 2065,
                            "endColumn": 83
                        }
                    },
                    "position": {
                        "startLine": 2061,
                        "startColumn": 78,
                        "endLine": 2061,
                        "endColumn": 83
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)/parameter/parentType": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)/parameter/parentType",
                    "name": "parentType",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> annotations)/parameter/parentType",
                        "name": "parentType",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 2065,
                            "startColumn": 95,
                            "endLine": 2065,
                            "endColumn": 105
                        }
                    },
                    "position": {
                        "startLine": 2061,
                        "startColumn": 95,
                        "endLine": 2061,
                        "endColumn": 105
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)/parameter/typeName": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)/parameter/typeName",
                    "name": "typeName",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> annotations)/parameter/typeName",
                        "name": "typeName",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 2065,
                            "startColumn": 112,
                            "endLine": 2065,
                            "endColumn": 120
                        }
                    },
                    "position": {
                        "startLine": 2061,
                        "startColumn": 112,
                        "endLine": 2061,
                        "endColumn": 120
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)/parameter/instance": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)/parameter/instance",
                    "name": "instance",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> annotations)/parameter/instance",
                        "name": "instance",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 2065,
                            "startColumn": 130,
                            "endLine": 2065,
                            "endColumn": 138
                        }
                    },
                    "position": {
                        "startLine": 2061,
                        "startColumn": 130,
                        "endLine": 2061,
                        "endColumn": 138
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)/parameter/params": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params)/parameter/params",
                    "name": "params",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter>",
                    "displayedType": "List<JCTypeParameter>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/namePlusTypeParamsToTypeReference(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode parentType, com.sun.tools.javac.util.Name typeName, boolean instance, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter> params, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> annotations)/parameter/params",
                        "name": "params",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCTypeParameter>",
                        "displayedType": "List<JCTypeParameter>",
                        "modifiers": [],
                        "position": {
                            "startLine": 2065,
                            "startColumn": 162,
                            "endLine": 2065,
                            "endColumn": 168
                        }
                    },
                    "position": {
                        "startLine": 2061,
                        "startColumn": 162,
                        "endLine": 2061,
                        "endColumn": 168
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.tree.JCTree$JCExpression type, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)-countaddExtendsnodetypeArgssource": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.tree.JCTree$JCExpression type, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)-countaddExtendsnodetypeArgssource",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "createTypeArgs",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "addTypeArgs",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.tree.JCTree$JCExpression type, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/count": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/count",
                    "name": "count",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.tree.JCTree$JCExpression type, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/count",
                        "name": "count",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 414,
                            "startColumn": 42,
                            "endLine": 414,
                            "endColumn": 47
                        }
                    },
                    "position": {
                        "startLine": 421,
                        "startColumn": 51,
                        "endLine": 421,
                        "endColumn": 56
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/addExtends": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/addExtends",
                    "name": "addExtends",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.tree.JCTree$JCExpression type, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/addExtends",
                        "name": "addExtends",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 414,
                            "startColumn": 57,
                            "endLine": 414,
                            "endColumn": 67
                        }
                    },
                    "position": {
                        "startLine": 421,
                        "startColumn": 66,
                        "endLine": 421,
                        "endColumn": 76
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/node": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/node",
                    "name": "node",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.tree.JCTree$JCExpression type, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/node",
                        "name": "node",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 414,
                            "startColumn": 79,
                            "endLine": 414,
                            "endColumn": 83
                        }
                    },
                    "position": {
                        "startLine": 421,
                        "startColumn": 88,
                        "endLine": 421,
                        "endColumn": 92
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeArgs": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeArgs",
                    "name": "typeArgs",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression>",
                    "displayedType": "List<JCExpression>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.tree.JCTree$JCExpression type, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/typeArgs",
                        "name": "typeArgs",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression>",
                        "displayedType": "List<JCExpression>",
                        "modifiers": [],
                        "position": {
                            "startLine": 414,
                            "startColumn": 123,
                            "endLine": 414,
                            "endColumn": 131
                        }
                    },
                    "position": {
                        "startLine": 421,
                        "startColumn": 113,
                        "endLine": 421,
                        "endColumn": 121
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.javac.handlers.lombok.javac.JavacNode node, com.sun.tools.javac.tree.JCTree$JCExpression type, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCExpression> typeArgs, lombok.javac.handlers.lombok.javac.JavacNode source)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 414,
                            "startColumn": 143,
                            "endLine": 414,
                            "endColumn": 149
                        }
                    },
                    "position": {
                        "startLine": 421,
                        "startColumn": 133,
                        "endLine": 421,
                        "endColumn": 139
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java-lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)-lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)-problemReportermessageSendmethodscope": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java-lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)-lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)-problemReportermessageSendmethodscope",
            "probability": 1,
            "from_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java",
            "from_class_or_interface_name": "PatchExtensionMethod",
            "from_class_or_interface_key": "lombok.eclipse.agent.PatchExtensionMethod",
            "from_method_name": "invalidMethod",
            "from_method_key": "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)",
            "to_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java",
            "to_class_or_interface_name": "PostponedInvalidMethodError",
            "to_class_or_interface_key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError",
            "to_method_name": "invoke",
            "to_method_key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/problemReporter": {
                    "key": "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/problemReporter",
                    "name": "problemReporter",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter",
                    "displayedType": "ProblemReporter",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/problemReporter",
                        "name": "problemReporter",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter",
                        "displayedType": "ProblemReporter",
                        "modifiers": [],
                        "position": {
                            "startLine": 121,
                            "startColumn": 38,
                            "endLine": 121,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 246,
                        "startColumn": 51,
                        "endLine": 246,
                        "endColumn": 66
                    }
                },
                "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/messageSend": {
                    "key": "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/messageSend",
                    "name": "messageSend",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend",
                    "displayedType": "MessageSend",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/messageSend",
                        "name": "messageSend",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend",
                        "displayedType": "MessageSend",
                        "modifiers": [],
                        "position": {
                            "startLine": 121,
                            "startColumn": 67,
                            "endLine": 121,
                            "endColumn": 78
                        }
                    },
                    "position": {
                        "startLine": 246,
                        "startColumn": 80,
                        "endLine": 246,
                        "endColumn": 91
                    }
                },
                "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/method": {
                    "key": "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/method",
                    "name": "method",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding",
                    "displayedType": "MethodBinding",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/method",
                        "name": "method",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding",
                        "displayedType": "MethodBinding",
                        "modifiers": [],
                        "position": {
                            "startLine": 121,
                            "startColumn": 94,
                            "endLine": 121,
                            "endColumn": 100
                        }
                    },
                    "position": {
                        "startLine": 246,
                        "startColumn": 107,
                        "endLine": 246,
                        "endColumn": 113
                    }
                },
                "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/scope": {
                    "key": "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/scope",
                    "name": "scope",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope",
                    "displayedType": "Scope",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/method/invoke(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/scope",
                        "name": "scope",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope",
                        "displayedType": "Scope",
                        "modifiers": [],
                        "position": {
                            "startLine": 121,
                            "startColumn": 108,
                            "endLine": 121,
                            "endColumn": 113
                        }
                    },
                    "position": {
                        "startLine": 246,
                        "startColumn": 121,
                        "endLine": 246,
                        "endColumn": 126
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)-fromtotypecopyMode": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)-fromtotypecopyMode",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "from_class_or_interface_name": "EclipseHandlerUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "from_method_name": "copyJavadoc",
            "from_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)",
            "to_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "to_class_or_interface_name": "EclipseHandlerUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "to_method_name": "copyJavadoc",
            "to_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/from": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/from",
                    "name": "from",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)/parameter/from",
                        "name": "from",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 2925,
                            "startColumn": 45,
                            "endLine": 2925,
                            "endColumn": 49
                        }
                    },
                    "position": {
                        "startLine": 2938,
                        "startColumn": 45,
                        "endLine": 2938,
                        "endColumn": 49
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/to": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/to",
                    "name": "to",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                    "displayedType": "ASTNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)/parameter/to",
                        "name": "to",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                        "displayedType": "ASTNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 2925,
                            "startColumn": 59,
                            "endLine": 2925,
                            "endColumn": 61
                        }
                    },
                    "position": {
                        "startLine": 2938,
                        "startColumn": 59,
                        "endLine": 2938,
                        "endColumn": 61
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/type": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/type",
                    "name": "type",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration",
                    "displayedType": "TypeDeclaration",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)/parameter/type",
                        "name": "type",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration",
                        "displayedType": "TypeDeclaration",
                        "modifiers": [],
                        "position": {
                            "startLine": 2925,
                            "startColumn": 79,
                            "endLine": 2925,
                            "endColumn": 83
                        }
                    },
                    "position": {
                        "startLine": 2938,
                        "startColumn": 79,
                        "endLine": 2938,
                        "endColumn": 83
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/copyMode": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/copyMode",
                    "name": "copyMode",
                    "type": "lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc",
                    "displayedType": "CopyJavadoc",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode)/parameter/copyMode",
                        "name": "copyMode",
                        "type": "lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc",
                        "displayedType": "CopyJavadoc",
                        "modifiers": [],
                        "position": {
                            "startLine": 2925,
                            "startColumn": 97,
                            "endLine": 2925,
                            "endColumn": 105
                        }
                    },
                    "position": {
                        "startLine": 2938,
                        "startColumn": 97,
                        "endLine": 2938,
                        "endColumn": 105
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToMethodDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)-lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToVarDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)-typeNodemthannTypetypeUse": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToMethodDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)-lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToVarDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)-typeNodemthannTypetypeUse",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "from_class_or_interface_name": "EclipseHandlerUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "from_method_name": "applyAnnotationToMethodDecl",
            "from_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToMethodDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)",
            "to_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "to_class_or_interface_name": "EclipseHandlerUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "to_method_name": "applyAnnotationToVarDecl",
            "to_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToVarDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToMethodDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/typeNode": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToMethodDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToVarDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 2646,
                            "startColumn": 59,
                            "endLine": 2646,
                            "endColumn": 67
                        }
                    },
                    "position": {
                        "startLine": 2612,
                        "startColumn": 62,
                        "endLine": 2612,
                        "endColumn": 70
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToMethodDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/mth": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToMethodDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/mth",
                    "name": "mth",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration",
                    "displayedType": "MethodDeclaration",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToVarDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/mth",
                        "name": "mth",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration",
                        "displayedType": "MethodDeclaration",
                        "modifiers": [],
                        "position": {
                            "startLine": 2646,
                            "startColumn": 101,
                            "endLine": 2646,
                            "endColumn": 104
                        }
                    },
                    "position": {
                        "startLine": 2612,
                        "startColumn": 90,
                        "endLine": 2612,
                        "endColumn": 93
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToMethodDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/annType": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToMethodDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/annType",
                    "name": "annType",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToVarDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/annType",
                        "name": "annType",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 2646,
                            "startColumn": 113,
                            "endLine": 2646,
                            "endColumn": 120
                        }
                    },
                    "position": {
                        "startLine": 2612,
                        "startColumn": 102,
                        "endLine": 2612,
                        "endColumn": 109
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToMethodDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/typeUse": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToMethodDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/typeUse",
                    "name": "typeUse",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/applyAnnotationToVarDecl(lombok.eclipse.handlers.lombok.eclipse.EclipseNode typeNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Argument arg, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration mth, java.lang.String annType, boolean typeUse)/parameter/typeUse",
                        "name": "typeUse",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 2646,
                            "startColumn": 130,
                            "endLine": 2646,
                            "endColumn": 137
                        }
                    },
                    "position": {
                        "startLine": 2612,
                        "startColumn": 119,
                        "endLine": 2612,
                        "endColumn": 126
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)-fromtocopyModeforceAddReturn": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)-lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)-fromtocopyModeforceAddReturn",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "from_class_or_interface_name": "EclipseHandlerUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "from_method_name": "copyJavadoc",
            "from_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)",
            "to_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "to_class_or_interface_name": "EclipseHandlerUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "to_method_name": "copyJavadoc",
            "to_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/from": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/from",
                    "name": "from",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/from",
                        "name": "from",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 2921,
                            "startColumn": 45,
                            "endLine": 2921,
                            "endColumn": 49
                        }
                    },
                    "position": {
                        "startLine": 2938,
                        "startColumn": 45,
                        "endLine": 2938,
                        "endColumn": 49
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/to": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/to",
                    "name": "to",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                    "displayedType": "ASTNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/to",
                        "name": "to",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                        "displayedType": "ASTNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 2921,
                            "startColumn": 59,
                            "endLine": 2921,
                            "endColumn": 61
                        }
                    },
                    "position": {
                        "startLine": 2938,
                        "startColumn": 59,
                        "endLine": 2938,
                        "endColumn": 61
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/copyMode": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/copyMode",
                    "name": "copyMode",
                    "type": "lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc",
                    "displayedType": "CopyJavadoc",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/copyMode",
                        "name": "copyMode",
                        "type": "lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc",
                        "displayedType": "CopyJavadoc",
                        "modifiers": [],
                        "position": {
                            "startLine": 2921,
                            "startColumn": 75,
                            "endLine": 2921,
                            "endColumn": 83
                        }
                    },
                    "position": {
                        "startLine": 2938,
                        "startColumn": 97,
                        "endLine": 2938,
                        "endColumn": 105
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/forceAddReturn": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration type, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/forceAddReturn",
                    "name": "forceAddReturn",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/copyJavadoc(lombok.eclipse.handlers.lombok.eclipse.EclipseNode from, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode to, lombok.eclipse.handlers.EclipseHandlerUtil$CopyJavadoc copyMode, boolean forceAddReturn)/parameter/forceAddReturn",
                        "name": "forceAddReturn",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 2921,
                            "startColumn": 93,
                            "endLine": 2921,
                            "endColumn": 107
                        }
                    },
                    "position": {
                        "startLine": 2938,
                        "startColumn": 115,
                        "endLine": 2938,
                        "endColumn": 129
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)-lombok.eclipse.handlers.EclipseHandlerUtil/method/generateTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, long p)-parentnameinstancep": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java-lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)-lombok.eclipse.handlers.EclipseHandlerUtil/method/generateTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, long p)-parentnameinstancep",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "from_class_or_interface_name": "EclipseHandlerUtil",
            "from_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "from_method_name": "generateParameterizedTypeReference",
            "from_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)",
            "to_file_path": "src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
            "to_class_or_interface_name": "EclipseHandlerUtil",
            "to_class_or_interface_key": "lombok.eclipse.handlers.EclipseHandlerUtil",
            "to_method_name": "generateTypeReference",
            "to_method_key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, long p)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/parent": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/parent",
                    "name": "parent",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, long p)/parameter/parent",
                        "name": "parent",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 1000,
                            "startColumn": 64,
                            "endLine": 1000,
                            "endColumn": 70
                        }
                    },
                    "position": {
                        "startLine": 917,
                        "startColumn": 77,
                        "endLine": 917,
                        "endColumn": 83
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/name": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/name",
                    "name": "name",
                    "type": "char[]",
                    "displayedType": "char[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, long p)/parameter/name",
                        "name": "name",
                        "type": "char[]",
                        "displayedType": "char[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 1000,
                            "startColumn": 79,
                            "endLine": 1000,
                            "endColumn": 83
                        }
                    },
                    "position": {
                        "startLine": 917,
                        "startColumn": 92,
                        "endLine": 917,
                        "endColumn": 96
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/instance": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/instance",
                    "name": "instance",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, long p)/parameter/instance",
                        "name": "instance",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 1000,
                            "startColumn": 93,
                            "endLine": 1000,
                            "endColumn": 101
                        }
                    },
                    "position": {
                        "startLine": 917,
                        "startColumn": 106,
                        "endLine": 917,
                        "endColumn": 114
                    }
                },
                "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/p": {
                    "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateParameterizedTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeParams, long p)/parameter/p",
                    "name": "p",
                    "type": "long",
                    "displayedType": "long",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseHandlerUtil/method/generateTypeReference(lombok.eclipse.handlers.lombok.eclipse.EclipseNode parent, char[] name, boolean instance, long p)/parameter/p",
                        "name": "p",
                        "type": "long",
                        "displayedType": "long",
                        "modifiers": [],
                        "position": {
                            "startLine": 1000,
                            "startColumn": 108,
                            "endLine": 1000,
                            "endColumn": 109
                        }
                    },
                    "position": {
                        "startLine": 917,
                        "startColumn": 149,
                        "endLine": 917,
                        "endColumn": 150
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseSingularsRecipes.java-lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference type, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)-lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)-countaddExtendsnodetypeArgs": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/EclipseSingularsRecipes.java-lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference type, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)-lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)-countaddExtendsnodetypeArgs",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/EclipseSingularsRecipes.java",
            "from_class_or_interface_name": "EclipseSingularizer",
            "from_class_or_interface_key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer",
            "from_method_name": "addTypeArgs",
            "from_method_key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference type, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)",
            "to_file_path": "src/core/lombok/eclipse/handlers/EclipseSingularsRecipes.java",
            "to_class_or_interface_name": "EclipseSingularizer",
            "to_class_or_interface_key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer",
            "to_method_name": "createTypeArgs",
            "to_method_key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference type, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/count": {
                    "key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference type, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/count",
                    "name": "count",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/count",
                        "name": "count",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 337,
                            "startColumn": 48,
                            "endLine": 337,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 321,
                        "startColumn": 43,
                        "endLine": 321,
                        "endColumn": 48
                    }
                },
                "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference type, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/addExtends": {
                    "key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference type, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/addExtends",
                    "name": "addExtends",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/addExtends",
                        "name": "addExtends",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 337,
                            "startColumn": 63,
                            "endLine": 337,
                            "endColumn": 73
                        }
                    },
                    "position": {
                        "startLine": 321,
                        "startColumn": 58,
                        "endLine": 321,
                        "endColumn": 68
                    }
                },
                "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference type, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/node": {
                    "key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference type, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/node",
                    "name": "node",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/node",
                        "name": "node",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 337,
                            "startColumn": 87,
                            "endLine": 337,
                            "endColumn": 91
                        }
                    },
                    "position": {
                        "startLine": 321,
                        "startColumn": 82,
                        "endLine": 321,
                        "endColumn": 86
                    }
                },
                "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference type, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/typeArgs": {
                    "key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/addTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference type, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/typeArgs",
                    "name": "typeArgs",
                    "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference>",
                    "displayedType": "List<TypeReference>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.EclipseSingularsRecipes.EclipseSingularizer/method/createTypeArgs(int count, boolean addExtends, lombok.eclipse.handlers.lombok.eclipse.EclipseNode node, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference> typeArgs)/parameter/typeArgs",
                        "name": "typeArgs",
                        "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeReference>",
                        "displayedType": "List<TypeReference>",
                        "modifiers": [],
                        "position": {
                            "startLine": 337,
                            "startColumn": 113,
                            "endLine": 337,
                            "endColumn": 121
                        }
                    },
                    "position": {
                        "startLine": 321,
                        "startColumn": 128,
                        "endLine": 321,
                        "endColumn": 136
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleGetter.java-lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-lombok.eclipse.handlers.HandleGetter/method/createGetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, int modifier, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-fieldNodesourcelazyonMethod": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleGetter.java-lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-lombok.eclipse.handlers.HandleGetter/method/createGetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, int modifier, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-fieldNodesourcelazyonMethod",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleGetter.java",
            "from_class_or_interface_name": "HandleGetter",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleGetter",
            "from_method_name": "createGetterForField",
            "from_method_key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleGetter.java",
            "to_class_or_interface_name": "HandleGetter",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleGetter",
            "to_method_name": "createGetter",
            "to_method_key": "lombok.eclipse.handlers.HandleGetter/method/createGetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, int modifier, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/fieldNode": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/fieldNode",
                    "name": "fieldNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/createGetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, int modifier, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/fieldNode",
                        "name": "fieldNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 242,
                            "startColumn": 76,
                            "endLine": 242,
                            "endColumn": 85
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 16,
                        "endLine": 172,
                        "endColumn": 25
                    }
                },
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/source": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/source",
                    "name": "source",
                    "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                    "displayedType": "ASTNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/createGetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, int modifier, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/source",
                        "name": "source",
                        "type": "lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode",
                        "displayedType": "ASTNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 242,
                            "startColumn": 122,
                            "endLine": 242,
                            "endColumn": 128
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 58,
                        "endLine": 172,
                        "endColumn": 64
                    }
                },
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/lazy": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/lazy",
                    "name": "lazy",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/createGetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, int modifier, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/lazy",
                        "name": "lazy",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 242,
                            "startColumn": 138,
                            "endLine": 242,
                            "endColumn": 142
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 97,
                        "endLine": 172,
                        "endColumn": 101
                    }
                },
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/onMethod": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                    "displayedType": "List<Annotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/createGetter(lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration parent, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, java.lang.String name, int modifier, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                        "displayedType": "List<Annotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 242,
                            "startColumn": 161,
                            "endLine": 242,
                            "endColumn": 169
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 120,
                        "endLine": 172,
                        "endColumn": 128
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleGetter.java-lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-lombok.eclipse.handlers.HandleGetter/method/generateGetterForField(lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode pos, lombok.eclipse.handlers.lombok.AccessLevel level, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-levelfieldNodelazyonMethod": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/handlers/HandleGetter.java-lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-lombok.eclipse.handlers.HandleGetter/method/generateGetterForField(lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode pos, lombok.eclipse.handlers.lombok.AccessLevel level, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)-levelfieldNodelazyonMethod",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/handlers/HandleGetter.java",
            "from_class_or_interface_name": "HandleGetter",
            "from_class_or_interface_key": "lombok.eclipse.handlers.HandleGetter",
            "from_method_name": "createGetterForField",
            "from_method_key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)",
            "to_file_path": "src/core/lombok/eclipse/handlers/HandleGetter.java",
            "to_class_or_interface_name": "HandleGetter",
            "to_class_or_interface_key": "lombok.eclipse.handlers.HandleGetter",
            "to_method_name": "generateGetterForField",
            "to_method_key": "lombok.eclipse.handlers.HandleGetter/method/generateGetterForField(lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode pos, lombok.eclipse.handlers.lombok.AccessLevel level, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/level": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/level",
                    "name": "level",
                    "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/generateGetterForField(lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode pos, lombok.eclipse.handlers.lombok.AccessLevel level, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/level",
                        "name": "level",
                        "type": "lombok.eclipse.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 124,
                            "startColumn": 85,
                            "endLine": 124,
                            "endColumn": 90
                        }
                    },
                    "position": {
                        "startLine": 171,
                        "startColumn": 47,
                        "endLine": 171,
                        "endColumn": 52
                    }
                },
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/fieldNode": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/fieldNode",
                    "name": "fieldNode",
                    "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/generateGetterForField(lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode pos, lombok.eclipse.handlers.lombok.AccessLevel level, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/fieldNode",
                        "name": "fieldNode",
                        "type": "lombok.eclipse.handlers.lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 124,
                            "startColumn": 49,
                            "endLine": 124,
                            "endColumn": 58
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 16,
                        "endLine": 172,
                        "endColumn": 25
                    }
                },
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/lazy": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/lazy",
                    "name": "lazy",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/generateGetterForField(lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode pos, lombok.eclipse.handlers.lombok.AccessLevel level, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/lazy",
                        "name": "lazy",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 124,
                            "startColumn": 100,
                            "endLine": 124,
                            "endColumn": 104
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 97,
                        "endLine": 172,
                        "endColumn": 101
                    }
                },
                "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/onMethod": {
                    "key": "lombok.eclipse.handlers.HandleGetter/method/createGetterForField(lombok.eclipse.handlers.lombok.AccessLevel level, lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.lombok.eclipse.EclipseNode errorNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode source, boolean whineIfExists, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                    "displayedType": "List<Annotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.handlers.HandleGetter/method/generateGetterForField(lombok.eclipse.handlers.lombok.eclipse.EclipseNode fieldNode, lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.ASTNode pos, lombok.eclipse.handlers.lombok.AccessLevel level, boolean lazy, java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation> onMethod)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "java.util.List<lombok.eclipse.handlers.org.eclipse.jdt.internal.compiler.ast.Annotation>",
                        "displayedType": "List<Annotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 124,
                            "startColumn": 123,
                            "endLine": 124,
                            "endColumn": 131
                        }
                    },
                    "position": {
                        "startLine": 172,
                        "startColumn": 120,
                        "endLine": 172,
                        "endColumn": 128
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleDelegate.java-lombok.javac.handlers.HandleDelegate/method/generateAndAdd(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)-lombok.javac.handlers.HandleDelegate/method/createDelegateMethod(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)-sigannotationdelegateNamedelegateReceiver": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleDelegate.java-lombok.javac.handlers.HandleDelegate/method/generateAndAdd(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)-lombok.javac.handlers.HandleDelegate/method/createDelegateMethod(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)-sigannotationdelegateNamedelegateReceiver",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleDelegate.java",
            "from_class_or_interface_name": "HandleDelegate",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleDelegate",
            "from_method_name": "generateAndAdd",
            "from_method_key": "lombok.javac.handlers.HandleDelegate/method/generateAndAdd(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleDelegate.java",
            "to_class_or_interface_name": "HandleDelegate",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleDelegate",
            "to_method_name": "createDelegateMethod",
            "to_method_key": "lombok.javac.handlers.HandleDelegate/method/createDelegateMethod(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleDelegate/method/generateAndAdd(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/sig": {
                    "key": "lombok.javac.handlers.HandleDelegate/method/generateAndAdd(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/sig",
                    "name": "sig",
                    "type": "lombok.javac.handlers.HandleDelegate$MethodSig",
                    "displayedType": "MethodSig",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleDelegate/method/createDelegateMethod(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/sig",
                        "name": "sig",
                        "type": "lombok.javac.handlers.HandleDelegate$MethodSig",
                        "displayedType": "MethodSig",
                        "modifiers": [],
                        "position": {
                            "startLine": 288,
                            "startColumn": 53,
                            "endLine": 288,
                            "endColumn": 56
                        }
                    },
                    "position": {
                        "startLine": 220,
                        "startColumn": 39,
                        "endLine": 220,
                        "endColumn": 42
                    }
                },
                "lombok.javac.handlers.HandleDelegate/method/generateAndAdd(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/annotation": {
                    "key": "lombok.javac.handlers.HandleDelegate/method/generateAndAdd(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/annotation",
                    "name": "annotation",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleDelegate/method/createDelegateMethod(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/annotation",
                        "name": "annotation",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 288,
                            "startColumn": 68,
                            "endLine": 288,
                            "endColumn": 78
                        }
                    },
                    "position": {
                        "startLine": 220,
                        "startColumn": 54,
                        "endLine": 220,
                        "endColumn": 64
                    }
                },
                "lombok.javac.handlers.HandleDelegate/method/generateAndAdd(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/delegateName": {
                    "key": "lombok.javac.handlers.HandleDelegate/method/generateAndAdd(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/delegateName",
                    "name": "delegateName",
                    "type": "com.sun.tools.javac.util.Name",
                    "displayedType": "Name",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleDelegate/method/createDelegateMethod(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/delegateName",
                        "name": "delegateName",
                        "type": "com.sun.tools.javac.util.Name",
                        "displayedType": "Name",
                        "modifiers": [],
                        "position": {
                            "startLine": 288,
                            "startColumn": 85,
                            "endLine": 288,
                            "endColumn": 97
                        }
                    },
                    "position": {
                        "startLine": 220,
                        "startColumn": 71,
                        "endLine": 220,
                        "endColumn": 83
                    }
                },
                "lombok.javac.handlers.HandleDelegate/method/generateAndAdd(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/delegateReceiver": {
                    "key": "lombok.javac.handlers.HandleDelegate/method/generateAndAdd(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/delegateReceiver",
                    "name": "delegateReceiver",
                    "type": "lombok.javac.handlers.HandleDelegate$DelegateReceiver",
                    "displayedType": "DelegateReceiver",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleDelegate/method/createDelegateMethod(lombok.javac.handlers.HandleDelegate$MethodSig sig, lombok.javac.handlers.lombok.javac.JavacNode annotation, com.sun.tools.javac.util.Name delegateName, lombok.javac.handlers.HandleDelegate$DelegateReceiver delegateReceiver)/parameter/delegateReceiver",
                        "name": "delegateReceiver",
                        "type": "lombok.javac.handlers.HandleDelegate$DelegateReceiver",
                        "displayedType": "DelegateReceiver",
                        "modifiers": [],
                        "position": {
                            "startLine": 288,
                            "startColumn": 116,
                            "endLine": 288,
                            "endColumn": 132
                        }
                    },
                    "position": {
                        "startLine": 220,
                        "startColumn": 102,
                        "endLine": 220,
                        "endColumn": 118
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleGetter.java-lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)-lombok.javac.handlers.HandleGetter/method/createGetterForFields(lombok.javac.handlers.lombok.AccessLevel level, java.util.Collection<lombok.javac.handlers.lombok.javac.JavacNode> fieldNodes, lombok.javac.handlers.lombok.javac.JavacNode errorNode, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)-levelwhineIfExistslazyonMethod": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleGetter.java-lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)-lombok.javac.handlers.HandleGetter/method/createGetterForFields(lombok.javac.handlers.lombok.AccessLevel level, java.util.Collection<lombok.javac.handlers.lombok.javac.JavacNode> fieldNodes, lombok.javac.handlers.lombok.javac.JavacNode errorNode, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)-levelwhineIfExistslazyonMethod",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleGetter.java",
            "from_class_or_interface_name": "HandleGetter",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleGetter",
            "from_method_name": "createGetterForField",
            "from_method_key": "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleGetter.java",
            "to_class_or_interface_name": "HandleGetter",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleGetter",
            "to_method_name": "createGetterForFields",
            "to_method_key": "lombok.javac.handlers.HandleGetter/method/createGetterForFields(lombok.javac.handlers.lombok.AccessLevel level, java.util.Collection<lombok.javac.handlers.lombok.javac.JavacNode> fieldNodes, lombok.javac.handlers.lombok.javac.JavacNode errorNode, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/level": {
                    "key": "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/level",
                    "name": "level",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleGetter/method/createGetterForFields(lombok.javac.handlers.lombok.AccessLevel level, java.util.Collection<lombok.javac.handlers.lombok.javac.JavacNode> fieldNodes, lombok.javac.handlers.lombok.javac.JavacNode errorNode, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/level",
                        "name": "level",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 162,
                            "startColumn": 48,
                            "endLine": 162,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 168,
                        "startColumn": 47,
                        "endLine": 168,
                        "endColumn": 52
                    }
                },
                "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/whineIfExists": {
                    "key": "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/whineIfExists",
                    "name": "whineIfExists",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleGetter/method/createGetterForFields(lombok.javac.handlers.lombok.AccessLevel level, java.util.Collection<lombok.javac.handlers.lombok.javac.JavacNode> fieldNodes, lombok.javac.handlers.lombok.javac.JavacNode errorNode, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/whineIfExists",
                        "name": "whineIfExists",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 162,
                            "startColumn": 118,
                            "endLine": 162,
                            "endColumn": 131
                        }
                    },
                    "position": {
                        "startLine": 169,
                        "startColumn": 51,
                        "endLine": 169,
                        "endColumn": 64
                    }
                },
                "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/lazy": {
                    "key": "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/lazy",
                    "name": "lazy",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleGetter/method/createGetterForFields(lombok.javac.handlers.lombok.AccessLevel level, java.util.Collection<lombok.javac.handlers.lombok.javac.JavacNode> fieldNodes, lombok.javac.handlers.lombok.javac.JavacNode errorNode, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/lazy",
                        "name": "lazy",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 162,
                            "startColumn": 141,
                            "endLine": 162,
                            "endColumn": 145
                        }
                    },
                    "position": {
                        "startLine": 169,
                        "startColumn": 74,
                        "endLine": 169,
                        "endColumn": 78
                    }
                },
                "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/onMethod": {
                    "key": "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleGetter/method/createGetterForFields(lombok.javac.handlers.lombok.AccessLevel level, java.util.Collection<lombok.javac.handlers.lombok.javac.JavacNode> fieldNodes, lombok.javac.handlers.lombok.javac.JavacNode errorNode, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 162,
                            "startColumn": 166,
                            "endLine": 162,
                            "endColumn": 174
                        }
                    },
                    "position": {
                        "startLine": 169,
                        "startColumn": 99,
                        "endLine": 169,
                        "endColumn": 107
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleGetter.java-lombok.javac.handlers.HandleGetter/method/generateGetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition pos, lombok.javac.handlers.lombok.AccessLevel level, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)-lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)-fieldNodelevellazyonMethod": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/HandleGetter.java-lombok.javac.handlers.HandleGetter/method/generateGetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition pos, lombok.javac.handlers.lombok.AccessLevel level, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)-lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)-fieldNodelevellazyonMethod",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/HandleGetter.java",
            "from_class_or_interface_name": "HandleGetter",
            "from_class_or_interface_key": "lombok.javac.handlers.HandleGetter",
            "from_method_name": "generateGetterForField",
            "from_method_key": "lombok.javac.handlers.HandleGetter/method/generateGetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition pos, lombok.javac.handlers.lombok.AccessLevel level, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)",
            "to_file_path": "src/core/lombok/javac/handlers/HandleGetter.java",
            "to_class_or_interface_name": "HandleGetter",
            "to_class_or_interface_key": "lombok.javac.handlers.HandleGetter",
            "to_method_name": "createGetterForField",
            "to_method_key": "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.HandleGetter/method/generateGetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition pos, lombok.javac.handlers.lombok.AccessLevel level, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/fieldNode": {
                    "key": "lombok.javac.handlers.HandleGetter/method/generateGetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition pos, lombok.javac.handlers.lombok.AccessLevel level, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/fieldNode",
                    "name": "fieldNode",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/fieldNode",
                        "name": "fieldNode",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 169,
                            "startColumn": 14,
                            "endLine": 169,
                            "endColumn": 23
                        }
                    },
                    "position": {
                        "startLine": 119,
                        "startColumn": 47,
                        "endLine": 119,
                        "endColumn": 56
                    }
                },
                "lombok.javac.handlers.HandleGetter/method/generateGetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition pos, lombok.javac.handlers.lombok.AccessLevel level, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/level": {
                    "key": "lombok.javac.handlers.HandleGetter/method/generateGetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition pos, lombok.javac.handlers.lombok.AccessLevel level, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/level",
                    "name": "level",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/level",
                        "name": "level",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 168,
                            "startColumn": 47,
                            "endLine": 168,
                            "endColumn": 52
                        }
                    },
                    "position": {
                        "startLine": 119,
                        "startColumn": 94,
                        "endLine": 119,
                        "endColumn": 99
                    }
                },
                "lombok.javac.handlers.HandleGetter/method/generateGetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition pos, lombok.javac.handlers.lombok.AccessLevel level, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/lazy": {
                    "key": "lombok.javac.handlers.HandleGetter/method/generateGetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition pos, lombok.javac.handlers.lombok.AccessLevel level, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/lazy",
                    "name": "lazy",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/lazy",
                        "name": "lazy",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 169,
                            "startColumn": 74,
                            "endLine": 169,
                            "endColumn": 78
                        }
                    },
                    "position": {
                        "startLine": 119,
                        "startColumn": 109,
                        "endLine": 119,
                        "endColumn": 113
                    }
                },
                "lombok.javac.handlers.HandleGetter/method/generateGetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition pos, lombok.javac.handlers.lombok.AccessLevel level, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/onMethod": {
                    "key": "lombok.javac.handlers.HandleGetter/method/generateGetterForField(lombok.javac.handlers.lombok.javac.JavacNode fieldNode, com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition pos, lombok.javac.handlers.lombok.AccessLevel level, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/onMethod",
                    "name": "onMethod",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.HandleGetter/method/createGetterForField(lombok.javac.handlers.lombok.AccessLevel level, lombok.javac.handlers.lombok.javac.JavacNode fieldNode, lombok.javac.handlers.lombok.javac.JavacNode source, boolean whineIfExists, boolean lazy, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> onMethod)/parameter/onMethod",
                        "name": "onMethod",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 169,
                            "startColumn": 99,
                            "endLine": 169,
                            "endColumn": 107
                        }
                    },
                    "position": {
                        "startLine": 119,
                        "startColumn": 134,
                        "endLine": 119,
                        "endColumn": 142
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacHandlerUtil.java-lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)-lombok.javac.handlers.JavacHandlerUtil/method/addGenerated(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)-modsnodesourcecontext": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacHandlerUtil.java-lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)-lombok.javac.handlers.JavacHandlerUtil/method/addGenerated(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)-modsnodesourcecontext",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacHandlerUtil.java",
            "from_class_or_interface_name": "JavacHandlerUtil",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacHandlerUtil",
            "from_method_name": "addSuppressWarningsAll",
            "from_method_key": "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacHandlerUtil.java",
            "to_class_or_interface_name": "JavacHandlerUtil",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacHandlerUtil",
            "to_method_name": "addGenerated",
            "to_method_key": "lombok.javac.handlers.JavacHandlerUtil/method/addGenerated(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/mods": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/mods",
                    "name": "mods",
                    "type": "com.sun.tools.javac.tree.JCTree$JCModifiers",
                    "displayedType": "JCModifiers",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/addGenerated(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/mods",
                        "name": "mods",
                        "type": "com.sun.tools.javac.tree.JCTree$JCModifiers",
                        "displayedType": "JCModifiers",
                        "modifiers": [],
                        "position": {
                            "startLine": 1536,
                            "startColumn": 46,
                            "endLine": 1536,
                            "endColumn": 50
                        }
                    },
                    "position": {
                        "startLine": 1511,
                        "startColumn": 56,
                        "endLine": 1511,
                        "endColumn": 60
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/node": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/node",
                    "name": "node",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/addGenerated(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/node",
                        "name": "node",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 1536,
                            "startColumn": 62,
                            "endLine": 1536,
                            "endColumn": 66
                        }
                    },
                    "position": {
                        "startLine": 1511,
                        "startColumn": 72,
                        "endLine": 1511,
                        "endColumn": 76
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/source": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/source",
                    "name": "source",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/addGenerated(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/source",
                        "name": "source",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 1536,
                            "startColumn": 78,
                            "endLine": 1536,
                            "endColumn": 84
                        }
                    },
                    "position": {
                        "startLine": 1511,
                        "startColumn": 88,
                        "endLine": 1511,
                        "endColumn": 94
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/context": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/addSuppressWarningsAll(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/context",
                    "name": "context",
                    "type": "com.sun.tools.javac.util.Context",
                    "displayedType": "Context",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/addGenerated(com.sun.tools.javac.tree.JCTree$JCModifiers mods, lombok.javac.handlers.lombok.javac.JavacNode node, lombok.javac.handlers.lombok.javac.JavacNode source, com.sun.tools.javac.util.Context context)/parameter/context",
                        "name": "context",
                        "type": "com.sun.tools.javac.util.Context",
                        "displayedType": "Context",
                        "modifiers": [],
                        "position": {
                            "startLine": 1536,
                            "startColumn": 94,
                            "endLine": 1536,
                            "endColumn": 101
                        }
                    },
                    "position": {
                        "startLine": 1511,
                        "startColumn": 104,
                        "endLine": 1511,
                        "endColumn": 111
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacHandlerUtil.java-lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)-lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, int pos, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)-nodeelem1elem2elems": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacHandlerUtil.java-lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)-lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, int pos, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)-nodeelem1elem2elems",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacHandlerUtil.java",
            "from_class_or_interface_name": "JavacHandlerUtil",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacHandlerUtil",
            "from_method_name": "chainDots",
            "from_method_key": "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacHandlerUtil.java",
            "to_class_or_interface_name": "JavacHandlerUtil",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacHandlerUtil",
            "to_method_name": "chainDots",
            "to_method_key": "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, int pos, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/node": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/node",
                    "name": "node",
                    "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                    "displayedType": "JavacNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, int pos, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/node",
                        "name": "node",
                        "type": "lombok.javac.handlers.lombok.javac.JavacNode",
                        "displayedType": "JavacNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 1639,
                            "startColumn": 49,
                            "endLine": 1639,
                            "endColumn": 53
                        }
                    },
                    "position": {
                        "startLine": 1607,
                        "startColumn": 49,
                        "endLine": 1607,
                        "endColumn": 53
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/elem1": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/elem1",
                    "name": "elem1",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, int pos, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/elem1",
                        "name": "elem1",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 1639,
                            "startColumn": 71,
                            "endLine": 1639,
                            "endColumn": 76
                        }
                    },
                    "position": {
                        "startLine": 1607,
                        "startColumn": 62,
                        "endLine": 1607,
                        "endColumn": 67
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/elem2": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/elem2",
                    "name": "elem2",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, int pos, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/elem2",
                        "name": "elem2",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 1639,
                            "startColumn": 85,
                            "endLine": 1639,
                            "endColumn": 90
                        }
                    },
                    "position": {
                        "startLine": 1607,
                        "startColumn": 76,
                        "endLine": 1607,
                        "endColumn": 81
                    }
                },
                "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/elems": {
                    "key": "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/elems",
                    "name": "elems",
                    "type": "java.lang.String[]",
                    "displayedType": "String[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacHandlerUtil/method/chainDots(lombok.javac.handlers.lombok.javac.JavacNode node, int pos, java.lang.String elem1, java.lang.String elem2, java.lang.String[] elems)/parameter/elems",
                        "name": "elems",
                        "type": "java.lang.String[]",
                        "displayedType": "String[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 1639,
                            "startColumn": 102,
                            "endLine": 1639,
                            "endColumn": 107
                        }
                    },
                    "position": {
                        "startLine": 1607,
                        "startColumn": 93,
                        "endLine": 1607,
                        "endColumn": 98
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)-makerdeprecatemethodAnnotationsaccess": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/javac/handlers/JavacSingularsRecipes.java-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)-lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)-makerdeprecatemethodAnnotationsaccess",
            "probability": 1,
            "from_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "from_class_or_interface_name": "JavacSingularizer",
            "from_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "from_method_name": "finishAndInjectMethod",
            "from_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)",
            "to_file_path": "src/core/lombok/javac/handlers/JavacSingularsRecipes.java",
            "to_class_or_interface_name": "JavacSingularizer",
            "to_class_or_interface_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer",
            "to_method_name": "makeMods",
            "to_method_key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/maker": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/maker",
                    "name": "maker",
                    "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                    "displayedType": "JavacTreeMaker",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)/parameter/maker",
                        "name": "maker",
                        "type": "lombok.javac.handlers.lombok.javac.JavacTreeMaker",
                        "displayedType": "JavacTreeMaker",
                        "modifiers": [],
                        "position": {
                            "startLine": 185,
                            "startColumn": 49,
                            "endLine": 185,
                            "endColumn": 54
                        }
                    },
                    "position": {
                        "startLine": 276,
                        "startColumn": 82,
                        "endLine": 276,
                        "endColumn": 87
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/deprecate": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/deprecate",
                    "name": "deprecate",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)/parameter/deprecate",
                        "name": "deprecate",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 185,
                            "startColumn": 80,
                            "endLine": 185,
                            "endColumn": 89
                        }
                    },
                    "position": {
                        "startLine": 276,
                        "startColumn": 211,
                        "endLine": 276,
                        "endColumn": 220
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/methodAnnotations": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/methodAnnotations",
                    "name": "methodAnnotations",
                    "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                    "displayedType": "List<JCAnnotation>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)/parameter/methodAnnotations",
                        "name": "methodAnnotations",
                        "type": "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation>",
                        "displayedType": "List<JCAnnotation>",
                        "modifiers": [],
                        "position": {
                            "startLine": 185,
                            "startColumn": 130,
                            "endLine": 185,
                            "endColumn": 147
                        }
                    },
                    "position": {
                        "startLine": 276,
                        "startColumn": 332,
                        "endLine": 276,
                        "endColumn": 349
                    }
                },
                "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/access": {
                    "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/finishAndInjectMethod(lombok.javac.handlers.lombok.core.configuration.CheckerFrameworkVersion cfv, lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, com.sun.tools.javac.tree.JCTree$JCExpression returnType, com.sun.tools.javac.tree.JCTree$JCStatement returnStatement, lombok.javac.handlers.JavacSingularsRecipes$SingularData data, lombok.javac.handlers.lombok.javac.JavacNode builderType, lombok.javac.handlers.lombok.javac.JavacNode source, boolean deprecate, com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree$JCStatement> statements, com.sun.tools.javac.util.Name methodName, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCVariableDecl> jcVariableDecls, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations, lombok.javac.handlers.lombok.AccessLevel access, java.lang.Boolean ignoreNullCollections)/parameter/access",
                    "name": "access",
                    "type": "lombok.javac.handlers.lombok.AccessLevel",
                    "displayedType": "AccessLevel",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.javac.handlers.JavacSingularsRecipes.JavacSingularizer/method/makeMods(lombok.javac.handlers.lombok.javac.JavacTreeMaker maker, lombok.javac.handlers.lombok.javac.JavacNode node, boolean deprecate, lombok.javac.handlers.lombok.AccessLevel access, com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCAnnotation> methodAnnotations)/parameter/access",
                        "name": "access",
                        "type": "lombok.javac.handlers.lombok.AccessLevel",
                        "displayedType": "AccessLevel",
                        "modifiers": [],
                        "position": {
                            "startLine": 185,
                            "startColumn": 103,
                            "endLine": 185,
                            "endColumn": 109
                        }
                    },
                    "position": {
                        "startLine": 276,
                        "startColumn": 363,
                        "endLine": 276,
                        "endColumn": 369
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/utils/lombok/permit/Permit.java-lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)-lombok.permit.Permit/method/invoke(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)-initErrormreceiverargs": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/utils/lombok/permit/Permit.java-lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)-lombok.permit.Permit/method/invoke(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)-initErrormreceiverargs",
            "probability": 1,
            "from_file_path": "src/utils/lombok/permit/Permit.java",
            "from_class_or_interface_name": "Permit",
            "from_class_or_interface_key": "lombok.permit.Permit",
            "from_method_name": "invokeSneaky",
            "from_method_key": "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)",
            "to_file_path": "src/utils/lombok/permit/Permit.java",
            "to_class_or_interface_name": "Permit",
            "to_class_or_interface_key": "lombok.permit.Permit",
            "to_method_name": "invoke",
            "to_method_key": "lombok.permit.Permit/method/invoke(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/initError": {
                    "key": "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/initError",
                    "name": "initError",
                    "type": "java.lang.Throwable",
                    "displayedType": "Throwable",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.permit.Permit/method/invoke(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/initError",
                        "name": "initError",
                        "type": "java.lang.Throwable",
                        "displayedType": "Throwable",
                        "modifiers": [],
                        "position": {
                            "startLine": 198,
                            "startColumn": 40,
                            "endLine": 198,
                            "endColumn": 49
                        }
                    },
                    "position": {
                        "startLine": 217,
                        "startColumn": 46,
                        "endLine": 217,
                        "endColumn": 55
                    }
                },
                "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/m": {
                    "key": "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/m",
                    "name": "m",
                    "type": "java.lang.reflect.Method",
                    "displayedType": "Method",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.permit.Permit/method/invoke(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/m",
                        "name": "m",
                        "type": "java.lang.reflect.Method",
                        "displayedType": "Method",
                        "modifiers": [],
                        "position": {
                            "startLine": 198,
                            "startColumn": 58,
                            "endLine": 198,
                            "endColumn": 59
                        }
                    },
                    "position": {
                        "startLine": 217,
                        "startColumn": 64,
                        "endLine": 217,
                        "endColumn": 65
                    }
                },
                "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/receiver": {
                    "key": "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/receiver",
                    "name": "receiver",
                    "type": "java.lang.Object",
                    "displayedType": "Object",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.permit.Permit/method/invoke(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/receiver",
                        "name": "receiver",
                        "type": "java.lang.Object",
                        "displayedType": "Object",
                        "modifiers": [],
                        "position": {
                            "startLine": 198,
                            "startColumn": 68,
                            "endLine": 198,
                            "endColumn": 76
                        }
                    },
                    "position": {
                        "startLine": 217,
                        "startColumn": 74,
                        "endLine": 217,
                        "endColumn": 82
                    }
                },
                "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/args": {
                    "key": "lombok.permit.Permit/method/invokeSneaky(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/args",
                    "name": "args",
                    "type": "java.lang.Object[]",
                    "displayedType": "Object[]",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.permit.Permit/method/invoke(java.lang.Throwable initError, java.lang.reflect.Method m, java.lang.Object receiver, java.lang.Object[] args)/parameter/args",
                        "name": "args",
                        "type": "java.lang.Object[]",
                        "displayedType": "Object[]",
                        "modifiers": [],
                        "position": {
                            "startLine": 198,
                            "startColumn": 88,
                            "endLine": 198,
                            "endColumn": 92
                        }
                    },
                    "position": {
                        "startLine": 217,
                        "startColumn": 94,
                        "endLine": 217,
                        "endColumn": 98
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-test/core/src/lombok/LombokTestSource.java-lombok.LombokTestSource/method/read(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName)-lombok.LombokTestSource/method/read0(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName, java.lang.String encoding)-sourceFoldermessagesFolderfileName": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-test/core/src/lombok/LombokTestSource.java-lombok.LombokTestSource/method/read(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName)-lombok.LombokTestSource/method/read0(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName, java.lang.String encoding)-sourceFoldermessagesFolderfileName",
            "probability": 1,
            "from_file_path": "test/core/src/lombok/LombokTestSource.java",
            "from_class_or_interface_name": "LombokTestSource",
            "from_class_or_interface_key": "lombok.LombokTestSource",
            "from_method_name": "read",
            "from_method_key": "lombok.LombokTestSource/method/read(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName)",
            "to_file_path": "test/core/src/lombok/LombokTestSource.java",
            "to_class_or_interface_name": "LombokTestSource",
            "to_class_or_interface_key": "lombok.LombokTestSource",
            "to_method_name": "read0",
            "to_method_key": "lombok.LombokTestSource/method/read0(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName, java.lang.String encoding)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.LombokTestSource/method/read(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName)/parameter/sourceFolder": {
                    "key": "lombok.LombokTestSource/method/read(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName)/parameter/sourceFolder",
                    "name": "sourceFolder",
                    "type": "java.io.File",
                    "displayedType": "File",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.LombokTestSource/method/read0(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName, java.lang.String encoding)/parameter/sourceFolder",
                        "name": "sourceFolder",
                        "type": "java.io.File",
                        "displayedType": "File",
                        "modifiers": [],
                        "position": {
                            "startLine": 331,
                            "startColumn": 45,
                            "endLine": 331,
                            "endColumn": 57
                        }
                    },
                    "position": {
                        "startLine": 327,
                        "startColumn": 43,
                        "endLine": 327,
                        "endColumn": 55
                    }
                },
                "lombok.LombokTestSource/method/read(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName)/parameter/messagesFolder": {
                    "key": "lombok.LombokTestSource/method/read(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName)/parameter/messagesFolder",
                    "name": "messagesFolder",
                    "type": "java.io.File",
                    "displayedType": "File",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.LombokTestSource/method/read0(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName, java.lang.String encoding)/parameter/messagesFolder",
                        "name": "messagesFolder",
                        "type": "java.io.File",
                        "displayedType": "File",
                        "modifiers": [],
                        "position": {
                            "startLine": 331,
                            "startColumn": 64,
                            "endLine": 331,
                            "endColumn": 78
                        }
                    },
                    "position": {
                        "startLine": 327,
                        "startColumn": 62,
                        "endLine": 327,
                        "endColumn": 76
                    }
                },
                "lombok.LombokTestSource/method/read(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName)/parameter/fileName": {
                    "key": "lombok.LombokTestSource/method/read(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName)/parameter/fileName",
                    "name": "fileName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.LombokTestSource/method/read0(java.io.File sourceFolder, java.io.File messagesFolder, java.lang.String fileName, java.lang.String encoding)/parameter/fileName",
                        "name": "fileName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 331,
                            "startColumn": 87,
                            "endLine": 331,
                            "endColumn": 95
                        }
                    },
                    "position": {
                        "startLine": 327,
                        "startColumn": 85,
                        "endLine": 327,
                        "endColumn": 93
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/core/AST.java-lombok.core.AST/method/buildWithCollection(java.lang.Class<L> nodeType, java.lang.Object collection, java.util.Collection<L> list, int dim)-lombok.core.AST/method/buildWithArray(java.lang.Class<L> nodeType, java.lang.Object array, java.util.Collection<L> list, int dim)-nodeTypelistdim": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/core/AST.java-lombok.core.AST/method/buildWithCollection(java.lang.Class<L> nodeType, java.lang.Object collection, java.util.Collection<L> list, int dim)-lombok.core.AST/method/buildWithArray(java.lang.Class<L> nodeType, java.lang.Object array, java.util.Collection<L> list, int dim)-nodeTypelistdim",
            "probability": 1,
            "from_file_path": "src/core/lombok/core/AST.java",
            "from_class_or_interface_name": "AST",
            "from_class_or_interface_key": "lombok.core.AST",
            "from_method_name": "buildWithCollection",
            "from_method_key": "lombok.core.AST/method/buildWithCollection(java.lang.Class<L> nodeType, java.lang.Object collection, java.util.Collection<L> list, int dim)",
            "to_file_path": "src/core/lombok/core/AST.java",
            "to_class_or_interface_name": "AST",
            "to_class_or_interface_key": "lombok.core.AST",
            "to_method_name": "buildWithArray",
            "to_method_key": "lombok.core.AST/method/buildWithArray(java.lang.Class<L> nodeType, java.lang.Object array, java.util.Collection<L> list, int dim)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.AST/method/buildWithCollection(java.lang.Class<L> nodeType, java.lang.Object collection, java.util.Collection<L> list, int dim)/parameter/nodeType": {
                    "key": "lombok.core.AST/method/buildWithCollection(java.lang.Class<L> nodeType, java.lang.Object collection, java.util.Collection<L> list, int dim)/parameter/nodeType",
                    "name": "nodeType",
                    "type": "java.lang.Class<L>",
                    "displayedType": "Class<L>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.AST/method/buildWithArray(java.lang.Class<L> nodeType, java.lang.Object array, java.util.Collection<L> list, int dim)/parameter/nodeType",
                        "name": "nodeType",
                        "type": "java.lang.Class<L>",
                        "displayedType": "Class<L>",
                        "modifiers": [],
                        "position": {
                            "startLine": 407,
                            "startColumn": 39,
                            "endLine": 407,
                            "endColumn": 47
                        }
                    },
                    "position": {
                        "startLine": 421,
                        "startColumn": 44,
                        "endLine": 421,
                        "endColumn": 52
                    }
                },
                "lombok.core.AST/method/buildWithCollection(java.lang.Class<L> nodeType, java.lang.Object collection, java.util.Collection<L> list, int dim)/parameter/list": {
                    "key": "lombok.core.AST/method/buildWithCollection(java.lang.Class<L> nodeType, java.lang.Object collection, java.util.Collection<L> list, int dim)/parameter/list",
                    "name": "list",
                    "type": "java.util.Collection<L>",
                    "displayedType": "Collection<L>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.AST/method/buildWithArray(java.lang.Class<L> nodeType, java.lang.Object array, java.util.Collection<L> list, int dim)/parameter/list",
                        "name": "list",
                        "type": "java.util.Collection<L>",
                        "displayedType": "Collection<L>",
                        "modifiers": [],
                        "position": {
                            "startLine": 407,
                            "startColumn": 77,
                            "endLine": 407,
                            "endColumn": 81
                        }
                    },
                    "position": {
                        "startLine": 421,
                        "startColumn": 87,
                        "endLine": 421,
                        "endColumn": 91
                    }
                },
                "lombok.core.AST/method/buildWithCollection(java.lang.Class<L> nodeType, java.lang.Object collection, java.util.Collection<L> list, int dim)/parameter/dim": {
                    "key": "lombok.core.AST/method/buildWithCollection(java.lang.Class<L> nodeType, java.lang.Object collection, java.util.Collection<L> list, int dim)/parameter/dim",
                    "name": "dim",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.AST/method/buildWithArray(java.lang.Class<L> nodeType, java.lang.Object array, java.util.Collection<L> list, int dim)/parameter/dim",
                        "name": "dim",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 407,
                            "startColumn": 87,
                            "endLine": 407,
                            "endColumn": 90
                        }
                    },
                    "position": {
                        "startLine": 421,
                        "startColumn": 97,
                        "endLine": 421,
                        "endColumn": 100
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/core/AnnotationValues.java-lombok.core.AnnotationValues/method/setWarning(java.lang.String annotationMethodName, java.lang.String message, int index)-lombok.core.AnnotationValues/method/setError(java.lang.String annotationMethodName, java.lang.String message, int index)-annotationMethodNamemessageindex": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/core/AnnotationValues.java-lombok.core.AnnotationValues/method/setWarning(java.lang.String annotationMethodName, java.lang.String message, int index)-lombok.core.AnnotationValues/method/setError(java.lang.String annotationMethodName, java.lang.String message, int index)-annotationMethodNamemessageindex",
            "probability": 1,
            "from_file_path": "src/core/lombok/core/AnnotationValues.java",
            "from_class_or_interface_name": "AnnotationValues",
            "from_class_or_interface_key": "lombok.core.AnnotationValues",
            "from_method_name": "setWarning",
            "from_method_key": "lombok.core.AnnotationValues/method/setWarning(java.lang.String annotationMethodName, java.lang.String message, int index)",
            "to_file_path": "src/core/lombok/core/AnnotationValues.java",
            "to_class_or_interface_name": "AnnotationValues",
            "to_class_or_interface_key": "lombok.core.AnnotationValues",
            "to_method_name": "setError",
            "to_method_key": "lombok.core.AnnotationValues/method/setError(java.lang.String annotationMethodName, java.lang.String message, int index)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.AnnotationValues/method/setWarning(java.lang.String annotationMethodName, java.lang.String message, int index)/parameter/annotationMethodName": {
                    "key": "lombok.core.AnnotationValues/method/setWarning(java.lang.String annotationMethodName, java.lang.String message, int index)/parameter/annotationMethodName",
                    "name": "annotationMethodName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.AnnotationValues/method/setError(java.lang.String annotationMethodName, java.lang.String message, int index)/parameter/annotationMethodName",
                        "name": "annotationMethodName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 436,
                            "startColumn": 30,
                            "endLine": 436,
                            "endColumn": 50
                        }
                    },
                    "position": {
                        "startLine": 444,
                        "startColumn": 32,
                        "endLine": 444,
                        "endColumn": 52
                    }
                },
                "lombok.core.AnnotationValues/method/setWarning(java.lang.String annotationMethodName, java.lang.String message, int index)/parameter/message": {
                    "key": "lombok.core.AnnotationValues/method/setWarning(java.lang.String annotationMethodName, java.lang.String message, int index)/parameter/message",
                    "name": "message",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.AnnotationValues/method/setError(java.lang.String annotationMethodName, java.lang.String message, int index)/parameter/message",
                        "name": "message",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 436,
                            "startColumn": 59,
                            "endLine": 436,
                            "endColumn": 66
                        }
                    },
                    "position": {
                        "startLine": 444,
                        "startColumn": 61,
                        "endLine": 444,
                        "endColumn": 68
                    }
                },
                "lombok.core.AnnotationValues/method/setWarning(java.lang.String annotationMethodName, java.lang.String message, int index)/parameter/index": {
                    "key": "lombok.core.AnnotationValues/method/setWarning(java.lang.String annotationMethodName, java.lang.String message, int index)/parameter/index",
                    "name": "index",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.AnnotationValues/method/setError(java.lang.String annotationMethodName, java.lang.String message, int index)/parameter/index",
                        "name": "index",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 436,
                            "startColumn": 72,
                            "endLine": 436,
                            "endColumn": 77
                        }
                    },
                    "position": {
                        "startLine": 444,
                        "startColumn": 74,
                        "endLine": 444,
                        "endColumn": 79
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/core/handlers/HandlerUtil.java-lombok.core.handlers.HandlerUtil/method/handleExperimentalFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)-lombok.core.handlers.HandlerUtil/method/handleFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)-nodekeyfeatureName": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/core/handlers/HandlerUtil.java-lombok.core.handlers.HandlerUtil/method/handleExperimentalFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)-lombok.core.handlers.HandlerUtil/method/handleFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)-nodekeyfeatureName",
            "probability": 1,
            "from_file_path": "src/core/lombok/core/handlers/HandlerUtil.java",
            "from_class_or_interface_name": "HandlerUtil",
            "from_class_or_interface_key": "lombok.core.handlers.HandlerUtil",
            "from_method_name": "handleExperimentalFlagUsage",
            "from_method_key": "lombok.core.handlers.HandlerUtil/method/handleExperimentalFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)",
            "to_file_path": "src/core/lombok/core/handlers/HandlerUtil.java",
            "to_class_or_interface_name": "HandlerUtil",
            "to_class_or_interface_key": "lombok.core.handlers.HandlerUtil",
            "to_method_name": "handleFlagUsage",
            "to_method_key": "lombok.core.handlers.HandlerUtil/method/handleFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.handlers.HandlerUtil/method/handleExperimentalFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)/parameter/node": {
                    "key": "lombok.core.handlers.HandlerUtil/method/handleExperimentalFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)/parameter/node",
                    "name": "node",
                    "type": "lombok.core.handlers.lombok.core.LombokNode<?, ?, ?>",
                    "displayedType": "LombokNode<?, ?, ?>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/handleFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)/parameter/node",
                        "name": "node",
                        "type": "lombok.core.handlers.lombok.core.LombokNode<?, ?, ?>",
                        "displayedType": "LombokNode<?, ?, ?>",
                        "modifiers": [],
                        "position": {
                            "startLine": 485,
                            "startColumn": 57,
                            "endLine": 485,
                            "endColumn": 61
                        }
                    },
                    "position": {
                        "startLine": 506,
                        "startColumn": 69,
                        "endLine": 506,
                        "endColumn": 73
                    }
                },
                "lombok.core.handlers.HandlerUtil/method/handleExperimentalFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)/parameter/key": {
                    "key": "lombok.core.handlers.HandlerUtil/method/handleExperimentalFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)/parameter/key",
                    "name": "key",
                    "type": "lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType>",
                    "displayedType": "ConfigurationKey<FlagUsageType>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/handleFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)/parameter/key",
                        "name": "key",
                        "type": "lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType>",
                        "displayedType": "ConfigurationKey<FlagUsageType>",
                        "modifiers": [],
                        "position": {
                            "startLine": 485,
                            "startColumn": 95,
                            "endLine": 485,
                            "endColumn": 98
                        }
                    },
                    "position": {
                        "startLine": 506,
                        "startColumn": 107,
                        "endLine": 506,
                        "endColumn": 110
                    }
                },
                "lombok.core.handlers.HandlerUtil/method/handleExperimentalFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)/parameter/featureName": {
                    "key": "lombok.core.handlers.HandlerUtil/method/handleExperimentalFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)/parameter/featureName",
                    "name": "featureName",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.HandlerUtil/method/handleFlagUsage(lombok.core.handlers.lombok.core.LombokNode<?, ?, ?> node, lombok.core.handlers.lombok.core.configuration.ConfigurationKey<lombok.core.handlers.lombok.core.configuration.FlagUsageType> key, java.lang.String featureName)/parameter/featureName",
                        "name": "featureName",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 485,
                            "startColumn": 107,
                            "endLine": 485,
                            "endColumn": 118
                        }
                    },
                    "position": {
                        "startLine": 506,
                        "startColumn": 119,
                        "endLine": 506,
                        "endColumn": 130
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/core/handlers/InclusionExclusionUtils.java-lombok.core.handlers.InclusionExclusionUtils/method/handleToStringMarking(lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, boolean onlyExplicitlyIncluded, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.ToString> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode)-lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)-typeNodeonlyExplicitlyIncludedannotationNode": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/core/handlers/InclusionExclusionUtils.java-lombok.core.handlers.InclusionExclusionUtils/method/handleToStringMarking(lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, boolean onlyExplicitlyIncluded, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.ToString> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode)-lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)-typeNodeonlyExplicitlyIncludedannotationNode",
            "probability": 1,
            "from_file_path": "src/core/lombok/core/handlers/InclusionExclusionUtils.java",
            "from_class_or_interface_name": "InclusionExclusionUtils",
            "from_class_or_interface_key": "lombok.core.handlers.InclusionExclusionUtils",
            "from_method_name": "handleToStringMarking",
            "from_method_key": "lombok.core.handlers.InclusionExclusionUtils/method/handleToStringMarking(lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, boolean onlyExplicitlyIncluded, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.ToString> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode)",
            "to_file_path": "src/core/lombok/core/handlers/InclusionExclusionUtils.java",
            "to_class_or_interface_name": "InclusionExclusionUtils",
            "to_class_or_interface_key": "lombok.core.handlers.InclusionExclusionUtils",
            "to_method_name": "handleIncludeExcludeMarking",
            "to_method_key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.core.handlers.InclusionExclusionUtils/method/handleToStringMarking(lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, boolean onlyExplicitlyIncluded, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.ToString> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode)/parameter/typeNode": {
                    "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleToStringMarking(lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, boolean onlyExplicitlyIncluded, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.ToString> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode)/parameter/typeNode",
                    "name": "typeNode",
                    "type": "lombok.core.handlers.lombok.core.LombokNode<A, L, N>",
                    "displayedType": "LombokNode<A, L, N>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/typeNode",
                        "name": "typeNode",
                        "type": "lombok.core.handlers.lombok.core.LombokNode<A, L, N>",
                        "displayedType": "LombokNode<A, L, N>",
                        "modifiers": [],
                        "position": {
                            "startLine": 120,
                            "startColumn": 276,
                            "endLine": 120,
                            "endColumn": 284
                        }
                    },
                    "position": {
                        "startLine": 210,
                        "startColumn": 153,
                        "endLine": 210,
                        "endColumn": 161
                    }
                },
                "lombok.core.handlers.InclusionExclusionUtils/method/handleToStringMarking(lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, boolean onlyExplicitlyIncluded, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.ToString> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode)/parameter/onlyExplicitlyIncluded": {
                    "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleToStringMarking(lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, boolean onlyExplicitlyIncluded, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.ToString> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode)/parameter/onlyExplicitlyIncluded",
                    "name": "onlyExplicitlyIncluded",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/onlyExplicitlyIncluded",
                        "name": "onlyExplicitlyIncluded",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 120,
                            "startColumn": 174,
                            "endLine": 120,
                            "endColumn": 196
                        }
                    },
                    "position": {
                        "startLine": 210,
                        "startColumn": 171,
                        "endLine": 210,
                        "endColumn": 193
                    }
                },
                "lombok.core.handlers.InclusionExclusionUtils/method/handleToStringMarking(lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, boolean onlyExplicitlyIncluded, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.ToString> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode)/parameter/annotationNode": {
                    "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleToStringMarking(lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, boolean onlyExplicitlyIncluded, lombok.core.handlers.lombok.core.AnnotationValues<lombok.core.handlers.lombok.ToString> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode)/parameter/annotationNode",
                    "name": "annotationNode",
                    "type": "lombok.core.handlers.lombok.core.LombokNode<A, L, N>",
                    "displayedType": "LombokNode<A, L, N>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.core.handlers.InclusionExclusionUtils/method/handleIncludeExcludeMarking(java.lang.Class<I> inclType, boolean onlyExplicitlyIncluded, java.lang.String replaceName, java.lang.Class<? extends java.lang.annotation.Annotation> exclType, lombok.core.handlers.lombok.core.LombokNode<A, L, N> typeNode, lombok.core.handlers.lombok.core.AnnotationValues<?> annotation, lombok.core.handlers.lombok.core.LombokNode<A, L, N> annotationNode, boolean includeTransient)/parameter/annotationNode",
                        "name": "annotationNode",
                        "type": "lombok.core.handlers.lombok.core.LombokNode<A, L, N>",
                        "displayedType": "LombokNode<A, L, N>",
                        "modifiers": [],
                        "position": {
                            "startLine": 120,
                            "startColumn": 338,
                            "endLine": 120,
                            "endColumn": 352
                        }
                    },
                    "position": {
                        "startLine": 210,
                        "startColumn": 254,
                        "endLine": 210,
                        "endColumn": 268
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/core/lombok/eclipse/EclipseAnnotationHandler.java-lombok.eclipse.EclipseAnnotationHandler/method/handle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)-lombok.eclipse.EclipseAnnotationHandler/method/preHandle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)-annotationastannotationNode": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/core/lombok/eclipse/EclipseAnnotationHandler.java-lombok.eclipse.EclipseAnnotationHandler/method/handle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)-lombok.eclipse.EclipseAnnotationHandler/method/preHandle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)-annotationastannotationNode",
            "probability": 1,
            "from_file_path": "src/core/lombok/eclipse/EclipseAnnotationHandler.java",
            "from_class_or_interface_name": "EclipseAnnotationHandler",
            "from_class_or_interface_key": "lombok.eclipse.EclipseAnnotationHandler",
            "from_method_name": "handle",
            "from_method_key": "lombok.eclipse.EclipseAnnotationHandler/method/handle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)",
            "to_file_path": "src/core/lombok/eclipse/EclipseAnnotationHandler.java",
            "to_class_or_interface_name": "EclipseAnnotationHandler",
            "to_class_or_interface_key": "lombok.eclipse.EclipseAnnotationHandler",
            "to_method_name": "preHandle",
            "to_method_key": "lombok.eclipse.EclipseAnnotationHandler/method/preHandle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.EclipseAnnotationHandler/method/handle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)/parameter/annotation": {
                    "key": "lombok.eclipse.EclipseAnnotationHandler/method/handle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)/parameter/annotation",
                    "name": "annotation",
                    "type": "lombok.eclipse.lombok.core.AnnotationValues<T>",
                    "displayedType": "AnnotationValues<T>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.EclipseAnnotationHandler/method/preHandle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)/parameter/annotation",
                        "name": "annotation",
                        "type": "lombok.eclipse.lombok.core.AnnotationValues<T>",
                        "displayedType": "AnnotationValues<T>",
                        "modifiers": [],
                        "position": {
                            "startLine": 61,
                            "startColumn": 44,
                            "endLine": 61,
                            "endColumn": 54
                        }
                    },
                    "position": {
                        "startLine": 52,
                        "startColumn": 50,
                        "endLine": 52,
                        "endColumn": 60
                    }
                },
                "lombok.eclipse.EclipseAnnotationHandler/method/handle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)/parameter/ast": {
                    "key": "lombok.eclipse.EclipseAnnotationHandler/method/handle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)/parameter/ast",
                    "name": "ast",
                    "type": "lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation",
                    "displayedType": "org.eclipse.jdt.internal.compiler.ast.Annotation",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.EclipseAnnotationHandler/method/preHandle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)/parameter/ast",
                        "name": "ast",
                        "type": "lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation",
                        "displayedType": "org.eclipse.jdt.internal.compiler.ast.Annotation",
                        "modifiers": [],
                        "position": {
                            "startLine": 61,
                            "startColumn": 105,
                            "endLine": 61,
                            "endColumn": 108
                        }
                    },
                    "position": {
                        "startLine": 52,
                        "startColumn": 111,
                        "endLine": 52,
                        "endColumn": 114
                    }
                },
                "lombok.eclipse.EclipseAnnotationHandler/method/handle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)/parameter/annotationNode": {
                    "key": "lombok.eclipse.EclipseAnnotationHandler/method/handle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)/parameter/annotationNode",
                    "name": "annotationNode",
                    "type": "lombok.eclipse.EclipseNode",
                    "displayedType": "EclipseNode",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.EclipseAnnotationHandler/method/preHandle(lombok.eclipse.lombok.core.AnnotationValues<T> annotation, lombok.eclipse.org.eclipse.jdt.internal.compiler.ast.Annotation ast, lombok.eclipse.EclipseNode annotationNode)/parameter/annotationNode",
                        "name": "annotationNode",
                        "type": "lombok.eclipse.EclipseNode",
                        "displayedType": "EclipseNode",
                        "modifiers": [],
                        "position": {
                            "startLine": 61,
                            "startColumn": 122,
                            "endLine": 61,
                            "endColumn": 136
                        }
                    },
                    "position": {
                        "startLine": 52,
                        "startColumn": 128,
                        "endLine": 52,
                        "endColumn": 142
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/EclipseLoaderPatcherTransplants.java-lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadResult(java.lang.ClassLoader original, java.lang.String name, boolean resolve)-lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadDecide(java.lang.ClassLoader original, java.lang.String name, boolean resolve)-originalnameresolve": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/EclipseLoaderPatcherTransplants.java-lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadResult(java.lang.ClassLoader original, java.lang.String name, boolean resolve)-lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadDecide(java.lang.ClassLoader original, java.lang.String name, boolean resolve)-originalnameresolve",
            "probability": 1,
            "from_file_path": "src/eclipseAgent/lombok/eclipse/agent/EclipseLoaderPatcherTransplants.java",
            "from_class_or_interface_name": "EclipseLoaderPatcherTransplants",
            "from_class_or_interface_key": "lombok.eclipse.agent.EclipseLoaderPatcherTransplants",
            "from_method_name": "overrideLoadResult",
            "from_method_key": "lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadResult(java.lang.ClassLoader original, java.lang.String name, boolean resolve)",
            "to_file_path": "src/eclipseAgent/lombok/eclipse/agent/EclipseLoaderPatcherTransplants.java",
            "to_class_or_interface_name": "EclipseLoaderPatcherTransplants",
            "to_class_or_interface_key": "lombok.eclipse.agent.EclipseLoaderPatcherTransplants",
            "to_method_name": "overrideLoadDecide",
            "to_method_key": "lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadDecide(java.lang.ClassLoader original, java.lang.String name, boolean resolve)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadResult(java.lang.ClassLoader original, java.lang.String name, boolean resolve)/parameter/original": {
                    "key": "lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadResult(java.lang.ClassLoader original, java.lang.String name, boolean resolve)/parameter/original",
                    "name": "original",
                    "type": "java.lang.ClassLoader",
                    "displayedType": "ClassLoader",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadDecide(java.lang.ClassLoader original, java.lang.String name, boolean resolve)/parameter/original",
                        "name": "original",
                        "type": "java.lang.ClassLoader",
                        "displayedType": "ClassLoader",
                        "modifiers": [],
                        "position": {
                            "startLine": 50,
                            "startColumn": 55,
                            "endLine": 50,
                            "endColumn": 63
                        }
                    },
                    "position": {
                        "startLine": 54,
                        "startColumn": 53,
                        "endLine": 54,
                        "endColumn": 61
                    }
                },
                "lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadResult(java.lang.ClassLoader original, java.lang.String name, boolean resolve)/parameter/name": {
                    "key": "lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadResult(java.lang.ClassLoader original, java.lang.String name, boolean resolve)/parameter/name",
                    "name": "name",
                    "type": "java.lang.String",
                    "displayedType": "String",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadDecide(java.lang.ClassLoader original, java.lang.String name, boolean resolve)/parameter/name",
                        "name": "name",
                        "type": "java.lang.String",
                        "displayedType": "String",
                        "modifiers": [],
                        "position": {
                            "startLine": 50,
                            "startColumn": 72,
                            "endLine": 50,
                            "endColumn": 76
                        }
                    },
                    "position": {
                        "startLine": 54,
                        "startColumn": 70,
                        "endLine": 54,
                        "endColumn": 74
                    }
                },
                "lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadResult(java.lang.ClassLoader original, java.lang.String name, boolean resolve)/parameter/resolve": {
                    "key": "lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadResult(java.lang.ClassLoader original, java.lang.String name, boolean resolve)/parameter/resolve",
                    "name": "resolve",
                    "type": "boolean",
                    "displayedType": "boolean",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.EclipseLoaderPatcherTransplants/method/overrideLoadDecide(java.lang.ClassLoader original, java.lang.String name, boolean resolve)/parameter/resolve",
                        "name": "resolve",
                        "type": "boolean",
                        "displayedType": "boolean",
                        "modifiers": [],
                        "position": {
                            "startLine": 50,
                            "startColumn": 86,
                            "endLine": 50,
                            "endColumn": 93
                        }
                    },
                    "position": {
                        "startLine": 54,
                        "startColumn": 84,
                        "endLine": 54,
                        "endColumn": 91
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchDelegate.java-lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForMethods(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)-lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForFields(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)-cudscopemethodsToDelegate": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchDelegate.java-lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForMethods(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)-lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForFields(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)-cudscopemethodsToDelegate",
            "probability": 1,
            "from_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchDelegate.java",
            "from_class_or_interface_name": "PatchDelegate",
            "from_class_or_interface_key": "lombok.eclipse.agent.PatchDelegate",
            "from_method_name": "fillMethodBindingsForMethods",
            "from_method_key": "lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForMethods(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)",
            "to_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchDelegate.java",
            "to_class_or_interface_name": "PatchDelegate",
            "to_class_or_interface_key": "lombok.eclipse.agent.PatchDelegate",
            "to_method_name": "fillMethodBindingsForFields",
            "to_method_key": "lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForFields(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForMethods(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)/parameter/cud": {
                    "key": "lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForMethods(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)/parameter/cud",
                    "name": "cud",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration",
                    "displayedType": "CompilationUnitDeclaration",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForFields(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)/parameter/cud",
                        "name": "cud",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration",
                        "displayedType": "CompilationUnitDeclaration",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 77,
                            "endLine": 227,
                            "endColumn": 80
                        }
                    },
                    "position": {
                        "startLine": 287,
                        "startColumn": 78,
                        "endLine": 287,
                        "endColumn": 81
                    }
                },
                "lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForMethods(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)/parameter/scope": {
                    "key": "lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForMethods(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)/parameter/scope",
                    "name": "scope",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope",
                    "displayedType": "ClassScope",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForFields(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)/parameter/scope",
                        "name": "scope",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope",
                        "displayedType": "ClassScope",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 93,
                            "endLine": 227,
                            "endColumn": 98
                        }
                    },
                    "position": {
                        "startLine": 287,
                        "startColumn": 94,
                        "endLine": 287,
                        "endColumn": 99
                    }
                },
                "lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForMethods(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)/parameter/methodsToDelegate": {
                    "key": "lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForMethods(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)/parameter/methodsToDelegate",
                    "name": "methodsToDelegate",
                    "type": "java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple>",
                    "displayedType": "List<BindingTuple>",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchDelegate/method/fillMethodBindingsForFields(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration cud, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.ClassScope scope, java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple> methodsToDelegate)/parameter/methodsToDelegate",
                        "name": "methodsToDelegate",
                        "type": "java.util.List<lombok.eclipse.agent.PatchDelegate$BindingTuple>",
                        "displayedType": "List<BindingTuple>",
                        "modifiers": [],
                        "position": {
                            "startLine": 227,
                            "startColumn": 119,
                            "endLine": 227,
                            "endColumn": 136
                        }
                    },
                    "position": {
                        "startLine": 287,
                        "startColumn": 120,
                        "endLine": 287,
                        "endColumn": 137
                    }
                }
            }
        },
        "parameters_to_fields_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java-lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)-lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError-problemReportermethodscope": {
            "type": "data_clump",
            "key": "parameters_to_fields_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java-lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)-lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError-problemReportermethodscope",
            "probability": 1,
            "from_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java",
            "from_class_or_interface_name": "PatchExtensionMethod",
            "from_class_or_interface_key": "lombok.eclipse.agent.PatchExtensionMethod",
            "from_method_name": "invalidMethod",
            "from_method_key": "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)",
            "to_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchExtensionMethod.java",
            "to_class_or_interface_name": "PostponedInvalidMethodError",
            "to_class_or_interface_key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError",
            "to_method_name": null,
            "to_method_key": null,
            "data_clump_type": "parameters_to_fields_data_clump",
            "data_clump_data": {
                "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/problemReporter": {
                    "key": "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/problemReporter",
                    "name": "problemReporter",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter",
                    "displayedType": "ProblemReporter",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/memberField/problemReporter",
                        "name": "problemReporter",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter",
                        "displayedType": "ProblemReporter",
                        "modifiers": [
                            "PRIVATE",
                            "FINAL"
                        ],
                        "position": {
                            "startLine": 96,
                            "startColumn": 33,
                            "endLine": 96,
                            "endColumn": 48
                        }
                    },
                    "position": {
                        "startLine": 246,
                        "startColumn": 51,
                        "endLine": 246,
                        "endColumn": 66
                    }
                },
                "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/method": {
                    "key": "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/method",
                    "name": "method",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding",
                    "displayedType": "MethodBinding",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/memberField/method",
                        "name": "method",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding",
                        "displayedType": "MethodBinding",
                        "modifiers": [
                            "PRIVATE",
                            "FINAL"
                        ],
                        "position": {
                            "startLine": 98,
                            "startColumn": 31,
                            "endLine": 98,
                            "endColumn": 37
                        }
                    },
                    "position": {
                        "startLine": 246,
                        "startColumn": 107,
                        "endLine": 246,
                        "endColumn": 113
                    }
                },
                "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/scope": {
                    "key": "lombok.eclipse.agent.PatchExtensionMethod/method/invalidMethod(lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.MessageSend messageSend, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.MethodBinding method, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope scope)/parameter/scope",
                    "name": "scope",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope",
                    "displayedType": "Scope",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchExtensionMethod.PostponedInvalidMethodError/memberField/scope",
                        "name": "scope",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.lookup.Scope",
                        "displayedType": "Scope",
                        "modifiers": [
                            "PRIVATE",
                            "FINAL"
                        ],
                        "position": {
                            "startLine": 99,
                            "startColumn": 23,
                            "endLine": 99,
                            "endColumn": 28
                        }
                    },
                    "position": {
                        "startLine": 246,
                        "startColumn": 121,
                        "endLine": 246,
                        "endColumn": 126
                    }
                }
            }
        },
        "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchValEclipse.java-lombok.eclipse.agent.PatchValEclipse/method/createValVarAnnotation(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.Annotation original, int start, int end)-lombok.eclipse.agent.PatchValEclipse/method/createModifier(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.core.dom.Modifier.ModifierKeyword keyword, int start, int end)-aststartend": {
            "type": "data_clump",
            "key": "parameters_to_parameters_data_clump-src/eclipseAgent/lombok/eclipse/agent/PatchValEclipse.java-lombok.eclipse.agent.PatchValEclipse/method/createValVarAnnotation(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.Annotation original, int start, int end)-lombok.eclipse.agent.PatchValEclipse/method/createModifier(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.core.dom.Modifier.ModifierKeyword keyword, int start, int end)-aststartend",
            "probability": 1,
            "from_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchValEclipse.java",
            "from_class_or_interface_name": "PatchValEclipse",
            "from_class_or_interface_key": "lombok.eclipse.agent.PatchValEclipse",
            "from_method_name": "createValVarAnnotation",
            "from_method_key": "lombok.eclipse.agent.PatchValEclipse/method/createValVarAnnotation(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.Annotation original, int start, int end)",
            "to_file_path": "src/eclipseAgent/lombok/eclipse/agent/PatchValEclipse.java",
            "to_class_or_interface_name": "PatchValEclipse",
            "to_class_or_interface_key": "lombok.eclipse.agent.PatchValEclipse",
            "to_method_name": "createModifier",
            "to_method_key": "lombok.eclipse.agent.PatchValEclipse/method/createModifier(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.core.dom.Modifier.ModifierKeyword keyword, int start, int end)",
            "data_clump_type": "parameters_to_parameters_data_clump",
            "data_clump_data": {
                "lombok.eclipse.agent.PatchValEclipse/method/createValVarAnnotation(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.Annotation original, int start, int end)/parameter/ast": {
                    "key": "lombok.eclipse.agent.PatchValEclipse/method/createValVarAnnotation(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.Annotation original, int start, int end)/parameter/ast",
                    "name": "ast",
                    "type": "lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST",
                    "displayedType": "AST",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchValEclipse/method/createModifier(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.core.dom.Modifier.ModifierKeyword keyword, int start, int end)/parameter/ast",
                        "name": "ast",
                        "type": "lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST",
                        "displayedType": "AST",
                        "modifiers": [],
                        "position": {
                            "startLine": 198,
                            "startColumn": 44,
                            "endLine": 198,
                            "endColumn": 47
                        }
                    },
                    "position": {
                        "startLine": 217,
                        "startColumn": 60,
                        "endLine": 217,
                        "endColumn": 63
                    }
                },
                "lombok.eclipse.agent.PatchValEclipse/method/createValVarAnnotation(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.Annotation original, int start, int end)/parameter/start": {
                    "key": "lombok.eclipse.agent.PatchValEclipse/method/createValVarAnnotation(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.Annotation original, int start, int end)/parameter/start",
                    "name": "start",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchValEclipse/method/createModifier(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.core.dom.Modifier.ModifierKeyword keyword, int start, int end)/parameter/start",
                        "name": "start",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 198,
                            "startColumn": 78,
                            "endLine": 198,
                            "endColumn": 83
                        }
                    },
                    "position": {
                        "startLine": 217,
                        "startColumn": 90,
                        "endLine": 217,
                        "endColumn": 95
                    }
                },
                "lombok.eclipse.agent.PatchValEclipse/method/createValVarAnnotation(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.Annotation original, int start, int end)/parameter/end": {
                    "key": "lombok.eclipse.agent.PatchValEclipse/method/createValVarAnnotation(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.internal.compiler.ast.Annotation original, int start, int end)/parameter/end",
                    "name": "end",
                    "type": "int",
                    "displayedType": "int",
                    "probability": 1,
                    "modifiers": [],
                    "to_variable": {
                        "key": "lombok.eclipse.agent.PatchValEclipse/method/createModifier(lombok.eclipse.agent.org.eclipse.jdt.core.dom.AST ast, lombok.eclipse.agent.org.eclipse.jdt.core.dom.Modifier.ModifierKeyword keyword, int start, int end)/parameter/end",
                        "name": "end",
                        "type": "int",
                        "displayedType": "int",
                        "modifiers": [],
                        "position": {
                            "startLine": 198,
                            "startColumn": 89,
                            "endLine": 198,
                            "endColumn": 92
                        }
                    },
                    "position": {
                        "startLine": 217,
                        "startColumn": 101,
                        "endLine": 217,
                        "endColumn": 104
                    }
                }
            }
        }
    }
}