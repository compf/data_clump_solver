
I will provide you code snippets of one or more ${programming_language}  files.

%{refactor_instruction}

### DATA CLUMP DEFINITION
A data clump exists if
1) two methods (in the same or in different classes) have at least 3 common parameters
    and one of those methods does not override the other,

or  
2) At least three fields in a class are common with the parameters of a method (in the same or in a different class),

or
3) Two different classes have at least three common fields


### END DATA CLUMP DEFINITION

Use the following json format for the output:
### Output format

{
    "refactorings":{
        // for each refactored file
        "file1Path": [
            // for each change in the file performed by you
            {
                "fromLine": "<the fromLine>",
                "toLine":"<the toLine>
                "oldContent": "<same as content from the prompt>",
                "newContent": "<the new content of the changed lines>",
            },
            //...
        ]
    },
    "extractedClasses":{
          // for each extracted class
        "extractedClassPath1": "<full content of the newly extracted class 1>",
        //...
    }
}
### END Output format
