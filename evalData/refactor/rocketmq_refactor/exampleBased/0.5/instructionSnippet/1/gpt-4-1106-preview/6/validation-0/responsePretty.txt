"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/common/src/main/java/org/apache/rocketmq/common/consumer/ReceiptHandle.java": [
            {
                "fromLine": 229,
                "toLine": 234,
                "oldContent": "        if (RETRY_TOPIC.equals(topicType)) {\n            return KeyBuilder.buildPopRetryTopicV1(topic, groupName);\n        }\n        if (RETRY_TOPIC_V2.equals(topicType)) {\n            return KeyBuilder.buildPopRetryTopicV2(topic, groupName);\n        }",
                "newContent": "        if (RETRY_TOPIC.equals(topicType)) {\n            return buildPopRetryTopicV1(topic, groupName);\n        }\n        if (RETRY_TOPIC_V2.equals(topicType)) {\n            return buildPopRetryTopicV2(topic, groupName);\n        }"
            }
        ]
    },
    "extractedClasses": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/common/src/main/java/org/apache/rocketmq/common/KeyBuilder.java": "package org.apache.rocketmq.common;\n\npublic class KeyBuilder {\n\n    public static String buildStatsKey(final int queueId, final String topic, final String group) {\n        // Implementation of building the stats key based on queueId, topic, and group\n        // This is a placeholder implementation\n        return topic + \"-\" + queueId + \"-\" + group;\n    }\n\n    public static String buildPopRetryTopicV1(String topic, String groupName) {\n        // Implementation of building the retry topic for V1\n        // This is a placeholder implementation\n        return \"RETRY_\" + groupName + \"_\" + topic;\n    }\n\n    public static String buildPopRetryTopicV2(String topic, String groupName) {\n        // Implementation of building the retry topic for V2\n        // This is a placeholder implementation\n        return \"RETRY_V2_\" + groupName + \"_\" + topic;\n    }\n\n}"
    }
}"