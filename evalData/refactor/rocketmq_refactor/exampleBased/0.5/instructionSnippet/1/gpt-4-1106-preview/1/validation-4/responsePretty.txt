refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java:
	[
		fromLine:"		940",
		toLine:"		942",
		oldContent:"
		brokerStatsManager.recordDiskFallBehindSize(statsKey, fallBehind);		
",
		newContent:"
		brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);		
",
,

	],
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		16",
		toLine:"		43",
		oldContent:"
		import org.apache.rocketmq.common.stats.StatsKey;
		import org.apache.rocketmq.common.stats.StatsKey;		
",
		newContent:"
		import org.apache.rocketmq.common.stats.StatsKey;		
",
,
		fromLine:"		142",
		toLine:"		158",
		oldContent:"
		// Constants from Stats class were removed and the associated logic has been updated accordingly.		
",
		newContent:"
				
",
,
		fromLine:"		165",
		toLine:"		170",
		oldContent:"
		// Constants from Stats class were removed and the associated logic has been updated accordingly.		
",
		newContent:"
				
",
,
		fromLine:"		175",
		toLine:"		186",
		oldContent:"
		// Constants from Stats class were removed and the associated logic has been updated accordingly.		
",
		newContent:"
				
",
,
		fromLine:"		300",
		toLine:"		309",
		oldContent:"
		// Constants from Stats class were removed and the associated logic has been updated accordingly.		
",
		newContent:"
				
",
,
		fromLine:"		317",
		toLine:"		322",
		oldContent:"
		// Constants from Stats class were removed and the associated logic has been updated accordingly.		
",
		newContent:"
				
",
,
		fromLine:"		551",
		toLine:"		553",
		oldContent:"
		// Adjusted the method to directly use the parameters instead of a StatsKey object.		
",
		newContent:"
		public void recordDiskFallBehindTime(final String group, final String topic, final int queueId, final long fallBehind) {
		        StatsKey statsKey = new StatsKey(group, topic, queueId);
		        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey.toString()).getValue().set(fallBehind);
		    }		
",
,

	],
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java:
	[
		fromLine:"		104",
		toLine:"		106",
		oldContent:"
		// The method now uses the parameters directly instead of creating a new StatsKey.		
",
		newContent:"
		public void recordDiskFallBehindTime(final String group, final String topic, final int queueId, final long fallBehind) {
		        super.recordDiskFallBehindTime(group, topic, queueId, fallBehind);
		    }		
",
,
		fromLine:"		120",
		toLine:"		122",
		oldContent:"
		// The method now uses the parameters directly instead of creating a new StatsKey.		
",
		newContent:"
		public void recordDiskFallBehindSize(final String group, final String topic, final int queueId, final long fallBehind) {
		        super.recordDiskFallBehindSize(group, topic, queueId, fallBehind);
		    }		
",
,

	],

}
extractedClasses:
{
	common/src/main/java/org/apache/rocketmq/common/stats/StatsKey.java:"
	package org.apache.rocketmq.common.stats;
	
	public class StatsKey {
	    private final String group;
	    private final String topic;
	    private final int queueId;
	
	    public StatsKey(String group, String topic, int queueId) {
	        this.group = group;
	        this.topic = topic;
	        this.queueId = queueId;
	    }
	
	    public String getGroup() {
	        return group;
	    }
	
	    public String getTopic() {
	        return topic;
	    }
	
	    public int getQueueId() {
	        return queueId;
	    }
	
	    @Override
	    public String toString() {
	        return "StatsKey{" +
	                "group='" + group + '\'' +
	                ", topic='" + topic + '\'' +
	                ", queueId=" + queueId +
	                '}';
	    }
	}
		
",

}
