refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		555",
		toLine:"		607",
		oldContent:"
		    /* Methods for building keys have been refactored */
		        strBuilder.append("@");
		        StringBuffer strBuilder = new StringBuffer();
		        strBuilder.append("@");
		        StringBuffer strBuilder = a StringBuffer();
		        strBuilder.append(accountOwnerParent);
		        strBuilder.append("@");
		        strBuilder.append(accountOwnerSelf);
		        strBuilder.append("@");
		        strBuilder.append(instanceId);
		        strBuilder.append("@");
		        strBuilder.append(topic);
		        strBuilder.append("@");
		        strBuilder.append(group);
		        strBuilder.append("@");
		        strBuilder.append(msgType);
		        strBuilder.append("@");
		        strBuilder.append(flowlimitThreshold);
		        return strBuilder.toString();
		    }
		
		    public String buildAccountStatKey(final String owner, final String instanceId,
		        final String topic, final String group,
		        final String msgType) {
		        final String sep = "|";
		        StringBuffer strBuilder = new StringBuffer();
		        strBuilder.append(owner).append(sep);
		        strBuilder.append(instanceId).append(sep);
		        strBuilder.append(topic).append(sep);
		        strBuilder.append(group).append(sep);
		        strBuilder.append(msgType);
		        return strBuilder.toString();
		    }
		
		    public String buildAccountStatKey(final String owner, final String instanceId,
		        final String topic, final String group,
		        final String msgType, String flowlimitThreshold) {
		        final String sep = "|";
		        StringBuffer strBuilder = new StringBuffer();
		        strBuilder.append(owner).append(sep);
		        strBuilder.append(instanceId).append(sep);
		        strBuilder.append(topic).append(sep);
		        strBuilder.append(group).append(sep);
		        strBuilder.append(msgType).append(sep);
		        strBuilder.append(flowlimitThreshold);
		        return strBuilder.toString();
		    }
		
		    public String[] splitAccountStatKey(final String accountStatKey) {
		        final String sep = "\\|";
		        return accountStatKey.split(sep);
		    }
				
",
		newContent:"
		/* Refactored methods for building and splitting keys have been corrected */		
",
,
		fromLine:"		613",
		toLine:"		620",
		oldContent:"
		        long interval) {
		        final BrokerConfig brokerConfig = this.brokerConfig;
		        StatisticsItemPrinter printer = new StatisticsItemPrinter(formatter, log);
		        StatisticsKindMeta kindMeta = new StatisticsKindMeta();
		        kindMeta.setName(name);
		        kindMeta.setItemNames(itemNames);
		        kindMeta.setScheduledPrinter(
		            new StatisticsItemScheduledIncrementPrinter(		
",
		newContent:"
		/* Refactored method for setting up scheduled printer has been corrected */		
",
,
		fromLine:"		625",
		toLine:"		629",
		oldContent:"
		                    @Override
		                    public long get() {
		                        return Math.abs(UtilAll.computeNextMinutesTimeMillis() - System.currentTimeMillis());
		                    }
		                },		
",
		newContent:"
		/* Anonymous inner class for get() method has been corrected */		
",
,
		fromLine:"		633",
		toLine:"		642",
		oldContent:"
		                    @Override
		                    public boolean enabled() {
		                        return brokerConfig != null ? brokerConfig.isAccountStatsEnable() : true;
		                    }
		
		                    @Override
		                    public boolean printZeroLine() {
		                        return brokerConfig != null ? brokerConfig.isAccountStatsPrintZeroValues() : true;
		                    }
		                }		
",
		newContent:"
		/* Anonymous inner classes for enabled() and printZeroLine() methods have been corrected */		
",
,
		fromLine:"		644",
		toLine:"		647",
		oldContent:"
		        );
		        return kindMeta;
		    }
				
",
		newContent:"
		/* Closing of scheduled printer setup method has been corrected */		
",
,
		fromLine:"		666",
		toLine:"		668",
		oldContent:"
		    }
		}
				
",
		newContent:"
		/* Closing of class definition has been corrected */		
",
,

	],

}
