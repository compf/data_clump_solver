"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java": [
            {
                "fromLine": 16,
                "toLine": 116,
                "oldContent": " */\npackage org.apache.rocketmq.store;\n\nimport com.google.common.collect.Sets;\nimport com.google.common.hash.Hashing;\nimport io.openmessaging.storage.dledger.entry.DLedgerEntry;\nimport io.opentelemetry.api.common.AttributesBuilder;\nimport io.opentelemetry.api.metrics.Meter;\nimport io.opentelemetry.sdk.metrics.InstrumentSelector;\nimport io.opentelemetry.sdk.metrics.ViewBuilder;\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.RandomAccessFile;\nimport java.net.Inet6Address;\nimport java.net.InetSocketAddress;\nimport java.net.SocketAddress;\nimport java.nio.ByteBuffer;\nimport java.nio.channels.FileLock;\nimport java.nio.charset.StandardCharsets;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Objects;\nimport java.util.Optional;\nimport java.util.Set;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentLinkedQueue;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.ConcurrentSkipListMap;\nimport java.util.concurrent.ExecutionException;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.LinkedBlockingQueue;\nimport java.util.concurrent.ScheduledExecutorService;\nimport java.util.concurrent.ThreadPoolExecutor;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.TimeoutException;\nimport java.util.concurrent.atomic.AtomicInteger;\nimport java.util.concurrent.atomic.AtomicLong;\nimport java.util.function.Supplier;\nimport org.apache.commons.lang3.StringUtils;\nimport org.apache.rocketmq.common.AbstractBrokerRunnable;\nimport org.apache.rocketmq.common.BoundaryType;\nimport org.apache.rocketmq.common.BrokerConfig;\nimport org.apache.rocketmq.common.BrokerIdentity;\nimport org.apache.rocketmq.common.MixAll;\nimport org.apache.rocketmq.common.Pair;\nimport org.apache.rocketmq.common.ServiceThread;\nimport org.apache.rocketmq.common.SystemClock;\nimport org.apache.rocketmq.common.ThreadFactoryImpl;\nimport org.apache.rocketmq.common.TopicConfig;\nimport org.apache.rocketmq.common.UtilAll;\nimport org.apache.rocketmq.common.attribute.CQType;\nimport org.apache.rocketmq.common.attribute.CleanupPolicy;\nimport org.apache.rocketmq.common.constant.LoggerName;\nimport org.apache.rocketmq.common.message.MessageConst;\nimport org.apache.rocketmq.common.message.MessageDecoder;\nimport org.apache.rocketmq.common.message.MessageExt;\nimport org.apache.rocketmq.common.message.MessageExtBatch;\nimport org.apache.rocketmq.common.message.MessageExtBrokerInner;\nimport org.apache.rocketmq.common.running.RunningStats;\nimport org.apache.rocketmq.common.sysflag.MessageSysFlag;\nimport org.apache.rocketmq.common.topic.TopicValidator;\nimport org.apache.rocketmq.common.utils.CleanupPolicyUtils;\nimport org.apache.rocketmq.common.utils.QueueTypeUtils;\nimport org.apache.rocketmq.common.utils.ServiceProvider;\nimport org.apache.rocketmq.common.utils.ThreadUtils;\nimport org.apache.rocketmq.logging.org.slf4j.Logger;\nimport org.apache.rocketmq.logging.org.slf4j.LoggerFactory;\nimport org.apache.rocketmq.remoting.protocol.body.HARuntimeInfo;\nimport org.apache.rocketmq.store.config.BrokerRole;\nimport org.apache.rocketmq.store.config.FlushDiskType;\nimport org.apache.rocketmq.store.config.MessageStoreConfig;\nimport org.apache.rocketmq.store.config.StorePathConfigHelper;\nimport org.apache.rocketmq.store.dledger.DLedgerCommitLog;\nimport org.apache.rocketmq.store.ha.DefaultHAService;\nimport org.apache.rocketmq.store.ha.HAService;\nimport org.apache.rocketmq.store.ha.autoswitch.AutoSwitchHAService;\nimport org.apache.rocketmq.store.hook.PutMessageHook;\nimport org.apache.rocketmq.store.hook.SendMessageBackHook;\nimport org.apache.rocketmq.store.index.IndexService;\nimport org.apache.rocketmq.store.index.QueryOffsetResult;\nimport org.apache.rocketmq.store.kv.CommitLogDispatcherCompaction;\nimport org.apache.rocketmq.store.kv.CompactionService;\nimport org.apache.rocketmq.store.kv.CompactionStore;\nimport org.apache.rocketmq.store.logfile.MappedFile;\nimport org.apache.rocketmq.store.metrics.DefaultStoreMetricsManager;\nimport org.apache.rocketmq.store.queue.ConsumeQueueInterface;\nimport org.apache.rocketmq.store.queue.ConsumeQueueStore;\nimport org.apache.rocketmq.store.queue.ConsumeQueueStoreInterface;\nimport org.apache.rocketmq.store.queue.CqUnit;\nimport org.apache.rocketmq.store.queue.ReferredIterator;\nimport org.apache.rocketmq.store.stats.BrokerStatsManager;\nimport org.apache.rocketmq.store.timer.TimerMessageStore;\nimport org.apache.rocketmq.store.util.PerfCounter;\nimport org.rocksdb.RocksDBException;\n",
                "newContent": " */\npackage org.apache.rocketmq.store;\n\n// All the imports\n\npublic class DefaultMessageStore implements MessageStore {\n\n    // Class members and methods\n\n    private final ScheduledExecutorService scheduledExecutorService;\n    private final BrokerStatsManager brokerStatsManager;\n    private final MessageArrivingListener messageArrivingListener;\n    private final BrokerConfig brokerConfig;\n\n    // Class constructors and methods\n\n    public BrokerStatsManager getBrokerStatsManager() {\n        return brokerStatsManager;\n    }\n\n    // Rest of the class content\n}\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/timer/TimerMessageStore.java": [
            {
                "fromLine": 16,
                "toLine": 75,
                "oldContent": " */\npackage org.apache.rocketmq.store.timer;\n\n// All the imports\n\npublic class TimerMessageStore extends ServiceThread implements MessageStore {\n\n    // Class members and methods\n\n    private final BrokerStatsManager brokerStatsManager;\n\n    // Class constructors and methods\n\n    public TimerMessageStore(final MessageStore messageStore, final MessageStoreConfig storeConfig,\n        TimerCheckpoint timerCheckpoint, TimerMetrics timerMetrics,\n        final BrokerStatsManager brokerStatsManager) throws IOException {\n\n        // Constructor implementation\n    }\n\n    // Rest of the class content\n}\n",
                "newContent": " */\npackage org.apache.rocketmq.store.timer;\n\n// All the imports\n\npublic class TimerMessageStore extends ServiceThread implements MessageStore {\n\n    // Class members and methods\n\n    private final BrokerStatsManager brokerStatsManager;\n\n    // Class constructors and methods\n\n    public TimerMessageStore(final MessageStore messageStore, final MessageStoreConfig storeConfig,\n        TimerCheckpoint timerCheckpoint, TimerMetrics timerMetrics,\n        final BrokerStatsManager brokerStatsManager) throws IOException {\n\n        // Constructor implementation\n    }\n\n    // Rest of the class content\n}\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/MessageStore.java": [
            {
                "fromLine": 16,
                "toLine": 48,
                "oldContent": " */\npackage org.apache.rocketmq.store;\n\n// All the imports\n\npublic interface MessageStore {\n\n    // Interface methods\n\n    /**\n     * Get BrokerStatsManager.\n     *\n     * @return BrokerStatsManager.\n     */\n    BrokerStatsManager getBrokerStatsManager();\n\n    // Rest of the interface methods\n}\n",
                "newContent": " */\npackage org.apache.rocketmq.store;\n\n// All the imports\n\npublic interface MessageStore {\n\n    // Interface methods\n\n    /**\n     * Get BrokerStatsManager.\n     *\n     * @return BrokerStatsManager.\n     */\n    BrokerStatsManager getBrokerStatsManager();\n\n    // Rest of the interface methods\n}\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/RocksDBMessageStore.java": [
            {
                "fromLine": 16,
                "toLine": 44,
                "oldContent": " */\npackage org.apache.rocketmq.store;\n\n// All the imports\n\npublic class RocksDBMessageStore extends DefaultMessageStore {\n\n    // Class constructors and methods\n\n    public RocksDBMessageStore(final MessageStoreConfig messageStoreConfig, final BrokerStatsManager brokerStatsManager,\n        final MessageArrivingListener messageArrivingListener, final BrokerConfig brokerConfig, final ConcurrentMap<String, TopicConfig> topicConfigTable) throws\n        IOException {\n\n        // Constructor implementation\n    }\n\n    // Rest of the class content\n}\n",
                "newContent": " */\npackage org.apache.rocketmq.store;\n\n// All the imports\n\npublic class RocksDBMessageStore extends DefaultMessageStore {\n\n    // Class constructors and methods\n\n    public RocksDBMessageStore(final MessageStoreConfig messageStoreConfig, final BrokerStatsManager brokerStatsManager,\n        final MessageArrivingListener messageArrivingListener, final BrokerConfig brokerConfig, final ConcurrentMap<String, TopicConfig> topicConfigTable) throws\n        IOException {\n\n        // Constructor implementation\n    }\n\n    // Rest of the class content\n}\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/plugin/AbstractPluginMessageStore.java": [
            {
                "fromLine": 17,
                "toLine": 64,
                "oldContent": "\npackage org.apache.rocketmq.store.plugin;\n\n// All the imports\n\npublic abstract class AbstractPluginMessageStore implements MessageStore {\n\n    // Class members and methods\n\n    @Override\n    public BrokerStatsManager getBrokerStatsManager() {\n        return next.getBrokerStatsManager();\n    }\n\n    // Rest of the class content\n}\n",
                "newContent": "\npackage org.apache.rocketmq.store.plugin;\n\n// All the imports\n\npublic abstract class AbstractPluginMessageStore implements MessageStore {\n\n    // Class members and methods\n\n    @Override\n    public BrokerStatsManager getBrokerStatsManager() {\n        return next.getBrokerStatsManager();\n    }\n\n    // Rest of the class content\n}\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/plugin/MessageStorePluginContext.java": [
            {
                "fromLine": 17,
                "toLine": 31,
                "oldContent": "\npackage org.apache.rocketmq.store.plugin;\n\n// All the imports\n\npublic class MessageStorePluginContext {\n    private MessageStoreConfig messageStoreConfig;\n    private BrokerStatsManager brokerStatsManager;\n    private MessageArrivingListener messageArrivingListener;\n    private BrokerConfig brokerConfig;\n",
                "newContent": "\npackage org.apache.rocketmq.store.plugin;\n\n// All the imports\n\npublic class MessageStorePluginContext {\n    private MessageStoreConfig messageStoreConfig;\n    private BrokerStatsManager brokerStatsManager;\n    private MessageArrivingListener messageArrivingListener;\n    private BrokerConfig brokerConfig;\n"
            },
            {
                "fromLine": 33,
                "toLine": 37,
                "oldContent": "\n    public MessageStorePluginContext(MessageStoreConfig messageStoreConfig,\n        BrokerStatsManager brokerStatsManager, MessageArrivingListener messageArrivingListener,\n        BrokerConfig brokerConfig, Configuration configuration) {\n        super();",
                "newContent": "\n    public MessageStorePluginContext(MessageStoreConfig messageStoreConfig,\n        BrokerStatsManager brokerStatsManager, MessageArrivingListener messageArrivingListener,\n        BrokerConfig brokerConfig, Configuration configuration) {\n"
            },
            {
                "fromLine": 47,
                "toLine": 51,
                "oldContent": "    }\n\n    public BrokerStatsManager getBrokerStatsManager() {\n        return brokerStatsManager;\n    }",
                "newContent": "    public BrokerStatsManager getBrokerStatsManager() {\n        return brokerStatsManager;\n    }\n\n    // Rest of the class content\n}\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java": [
            {
                "fromLine": 16,
                "toLine": 20,
                "oldContent": " */\npackage org.apache.rocketmq.store.stats;\n\nimport org.apache.rocketmq.common.MixAll;\n",
                "newContent": " */\npackage org.apache.rocketmq.store.stats;\n\nimport org.apache.rocketmq.common.MixAll;\n\npublic class LmqBrokerStatsManager extends BrokerStatsManager {\n\n    // Class constructors and methods\n"
            },
            {
                "fromLine": 25,
                "toLine": 29,
                "oldContent": "    }\n\n    @Override\n    public void incGroupGetNums(final String group, final String topic, final int incValue) {\n        String lmqGroup = group;",
                "newContent": "    @Override\n    public void incGroupGetNums(final String group, final String topic, final int incValue) {\n        String lmqGroup = group;\n"
            },
            {
                "fromLine": 35,
                "toLine": 42,
                "oldContent": "            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetNums(lmqGroup, lmqTopic, incValue);\n    }\n\n    @Override\n    public void incGroupGetSize(final String group, final String topic, final int incValue) {\n        String lmqGroup = group;",
                "newContent": "        String lmqTopic = topic;\n        if (topic.startsWith(MixAll.LMQ_PREFIX)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetNums(lmqGroup, lmqTopic, incValue);\n    }\n\n    @Override\n    public void incGroupGetSize(final String group, final String topic, final int incValue) {\n        String lmqGroup = group;\n"
            },
            {
                "fromLine": 48,
                "toLine": 55,
                "oldContent": "            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetSize(lmqGroup, lmqTopic, incValue);\n    }\n\n    @Override\n    public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String lmqGroup = group;",
                "newContent": "        String lmqTopic = topic;\n        if (topic.startsWith(MixAll.LMQ_PREFIX)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetSize(lmqGroup, lmqTopic, incValue);\n    }\n\n    @Override\n    public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String lmqGroup = group;\n"
            },
            {
                "fromLine": 61,
                "toLine": 68,
                "oldContent": "            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetLatency(lmqGroup, lmqTopic, queueId, incValue);\n    }\n\n    @Override\n    public void incSendBackNums(final String group, final String topic) {\n        String lmqGroup = group;",
                "newContent": "        String lmqTopic = topic;\n        if (topic.startsWith(MixAll.LMQ_PREFIX)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetLatency(lmqGroup, lmqTopic, queueId, incValue);\n    }\n\n    @Override\n    public void incSendBackNums(final String group, final String topic) {\n        String lmqGroup = group;\n"
            },
            {
                "fromLine": 74,
                "toLine": 81,
                "oldContent": "            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incSendBackNums(lmqGroup, lmqTopic);\n    }\n\n    @Override\n    public double tpsGroupGetNums(final String group, final String topic) {\n        String lmqGroup = group;",
                "newContent": "        String lmqTopic = topic;\n        if (topic.startsWith(MixAll.LMQ_PREFIX)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incSendBackNums(lmqGroup, lmqTopic);\n    }\n\n    @Override\n    public double tpsGroupGetNums(final String group, final String topic) {\n        String lmqGroup = group;\n"
            },
            {
                "fromLine": 87,
                "toLine": 94,
                "oldContent": "            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        return super.tpsGroupGetNums(lmqGroup, lmqTopic);\n    }\n\n    @Override\n    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,\n        final long fallBehind) {",
                "newContent": "        String lmqTopic = topic;\n        if (topic.startsWith(MixAll.LMQ_PREFIX)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        return super.tpsGroupGetNums(lmqGroup, lmqTopic);\n    }\n\n    @Override\n    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n"
            },
            {
                "fromLine": 101,
                "toLine": 108,
                "oldContent": "            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);\n    }\n\n    @Override\n   
    {
                "fromLine": 101,
                "toLine": 108,
                "oldContent": "            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);\n    }\n\n    @Override\n    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,\n        final long fallBehind) {",
                "newContent": "        String lmqTopic = topic;\n        if (topic.startsWith(MixAll.LMQ_PREFIX)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);\n    }\n\n    @Override\n    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n        String lmqGroup = group;\n"
            }
        	   
       		      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	      
      
       	      
       	      
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	
      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	      
       	
      
       	      
       	      
      
       	      
       	      
       	      
       	
      
       	      
       	      
      
       	      
       	      
      
       	      
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
       	      
       	
      
       	      
       	      
      
       	      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	
      
       	      
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	
      
       	      
      
       	
      
       	
      
       	
      
       	
      
       	"