"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java": [
            {
                "fromLine": 26,
                "toLine": 117,
                "oldContent": "    }\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetNums(lmqGroup, lmqTopic, incValue);\n    }\n\n    @Override\n    public void incGroupGetSize(final String group, final String topic, final int incValue) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetSize(lmqGroup, lmqTopic, incValue);\n    }\n            this.defaultMessageStore.getBrokerStatsManager().getBrokerGetNumsWithoutSystemTopic();\n    @Override\n    public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetLatency(lmqGroup, lmqTopic, queueId, incValue);\n    }\n\n    @Override\n    public void incSendBackNums(final String group, final String topic) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incSendBackNums(lmqGroup, lmqTopic);\n    }\n\n    @Override\n    public double tpsGroupGetNums(final String group, final String topic) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        return super.tpsGroupGetNums(lmqGroup, lmqTopic);\n        return this.defaultMessageStore.getBrokerStatsManager().getBrokerPutNumsWithoutSystemTopic();\n    }\n    @Override\n    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        return this.defaultMessageStore.getBrokerStatsManager().getBrokerGetNumsWithoutSystemTopic();\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);\n    }\n\n    @Override\n    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.recordDiskFallBehindSize(lmqGroup, lmqTopic, queueId, fallBehind);\n    }\n\n}",
                "newContent": "    public LmqBrokerStatsManager(String clusterName, boolean enableQueueStat) {\n        super(clusterName, enableQueueStat);\n    }\n\n    @Override\n    public void incGroupGetNums(final String group, final String topic, final int incValue) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetNums(lmqGroup, lmqTopic, incValue);\n    }\n\n    @Override\n    public void incGroupGetSize(final String group, final String topic, final int incValue) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetSize(lmqGroup, lmqTopic, incValue);\n    }\n\n    @Override\n    public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incGroupGetLatency(lmqGroup, lmqTopic, queueId, incValue);\n    }\n\n    @Override\n    public void incSendBackNums(final String group, final String topic) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.incSendBackNums(lmqGroup, lmqTopic);\n    }\n\n    @Override\n    public double tpsGroupGetNums(final String group, final String topic) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        return super.tpsGroupGetNums(lmqGroup, lmqTopic);\n    }\n\n    @Override\n    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId, final long fallBehind) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);\n    }\n\n    @Override\n    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId, final long fallBehind) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.recordDiskFallBehindSize(lmqGroup, lmqTopic, queueId, fallBehind);\n    }\n}"
            }
        ]
    },
    "extractedClasses": {}
}"