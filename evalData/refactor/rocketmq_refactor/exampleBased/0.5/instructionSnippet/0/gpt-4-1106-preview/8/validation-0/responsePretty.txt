refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		566",
		toLine:"		568",
		oldContent:"
		    public void recordDiskFallBehindTime(final ConsumerLag consumerLag) {
		        final String statsKey = buildStatsKey(queueId, topic, group);
		        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);		
",
		newContent:"
		    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId, final long fallBehind) {
		        final String statsKey = buildStatsKey(queueId, topic, group);
		        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);		
",
,
		fromLine:"		571",
		toLine:"		573",
		oldContent:"
		    public void recordDiskFallBehindSize(final ConsumerLag consumerLag) {
		        final String statsKey = buildStatsKey(queueId, topic, group);
		        this.momentStatsItemSetFallSize.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);		
",
		newContent:"
		    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId, final long fallBehind) {
		        final String statsKey = buildStatsKey(queueId, topic, group);
		        this.momentStatsItemSetFallSize.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);		
",
,

	],
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java:
	[
		fromLine:"		940",
		toLine:"		940",
		oldContent:"
		                    brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);		
",
		newContent:"
		                    brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);		
",
,

	],
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java:
	[
		fromLine:"		92",
		toLine:"		92",
		oldContent:"
		    @Override		
",
		newContent:"
				
",
,
		fromLine:"		103",
		toLine:"		103",
		oldContent:"
		        super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);		
",
		newContent:"
		        this.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);		
",
,
		fromLine:"		106",
		toLine:"		106",
		oldContent:"
		    @Override		
",
		newContent:"
				
",
,
		fromLine:"		117",
		toLine:"		117",
		oldContent:"
		        super.recordDiskFallBehindSize(lmqGroup, lmqTopic, queueId, fallBehind);		
",
		newContent:"
		        this.recordDiskFallBehindSize(lmqGroup, lmqTopic, queueId, fallBehind);		
",
,

	],

}
extractedClasses:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/common/src/main/java/org/apache/rocketmq/common/stats/ConsumerLag.java:"
	package org.apache.rocketmq.common.stats;
	
	public class ConsumerLag {
	    private final String group;
	    private final String topic;
	    private final int queueId;
	    private final long fallBehind;
	
	    public ConsumerLag(String group, String topic, int queueId, long fallBehind) {
	        this.group = group;
	        this.topic = topic;
	        this.queueId = queueId;
	        this.fallBehind = fallBehind;
	    }
	
	    public String getGroup() {
	        return group;
	    }
	
	    public String getTopic() {
	        return topic;
	    }
	
	    public int getQueueId() {
	        return queueId;
	    }
	
	    public long getFallBehind() {
	        return fallBehind;
	    }
	}
		
",

}
