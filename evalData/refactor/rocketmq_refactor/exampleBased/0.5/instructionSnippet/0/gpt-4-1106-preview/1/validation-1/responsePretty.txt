refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		571",
		toLine:"		573",
		oldContent:"
		        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);		
",
		newContent:"
		        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);
		    }		
",
,
		fromLine:"		575",
		toLine:"		579",
		oldContent:"
		    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,
		        final long fallBehind) {
		        final String statsKey = buildStatsKey(queueId, topic, group);
		        this.momentStatsItemSetFallSize.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);
		    }		
",
		newContent:"
				
",
,
		fromLine:"		583",
		toLine:"		586",
		oldContent:"
		    public void incDLQStatValue(final StatItemKey statItemKey, final String type, final int incValue) {
		        final String statsKey = buildCommercialStatsKey(statItemKey.getOwner(), statItemKey.getTopic(), statItemKey.getGroup(), type);
		        this.statsTable.get(statItemKey.getKey()).addValue(statsKey, incValue, 1);
		    }		
",
		newContent:"
				
",
,
		fromLine:"		588",
		toLine:"		591",
		oldContent:"
		    public void incCommercialValue(final StatItemKey statItemKey, final String type, final int incValue) {
		        final String statsKey = buildCommercialStatsKey(statItemKey.getOwner(), statItemKey.getTopic(), statItemKey.getGroup(), type);
		        this.statsTable.get(statItemKey.getKey()).addValue(statsKey, incValue, 1);
		    }		
",
		newContent:"
				
",
,
		fromLine:"		593",
		toLine:"		594",
		oldContent:"
		    public void incAccountValue(final StatItemKey statItemKey, final String msgType, final int incValue) {
		        final String statsKey = buildAccountStatsKey(statItemKey.getAccountOwnerParent(), statItemKey.getAccountOwnerSelf(), statItemKey.getInstanceId(), statItemKey.getTopic(), statItemKey.getGroup(),		
",
		newContent:"
				
",
,
		fromLine:"		596",
		toLine:"		597",
		oldContent:"
		        this.statsTable.get(statItemKey.getKey()).addValue(statsKey, incValue, 1);
		    }		
",
		newContent:"
				
",
,
		fromLine:"		599",
		toLine:"		600",
		oldContent:"
		    public void incAccountValue(final StatItemKey statItemKey, final String msgType, final String flowlimitThreshold, final int incValue) {
		        final String statsKey = buildAccountStatsKey(statItemKey.getAccountOwnerParent(), statItemKey.getAccountOwnerSelf(), statItemKey.getInstanceId(), statItemKey.getTopic(), statItemKey.getGroup(),		
",
		newContent:"
				
",
,
		fromLine:"		602",
		toLine:"		603",
		oldContent:"
		        this.statsTable.get(statItemKey.getKey()).addValue(statsKey, incValue, 1);
		    }		
",
		newContent:"
				
",
,
		fromLine:"		605",
		toLine:"		608",
		oldContent:"
		    public void incAccountValue(final String statType, final StatItemKey statItemKey, final long... incValues) {
		        final String key = buildAccountStatKey(statItemKey.getOwner(), statItemKey.getInstanceId(), statItemKey.getTopic(), statItemKey.getGroup(), statItemKey.getMsgType());
		        this.accountStatManager.inc(statType, key, incValues);
		    }		
",
		newContent:"
				
",
,
		fromLine:"		610",
		toLine:"		613",
		oldContent:"
		    public void incAccountValue(final String statType, final StatItemKey statItemKey, final String flowlimitThreshold, final long... incValues) {
		        final String key = buildAccountStatKey(statItemKey.getOwner(), statItemKey.getInstanceId(), statItemKey.getTopic(), statItemKey.getGroup(), statItemKey.getMsgType(), flowlimitThreshold);
		        this.accountStatManager.inc(statType, key, incValues);
		    }		
",
		newContent:"
				
",
,
		fromLine:"		615",
		toLine:"		615",
		oldContent:"
		    public String buildCommercialStatsKey(final StatItemKey statItemKey, final String type) {		
",
		newContent:"
				
",
,
		fromLine:"		617",
		toLine:"		625",
		oldContent:"
		        strBuilder.append(statItemKey.getOwner());
		        strBuilder.append("@");
		        strBuilder.append(statItemKey.getTopic());
		        strBuilder.append("@");
		        strBuilder.append(statItemKey.getGroup());
		        strBuilder.append("@");
		        strBuilder.append(type);
		        return strBuilder.toString();
		    }		
",
		newContent:"
				
",
,
		fromLine:"		627",
		toLine:"		627",
		oldContent:"
		    public String buildAccountStatsKey(final StatItemKey statItemKey,		
",
		newContent:"
				
",
,
		fromLine:"		630",
		toLine:"		642",
		oldContent:"
		        strBuilder.append(statItemKey.getAccountOwnerParent());
		        strBuilder.append("@");
		        strBuilder.append(statItemKey.getAccountOwnerSelf());
		        strBuilder.append("@");
		        strBuilder.append(statItemKey.getInstanceId());
		        strBuilder.append("@");
		        strBuilder.append(statItemKey.getTopic());
		        strBuilder.append("@");
		        strBuilder.append(group);
		        strBuilder.append("@");
		        strBuilder.append(msgType);
		        return strBuilder.toString();
		    }		
",
		newContent:"
				
",
,
		fromLine:"		644",
		toLine:"		644",
		oldContent:"
		    public String buildAccountStatsKey(final StatItemKey statItemKey,		
",
		newContent:"
				
",
,
		fromLine:"		647",
		toLine:"		659",
		oldContent:"
		        strBuilder.append(statItemKey.getAccountOwnerParent());
		        strBuilder.append("@");
		        strBuilder.append(statItemKey.getAccountOwnerSelf());
		        strBuilder.append("@");
		        strBuilder.append(statItemKey.getInstanceId());
		        strBuilder.append("@");
		        strBuilder.append(statItemKey.getTopic());
		        strBuilder.append("@");
		        strBuilder.append(group);
		        strBuilder.append("@");
		        strBuilder.append(msgType);
		        strBuilder.append("@");
		        strBuilder.append(flowlimitThreshold);		
",
		newContent:"
				
",
,

	],

}
extractedClasses:
{

}
