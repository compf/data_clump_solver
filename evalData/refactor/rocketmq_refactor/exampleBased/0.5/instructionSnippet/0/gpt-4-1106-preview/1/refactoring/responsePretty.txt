"{
    "refactorings": {
        "common/src/main/java/org/apache/rocketmq/common/stats/Stats.java": [
            {
                "fromLine": 16,
                "toLine": 18,
                "oldContent": " */\npackage org.apache.rocketmq.common.stats;\n",
                "newContent": " */\npackage org.apache.rocketmq.common.stats;\n\nimport org.apache.rocketmq.common.stats.StatItemKey;\n"
            },
            {
                "fromLine": 21,
                "toLine": 42,
                "oldContent": "    public static final String QUEUE_PUT_NUMS = \"QUEUE_PUT_NUMS\";\n    public static final String QUEUE_PUT_SIZE = \"QUEUE_PUT_SIZE\";\n    public static final String QUEUE_GET_NUMS = \"QUEUE_GET_NUMS\";\n    public static final String QUEUE_GET_SIZE = \"QUEUE_GET_SIZE\";\n    public static final String TOPIC_PUT_NUMS = \"TOPIC_PUT_NUMS\";\n    public static final String TOPIC_PUT_SIZE = \"TOPIC_PUT_SIZE\";\n    public static final String GROUP_GET_NUMS = \"GROUP_GET_NUMS\";\n    public static final String GROUP_GET_SIZE = \"GROUP_GET_SIZE\";\n    public static final String SNDBCK_PUT_NUMS = \"SNDBCK_PUT_NUMS\";\n    public static final String BROKER_PUT_NUMS = \"BROKER_PUT_NUMS\";\n    public static final String BROKER_GET_NUMS = \"BROKER_GET_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_NUMS = \"GROUP_GET_FROM_DISK_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_SIZE = \"GROUP_GET_FROM_DISK_SIZE\";\n    public static final String BROKER_GET_FROM_DISK_NUMS = \"BROKER_GET_FROM_DISK_NUMS\";\n    public static final String BROKER_GET_FROM_DISK_SIZE = \"BROKER_GET_FROM_DISK_SIZE\";\n    public static final String COMMERCIAL_SEND_TIMES = \"COMMERCIAL_SEND_TIMES\";\n    public static final String COMMERCIAL_SNDBCK_TIMES = \"COMMERCIAL_SNDBCK_TIMES\";\n    public static final String COMMERCIAL_RCV_TIMES = \"COMMERCIAL_RCV_TIMES\";\n    public static final String COMMERCIAL_RCV_EPOLLS = \"COMMERCIAL_RCV_EPOLLS\";\n    public static final String COMMERCIAL_SEND_SIZE = \"COMMERCIAL_SEND_SIZE\";\n    public static final String COMMERCIAL_RCV_SIZE = \"COMMERCIAL_RCV_SIZE\";\n    public static final String COMMERCIAL_PERM_FAILURES = \"COMMERCIAL_PERM_FAILURES\";",
                "newContent": ""
            },
            {
                "fromLine": 44,
                "toLine": 46,
                "oldContent": "    public static final String GROUP_GET_FALL_SIZE = \"GROUP_GET_FALL_SIZE\";\n    public static final String GROUP_GET_FALL_TIME = \"GROUP_GET_FALL_TIME\";\n    public static final String GROUP_GET_LATENCY = \"GROUP_GET_LATENCY\";",
                "newContent": ""
            }
        ],
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 16,
                "toLine": 42,
                "oldContent": " */\npackage org.apache.rocketmq.store.stats;\n\nimport java.util.HashMap;\nimport java.util.concurrent.ScheduledExecutorService;\nimport org.apache.commons.lang3.tuple.Pair;\nimport org.apache.rocketmq.common.BrokerConfig;\nimport org.apache.rocketmq.common.ThreadFactoryImpl;\nimport org.apache.rocketmq.common.UtilAll;\nimport org.apache.rocketmq.common.constant.LoggerName;\nimport org.apache.rocketmq.common.statistics.StatisticsItem;\nimport org.apache.rocketmq.common.statistics.StatisticsItemFormatter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledIncrementPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemStateGetter;\nimport org.apache.rocketmq.common.statistics.StatisticsKindMeta;\nimport org.apache.rocketmq.common.statistics.StatisticsManager;\nimport org.apache.rocketmq.common.stats.MomentStatsItemSet;\nimport org.apache.rocketmq.common.stats.Stats;\nimport org.apache.rocketmq.common.stats.StatsItem;\nimport org.apache.rocketmq.common.stats.StatsItemSet;\nimport org.apache.rocketmq.common.topic.TopicValidator;\nimport org.apache.rocketmq.common.utils.ThreadUtils;\nimport org.apache.rocketmq.logging.org.slf4j.Logger;\nimport org.apache.rocketmq.logging.org.slf4j.LoggerFactory;\n",
                "newContent": " */\npackage org.apache.rocketmq.store.stats;\n\nimport java.util.HashMap;\nimport java.util.concurrent.ScheduledExecutorService;\nimport org.apache.commons.lang3.tuple.Pair;\nimport org.apache.rocketmq.common.BrokerConfig;\nimport org.apache.rocketmq.common.ThreadFactoryImpl;\nimport org.apache.rocketmq.common.UtilAll;\nimport org.apache.rocketmq.common.constant.LoggerName;\nimport org.apache.rocketmq.common.statistics.StatisticsItem;\nimport org.apache.rocketmq.common.statistics.StatisticsItemFormatter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledIncrementPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemStateGetter;\nimport org.apache.rocketmq.common.statistics.StatisticsKindMeta;\nimport org.apache.rocketmq.common.statistics.StatisticsManager;\nimport org.apache.rocketmq.common.stats.MomentStatsItemSet;\nimport org.apache.rocketmq.common.stats.StatItemKey;\nimport org.apache.rocketmq.common.stats.StatsItem;\nimport org.apache.rocketmq.common.stats.StatsItemSet;\nimport org.apache.rocketmq.common.topic.TopicValidator;\nimport org.apache.rocketmq.common.utils.ThreadUtils;\nimport org.apache.rocketmq.logging.org.slf4j.Logger;\nimport org.apache.rocketmq.logging.org.slf4j.LoggerFactory;\n"
            },
            {
                "fromLine": 45,
                "toLine": 50,
                "oldContent": "    @Deprecated public static final String QUEUE_PUT_NUMS = Stats.QUEUE_PUT_NUMS;\n    @Deprecated public static final String QUEUE_PUT_SIZE = Stats.QUEUE_PUT_SIZE;\n    @Deprecated public static final String QUEUE_GET_NUMS = Stats.QUEUE_GET_NUMS;\n    @Deprecated public static final String QUEUE_GET_SIZE = Stats.QUEUE_GET_SIZE;\n    @Deprecated public static final String TOPIC_PUT_NUMS = Stats.TOPIC_PUT_NUMS;\n    @Deprecated public static final String TOPIC_PUT_SIZE = Stats.TOPIC_PUT_SIZE;",
                "newContent": ""
            },
            {
                "fromLine": 52,
                "toLine": 53,
                "oldContent": "    @Deprecated public static final String GROUP_GET_NUMS = Stats.GROUP_GET_NUMS;\n    @Deprecated public static final String GROUP_GET_SIZE = Stats.GROUP_GET_SIZE;",
                "newContent": ""
            },
            {
                "fromLine": 55,
                "toLine": 61,
                "oldContent": "    @Deprecated public static final String SNDBCK_PUT_NUMS = Stats.SNDBCK_PUT_NUMS;\n    @Deprecated public static final String BROKER_PUT_NUMS = Stats.BROKER_PUT_NUMS;\n    @Deprecated public static final String BROKER_GET_NUMS = Stats.BROKER_GET_NUMS;\n    @Deprecated public static final String GROUP_GET_FROM_DISK_NUMS = Stats.GROUP_GET_FROM_DISK_NUMS;\n    @Deprecated public static final String GROUP_GET_FROM_DISK_SIZE = Stats.GROUP_GET_FROM_DISK_SIZE;\n    @Deprecated public static final String BROKER_GET_FROM_DISK_NUMS = Stats.BROKER_GET_FROM_DISK_NUMS;\n    @Deprecated public static final String BROKER_GET_FROM_DISK_SIZE = Stats.BROKER_GET_FROM_DISK_SIZE;",
                "newContent": ""
            },
            {
                "fromLine": 63,
                "toLine": 69,
                "oldContent": "    @Deprecated public static final String COMMERCIAL_SEND_TIMES = Stats.COMMERCIAL_SEND_TIMES;\n    @Deprecated public static final String COMMERCIAL_SNDBCK_TIMES = Stats.COMMERCIAL_SNDBCK_TIMES;\n    @Deprecated public static final String COMMERCIAL_RCV_TIMES = Stats.COMMERCIAL_RCV_TIMES;\n    @Deprecated public static final String COMMERCIAL_RCV_EPOLLS = Stats.COMMERCIAL_RCV_EPOLLS;\n    @Deprecated public static final String COMMERCIAL_SEND_SIZE = Stats.COMMERCIAL_SEND_SIZE;\n    @Deprecated public static final String COMMERCIAL_RCV_SIZE = Stats.COMMERCIAL_RCV_SIZE;\n    @Deprecated public static final String COMMERCIAL_PERM_FAILURES = Stats.COMMERCIAL_PERM_FAILURES;",
                "newContent": ""
            },
            {
                "fromLine": 110,
                "toLine": 111,
                "oldContent": "    @Deprecated public static final String GROUP_GET_FALL_SIZE = Stats.GROUP_GET_FALL_SIZE;\n    @Deprecated public static final String GROUP_GET_FALL_TIME = Stats.GROUP_GET_FALL_TIME;",
                "newContent": ""
            },
            {
                "fromLine": 113,
                "toLine": 113,
                "oldContent": "    @Deprecated public static final String GROUP_GET_LATENCY = Stats.GROUP_GET_LATENCY;",
                "newContent": ""
            },
            {
                "fromLine": 585,
                "toLine": 586,
                "oldContent": "    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,\n        final long fallBehind) {",
                "newContent": "    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n        this.statsItemSet.recordDiskFallBehindTime(group, topic, queueId, fallBehind);\n    }"
            },
            {
                "fromLine": 591,
                "toLine": 592,
                "oldContent": "    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,\n        final long fallBehind) {",
                "newContent": "    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n        this.statsItemSet.recordDiskFallBehindSize(group, topic, queueId, fallBehind);\n    }"
            }
        ],
        "broker/src/main/java/org/apache/rocketmq/broker/metrics/ConsumerLagCalculator.java": [
            {
                "fromLine": 16,
                "toLine": 51,
                "oldContent": " */\npackage org.apache.rocketmq.broker.metrics;\n\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.function.Consumer;\nimport java.util.stream.Collectors;\nimport org.apache.rocketmq.broker.BrokerController;\nimport org.apache.rocketmq.broker.client.ConsumerGroupInfo;\nimport org.apache.rocketmq.broker.client.ConsumerManager;\nimport org.apache.rocketmq.broker.filter.ConsumerFilterData;\nimport org.apache.rocketmq.broker.filter.ConsumerFilterManager;\nimport org.apache.rocketmq.broker.offset.ConsumerOffsetManager;\nimport org.apache.rocketmq.broker.processor.PopBufferMergeService;\nimport org.apache.rocketmq.broker.processor.PopInflightMessageCounter;\nimport org.apache.rocketmq.broker.sub.SubscriptionGroupManager;\nimport org.apache.rocketmq.broker.topic.TopicConfigManager;\nimport org.apache.rocketmq.common.BrokerConfig;\nimport org.apache.rocketmq.common.KeyBuilder;\nimport org.apache.rocketmq.common.MixAll;\nimport org.apache.rocketmq.common.Pair;\nimport org.apache.rocketmq.common.TopicConfig;\nimport org.apache.rocketmq.common.constant.LoggerName;\nimport org.apache.rocketmq.common.constant.PermName;\nimport org.apache.rocketmq.common.filter.ExpressionType;\nimport org.apache.rocketmq.logging.org.slf4j.Logger;\nimport org.apache.rocketmq.logging.org.slf4j.LoggerFactory;\nimport org.apache.rocketmq.remoting.protocol.filter.FilterAPI;\nimport org.apache.rocketmq.remoting.protocol.heartbeat.ConsumeType;\nimport org.apache.rocketmq.remoting.protocol.heartbeat.SubscriptionData;\nimport org.apache.rocketmq.remoting.protocol.subscription.SimpleSubscriptionData;\nimport org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig;\nimport org.apache.rocketmq.store.DefaultMessageFilter;\nimport org.apache.rocketmq.store.MessageStore;\n",
                "newContent": " */\npackage org.apache.rocketmq.broker.metrics;\n\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.function.Consumer;\nimport java.util.stream.Collectors;\nimport org.apache.rocketmq.broker.BrokerController;\nimport org.apache.rocketmq.broker.client.ConsumerGroupInfo;\nimport org.apache.rocketmq.broker.client.ConsumerManager;\nimport org.apache.rocketmq.broker.filter.ConsumerFilterData;\nimport org.apache.rocketmq.broker.filter.ConsumerFilterManager;\nimport org.apache.rocketmq.broker.offset.ConsumerOffsetManager;\nimport org.apache.rocketmq.broker.processor.PopBufferMergeService;\nimport org.apache.rocketmq.broker.processor.PopInflightMessageCounter;\nimport org.apache.rocketmq.broker.sub.SubscriptionGroupManager;\nimport org.apache.rocketmq.broker.topic.TopicConfigManager;\nimport org.apache.rocketmq.common.BrokerConfig;\nimport org.apache.rocketmq.common.KeyBuilder;\nimport org.apache.rocketmq.common.MixAll;\nimport org.apache.rocketmq.common.Pair;\nimport org.apache.rocketmq.common.TopicConfig;\nimport org.apache.rocketmq.common.constant.LoggerName;\nimport org.apache.rocketmq.common.constant.PermName;\nimport org.apache.rocketmq.common.filter.ExpressionType;\nimport org.apache.rocketmq.logging.org.slf4j.Logger;\nimport org.apache.rocketmq.logging.org.slf4j.LoggerFactory;\nimport org.apache.rocketmq.remoting.protocol.filter.FilterAPI;\nimport org.apache.rocketmq.remoting.protocol.heartbeat.ConsumeType;\nimport org.apache.rocketmq.remoting.protocol.heartbeat.SubscriptionData;\nimport org.apache.rocketmq.remoting.protocol.subscription.SimpleSubscriptionData;\nimport org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig;\nimport org.apache.rocketmq.store.DefaultMessageFilter;\nimport org.apache.rocketmq.store.MessageStore;\nimport org.apache.rocketmq.common.stats.StatItemKey;\n"
            },
            {
                "fromLine": 301,
                "toLine": 301,
                "oldContent": "    public Pair<Long, Long> getConsumerLagStats(String group, String topic, int queueId, boolean isPop) {",
                "newContent": "    public Pair<Long, Long> getConsumerLagStats(StatItemKey statItemKey, boolean isPop) {"
            },
            {
                "fromLine": 440,
                "toLine": 440,
                "oldContent": "    public long calculateMessageCount(String group, String topic, int queueId, long from, long to) {",
                "newContent": "    public long calculateMessageCount(StatItemKey statItemKey, long from, long to) {"
            }
        ]
    },
    "extractedClasses": {
        "common/src/main/java/org/apache/rocketmq/common/stats/StatItemKey.java": "package org.apache.rocketmq.common.stats;\n\npublic class StatItemKey {\n    private final String group;\n    private final String topic;\n    private final int queueId;\n\n    public StatItemKey(String group, String topic, int queueId) {\n        this.group = group;\n        this.topic = topic;\n        this.queueId = queueId;\n    }\n\n    public String getGroup() {\n        return group;\n    }\n\n    public String getTopic() {\n        return topic;\n    }\n\n    public int getQueueId() {\n        return queueId;\n    }\n}\n"
    }
}"