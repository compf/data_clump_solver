refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		143",
		toLine:"		146",
		oldContent:"
		momentStatsItemSetFallSize = new MomentStatsItemSet(GROUP_GET_FALL_SIZE,
		momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,		
",
		newContent:"
				
",
,
		fromLine:"		150",
		toLine:"		180",
		oldContent:"
		this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.QUEUE_GET_SIZE, new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.GROUP_GET_SIZE, new StatsItemSet(Stats.GROUP_GET_SIZE, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.GROUP_GET_LATENCY, new StatsItemSet(Stats.GROUP_GET_LATENCY, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.SNDBCK_PUT_NUMS, new StatsItemSet(Stats.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.BROKER_GET_NUMS, new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.GROUP_GET_FROM_DISK_NUMS,
		    new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.GROUP_GET_FROM_DISK_SIZE,
		    new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.BROKER_GET_FROM_DISK_NUMS,
		    new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));
		this.statsTable.put(Stats.BROKER_GET_FROM_DISK_SIZE,
		    new StatsItemSet(Stats.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));		
",
		newContent:"
				
",
,
		fromLine:"		185",
		toLine:"		198",
		oldContent:"
		this.statsTable.put(Stats.COMMERCIAL_SEND_TIMES,
		    new StatsItemSet(Stats.COMMERCIAL_SEND_TIMES, this.commercialExecutor, COMMERCIAL_LOG));
		this.statsTable.put(Stats.COMMERCIAL_RCV_TIMES,
		    new StatsItemSet(Stats.COMMERCIAL_RCV_TIMES, this.commercialExecutor, COMMERCIAL_LOG));
		this.statsTable.put(Stats.COMMERCIAL_SEND_SIZE,
		    new StatsItemSet(Stats.COMMERCIAL_SEND_SIZE, this.commercialExecutor, COMMERCIAL_LOG));
		this.statsTable.put(Stats.COMMERCIAL_RCV_SIZE,
		    new StatsItemSet(Stats.COMMERCIAL_RCV_SIZE, this.commercialExecutor, COMMERCIAL_LOG));
		this.statsTable.put(Stats.COMMERCIAL_RCV_EPOLLS,
		    new StatsItemSet(Stats.COMMERCIAL_RCV_EPOLLS, this.commercialExecutor, COMMERCIAL_LOG));
		this.statsTable.put(Stats.COMMERCIAL_SNDBCK_TIMES,
		    new StatsItemSet(Stats.COMMERCIAL_SNDBCK_TIMES, this.commercialExecutor, COMMERCIAL_LOG));
		this.statsTable.put(Stats.COMMERCIAL_PERM_FAILURES,
		    new StatsItemSet(Stats.COMMERCIAL_PERM_FAILURES, this.commercialExecutor, COMMERCIAL_LOG));		
",
		newContent:"
				
",
,
		fromLine:"		310",
		toLine:"		334",
		oldContent:"
		this.statsTable.get(Stats.TOPIC_PUT_NUMS).delValue(topic);
		this.statsTable.get(Stats.TOPIC_PUT_SIZE).delValue(topic);
		this.statsTable.get(Stats.QUEUE_PUT_NUMS).delValueByPrefixKey(topic, "@");
		this.statsTable.get(Stats.QUEUE_PUT_SIZE).delValueByPrefixKey(topic, "@");
		this.statsTable.get(Stats.GROUP_GET_NUMS).delValueByPrefixKey(topic, "@");
		this.statsTable.get(Stats.GROUP_GET_SIZE).delValueByPrefixKey(topic, "@");
		this.statsTable.get(Stats.QUEUE_GET_NUMS).delValueByPrefixKey(topic, "@");
		this.statsTable.get(Stats.QUEUE_GET_SIZE).delValueByPrefixKey(topic, "@");
		this.statsTable.get(Stats.SNDBCK_PUT_NUMS).delValueByPrefixKey(topic, "@");
		this.statsTable.get(Stats.GROUP_GET_LATENCY).delValueByInfixKey(topic, "@");
		this.statsTable.get(Stats.GROUP_GET_NUMS).delValueBySuffixKey(group, "@");
		this.statsTable.get(Stats.GROUP_GET_SIZE).delValueBySuffixKey(group, "@");
		this.statsTable.get(Stats.QUEUE_GET_NUMS).delValueBySuffixKey(group, "@");
		this.statsTable.get(Stats.QUEUE_GET_SIZE).delValueBySuffixKey(group, "@");
		this.statsTable.get(Stats.SNDBCK_PUT_NUMS).delValueBySuffixKey(group, "@");
		this.statsTable.get(Stats.GROUP_GET_LATENCY).delValueBySuffixKey(group, "@");		
",
		newContent:"
				
",
,
		fromLine:"		341",
		toLine:"		554",
		oldContent:"
		this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), 1, 1);
		this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), num, times);
		this.statsTable.get(Stats.QUEUE_PUT_SIZE).addValue(buildStatsKey(topic, queueId), size, 1);
		this.statsTable.get(Stats.QUEUE_GET_NUMS).addValue(statsKey, incValue, 1);
		this.statsTable.get(Stats.QUEUE_GET_SIZE).addValue(statsKey, incValue, 1);
		this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, 1, 1);
		this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, num, times);
		this.statsTable.get(Stats.TOPIC_PUT_SIZE).addValue(topic, size, 1);
		this.statsTable.get(Stats.GROUP_GET_NUMS).addValue(statsKey, incValue, 1);
		this.statsTable.get(Stats.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);
		this.statsTable.get(Stats.GROUP_GET_LATENCY).addRTValue(statsKey, incValue, 1);
		this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(1);
		this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);
		this.statsTable.get(Stats.BROKER_GET_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);
		this.statsTable.get(Stats.SNDBCK_PUT_NUMS).addValue(statsKey, 1, 1);
		return this.statsTable.get(Stats.GROUP_GET_NUMS).getStatsDataInMinute(statsKey).getTps();		
",
		newContent:"
				
",
,
		fromLine:"		568",
		toLine:"		568",
		oldContent:"
		final String statsKey = buildStatsKey(group, topic, queueId);		
",
		newContent:"
		final String statsKey = buildStatsKey(group, topic, queueId);		
",
,

	],

}
extractedClasses:
{

}
