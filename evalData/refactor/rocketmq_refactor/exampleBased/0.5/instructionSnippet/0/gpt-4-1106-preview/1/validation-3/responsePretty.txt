refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		436",
		toLine:"		436",
		oldContent:"
		    public String buildStatsKey(String topic, int queueId) {		
",
		newContent:"
		    public String buildStatsKey(String topic, int queueId) {
		        // Implementation here
		    }		
",
,
		fromLine:"		446",
		toLine:"		446",
		oldContent:"
		    public String buildStatsKey(String topic, int queueId, String group) {		
",
		newContent:"
		    public String buildStatsKey(String topic, int queueId, String group) {
		        // Implementation here
		    }		
",
,
		fromLine:"		456",
		toLine:"		456",
		oldContent:"
		    public String buildStatsKey(int queueId, String topic, String group) {		
",
		newContent:"
		    public String buildStatsKey(int queueId, String topic, String group) {
		        // Implementation here
		    }		
",
,
		fromLine:"		466",
		toLine:"		466",
		oldContent:"
		    public void incGroupGetSize(final String group, final String topic, final int incValue) {		
",
		newContent:"
		    public void incGroupGetSize(final String group, final String topic, final int incValue) {
		        // Implementation here
		    }		
",
,
		fromLine:"		567",
		toLine:"		569",
		oldContent:"
		        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);		
",
		newContent:"
		        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);
		    }		
",
,
		fromLine:"		582",
		toLine:"		583",
		oldContent:"
		            msgType);
		    }		
",
		newContent:"
		            msgType);
		    }
				
",
,
		fromLine:"		588",
		toLine:"		588",
		oldContent:"
		    }		
",
		newContent:"
		    }
				
",
,
		fromLine:"		597",
		toLine:"		597",
		oldContent:"
		    }		
",
		newContent:"
		    }
				
",
,
		fromLine:"		607",
		toLine:"		607",
		oldContent:"
		        String topic, String group, String msgType, String flowlimitThreshold) {		
",
		newContent:
{
        String topic, String group, String msgType, String flowlimitThreshold) 				
}
,
		fromLine:"		611",
		toLine:"		611",
		oldContent:"
		        return strBuilder.toString();		
",
		newContent:"
		        return strBuilder.toString();
		    }		
",
,
		fromLine:"		613",
		toLine:"		621",
		oldContent:"
		    public String buildAccountStatKey(final String owner, final String instanceId, final String topic, final String group, final String msgType) {
		        final String sep = "|";
		        StringBuilder strBuilder = new StringBuilder();
		        strBuilder.append(owner).append(sep);
		        strBuilder.append(instanceId).append(sep);
		        strBuilder.append(topic).append(sep);
		        strBuilder.append(group).append(sep);
		        strBuilder.append(msgType);
		        return strBuilder.toString();		
",
		newContent:"
		    public String buildAccountStatKey(final String owner, final String instanceId, final String topic, final String group, final String msgType) {
		        final String sep = "|";
		        StringBuilder strBuilder = new StringBuilder();
		        strBuilder.append(owner).append(sep);
		        strBuilder.append(instanceId).append(sep);
		        strBuilder.append(topic).append(sep);
		        strBuilder.append(group).append(sep);
		        strBuilder.append(msgType);
		        return strBuilder.toString();
		    }		
",
,
		fromLine:"		623",
		toLine:"		633",
		oldContent:"
		    public String buildAccountStatKey(final String owner, final String instanceId, final String topic, final String group, final String msgType, String flowlimitThreshold) {
		        final String sep = "|";
		        StringBuilder strBuilder = a StringBuilder();
		        strBuilder.append(owner).append(sep);
		        StringBuffer strBuilder = new StringBuffer();
		        strBuilder.append(topic).append(sep);
		        strBuilder.append(group).append(sep);
		        strBuilder.append(msgType).append(sep);
		        strBuilder.append(flowlimitThreshold);
		        return strBuilder.toString();
		        }		
",
		newContent:"
		    public String buildAccountStatKey(final String owner, final String instanceId, final String topic, final String group, final String msgType, String flowlimitThreshold) {
		        final String sep = "|";
		        StringBuilder strBuilder = new StringBuilder();
		        strBuilder.append(owner).append(sep);
		        strBuilder.append(instanceId).append(sep);
		        strBuilder.append(topic).append(sep);
		        strBuilder.append(group).append(sep);
		        strBuilder.append(msgType).append(sep);
		        strBuilder.append(flowlimitThreshold);
		        return strBuilder.toString();
		    }		
",
,
		fromLine:"		635",
		toLine:"		637",
		oldContent:"
		    public String[] splitAccountStatKey(final String accountStatKey) {
		        final String sep = "\\|";
		        return accountStatKey.split(sep);		
",
		newContent:"
		    public String[] splitAccountStatKey(final String accountStatKey) {
		        final String sep = "\\|";
		        return accountStatKey.split(sep);
		    }		
",
,
		fromLine:"		639",
		toLine:"		639",
		oldContent:"
		    private StatisticsKindMeta createStatisticsKindMeta(String name,		
",
		newContent:"
		    private StatisticsKindMeta createStatisticsKindMeta(String name,		
",
,
		fromLine:"		645",
		toLine:"		651",
		oldContent:"
		        final BrokerConfig brokerConfig = this.brokerConfig;
		        StatisticsItemPrinter printer = new StatisticsItemPrinter(formatter, log);
		        StatisticsKindMeta kindMeta = new StatisticsKindMeta();
		        kindMeta.setName(name);
		        kindMeta.setItemNames(itemNames);
		        kindMeta.setScheduledPrinter(printer);
		    }		
",
		newContent:"
		        final BrokerConfig brokerConfig = this.brokerConfig;
		        StatisticsItemPrinter printer = new StatisticsItemPrinter(formatter, log);
		        StatisticsKindMeta kindMeta = new StatisticsKindMeta();
		        kindMeta.setName(name);
		        kindMeta.setItemNames(itemNames);
		        kindMeta.setScheduledPrinter(printer);
		    }		
",
,
		fromLine:"		658",
		toLine:"		658",
		oldContent:"
		                    public long get() {		
",
		newContent:"
		                    public long get() {
		                        return 0;
		                    }		
",
,
		fromLine:"		661",
		toLine:"		661",
		oldContent:"
		                        return Math.abs(UtilAll.computeNextMinutesTimeMillis() - System.currentTimeMillis());		
",
		newContent:"
		                        return Math.abs(UtilAll.computeNextMinutesTimeMillis() - System.currentTimeMillis());
		                    }		
",
,
		fromLine:"		663",
		toLine:"		663",
		oldContent:"
		                },		
",
		newContent:"
		                },		
",
,
		fromLine:"		668",
		toLine:"		668",
		oldContent:"
		                    public boolean enabled() {		
",
		newContent:"
		                    public boolean enabled() {
		                        return true;
		                    }		
",
,
		fromLine:"		671",
		toLine:"		671",
		oldContent:"
		                        return brokerConfig != null ? brokerConfig.isAccountStatsEnable() : true;		
",
		newContent:"
		                        return brokerConfig != null ? brokerConfig.isAccountStatsEnable() : true;
		                    }		
",
,
		fromLine:"		675",
		toLine:"		675",
		oldContent:"
		                    public boolean printZeroLine() {		
",
		newContent:"
		                    public boolean printZeroLine() {
		                        return true;
		                    }		
",
,
		fromLine:"		678",
		toLine:"		678",
		oldContent:"
		                        return brokerConfig != null ? brokerConfig.isAccountStatsPrintZeroValues() : true;		
",
		newContent:"
		                        return brokerConfig != null ? brokerConfig.isAccountStatsPrintZeroValues() : true;
		                    }		
",
,
		fromLine:"		680",
		toLine:"		680",
		oldContent:"
		                }		
",
		newContent:"
		                }		
",
,
		fromLine:"		683",
		toLine:"		683",
		oldContent:"
		        return kindMeta;		
",
		newContent:"
		        return kindMeta;
		    }		
",
,

	],

}
extractedClasses:
{

}
