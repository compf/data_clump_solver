{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 566,
                "toLine": 568,
                "oldContent": "    public void recordDiskFallBehindTime(final ConsumerLag consumerLag) {\n        final String statsKey = buildStatsKey(queueId, topic, group);\n        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);",
                "newContent": "    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId, final long fallBehind) {\n        final String statsKey = buildStatsKey(queueId, topic, group);\n        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);"
            },
            {
                "fromLine": 571,
                "toLine": 573,
                "oldContent": "    public void recordDiskFallBehindSize(final ConsumerLag consumerLag) {\n        final String statsKey = buildStatsKey(queueId, topic, group);\n        this.momentStatsItemSetFallSize.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);",
                "newContent": "    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId, final long fallBehind) {\n        final String statsKey = buildStatsKey(queueId, topic, group);\n        this.momentStatsItemSetFallSize.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java": [
            {
                "fromLine": 940,
                "toLine": 940,
                "oldContent": "                    brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);",
                "newContent": "                    brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java": [
            {
                "fromLine": 92,
                "toLine": 92,
                "oldContent": "    @Override",
                "newContent": ""
            },
            {
                "fromLine": 103,
                "toLine": 103,
                "oldContent": "        super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);",
                "newContent": "        this.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);"
            },
            {
                "fromLine": 106,
                "toLine": 106,
                "oldContent": "    @Override",
                "newContent": ""
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "        super.recordDiskFallBehindSize(lmqGroup, lmqTopic, queueId, fallBehind);",
                "newContent": "        this.recordDiskFallBehindSize(lmqGroup, lmqTopic, queueId, fallBehind);"
            }
        ]
    },
    "extractedClasses": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/common/src/main/java/org/apache/rocketmq/common/stats/ConsumerLag.java": "package org.apache.rocketmq.common.stats;\n\npublic class ConsumerLag {\n    private final String group;\n    private final String topic;\n    private final int queueId;\n    private final long fallBehind;\n\n    public ConsumerLag(String group, String topic, int queueId, long fallBehind) {\n        this.group = group;\n        this.topic = topic;\n        this.queueId = queueId;\n        this.fallBehind = fallBehind;\n    }\n\n    public String getGroup() {\n        return group;\n    }\n\n    public String getTopic() {\n        return topic;\n    }\n\n    public int getQueueId() {\n        return queueId;\n    }\n\n    public long getFallBehind() {\n        return fallBehind;\n    }\n}\n"
    }
}