refactorings:
{
	broker/src/main/java/org/apache/rocketmq/broker/metrics/ConsumerLagCalculator.java:
	[
		fromLine:"		94",
		toLine:"		102",
		oldContent:"
		        public long available;
		
		        public CalculateAvailableResult(String group, String topic, boolean isRetry) {
		            super(group, topic, isRetry);
		        }
		    }		
",
		newContent:"
				
",
,
		fromLine:"		253",
		toLine:"		254",
		oldContent:"
		        long total = 0L;
		        long earliestUnconsumedTimestamp = Long.MAX_VALUE;		
",
		newContent:"
				
",
,
		fromLine:"		257",
		toLine:"		257",
		oldContent:"
		                Pair<Long, Long> pair = getConsumerLagStats(group, topic, queueId, isPop);		
",
		newContent:"
		                Pair<Long, Long> pair = getConsumerLagStats(group, topic, queueId, isPop);
		                total += pair.getObject1();
		                earliestUnconsumedTimestamp = Math.min(earliestUnconsumedTimestamp, pair.getObject2());		
",
,
		fromLine:"		286",
		toLine:"		286",
		oldContent:"
		                Pair<Long, Long> pair = getInFlightMsgStats(group, topic, queueId, isPop);		
",
		newContent:"
		                Pair<Long, Long> pair = getInFlightMsgStats(group, topic, queueId, isPop);
		                total += pair.getObject1();
		                earliestUnPulledTimestamp = Math.min(earliestUnPulledTimestamp, pair.getObject2());		
",
,
		fromLine:"		337",
		toLine:"		337",
		oldContent:"
		                total += getAvailableMsgCount(group, topic, queueId, isPop);		
",
		newContent:"
		                total += getAvailableMsgCount(group, topic, queueId, isPop);		
",
,

	],

}
extractedClasses:
{

}
