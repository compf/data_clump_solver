"
{
    "refactorings": {
        "broker/src/main/java/org/apache/rocketmq/broker/metrics/ConsumerLagCalculator.java": [
            {
                "fromLine": 33,
                "toLine": 51,
                "oldContent": "public static class BaseCalculateResult {\n        public String group;\n        public String topic;\n        public boolean isRetry;\n\n        public BaseCalculateResult(String group, String topic, boolean isRetry) {\n            this.group = group;\n            this.topic = topic;\n            this.isRetry = isRetry;\n        }\n    }\n\n    public static class CalculateLagResult extends BaseCalculateResult {\n        public long lag;\n        public long earliestUnconsumedTimestamp;\n\n        public CalculateLagResult(String group, String topic, boolean isRetry) {\n            super(group, topic, isRetry);\n        }\n    }\n\n    public static class CalculateInflightResult extends BaseCalculateResult {\n        public long inFlight;\n        public long earliestUnPulledTimestamp;\n\n        public CalculateInflightResult(String group, String topic, boolean isRetry) {\n            super(group, topic, isRetry);\n        }\n    }",
                "newContent": "public static class CalculateConsumerGroupResult {\n        public ConsumerGroupTopicInfo groupTopicInfo;\n        public long value;\n        public long earliestTimestamp;\n\n        public CalculateConsumerGroupResult(ConsumerGroupTopicInfo groupTopicInfo, long value, long earliestTimestamp) {\n            this.groupTopicInfo = groupTopicInfo;\n            this.value = value;\n            this.earliestTimestamp = earliestTimestamp;\n        }\n    }"
            },
            {
                "fromLine": 190,
                "toLine": 190,
                "oldContent": "            CalculateLagResult result = new CalculateLagResult(info.group, info.topic, false);",
                "newContent": "            CalculateConsumerGroupResult result = new CalculateConsumerGroupResult(\n                new ConsumerGroupTopicInfo(info.group, info.topic, false), lag.getObject1(), lag.getObject2());"
            },
            {
                "fromLine": 196,
                "toLine": 196,
                "oldContent": "                result = new CalculateLagResult(info.group, info.topic, true);",
                "newContent": "                result = new CalculateConsumerGroupResult(\n                    new ConsumerGroupTopicInfo(info.group, info.topic, true), retryLag.getObject1(), retryLag.getObject2());"
            },
            {
                "fromLine": 209,
                "toLine": 209,
                "oldContent": "            CalculateInflightResult result = new CalculateInflightResult(info.group, info.topic, false);",
                "newContent": "            CalculateConsumerGroupResult result = new CalculateConsumerGroupResult(\n                new ConsumerGroupTopicInfo(info.group, info.topic, false), inFlight.getObject1(), inFlight.getObject2());"
            },
            {
                "fromLine": 215,
                "toLine": 215,
                "oldContent": "                result = new CalculateInflightResult(info.group, info.topic, true);",
                "newContent": "                result = new CalculateConsumerGroupResult(\n                    new ConsumerGroupTopicInfo(info.group, info.topic, true), retryInFlight.getObject1(), retryInFlight.getObject2());"
            },
            {
                "fromLine": 227,
                "toLine": 227,
                "oldContent": "            CalculateAvailableResult result = new CalculateAvailableResult(info.group, info.topic, false);",
                "newContent": "            CalculateConsumerGroupResult result = new CalculateConsumerGroupResult(\n                new ConsumerGroupTopicInfo(info.group, info.topic, false), result.available, 0L);"
            },
            {
                "fromLine": 234,
                "toLine": 234,
                "oldContent": "                result = new CalculateAvailableResult(info.group, info.topic, true);",
                "newContent": "                result = new CalculateConsumerGroupResult(\n                    new ConsumerGroupTopicInfo(info.group, info.topic, true), retryAvailable, 0L);"
            }
        ]
    },
    "extractedClasses": {
        "broker/src/main/java/org/apache/rocketmq/broker/metrics/ConsumerGroupTopicInfo.java": "package org.apache.rocketmq.broker.metrics;\n\npublic class ConsumerGroupTopicInfo {\n    private String group;\n    private String topic;\n    private boolean isRetry;\n\n    public ConsumerGroupTopicInfo(String group, String topic, boolean isRetry) {\n        this.group = group;\n        this.topic = topic;\n        this.isRetry = isRetry;\n    }\n\n    public String getGroup() {\n        return group;\n    }\n\n    public String getTopic() {\n        return topic;\n    }\n\n    public boolean isRetry() {\n        return isRetry;\n    }\n}"
    }
}"