refactorings:
{
	broker/src/main/java/org/apache/rocketmq/broker/metrics/ConsumerLagCalculator.java:
	[
		fromLine:"		33",
		toLine:"		51",
		oldContent:"
		public static class BaseCalculateResult {
		        public String group;
		        public String topic;
		        public boolean isRetry;
		
		        public BaseCalculateResult(String group, String topic, boolean isRetry) {
		            this.group = group;
		            this.topic = topic;
		            this.isRetry = isRetry;
		        }
		    }
		
		    public static class CalculateLagResult extends BaseCalculateResult {
		        public long lag;
		        public long earliestUnconsumedTimestamp;
		
		        public CalculateLagResult(String group, String topic, boolean isRetry) {
		            super(group, topic, isRetry);
		        }
		    }
		
		    public static class CalculateInflightResult extends BaseCalculateResult {
		        public long inFlight;
		        public long earliestUnPulledTimestamp;
		
		        public CalculateInflightResult(String group, String topic, boolean isRetry) {
		            super(group, topic, isRetry);
		        }
		    }		
",
		newContent:"
		public static class CalculateConsumerGroupResult {
		        public ConsumerGroupTopicInfo groupTopicInfo;
		        public long value;
		        public long earliestTimestamp;
		
		        public CalculateConsumerGroupResult(ConsumerGroupTopicInfo groupTopicInfo, long value, long earliestTimestamp) {
		            this.groupTopicInfo = groupTopicInfo;
		            this.value = value;
		            this.earliestTimestamp = earliestTimestamp;
		        }
		    }		
",
,
		fromLine:"		190",
		toLine:"		190",
		oldContent:"
		            CalculateLagResult result = new CalculateLagResult(info.group, info.topic, false);		
",
		newContent:"
		            CalculateConsumerGroupResult result = new CalculateConsumerGroupResult(
		                new ConsumerGroupTopicInfo(info.group, info.topic, false), lag.getObject1(), lag.getObject2());		
",
,
		fromLine:"		196",
		toLine:"		196",
		oldContent:"
		                result = new CalculateLagResult(info.group, info.topic, true);		
",
		newContent:"
		                result = new CalculateConsumerGroupResult(
		                    new ConsumerGroupTopicInfo(info.group, info.topic, true), retryLag.getObject1(), retryLag.getObject2());		
",
,
		fromLine:"		209",
		toLine:"		209",
		oldContent:"
		            CalculateInflightResult result = new CalculateInflightResult(info.group, info.topic, false);		
",
		newContent:"
		            CalculateConsumerGroupResult result = new CalculateConsumerGroupResult(
		                new ConsumerGroupTopicInfo(info.group, info.topic, false), inFlight.getObject1(), inFlight.getObject2());		
",
,
		fromLine:"		215",
		toLine:"		215",
		oldContent:"
		                result = new CalculateInflightResult(info.group, info.topic, true);		
",
		newContent:"
		                result = new CalculateConsumerGroupResult(
		                    new ConsumerGroupTopicInfo(info.group, info.topic, true), retryInFlight.getObject1(), retryInFlight.getObject2());		
",
,
		fromLine:"		227",
		toLine:"		227",
		oldContent:"
		            CalculateAvailableResult result = new CalculateAvailableResult(info.group, info.topic, false);		
",
		newContent:"
		            CalculateConsumerGroupResult result = new CalculateConsumerGroupResult(
		                new ConsumerGroupTopicInfo(info.group, info.topic, false), result.available, 0L);		
",
,
		fromLine:"		234",
		toLine:"		234",
		oldContent:"
		                result = new CalculateAvailableResult(info.group, info.topic, true);		
",
		newContent:"
		                result = new CalculateConsumerGroupResult(
		                    new ConsumerGroupTopicInfo(info.group, info.topic, true), retryAvailable, 0L);		
",
,

	],

}
extractedClasses:
{
	broker/src/main/java/org/apache/rocketmq/broker/metrics/ConsumerGroupTopicInfo.java:"
	package org.apache.rocketmq.broker.metrics;
	
	public class ConsumerGroupTopicInfo {
	    private String group;
	    private String topic;
	    private boolean isRetry;
	
	    public ConsumerGroupTopicInfo(String group, String topic, boolean isRetry) {
	        this.group = group;
	        this.topic = topic;
	        this.isRetry = isRetry;
	    }
	
	    public String getGroup() {
	        return group;
	    }
	
	    public String getTopic() {
	        return topic;
	    }
	
	    public boolean isRetry() {
	        return isRetry;
	    }
	}	
",

}
