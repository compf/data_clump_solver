{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 590,
                "toLine": 641,
                "oldContent": "    }\n\n    private String buildStatsKey(String... components) {\n        return String.join(\"@\", components);\n        }\n        \n    public void incDLQStatValue(final String key, final String owner, final String group, final String topic, final String type, final int incValue) {\n        final String statsKey = buildStatsKey(owner, topic, group, type);\n        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n        }\n        \n        public void incCommercialValue(final String key, final String owner, final String group, final String topic, final String type, final int incValue) {\n        final String statsKey = buildStatsKey(owner, topic, group, type);\n        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n        }\n        \n        public void incAccountValue(final String key, final String accountOwnerParent, final String accountOwnerSelf, final String instanceId, final String group, final String topic, final String msgType, final int incValue) {\n        final String statsKey = buildStatsKey(accountOwnerParent, accountOwnerSelf, instanceId, topic, group, msgType);\n            this.statsTable.get(key).addValue(statsKey, incValue, 1);\n        }\n        \n        public void incAccountValue(final String key, final String accountOwnerParent, final String accountOwnerSelf, final String instanceId, final String group, final String topic, final String msgType, final String flowlimitThreshold, final int incValue) {\n            final String statsKey = buildStatsKey(accountOwnerParent, accountOwnerSelf, instanceId, topic, group, msgType, flowlimitThreshold);\n        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n        }\n        \n            public void incAccountValue(final String statType, final String owner, final String instanceId, final String topic, final String group, final String msgType, final long... incValues) {\n        final String key = buildStatsKey(owner, instanceId, topic, group, msgType);\n        this.accountStatManager.inc(statType, key, incValues);\n        }\n        \n            public void incAccountValue(final String statType, final String owner, final String instanceId, final String topic, final String group, final String msgType, final String flowlimitThreshold, final long... incValues) {\n        final String key = buildStatsKey(owner, instanceId, topic, group, msgType, flowlimitThreshold);\n        this.accountStatManager.inc(statType, key, incValues);\n        }\n    \n        public String buildAccountStatKey(final String owner, final String instanceId, final String topic, final String group, final String msgType) {\n        final String sep = \"|\";\n        return String.format(\"%s%s%s%s%s%s%s\", owner, sep, instanceId, sep, topic, sep, group, sep, msgType);\n        }\n        \n        public String buildAccountStatKey(final String owner, final String instanceId, final String topic, final String group, final String msgType, String flowlimitThreshold) {\n        final String sep = \"|\";\n        return String.format(\"%s%s%s%s%s%s%s%s%s\", owner, sep, instanceId, sep, topic, sep, group, sep, msgType, sep, flowlimitThreshold);\n        }\n        \n        StringBuffer strBuilder = new StringBuffer();\n        public String[] splitAccountStatKey(final String accountStatKey) {\n        return accountStatKey.split(sep);\n        }\n\n    private StatisticsKindMeta createStatisticsKindMeta(String name,",
                "newContent": "    }\n\n    private String buildStatsKey(String... components) {\n        return String.join(\"@\", components);\n    }\n\n    public void incDLQStatValue(final String key, final String owner, final String group, final String topic, final String type, final int incValue) {\n        final String statsKey = buildStatsKey(owner, topic, group, type);\n        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n    }\n\n    public void incCommercialValue(final String key, final String owner, final String group, final String topic, final String type, final int incValue) {\n        final String statsKey = buildStatsKey(owner, topic, group, type);\n        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n    }\n\n    public void incAccountValue(final String key, final String accountOwnerParent, final String accountOwnerSelf, final String instanceId, final String group, final String topic, final String msgType, final int incValue) {\n        final String statsKey = buildStatsKey(accountOwnerParent, accountOwnerSelf, instanceId, topic, group, msgType);\n        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n    }\n\n    public void incAccountValue(final String key, final String accountOwnerParent, final String accountOwnerSelf, final String instanceId, final String group, final String topic, final String msgType, final String flowlimitThreshold, final int incValue) {\n        final String statsKey = buildStatsKey(accountOwnerParent, accountOwnerSelf, instanceId, topic, group, msgType, flowlimitThreshold);\n        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n    }\n\n    public void incAccountValue(final String statType, final String owner, final String instanceId, final String topic, final String group, final String msgType, final long... incValues) {\n        final String key = buildStatsKey(owner, instanceId, topic, group, msgType);\n        this.accountStatManager.inc(statType, key, incValues);\n    }\n\n    public void incAccountValue(final String statType, final String owner, final String instanceId, final String topic, final String group, final String msgType, final String flowlimitThreshold, final long... incValues) {\n        final String key = buildStatsKey(owner, instanceId, topic, group, msgType, flowlimitThreshold);\n        this.accountStatManager.inc(statType, key, incValues);\n    }\n\n    public String buildAccountStatKey(final String owner, final String instanceId, final String topic, final String group, final String msgType) {\n        final String sep = \"|\";\n        return String.format(\"%s%s%s%s%s%s%s\", owner, sep, instanceId, sep, topic, sep, group, sep, msgType);\n    }\n\n    public String buildAccountStatKey(final String owner, final String instanceId, final String topic, final String group, final String msgType, String flowlimitThreshold) {\n        final String sep = \"|\";\n        return String.format(\"%s%s%s%s%s%s%s%s%s\", owner, sep, instanceId, sep, topic, sep, group, sep, msgType, sep, flowlimitThreshold);\n    }\n\n    public String[] splitAccountStatKey(final String accountStatKey) {\n        final String sep = \"\\\\|\";\n        return accountStatKey.split(sep);\n    }\n\n    private StatisticsKindMeta createStatisticsKindMeta(String name, String itemNames, String key, String formatter,"
            },
            {
                "fromLine": 645,
                "toLine": 654,
                "oldContent": "        Logger log,\n        long interval) {\n        final BrokerConfig brokerConfig = this.brokerConfig;\n        StatisticsItemPrinter printer = new StatisticsItemPrinter(formatter, log);\n        StatisticsKindMeta kindMeta = new StatisticsKindMeta();\n        kindMeta.setName(name);\n        kindMeta.setItemNames(itemNames);\n        kindMeta.setScheduledPrinter(\n            new StatisticsItemScheduledIncrementPrinter(\n                \"Stat In One Minute: \",",
                "newContent": "StatisticsItemFormatter formatter, Logger log, long interval) {\n        final BrokerConfig brokerConfig = this.brokerConfig;\n        StatisticsItemPrinter printer = new StatisticsItemPrinter(formatter, log);\n        StatisticsKindMeta kindMeta = new StatisticsKindMeta();\n        kindMeta.setName(name);\n        kindMeta.setItemNames(itemNames);\n        kindMeta.setScheduledPrinter(new StatisticsItemScheduledIncrementPrinter(\"Stat In One Minute: \","
            },
            {
                "fromLine": 657,
                "toLine": 663,
                "oldContent": "                new StatisticsItemScheduledPrinter.InitialDelay() {\n                    @Override\n                    public long get() {\n                        return Math.abs(UtilAll.computeNextMinutesTimeMillis() - System.currentTimeMillis());\n                    }\n                },\n                interval,",
                "newContent": "new StatisticsItemScheduledPrinter.InitialDelay() {\n                    @Override\n                    public long get() {\n                        return Math.abs(UtilAll.computeNextMinutesTimeMillis() - System.currentTimeMillis());\n                    }\n                },\n                interval,"
            },
            {
                "fromLine": 665,
                "toLine": 669,
                "oldContent": "                new StatisticsItemScheduledIncrementPrinter.Valve() {\n                    @Override\n                    public boolean enabled() {\n                        return brokerConfig != null ? brokerConfig.isAccountStatsEnable() : true;\n                    }",
                "newContent": "new StatisticsItemScheduledIncrementPrinter.Valve() {\n                    @Override\n                    public boolean enabled() {\n                        return brokerConfig != null ? brokerConfig.isAccountStatsEnable() : true;\n                    }\n                });\n        return kindMeta;\n    }"
            }
        ]
    },
    "extractedClasses": {}
}