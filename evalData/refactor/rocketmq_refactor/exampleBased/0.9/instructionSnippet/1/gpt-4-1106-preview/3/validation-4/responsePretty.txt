"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 134,
                "toLine": 139,
                "oldContent": "momentStatsItemSetFallSize = new MomentStatsItemSet(GROUP_GET_FALL_SIZE,\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);",
                "newContent": "momentStatsItemSetFallSize = new MomentStatsItemSet(\"GROUP_GET_FALL_SIZE\",\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new MomentStatsItemSet(\"GROUP_GET_FALL_TIME\",\n            scheduledExecutorService, log);"
            },
            {
                "fromLine": 141,
                "toLine": 159,
                "oldContent": "this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_SIZE, new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));",
                "newContent": "this.statsTable.put(\"QUEUE_PUT_NUMS\", new StatsItemSet(\"QUEUE_PUT_NUMS\", this.scheduledExecutorService, log));\n            this.statsTable.put(\"QUEUE_PUT_SIZE\", new StatsItemSet(\"QUEUE_PUT_SIZE\", this.scheduledExecutorService, log));\n            this.statsTable.put(\"QUEUE_GET_NUMS\", new StatsItemSet(\"QUEUE_GET_NUMS\", this.scheduledExecutorService, log));\n            this.statsTable.put(\"QUEUE_GET_SIZE\", new StatsItemSet(\"QUEUE_GET_SIZE\", this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 160,
                "toLine": 160,
                "oldContent": "",
                "newContent": "this.statsTable.put(\"TOPIC_PUT_NUMS\", new StatsItemSet(\"TOPIC_PUT_NUMS\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"TOPIC_PUT_SIZE\", new StatsItemSet(\"TOPIC_PUT_SIZE\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"GROUP_GET_NUMS\", new StatsItemSet(\"GROUP_GET_NUMS\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"GROUP_GET_SIZE\", new StatsItemSet(\"GROUP_GET_SIZE\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"GROUP_GET_LATENCY\", new StatsItemSet(\"GROUP_GET_LATENCY\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"SNDBCK_PUT_NUMS\", new StatsItemSet(\"SNDBCK_PUT_NUMS\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"BROKER_PUT_NUMS\", new StatsItemSet(\"BROKER_PUT_NUMS\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"BROKER_GET_NUMS\", new StatsItemSet(\"BROKER_GET_NUMS\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"GROUP_GET_FROM_DISK_NUMS\", new StatsItemSet(\"GROUP_GET_FROM_DISK_NUMS\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"GROUP_GET_FROM_DISK_SIZE\", new StatsItemSet(\"GROUP_GET_FROM_DISK_SIZE\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"BROKER_GET_FROM_DISK_NUMS\", new StatsItemSet(\"BROKER_GET_FROM_DISK_NUMS\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"BROKER_GET_FROM_DISK_SIZE\", new StatsItemSet(\"BROKER_GET_FROM_DISK_SIZE\", this.scheduledExecutorService, log));\n        this.statsTable.put(\"COMMERCIAL_SEND_TIMES\", new StatsItemSet(\"COMMERCIAL_SEND_TIMES\", this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(\"COMMERCIAL_RCV_TIMES\", new StatsItemSet(\"COMMERCIAL_RCV_TIMES\", this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(\"COMMERCIAL_SEND_SIZE\", new StatsItemSet(\"COMMERCIAL_SEND_SIZE\", this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(\"COMMERCIAL_RCV_SIZE\", new StatsItemSet(\"COMMERCIAL_RCV_SIZE\", this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(\"COMMERCIAL_RCV_EPOLLS\", new StatsItemSet(\"COMMERCIAL_RCV_EPOLLS\", this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(\"COMMERCIAL_SNDBCK_TIMES\", new StatsItemSet(\"COMMERCIAL_SNDBCK_TIMES\", this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(\"COMMERCIAL_PERM_FAILURES\", new StatsItemSet(\"COMMERCIAL_PERM_FAILURES\", this.commercialExecutor, COMMERCIAL_LOG));"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java": [
            {
                "fromLine": 94,
                "toLine": 101,
                "oldContent": "final long fallBehind) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;",
                "newContent": "final long fallBehind) {\n        String lmqGroup = queueStatsId.getGroup();\n        String lmqTopic = queueStatsId.getTopic();\n        if (MixAll.isLmq(queueStatsId.getGroup())) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(queueStatsId.getTopic())) {\n            lmqTopic = MixAll.LMQ_PREFIX;"
            },
            {
                "fromLine": 106,
                "toLine": 113,
                "oldContent": "final long fallBehind) {\n        String lmqGroup = group;\n        String lmqTopic = topic;\n        if (MixAll.isLmq(group)) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(topic)) {\n            lmqTopic = MixAll.LMQ_PREFIX;",
                "newContent": "final long fallBehind) {\n        String lmqGroup = queueStatsId.getGroup();\n        String lmqTopic = queueStatsId.getTopic();\n        if (MixAll.isLmq(queueStatsId.getGroup())) {\n            lmqGroup = MixAll.LMQ_PREFIX;\n        }\n        if (MixAll.isLmq(queueStatsId.getTopic())) {\n            lmqTopic = MixAll.LMQ_PREFIX;"
            }
        ]
    },
    "extractedClasses": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/common/src/main/java/org/apache/rocketmq/common/stats/QueueStatsId.java": "package org.apache.rocketmq.common.stats;\n\npublic class QueueStatsId {\n    private final String group;\n    private final String topic;\n    private final int queueId;\n\n    public QueueStatsId(String group, String topic, int queueId) {\n        this.group = group;\n        this.topic = topic;\n        this.queueId = queueId;\n    }\n\n    public String getGroup() {\n        return group;\n    }\n\n    public String getTopic() {\n        return topic;\n    }\n\n    public int getQueueId() {\n        return queueId;\n    }\n}\n"
    }
}"