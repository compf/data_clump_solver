refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java:
	[
		fromLine:"		97",
		toLine:"		103",
		oldContent:"
		        long fallBehind = stats.getFallBehind();
		        String lmqTopic = topic;
		        if (MixAll.isLmq(group)) {
		            lmqGroup = MixAll.LMQ_PREFIX;
		        }
		        if (MixAll.isLmq(topic)) {
		            lmqTopic = MixAll.LMQ_PREFIX;		
",
		newContent:"
		        long fallBehind = stats.getFallBehind();
		        String lmqGroup = MixAll.getLMQBrokerGroup(stats.getGroup());
		        String lmqTopic = MixAll.getLMQBrokerTopic(stats.getTopic());
		        int queueId = MixAll.getLMQQueueId(stats.getQueueId());		
",
,
		fromLine:"		113",
		toLine:"		119",
		oldContent:"
		        long fallBehind = stats.getFallBehind();
		        String lmqTopic = topic;
		        if (MixAll.isLmq(group)) {
		            lmqGroup = MixAll.LMQ_PREFIX;
		        }
		        if (MixAll.isLmq(topic)) {
		            lmqTopic = MixAll.LMQ_PREFIX;		
",
		newContent:"
		        long fallBehind = stats.getFallBehind();
		        String lmqGroup = MixAll.getLMQBrokerGroup(stats.getGroup());
		        String lmqTopic = MixAll.getLMQBrokerTopic(stats.getTopic());
		        int queueId = MixAll.getLMQQueueId(stats.getQueueId());		
",
,

	],

}
extractedClasses:
{

}
