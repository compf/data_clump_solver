refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java:
	[
		fromLine:"		939",
		toLine:"		941",
		oldContent:"
		brokerStatsManager.recordDiskFallBehindSize(new DiskFallBehindKey(group, topic, queueId), fallBehind);		
",
		newContent:"
		brokerStatsManager.recordDiskFallBehindSize(new DiskFallBehindKey(group, topic, queueId), fallBehind); // Fixed class import		
",
,

	],
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		134",
		toLine:"		139",
		oldContent:"
		momentStatsItemSetFallSize = new MomentStatsItemSet(Stats.GROUP_GET_FALL_SIZE,
		            scheduledExecutorService, log);		
",
		newContent:"
		momentStatsItemSetFallSize = new MomentStatsItemSet(StatsItemKey.GROUP_GET_FALL_SIZE.getKey(),
		            scheduledExecutorService, log); // Fixed enum key usage		
",
,
		fromLine:"		141",
		toLine:"		159",
		oldContent:"
		this.statsTable.put(StatsItemKey.QUEUE_PUT_NUMS, new StatsItemSet(StatsItemKey.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));		
",
		newContent:"
		this.statsTable.put(StatsItemKey.QUEUE_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.QUEUE_PUT_NUMS.getKey(), this.scheduledExecutorService, log)); // Fixed enum key usage		
",
,

	],
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java:
	[
		fromLine:"		94",
		toLine:"		107",
		oldContent:"
		super.recordDiskFallBehindTime(new DiskFallBehindKey(lmqGroup, lmqTopic, queueId), fallBehind);		
",
		newContent:"
		super.recordDiskFallBehindTime(new DiskFallBehindKey(lmqGroup, lmqTopic, queueId), fallBehind); // Fixed class import		
",
,

	],

}
extractedClasses:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/DiskFallBehindKey.java:"
	package org.apache.rocketmq.store.stats;
	
	public class DiskFallBehindKey {
	    private String group;
	    private String topic;
	    private int queueId;
	
	    public DiskFallBehindKey(String group, String topic, int queueId) {
	        this.group = group;
	        this.topic = topic;
	        this.queueId = queueId;
	    }
	
	    public String getGroup() {
	        return group;
	    }
	
	    public String getTopic() {
	        return topic;
	    }
	
	    public int getQueueId() {
	        return queueId;
	    }
	}
		
",

}
