refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/DiskFallBehindStats.java:
	[
		fromLine:"		0",
		toLine:"		2",
		oldContent:"
				
",
		newContent:"
		package org.apache.rocketmq.store.stats;
		
		public class DiskFallBehindStats {
		    private final String group;
		    private final String topic;
		    private final int queueId;
		    private final long fallBehind;
		
		    public DiskFallBehindStats(String group, String topic, int queueId, long fallBehind) {
		        this.group = group;
		        this.topic = topic;
		        this.queueId = queueId;
		        this.fallBehind = fallBehind;
		    }
		
		    public String getGroup() {
		        return group;
		    }
		
		    public String getTopic() {
		        return topic;
		    }
		
		    public int getQueueId() {
		        return queueId;
		    }
		
		    public long getFallBehind() {
		        return fallBehind;
		    }
		}		
",
,

	],
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java:
	[
		fromLine:"		939",
		toLine:"		941",
		oldContent:"
		                    long fallBehind = maxOffsetPy - maxPhyOffsetPulling;
		                    brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);
		                }		
",
		newContent:"
		                    long fallBehind = maxOffsetPy - maxPhyOffsetPulling;
		                    brokerStatsManager.recordDiskFallBehindSize(new DiskFallBehindStats(group, topic, queueId, fallBehind));
		                }		
",
,

	],
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java:
	[
		fromLine:"		91",
		toLine:"		93",
		oldContent:"
		
		    @Override
		    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,		
",
		newContent:"
		
		    @Override
		    public void recordDiskFallBehindTime(final DiskFallBehindStats stats) {		
",
,
		fromLine:"		102",
		toLine:"		107",
		oldContent:"
		        }
		        super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);
		    }
		
		    @Override
		    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,		
",
		newContent:"
		        }
		        super.recordDiskFallBehindTime(new DiskFallBehindStats(lmqGroup, lmqTopic, queueId, fallBehind));
		    }
		
		    @Override
		    public void recordDiskFallBehindSize(final DiskFallBehindStats stats) {		
",
,
		fromLine:"		116",
		toLine:"		118",
		oldContent:"
		        }
		        super.recordDiskFallBehindSize(lmqGroup, lmqTopic, queueId, fallBehind);
		    }		
",
		newContent:"
		        }
		        super.recordDiskFallBehindSize(new DiskFallBehindStats(lmqGroup, lmqTopic, queueId, fallBehind));
		    }		
",
,

	],

}
extractedClasses:
{

}
