"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/DiskFallBehindStats.java": [
            {
                "fromLine": 0,
                "toLine": 2,
                "oldContent": "",
                "newContent": "package org.apache.rocketmq.store.stats;\n\npublic class DiskFallBehindStats {\n    private final String group;\n    private final String topic;\n    private final int queueId;\n    private final long fallBehind;\n\n    public DiskFallBehindStats(String group, String topic, int queueId, long fallBehind) {\n        this.group = group;\n        this.topic = topic;\n        this.queueId = queueId;\n        this.fallBehind = fallBehind;\n    }\n\n    public String getGroup() {\n        return group;\n    }\n\n    public String getTopic() {\n        return topic;\n    }\n\n    public int getQueueId() {\n        return queueId;\n    }\n\n    public long getFallBehind() {\n        return fallBehind;\n    }\n}"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java": [
            {
                "fromLine": 939,
                "toLine": 941,
                "oldContent": "                    long fallBehind = maxOffsetPy - maxPhyOffsetPulling;\n                    brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);\n                }",
                "newContent": "                    long fallBehind = maxOffsetPy - maxPhyOffsetPulling;\n                    brokerStatsManager.recordDiskFallBehindSize(new DiskFallBehindStats(group, topic, queueId, fallBehind));\n                }"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java": [
            {
                "fromLine": 91,
                "toLine": 93,
                "oldContent": "\n    @Override\n    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,",
                "newContent": "\n    @Override\n    public void recordDiskFallBehindTime(final DiskFallBehindStats stats) {"
            },
            {
                "fromLine": 102,
                "toLine": 107,
                "oldContent": "        }\n        super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);\n    }\n\n    @Override\n    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,",
                "newContent": "        }\n        super.recordDiskFallBehindTime(new DiskFallBehindStats(lmqGroup, lmqTopic, queueId, fallBehind));\n    }\n\n    @Override\n    public void recordDiskFallBehindSize(final DiskFallBehindStats stats) {"
            },
            {
                "fromLine": 116,
                "toLine": 118,
                "oldContent": "        }\n        super.recordDiskFallBehindSize(lmqGroup, lmqTopic, queueId, fallBehind);\n    }",
                "newContent": "        }\n        super.recordDiskFallBehindSize(new DiskFallBehindStats(lmqGroup, lmqTopic, queueId, fallBehind));\n    }"
            }
        ]
    },
    "extractedClasses": {
        
    }
}"