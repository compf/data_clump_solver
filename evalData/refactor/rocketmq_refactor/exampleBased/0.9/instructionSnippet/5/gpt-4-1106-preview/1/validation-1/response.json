{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 76,
                "toLine": 108,
                "oldContent": "    private static final Logger log = LoggerFactory.getLogger(LoggerName.ROCKETMQ_STATS_LOGGER_NAME);\n    private static final Logger COMMERCIAL_LOG = LoggerFactory.getLogger(\n        LoggerName.COMMERCIAL_LOGGER_NAME);\n    private static final Logger ACCOUNT_LOG = LoggerFactory.getLogger(LoggerName.ACCOUNT_LOGGER_NAME);\n    private static final Logger DLQ_STAT_LOG = LoggerFactory.getLogger(\n        LoggerName.DLQ_STATS_LOGGER_NAME);\n    private ScheduledExecutorService scheduledExecutorService;\n    private ScheduledExecutorService commercialExecutor;\n    private ScheduledExecutorService accountExecutor;\n\n    private final HashMap<String, StatsItemSet> statsTable = new HashMap<>();",
                "newContent": "    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(org.apache.rocketmq.store.stats.LoggerName.ROCKETMQ_STATS_LOGGER_NAME);\n    private static final org.slf4j.Logger COMMERCIAL_LOG = org.slf4j.LoggerFactory.getLogger(\n        org.apache.rocketmq.store.stats.LoggerName.COMMERCIAL_LOGGER_NAME);\n    private static final org.slf4j.Logger ACCOUNT_LOG = org.slf4j.LoggerFactory.getLogger(org.apache.rocketmq.store.stats.LoggerName.ACCOUNT_LOGGER_NAME);\n    private static final org.slf4j.Logger DLQ_STAT_LOG = org.slf4j.LoggerFactory.getLogger(\n        org.apache.rocketmq.store.stats.LoggerName.DLQ_STATS_LOGGER_NAME);\n    private java.util.concurrent.ScheduledExecutorService scheduledExecutorService;\n    private java.util.concurrent.ScheduledExecutorService commercialExecutor;\n    private java.util.concurrent.ScheduledExecutorService accountExecutor;\n\n    private final java.util.HashMap<String, org.apache.rocketmq.store.stats.StatsItemSet> statsTable = new java.util.HashMap<>();"
            },
            {
                "fromLine": 114,
                "toLine": 191,
                "oldContent": "        momentStatsItemSetFallSize = new MomentStatsItemSet(StatsConstants.GROUP_GET_FALL_SIZE,\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new MomentStatsItemSet(StatsConstants.GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);\n\n        if (enableQueueStat) {\n            this.statsTable.put(StatsConstants.QUEUE_PUT_NUMS, new StatsItemSet(StatsConstants.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(StatsConstants.QUEUE_PUT_SIZE, new StatsItemSet(StatsConstants.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(StatsConstants.QUEUE_GET_NUMS, new StatsItemSet(StatsConstants.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(StatsConstants.QUEUE_GET_SIZE, new StatsItemSet(StatsConstants.QUEUE_GET_SIZE, this.scheduledExecutorService, log));\n        }\n",
                "newContent": "        momentStatsItemSetFallSize = new org.apache.rocketmq.store.stats.MomentStatsItemSet(StatsConstants.GROUP_GET_FALL_SIZE,\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new org.apache.rocketmq.store.stats.MomentStatsItemSet(StatsConstants.GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);\n\n        if (enableQueueStat) {\n            this.statsTable.put(StatsConstants.QUEUE_PUT_NUMS, new org.apache.rocketmq.store.stats.StatsItemSet(StatsConstants.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(StatsConstants.QUEUE_PUT_SIZE, new org.apache.rocketmq.store.stats.StatsItemSet(StatsConstants.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(StatsConstants.QUEUE_GET_NUMS, new org.apache.rocketmq.store.stats.StatsItemSet(StatsConstants.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(StatsConstants.QUEUE_GET_SIZE, new org.apache.rocketmq.store.stats.StatsItemSet(StatsConstants.QUEUE_GET_SIZE, this.scheduledExecutorService, log));\n        }\n"
            }
        ]
    }
}