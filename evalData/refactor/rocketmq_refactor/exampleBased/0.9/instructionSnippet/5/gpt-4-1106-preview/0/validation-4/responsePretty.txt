refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		46",
		toLine:"		73",
		oldContent:"
		@Deprecated public static final String GROUP_GET_NUMS = Stats.GROUP_GET_NUMS;
		    @Deprecated public static final String GROUP_GET_SIZE = Stats.GROUP_GET_SIZE;
		
		    @Deprecated public static final String SNDBCK_PUT_NUMS = Stats.SNDBCK_PUT_NUMS;
		    @Deprecated public static final String BROKER_PUT_NUMS = Stats.BROKER_PUT_NUMS;
		    @Deprecated public static final String BROKER_GET_NUMS = Stats.BROKER_GET_NUMS;
		    @Deprecated public static final String GROUP_GET_FROM_DISK_NUMS = Stats.GROUP_GET_FROM_DISK_NUMS;
		    @Deprecated public static final String GROUP_GET_FROM_DISK_SIZE = Stats.GROUP_GET_FROM_DISK_SIZE;
		    @Deprecated public static final String BROKER_GET_FROM_DISK_NUMS = Stats.BROKER_GET_FROM_DISK_NUMS;
		    @Deprecated public static final String BROKER_GET_FROM_DISK_SIZE = Stats.BROKER_GET_FROM_DISK_SIZE;
		    // For commercial
		    @Deprecated public static final String COMMERCIAL_SEND_TIMES = Stats.COMMERCIAL_SEND_TIMES;
		    @Deprecated public static final String COMMERCIAL_SNDBCK_TIMES = Stats.COMMERCIAL_SNDBCK_TIMES;
		    @Deprecated public static final String COMMERCIAL_RCV_TIMES = Stats.COMMERCIAL_RCV_TIMES;
		    @Deprecated public static final String COMMERCIAL_RCV_EPOLLS = Stats.COMMERCIAL_RCV_EPOLLS;
		    @Deprecated public static final String COMMERCIAL_SEND_SIZE = Stats.COMMERCIAL_SEND_SIZE;
		    @Deprecated public static final String COMMERCIAL_RCV_SIZE = Stats.COMMERCIAL_RCV_SIZE;
		    @Deprecated public static final String COMMERCIAL_PERM_FAILURES = Stats.COMMERCIAL_PERM_FAILURES;		
",
		newContent:"
		@Deprecated public static final String GROUP_GET_NUMS = StatsMetric.GROUP_GET_NUMS;
		    @Deprecated public static final String GROUP_GET_SIZE = StatsMetric.GROUP_GET_SIZE;
		
		    @Deprecated public static final String SNDBCK_PUT_NUMS = StatsMetric.SNDBCK_PUT_NUMS;
		    @Deprecated public static final String BROKER_PUT_NUMS = StatsMetric.BROKER_PUT_NUMS;
		    @Deprecated public static final String BROKER_GET_NUMS = StatsMetric.BROKER_GET_NUMS;
		    @Deprecated public static final String GROUP_GET_FROM_DISK_NUMS = StatsMetric.GROUP_GET_FROM_DISK_NUMS;
		    @Deprecated public static final String GROUP_GET_FROM_DISK_SIZE = StatsMetric.GROUP_GET_FROM_DISK_SIZE;
		    @Deprecated public static final String BROKER_GET_FROM_DISK_NUMS = StatsMetric.BROKER_GET_FROM_DISK_NUMS;
		    @Deprecated public static final String BROKER_GET_FROM_DISK_SIZE = StatsMetric.BROKER_GET_FROM_DISK_SIZE;
		    // For commercial
		    @Deprecated public static final String COMMERCIAL_SEND_TIMES = StatsMetric.COMMERCIAL_SEND_TIMES;
		    @Deprecated public static final String COMMERCIAL_SNDBCK_TIMES = StatsMetric.COMMERCIAL_SNDBCK_TIMES;
		    @Deprecated public static final String COMMERCIAL_RCV_TIMES = StatsMetric.COMMERCIAL_RCV_TIMES;
		    @Deprecated public static final String COMMERCIAL_RCV_EPOLLS = StatsMetric.COMMERCIAL_RCV_EPOLLS;
		    @Deprecated public static final String COMMERCIAL_SEND_SIZE = StatsMetric.COMMERCIAL_SEND_SIZE;
		    @Deprecated public static final String COMMERCIAL_RCV_SIZE = StatsMetric.COMMERCIAL_RCV_SIZE;
		    @Deprecated public static final String COMMERCIAL_PERM_FAILURES = StatsMetric.COMMERCIAL_PERM_FAILURES;		
",
,
		fromLine:"		172",
		toLine:"		225",
		oldContent:"
		this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.GROUP_GET_SIZE, new StatsItemSet(Stats.GROUP_GET_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.GROUP_GET_LATENCY, new StatsItemSet(Stats.GROUP_GET_LATENCY, this.scheduledExecutorService, log));
		        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.SNDBCK_PUT_NUMS, new StatsItemSet(Stats.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.BROKER_GET_NUMS, new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC,
		            new StatsItemSet(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,
		            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_NUMS,
		            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_SIZE,
		            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_NUMS,
		            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_SIZE,
		            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));		
",
		newContent:"
		this.statsTable.put(StatsMetric.TOPIC_PUT_NUMS, new StatsItemSet(StatsMetric.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(StatsMetric.TOPIC_PUT_SIZE, new StatsItemSet(StatsMetric.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(StatsMetric.GROUP_GET_NUMS, new StatsItemSet(StatsMetric.GROUP_GET_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(StatsMetric.GROUP_GET_SIZE, new StatsItemSet(StatsMetric.GROUP_GET_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(StatsMetric.GROUP_GET_LATENCY, new StatsItemSet(StatsMetric.GROUP_GET_LATENCY, this.scheduledExecutorService, log));
		        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));
		        this.statsTable.put(StatsMetric.SNDBCK_PUT_NUMS, new StatsItemSet(StatsMetric.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(StatsMetric.BROKER_PUT_NUMS, new StatsItemSet(StatsMetric.BROKER_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(StatsMetric.BROKER_GET_NUMS, new StatsItemSet(StatsMetric.BROKER_GET_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC,
		            new StatsItemSet(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,
		            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));
		        this.statsTable.put(StatsMetric.GROUP_GET_FROM_DISK_NUMS,
		            new StatsItemSet(StatsMetric.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(StatsMetric.GROUP_GET_FROM_DISK_SIZE,
		            new StatsItemSet(StatsMetric.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(StatsMetric.BROKER_GET_FROM_DISK_NUMS,
		            new StatsItemSet(StatsMetric.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(StatsMetric.BROKER_GET_FROM_DISK_SIZE,
		            new StatsItemSet(StatsMetric.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));		
",
,

	],

}
extractedClasses:
{
	common/src/main/java/org/apache/rocketmq/common/stats/StatsMetric.java:"
	package org.apache.rocketmq.common.stats;
	
	public class StatsMetric {
	    public static final String QUEUE_PUT_NUMS = "QUEUE_PUT_NUMS";
	    public static final String QUEUE_PUT_SIZE = "QUEUE_PUT_SIZE";
	    public static final String QUEUE_GET_NUMS = "QUEUE_GET_NUMS";
	    public static final String QUEUE_GET_SIZE = "QUEUE_GET_SIZE";
	    public static final String TOPIC_PUT_NUMS = "TOPIC_PUT_NUMS";
	    public static final String TOPIC_PUT_SIZE = "TOPIC_PUT_SIZE";
	    public static final String GROUP_GET_NUMS = "GROUP_GET_NUMS";
	    public static final String GROUP_GET_SIZE = "GROUP_GET_SIZE";
	    public static final String SNDBCK_PUT_NUMS = "SNDBCK_PUT_NUMS";
	    public static final String BROKER_PUT_NUMS = "BROKER_PUT_NUMS";
	    public static final String BROKER_GET_NUMS = "BROKER_GET_NUMS";
	    public static final String GROUP_GET_FROM_DISK_NUMS = "GROUP_GET_FROM_DISK_NUMS";
	    public static final String GROUP_GET_FROM_DISK_SIZE = "GROUP_GET_FROM_DISK_SIZE";
	    public static final String BROKER_GET_FROM_DISK_NUMS = "BROKER_GET_FROM_DISK_NUMS";
	    public static final String BROKER_GET_FROM_DISK_SIZE = "BROKER_GET_FROM_DISK_SIZE";
	    public static final String COMMERCIAL_SEND_TIMES = "COMMERCIAL_SEND_TIMES";
	    public static final String COMMERCIAL_SNDBCK_TIMES = "COMMERCIAL_SNDBCK_TIMES";
	    public static final String COMMERCIAL_RCV_TIMES = "COMMERCIAL_RCV_TIMES";
	    public static final String COMMERCIAL_RCV_EPOLLS = "COMMERCIAL_RCV_EPOLLS";
	    public static final String COMMERCIAL_SEND_SIZE = "COMMERCIAL_SEND_SIZE";
	    public static final String COMMERCIAL_RCV_SIZE = "COMMERCIAL_RCV_SIZE";
	    public static final String COMMERCIAL_PERM_FAILURES = "COMMERCIAL_PERM_FAILURES";
	
	    public static final String GROUP_GET_FALL_SIZE = "GROUP_GET_FALL_SIZE";
	    public static final String GROUP_GET_FALL_TIME = "GROUP_GET_FALL_TIME";
	    public static final String GROUP_GET_LATENCY = "GROUP_GET_LATENCY";
	
	    // other constants and methods if necessary
	}
		
",

}
