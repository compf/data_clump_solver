"{
    "refactorings": {
        "common/src/main/java/org/apache/rocketmq/common/stats/Stats.java": [
            {
                "fromLine": 16,
                "toLine": 51,
                "oldContent": " */\npackage org.apache.rocketmq.common.stats;\n\npublic class Stats {\n\n    public static final String QUEUE_PUT_NUMS = \"QUEUE_PUT_NUMS\";\n    public static final String QUEUE_PUT_SIZE = \"QUEUE_PUT_SIZE\";\n    public static final String QUEUE_GET_NUMS = \"QUEUE_GET_NUMS\";\n    public static final String QUEUE_GET_SIZE = \"QUEUE_GET_SIZE\";\n    public static final String TOPIC_PUT_NUMS = \"TOPIC_PUT_NUMS\";\n    public static final String TOPIC_PUT_SIZE = \"TOPIC_PUT_SIZE\";\n    public static final String GROUP_GET_NUMS = \"GROUP_GET_NUMS\";\n    public static final String GROUP_GET_SIZE = \"GROUP_GET_SIZE\";\n    public static final String SNDBCK_PUT_NUMS = \"SNDBCK_PUT_NUMS\";\n    public static final String BROKER_PUT_NUMS = \"BROKER_PUT_NUMS\";\n    public static final String BROKER_GET_NUMS = \"BROKER_GET_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_NUMS = \"GROUP_GET_FROM_DISK_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_SIZE = \"GROUP_GET_FROM_DISK_SIZE\";\n    public static final String BROKER_GET_FROM_DISK_NUMS = \"BROKER_GET_FROM_DISK_NUMS\";\n    public static final String BROKER_GET_FROM_DISK_SIZE = \"BROKER_GET_FROM_DISK_SIZE\";\n    public static final String COMMERCIAL_SEND_TIMES = \"COMMERCIAL_SEND_TIMES\";\n    public static final String COMMERCIAL_SNDBCK_TIMES = \"COMMERCIAL_SNDBCK_TIMES\";\n    public static final String COMMERCIAL_RCV_TIMES = \"COMMERCIAL_RCV_TIMES\";\n    public static final String COMMERCIAL_RCV_EPOLLS = \"COMMERCIAL_RCV_EPOLLS\";\n    public static final String COMMERCIAL_SEND_SIZE = \"COMMERCIAL_SEND_SIZE\";\n    public static final String COMMERCIAL_RCV_SIZE = \"COMMERCIAL_RCV_SIZE\";\n    public static final String COMMERCIAL_PERM_FAILURES = \"COMMERCIAL_PERM_FAILURES\";\n\n    public static final String GROUP_GET_FALL_SIZE = \"GROUP_GET_FALL_SIZE\";\n    public static final String GROUP_GET_FALL_TIME = \"GROUP_GET_FALL_TIME\";\n    public static final String GROUP_GET_LATENCY = \"GROUP_GET_LATENCY\";\n}\n",
                "newContent": "// Content of stats related constants have been removed.\n// This class is now empty and has been deprecated.\n\n/**\n * @deprecated use BrokerStatsMetric instead\n */\n@Deprecated\npublic class Stats {\n}\n"
            }
        ],
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 16,
                "toLine": 74,
                "oldContent": " */\npackage org.apache.rocketmq.store.stats;\n\n// imports omitted\n\npublic class BrokerStatsManager {\n\n    @Deprecated public static final String QUEUE_PUT_NUMS = Stats.QUEUE_PUT_NUMS;\n    @Deprecated public static final String QUEUE_PUT_SIZE = Stats.QUEUE_PUT_SIZE;\n    @Deprecated public static final String QUEUE_GET_NUMS = Stats.QUEUE_GET_NUMS;\n    @Deprecated public static final String QUEUE_GET_SIZE = Stats.QUEUE_GET_SIZE;\n    @Deprecated public static final String TOPIC_PUT_NUMS = Stats.TOPIC_PUT_NUMS;\n    @Deprecated public static final String TOPIC_PUT_SIZE = Stats.TOPIC_PUT_SIZE;\n\n    // Other deprecated fields...\n\n    public static final String TOPIC_PUT_LATENCY = \"TOPIC_PUT_LATENCY\";\n    public static final String GROUP_ACK_NUMS = \"GROUP_ACK_NUMS\";\n    public static final String GROUP_CK_NUMS = \"GROUP_CK_NUMS\";\n    // Other fields...\n}",
                "newContent": " */\npackage org.apache.rocketmq.store.stats;\n\n// imports omitted\n\npublic class BrokerStatsManager {\n\n    // Deprecated fields have been removed. Use BrokerStatsMetric instead.\n\n    public static final String TOPIC_PUT_LATENCY = \"TOPIC_PUT_LATENCY\";\n    public static final String GROUP_ACK_NUMS = \"GROUP_ACK_NUMS\";\n    public static final String GROUP_CK_NUMS = \"GROUP_CK_NUMS\";\n    // Other fields...\n}"
            },
            {
                "fromLine": 105,
                "toLine": 118,
                "oldContent": "    public static final String SUCCESS_MSG_SIZE = \"SUCCESS_MSG_SIZE\";\n    public static final String FAILURE_MSG_SIZE = \"FAILURE_MSG_SIZE\";\n    public static final String RT = \"RT\";\n    public static final String INNER_RT = \"INNER_RT\";\n\n    @Deprecated public static final String GROUP_GET_FALL_SIZE = Stats.GROUP_GET_FALL_SIZE;\n    @Deprecated public static final String GROUP_GET_FALL_TIME = Stats.GROUP_GET_FALL_TIME;\n    // Pull Message Latency\n    @Deprecated public static final String GROUP_GET_LATENCY = Stats.GROUP_GET_LATENCY;\n\n    // Consumer Register Time\n    public static final String CONSUMER_REGISTER_TIME = \"CONSUMER_REGISTER_TIME\";\n    // Producer Register Time\n    public static final String PRODUCER_REGISTER_TIME = \"PRODUCER_REGISTER_TIME\";",
                "newContent": "    public static final String SUCCESS_MSG_SIZE = \"SUCCESS_MSG_SIZE\";\n    public static final String FAILURE_MSG_SIZE = \"FAILURE_MSG_SIZE\";\n    public static final String RT = \"RT\";\n    public static final String INNER_RT = \"INNER_RT\";\n\n    // Deprecated fields have been removed. Use BrokerStatsMetric for lag related metrics.\n\n    // Consumer Register Time\n    public static final String CONSUMER_REGISTER_TIME = \"CONSUMER_REGISTER_TIME\";\n    // Producer Register Time\n    public static final String PRODUCER_REGISTER_TIME = \"PRODUCER_REGISTER_TIME\";"
            },
            {
                "fromLine": 580,
                "toLine": 597,
                "oldContent": "    public double tpsGroupGetNums(final String group, final String topic) {\n        final String statsKey = buildStatsKey(topic, group);\n        return this.statsTable.get(Stats.GROUP_GET_NUMS).getStatsDataInMinute(statsKey).getTps();\n    }\n\n    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n        final String statsKey = buildStatsKey(queueId, topic, group);\n        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);\n    }\n\n    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n        final String statsKey = buildStatsKey(queueId, topic, group);\n        this.momentStatsItemSetFallSize.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);\n    }\n\n    public void incDLQStatValue(final String key, final String owner, final String group,",
                "newContent": "    public double tpsGroupGetNums(final String group, final String topic) {\n        final String statsKey = buildStatsKey(topic, group);\n        // GROUP_GET_NUMS constant removed. Use BrokerStatsMetric instead.\n        // Old code removed...\n    }\n\n    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n        // Deprecated method. Use BrokerStatsMetric.recordDiskFallBehindTime instead.\n    }\n\n    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n        // Deprecated method. Use BrokerStatsMetric.recordDiskFallBehindSize instead.\n    }\n\n    public void incDLQStatValue(final String key, final String owner, final String group,"
            }
        ],
        "broker/src/main/java/org/apache/rocketmq/broker/metrics/ConsumerLagCalculator.java": [
            {
                "fromLine": 16,
                "toLine": 51,
                "oldContent": " */\npackage org.apache.rocketmq.broker.metrics;\n\n// imports omitted\n\npublic class ConsumerLagCalculator {\n    // class content...\n}",
                "newContent": " */\npackage org.apache.rocketmq.broker.metrics;\n\n// imports omitted\n\npublic class ConsumerLagCalculator {\n    // Deprecated class. Use BrokerStatsMetric instead.\n    // Old content has been removed.\n}"
            },
            {
                "fromLine": 296,
                "toLine": 306,
                "oldContent": "        }\n\n        return new Pair<>(total, earliestUnconsumedTimestamp);\n    }\n\n    public Pair<Long, Long> getConsumerLagStats(String group, String topic, int queueId, boolean isPop) {\n        long brokerOffset = messageStore.getMaxOffsetInQueue(topic, queueId);\n        if (brokerOffset < 0) {\n            brokerOffset = 0;\n        }\n",
                "newContent": "        }\n\n        // Deprecated method. Use BrokerStatsMetric.getConsumerLagStats instead.\n        /*\n        return new Pair<>(total, earliestUnconsumedTimestamp);\n        */\n        return null;\n    }\n"
            },
            {
                "fromLine": 435,
                "toLine": 445,
                "oldContent": "            storeTimeStamp = storeTimeStamp > 0 ? storeTimeStamp : Long.MAX_VALUE;\n        }\n        return storeTimeStamp;\n    }\n\n    public long calculateMessageCount(String group, String topic, int queueId, long from, long to) {\n        long count = to - from;\n\n        if (brokerConfig.isEstimateAccumulation() && to > from) {\n            SubscriptionData subscriptionData = null;\n            if (brokerConfig.isUseStaticSubscription()) {",
                "newContent": "            storeTimeStamp = storeTimeStamp > 0 ? storeTimeStamp : Long.MAX_VALUE;\n        }\n        // Deprecated method. Use BrokerStatsMetric.calculateMessageCount instead.\n        /*\n        return storeTimeStamp;\n        */\n        return -1;\n    }\n"
            }
        ]
    },
    "extractedClasses": {}
}"