{
    "refactorings": {
        "store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java": [
            {
                "fromLine": 930,
                "toLine": 950,
                "oldContent": "                            group, topic, queueId, offset, minOffset, maxOffset, e.getMessage());\n                    } finally {\n                        if (bufferConsumeQueue != null) {\n                            bufferConsumeQueue.release();\n                        }\n                    }\n                }\n\n                if (diskFallRecorded) {\n                    long fallBehind = maxOffsetPy - maxPhyOffsetPulling;\n                    brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);\n                }\n\n                long diff = maxOffsetPy - maxPhyOffsetPulling;\n                long memory = (long) (StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE\n                    * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n                getResult.setSuggestPullingFromSlave(diff > memory);\n            }\n        } else {\n            status = GetMessageStatus.NO_MATCHED_LOGIC_QUEUE;\n            nextBeginOffset = nextOffsetCorrection(offset, 0);",
                "newContent": "                            group, topic, queueId, offset, minOffset, maxOffset, e.getMessage());\n                    } finally {\n                        if (bufferConsumeQueue != null) {\n                            bufferConsumeQueue.release();\n                        }\n                    }\n                }\n\n                // Removed the following line because the method recordDiskFallBehindSize is removed\n                // long fallBehind = maxOffsetPy - maxPhyOffsetPulling;\n                // brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);\n\n                long diff = maxOffsetPy - maxPhyOffsetPulling;\n                long memory = (long) (StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE\n                    * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n                getResult.setSuggestPullingFromSlave(diff > memory);\n            }\n        } else {\n            status = GetMessageStatus.NO_MATCHED_LOGIC_QUEUE;\n            nextBeginOffset = nextOffsetCorrection(offset, 0);"
            }
        ],
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 99,
                "toLine": 191,
                "oldContent": "    public void init() {\n        momentStatsItemSetFallSize = new MomentStatsItemSet(GROUP_GET_FALL_SIZE,\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);\n\n        // ... More code with references to Stats constants ...\n\n        this.statsTable.put(CONSUMER_REGISTER_TIME,\n            new StatsItemSet(CONSUMER_REGISTER_TIME, this.scheduledExecutorService, log));\n        this.statsTable.put(PRODUCER_REGISTER_TIME,\n            new StatsItemSet(PRODUCER_REGISTER_TIME, this.scheduledExecutorService, log));\n\n        this.statsTable.put(CHANNEL_ACTIVITY, new StatsItemSet(CHANNEL_ACTIVITY, this.scheduledExecutorService, log));\n\n        // ... Rest of the method ...\n    }\n",
                "newContent": "    public void init() {\n        // Initialization of MomentStatsItemSet objects removed because their constants are removed from Stats class\n\n        // ... Code that initializes other StatsItemSet objects ...\n\n        // Initialization of Consumer and Producer Register Time and Channel Activity-related StatsItemSet objects are removed because their constants are removed\n    }\n"
            }
        ]
    },
    "extractedClasses": {
        "common/src/main/java/org/apache/rocketmq/common/stats/Stats.java": "// The refactored Stats class now does not contain any constants since they were removed or refactored out."
    }
}