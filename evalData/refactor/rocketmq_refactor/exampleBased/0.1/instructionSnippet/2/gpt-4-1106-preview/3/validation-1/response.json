{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java": [
            {
                "fromLine": 938,
                "toLine": 942,
                "oldContent": "                if (diskFallRecorded) {\n                    long fallBehind = maxOffsetPy - maxPhyOffsetPulling;\n                    BrokerStatsItem statsItem = new BrokerStatsItem(group, topic, queueId, fallBehind);\n                    brokerStatsManager.recordDiskFallBehindSize(statsItem);\n                }",
                "newContent": "                if (diskFallRecorded) {\n                    long fallBehind = maxOffsetPy - maxPhyOffsetPulling;\n                    BrokerStatsItem statsItem = new BrokerStatsItem(group, topic, queueId, fallBehind);\n                    brokerStatsManager.recordDiskFallBehindSize(statsItem);\n                }"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 137,
                "toLine": 164,
                "oldContent": "\n    public void init() {\n        momentStatsItemSetFallSize = new MomentStatsItemSet(GROUP_GET_FALL_SIZE,\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);\n\n        if (enableQueueStat) {\n            this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_SIZE, new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_SIZE, new StatsItemSet(Stats.GROUP_GET_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_LATENCY, new StatsItemSet(Stats.GROUP_GET_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.SNDBCK_PUT_NUMS, new StatsItemSet(Stats.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_NUMS, new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "\n    public void init() {\n        momentStatsItemSetFallSize = new MomentStatsItemSet(BrokerStatsItem.GROUP_GET_FALL_SIZE,\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new MomentStatsItemSet(BrokerStatsItem.GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);\n\n        if (enableQueueStat) {\n            this.statsTable.put(BrokerStatsItem.QUEUE_PUT_NUMS, new StatsItemSet(BrokerStatsItem.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(BrokerStatsItem.QUEUE_PUT_SIZE, new StatsItemSet(BrokerStatsItem.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(BrokerStatsItem.QUEUE_GET_NUMS, new StatsItemSet(BrokerStatsItem.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(BrokerStatsItem.QUEUE_GET_SIZE, new StatsItemSet(BrokerStatsItem.QUEUE_GET_SIZE, this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(BrokerStatsItem.TOPIC_PUT_NUMS, new StatsItemSet(BrokerStatsItem.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.TOPIC_PUT_SIZE, new StatsItemSet(BrokerStatsItem.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.GROUP_GET_NUMS, new StatsItemSet(BrokerStatsItem.GROUP_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.GROUP_GET_SIZE, new StatsItemSet(BrokerStatsItem.GROUP_GET_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.GROUP_ACK_NUMS, new StatsItemSet(BrokerStatsItem.GROUP_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.GROUP_CK_NUMS, new StatsItemSet(BrokerStatsItem.GROUP_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.GROUP_GET_LATENCY, new StatsItemSet(BrokerStatsItem.GROUP_GET_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.TOPIC_PUT_LATENCY, new StatsItemSet(BrokerStatsItem.TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.SNDBCK_PUT_NUMS, new StatsItemSet(BrokerStatsItem.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.DLQ_PUT_NUMS, new StatsItemSet(BrokerStatsItem.DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.BROKER_PUT_NUMS, new StatsItemSet(BrokerStatsItem.BROKER_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.BROKER_GET_NUMS, new StatsItemSet(BrokerStatsItem.BROKER_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.BROKER_ACK_NUMS, new StatsItemSet(BrokerStatsItem.BROKER_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BrokerStatsItem.BROKER_CK_NUMS, new StatsItemSet(BrokerStatsItem.BROKER_CK_NUMS, this.scheduledExecutorService, log));"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java": [
            {
                "fromLine": 90,
                "toLine": 94,
                "oldContent": "    }\n\n    @Override\n    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,\n        final long fallBehind) {",
                "newContent": "    }\n\n    @Override\n    public void recordDiskFallBehindTime(final BrokerStatsItem statsItem) {"
            },
            {
                "fromLine": 101,
                "toLine": 108,
                "oldContent": "            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);\n    }\n\n    @Override\n    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,\n        final long fallBehind) {",
                "newContent": "            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        BrokerStatsItem statsItem = new BrokerStatsItem(lmqGroup, lmqTopic, queueId, fallBehind);\n        super.recordDiskFallBehindTime(statsItem);\n    }\n\n    @Override\n    public void recordDiskFallBehindSize(final BrokerStatsItem statsItem) {"
            },
            {
                "fromLine": 115,
                "toLine": 119,
                "oldContent": "            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        super.recordDiskFallBehindSize(lmqGroup, lmqTopic, queueId, fallBehind);\n    }\n",
                "newContent": "            lmqTopic = MixAll.LMQ_PREFIX;\n        }\n        BrokerStatsItem statsItem = new BrokerStatsItem(lmqGroup, lmqTopic, queueId, fallBehind);\n        super.recordDiskFallBehindSize(statsItem);\n    }\n"
            }
        ]
    },
    "extractedClasses": {
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsItem.java": "package org.apache.rocketmq.store.stats;\n\npublic class BrokerStatsItem {\n    public static final String GROUP_GET_FALL_SIZE = \"GROUP_GET_FALL_SIZE\";\n    public static final String GROUP_GET_FALL_TIME = \"GROUP_GET_FALL_TIME\";\n    public static final String QUEUE_PUT_NUMS = \"QUEUE_PUT_NUMS\";\n    public static final String QUEUE_PUT_SIZE = \"QUEUE_PUT_SIZE\";\n    public static final String QUEUE_GET_NUMS = \"QUEUE_GET_NUMS\";\n    public static final String QUEUE_GET_SIZE = \"QUEUE_GET_SIZE\";\n    public static final String TOPIC_PUT_NUMS = \"TOPIC_PUT_NUMS\";\n    public static final String TOPIC_PUT_SIZE = \"TOPIC_PUT_SIZE\";\n    public static final String GROUP_GET_NUMS = \"GROUP_GET_NUMS\";\n    public static final String GROUP_GET_SIZE = \"GROUP_GET_SIZE\";\n    public static final String SNDBCK_PUT_NUMS = \"SNDBCK_PUT_NUMS\";\n    public static final String BROKER_PUT_NUMS = \"BROKER_PUT_NUMS\";\n    public static final String BROKER_GET_NUMS = \"BROKER_GET_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_NUMS = \"GROUP_GET_FROM_DISK_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_SIZE = \"GROUP_GET_FROM_DISK_SIZE\";\n    public static final String BROKER_GET_FROM_DISK_NUMS = \"BROKER_GET_FROM_DISK_NUMS\";\n    public static final String BROKER_GET_FROM_DISK_SIZE = \"BROKER_GET_FROM_DISK_SIZE\";\n    public static final String COMMERCIAL_SEND_TIMES = \"COMMERCIAL_SEND_TIMES\";\n    public static final String COMMERCIAL_SNDBCK_TIMES = \"COMMERCIAL_SNDBCK_TIMES\";\n    public static final String COMMERCIAL_RCV_TIMES = \"COMMERCIAL_RCV_TIMES\";\n    public static final String COMMERCIAL_RCV_EPOLLS = \"COMMERCIAL_RCV_EPOLLS\";\n    public static final String COMMERCIAL_SEND_SIZE = \"COMMERCIAL_SEND_SIZE\";\n    public static final String COMMERCIAL_RCV_SIZE = \"COMMERCIAL_RCV_SIZE\";\n    public static final String COMMERCIAL_PERM_FAILURES = \"COMMERCIAL_PERM_FAILURES\";\n    public static final String GROUP_ACK_NUMS = \"GROUP_ACK_NUMS\";\n    public static final String GROUP_CK_NUMS = \"GROUP_CK_NUMS\";\n    public static final String GROUP_GET_LATENCY = \"GROUP_GET_LATENCY\";\n    public static final String TOPIC_PUT_LATENCY = \"TOPIC_PUT_LATENCY\";\n    public static final String DLQ_PUT_NUMS = \"DLQ_PUT_NUMS\";\n    public static final String BROKER_ACK_NUMS = \"BROKER_ACK_NUMS\";\n    public static final String BROKER_CK_NUMS = \"BROKER_CK_NUMS\";\n    public static final String BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC = \"BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC\";\n    public static final String SNDBCK2DLQ_TIMES = \"SNDBCK2DLQ_TIMES\";\n    public static final String CONSUMER_REGISTER_TIME = \"CONSUMER_REGISTER_TIME\";\n\n    private final String group;\n    private final String topic;\n    private final int queueId;\n    private final long fallBehind;\n\n    public BrokerStatsItem(String group, String topic, int queueId, long fallBehind) {\n        this.group = group;\n        this.topic = topic;\n        this.queueId = queueId;\n        this.fallBehind = fallBehind;\n    }\n\n    public String getStatsKey() {\n        return buildStatsKey(queueId, topic, group);\n    }\n\n    public long getFallBehind() {\n        return fallBehind;\n    }\n\n    private String buildStatsKey(int queueId, String topic, String group) {\n        // Implementation of building the stats key\n        return String.format(\"%s-%s-%d\", group, topic, queueId);\n    }\n}\n"
    }
}