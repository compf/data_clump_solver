refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java:
	[
		fromLine:"		938",
		toLine:"		942",
		oldContent:"
		                if (diskFallRecorded) {
		                    long fallBehind = maxOffsetPy - maxPhyOffsetPulling;
		                    brokerStatsManager.recordDiskFallBehindSize(new BrokerStatsItem(group, topic, queueId, fallBehind));
		                }
				
",
		newContent:"
		                if (diskFallRecorded) {
		                    long fallBehind = maxOffsetPy - maxPhyOffsetPulling;
		                    brokerStatsManager.recordDiskFallBehindSize(new org.apache.rocketmq.store.stats.BrokerStatsItem(group, topic, queueId, fallBehind));
		                }
				
",
,

	],
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		321",
		toLine:"		332",
		oldContent:"
		
		    public void onGroupDeleted(final String group) {
		        this.statsTable.get(Stats.GROUP_GET_NUMS).delValueBySuffixKey(group, "@");
		        this.statsTable.get(Stats.GROUP_GET_SIZE).delValueBySuffixKey(group, "@");
		        if (enableQueueStat) {
		            this.statsTable.get(Stats.QUEUE_GET_NUMS).delValueBySuffixKey(group, "@");
		            this.statsTable.get(Stats.QUEUE_GET_SIZE).delValueBySuffixKey(group, "@");
		        }
		        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).delValueBySuffixKey(group, "@");
		        this.statsTable.get(Stats.GROUP_GET_LATENCY).delValueBySuffixKey(group, "@");
		        this.momentStatsItemSetFallSize.delValueBySuffixKey(group, "@");
		        this.momentStatsItemSetFallTime.delValueBySuffixKey(group, "@");		
",
		newContent:"
		
		    public void onGroupDeleted(final String group) {
		        this.statsTable.get(org.apache.rocketmq.store.stats.BrokerStatsItem.GROUP_GET_NUMS).delValueBySuffixKey(group, "@");
		        this.statsTable.get(org.apache.rocketmq.store.stats.BrokerStatsItem.GROUP_GET_SIZE).delValueBySuffixKey(group, "@");
		        if (enableQueueStat) {
		            this.statsTable.get(org.apache.rocketmq.store.stats.BrokerStatsItem.QUEUE_GET_NUMS).delValueBySuffixKey(group, "@");
		            this.statsTable.get(org.apache.rocketmq.store.stats.BrokerStatsItem.QUEUE_GET_SIZE).delValueBySuffixKey(group, "@");
		        }
		        this.statsTable.get(org.apache.rocketmq.store.stats.BrokerStatsItem.SNDBCK_PUT_NUMS).delValueBySuffixKey(group, "@");
		        this.statsTable.get(org.apache.rocketmq.store.stats.BrokerStatsItem.GROUP_GET_LATENCY).delValueBySuffixKey(group, "@");
		        this.momentStatsItemSetFallSize.delValueBySuffixKey(group, "@");
		        this.momentStatsItemSetFallTime.delValueBySuffixKey(group, "@");		
",
,

	],

}
extractedClasses:
{
	store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsItem.java:"
	package org.apache.rocketmq.store.stats;
	
	public class BrokerStatsItem {
	    public static final String GROUP_GET_FALL_SIZE = "GROUP_GET_FALL_SIZE";
	    public static final String GROUP_GET_FALL_TIME = "GROUP_GET_FALL_TIME";
	    public static final String QUEUE_PUT_NUMS = "QUEUE_PUT_NUMS";
	    public static final String QUEUE_PUT_SIZE = "QUEUE_PUT_SIZE";
	    public static final String QUEUE_GET_NUMS = "QUEUE_GET_NUMS";
	    public static final String QUEUE_GET_SIZE = "QUEUE_GET_SIZE";
	    public static final String TOPIC_PUT_NUMS = "TOPIC_PUT_NUMS";
	    public static final String TOPIC_PUT_SIZE = "TOPIC_PUT_SIZE";
	    public static final String GROUP_GET_NUMS = "GROUP_GET_NUMS";
	    public static final String GROUP_GET_SIZE = "GROUP_GET_SIZE";
	    public static final String SNDBCK_PUT_NUMS = "SNDBCK_PUT_NUMS";
	    public static final String BROKER_PUT_NUMS = "BROKER_PUT_NUMS";
	    public static final String BROKER_GET_NUMS = "BROKER_GET_NUMS";
	    public static final String GROUP_GET_FROM_DISK_NUMS = "GROUP_GET_FROM_DISK_NUMS";
	    public static final String GROUP_GET_FROM_DISK_SIZE = "GROUP_GET_FROM_DISK_SIZE";
	    public static final String BROKER_GET_FROM_DISK_NUMS = "BROKER_GET_FROM_DISK_NUMS";
	    public static final String BROKER_GET_FROM_DISK_SIZE = "BROKER_GET_FROM_DISK_SIZE";
	    public static final String COMMERCIAL_SEND_TIMES = "COMMERCIAL_SEND_TIMES";
	    public static final String COMMERCIAL_SNDBCK_TIMES = "COMMERCIAL_SNDBCK_TIMES";
	    public static final String COMMERCIAL_RCV_TIMES = "COMMERCIAL_RCV_TIMES";
	    public static final String COMMERCIAL_RCV_EPOLLS = "COMMERCIAL_RCV_EPOLLS";
	    public static final String COMMERCIAL_SEND_SIZE = "COMMERCIAL_SEND_SIZE";
	    public static final String COMMERCIAL_RCV_SIZE = "COMMERCIAL_RCV_SIZE";
	    public static final String COMMERCIAL_PERM_FAILURES = "COMMERCIAL_PERM_FAILURES";
	    public static final String GROUP_ACK_NUMS = "GROUP_ACK_NUMS";
	    public static final String GROUP_CK_NUMS = "GROUP_CK_NUMS";
	    public static final String GROUP_GET_LATENCY = "GROUP_GET_LATENCY";
	    public static final String TOPIC_PUT_LATENCY = "TOPIC_PUT_LATENCY";
	    public static final String DLQ_PUT_NUMS = "DLQ_PUT_NUMS";
	    public static final String BROKER_ACK_NUMS = "BROKER_ACK_NUMS";
	    public static final String BROKER_CK_NUMS = "BROKER_CK_NUMS";
	    public static final String BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC = "BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC";
	    public static final String SNDBCK2DLQ_TIMES = "SNDBCK2DLQ_TIMES";
	    public static final String CONSUMER_REGISTER_TIME = "CONSUMER_REGISTER_TIME";
	
	    private final String group;
	    private final String topic;
	    private final int queueId;
	    private final long fallBehind;
	
	    public BrokerStatsItem(String group, String topic, int queueId, long fallBehind) {
	        this.group = group;
	        this.topic = topic;
	        this.queueId = queueId;
	        this.fallBehind = fallBehind;
	    }
	
	    public String getGroup() {
	        return group;
	    }
	
	    public String getTopic() {
	        return topic;
	    }
	
	    public int getQueueId() {
	        return queueId;
	    }
	
	    public long getFallBehind() {
	        return fallBehind;
	    }
	
	    public String getStatsKey() {
	        return buildStatsKey(queueId, topic, group);
	    }
	
	    private String buildStatsKey(int queueId, String topic, String group) {
	        // Implementation of building the stats key
	        return String.format("%s-%s-%d", group, topic, queueId);
	    }
	}
		
",

}
