{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 564,
                "toLine": 565,
                "oldContent": "    public void recordDiskFallBehindTime(final ConsumerGroupTopicQueue groupTopicQueue, final long fallBehind) {\n        final String statsKey = buildStatsKey(queueId, topic, group);",
                "newContent": "    public void recordDiskFallBehindTime(final ConsumerGroupTopicQueue groupTopicQueue, final long fallBehind) {\n        final String statsKey = buildStatsKey(groupTopicQueue.getQueueId(), groupTopicQueue.getTopic(), groupTopicQueue.getGroup());"
            },
            {
                "fromLine": 569,
                "toLine": 570,
                "oldContent": "    public void recordDiskFallBehindSize(final ConsumerGroupTopicQueue groupTopicQueue, final long fallBehind) {\n        final String statsKey = buildStatsKey(queueId, topic, group);",
                "newContent": "    public void recordDiskFallBehindSize(final ConsumerGroupTopicQueue groupTopicQueue, final long fallBehind) {\n        final String statsKey = buildStatsKey(groupTopicQueue.getQueueId(), groupTopicQueue.getTopic(), groupTopicQueue.getGroup());"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java": [
            {
                "fromLine": 940,
                "toLine": 940,
                "oldContent": "                    brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);",
                "newContent": "                    brokerStatsManager.recordDiskFallBehindSize(new ConsumerGroupTopicQueue(group, topic, queueId), fallBehind);"
            }
        ],
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java": [
            {
                "fromLine": 92,
                "toLine": 92,
                "oldContent": "    @Override",
                "newContent": ""
            },
            {
                "fromLine": 103,
                "toLine": 103,
                "oldContent": "        super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);",
                "newContent": "        super.recordDiskFallBehindTime(new ConsumerGroupTopicQueue(lmqGroup, lmqTopic, queueId), fallBehind);"
            },
            {
                "fromLine": 106,
                "toLine": 106,
                "oldContent": "    @Override",
                "newContent": ""
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "        super.recordDiskFallBehindSize(lmqGroup, lmqTopic, queueId, fallBehind);",
                "newContent": "        super.recordDiskFallBehindSize(new ConsumerGroupTopicQueue(lmqGroup, lmqTopic, queueId), fallBehind);"
            }
        ]
    },
    "extractedClasses": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/common/src/main/java/org/apache/rocketmq/common/stats/ConsumerGroupTopicQueue.java": "package org.apache.rocketmq.common.stats;\n\npublic class ConsumerGroupTopicQueue {\n    private final String group;\n    private final String topic;\n    private final int queueId;\n\n    public ConsumerGroupTopicQueue(String group, String topic, int queueId) {\n        this.group = group;\n        this.topic = topic;\n        this.queueId = queueId;\n    }\n\n    public String getGroup() {\n        return group;\n    }\n\n    public String getTopic() {\n        return topic;\n    }\n\n    public int getQueueId() {\n        return queueId;\n    }\n}\n"
    }
}