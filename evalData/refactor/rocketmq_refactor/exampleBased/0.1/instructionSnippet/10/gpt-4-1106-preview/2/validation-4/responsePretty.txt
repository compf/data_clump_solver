refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/test/java/org/apache/rocketmq/store/queue/QueueTestBase.java:
	[
		fromLine:"		84",
		toLine:"		125",
		oldContent:"
		        // Updated constructor call to match the refactored BrokerStatsManager class.
		            return new DefaultMessageStore(
		            messageStoreConfig,
		            new BrokerStatsManager(),
		            (topic, queueId, logicOffset, tagsCode, msgStoreTime, filterBitMap, properties) -> {
		            },
		            new BrokerConfig(), topicConfigTable);
		    }
		    
		        MessageExtBrokerInner msg = new MessageExtBrokerInner();
		        MessageExtBrokerInner msg = a new MessageExtBrokerInner();
		        msg.setTopic(topic);
		        msg.setTags("TAG1");
		        msg.setKeys("Hello");
		        msg.setBody(new byte[1024]);
		        msg.setKeys(String.valueOf(System.currentTimeMillis()));
		        msg.setQueueId(0);
		        msg.setSysFlag(0);
		        msg.setBornTimestamp(System.currentTimeMillis());
		        msg.setStoreHost(storeHost);
		        msg.setBornHost(storeHost);
		        MessageAccessor.putProperty(msg, MessageConst.PROPERTY_INNER_NUM, String.valueOf(batchNum));
		        msg.setPropertiesString(MessageDecoder.messageProperties2String(msg.getProperties()));
		        if (batchNum > 1) {
		            msg.setSysFlag(MessageSysFlag.INNER_BATCH_FLAG);
		        }
		        if (batchNum == -1) {
		            MessageAccessor.clearProperty(msg, MessageConst.PROPERTY_INNER_NUM);
		        }
		        return msg;
		    }
		}
				
",
		newContent:"
		        // Updated constructor call to match the refactored BrokerStatsManager class.
		        return new DefaultMessageStore(
		            messageStoreConfig,
		            new BrokerStatsManager(),
		            (topic, queueId, logicOffset, tagsCode, msgStoreTime, filterBitMap, properties) -> {
		            },
		            new BrokerConfig(), topicConfigTable);
		    }
		
		    public MessageExtBrokerInner buildMessage(String topic, int batchNum) {
		        MessageExtBrokerInner msg = new MessageExtBrokerInner();
		        msg.setTopic(topic);
		        msg.setTags("TAG1");
		        msg.setKeys("Hello");
		        msg.setBody(new byte[1024]);
		        msg.setKeys(String.valueOf(System.currentTimeMillis()));
		        msg.setQueueId(0);
		        msg.setSysFlag(0);
		        msg.setBornTimestamp(System.currentTimeMillis());
		        msg.setStoreHost(storeHost);
		        msg.setBornHost(storeHost);
		        MessageAccessor.putProperty(msg, MessageConst.PROPERTY_INNER_NUM, String.valueOf(batchNum));
		        msg.setPropertiesString(MessageDecoder.messageProperties2String(msg.getProperties()));
		        if (batchNum > 1) {
		            msg.setSysFlag(MessageSysFlag.INNER_BATCH_FLAG);
		        }
		        if (batchNum == -1) {
		            MessageAccessor.clearProperty(msg, MessageConst.PROPERTY_INNER_NUM);
		        }
		        return msg;
		    }
		}
				
",
,

	],

}
extractedClasses:
{

}
