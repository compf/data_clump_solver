refactorings:
{
	common/src/main/java/org/apache/rocketmq/common/stats/Stats.java:
	[
		fromLine:"		16",
		toLine:"		51",
		oldContent:"
		 */
		package org.apache.rocketmq.common.stats;
		
		public class Stats {
		
		    public static final String QUEUE_PUT_NUMS = "QUEUE_PUT_NUMS";
		    public static final String QUEUE_PUT_SIZE = "QUEUE_PUT_SIZE";
		    public static final String QUEUE_GET_NUMS = "QUEUE_GET_NUMS";
		    public static final String QUEUE_GET_SIZE = "QUEUE_GET_SIZE";
		    public static final String TOPIC_PUT_NUMS = "TOPIC_PUT_NUMS";
		    public static final String TOPIC_PUT_SIZE = "TOPIC_PUT_SIZE";
		    public static final String GROUP_GET_NUMS = "GROUP_GET_NUMS";
		    public static final String GROUP_GET_SIZE = "GROUP_GET_SIZE";
		    public static final String SNDBCK_PUT_NUMS = "SNDBCK_PUT_NUMS";
		    public static final String BROKER_PUT_NUMS = "BROKER_PUT_NUMS";
		    public static final String BROKER_GET_NUMS = "BROKER_GET_NUMS";
		    public static final String GROUP_GET_FROM_DISK_NUMS = "GROUP_GET_FROM_DISK_NUMS";
		    public static final String GROUP_GET_FROM_DISK_SIZE = "GROUP_GET_FROM_DISK_SIZE";
		    public static final String BROKER_GET_FROM_DISK_NUMS = "BROKER_GET_FROM_DISK_NUMS";
		    public static final String BROKER_GET_FROM_DISK_SIZE = "BROKER_GET_FROM_DISK_SIZE";
		    public static final String COMMERCIAL_SEND_TIMES = "COMMERCIAL_SEND_TIMES";
		    public static final String COMMERCIAL_SNDBCK_TIMES = "COMMERCIAL_SNDBCK_TIMES";
		    public static final String COMMERCIAL_RCV_TIMES = "COMMERCIAL_RCV_TIMES";
		    public static final String COMMERCIAL_RCV_EPOLLS = "COMMERCIAL_RCV_EPOLLS";
		    public static final String COMMERCIAL_SEND_SIZE = "COMMERCIAL_SEND_SIZE";
		    public static final String COMMERCIAL_RCV_SIZE = "COMMERCIAL_RCV_SIZE";
		    public static final String COMMERCIAL_PERM_FAILURES = "COMMERCIAL_PERM_FAILURES";
		
		    public static final String GROUP_GET_FALL_SIZE = "GROUP_GET_FALL_SIZE";
		    public static final String GROUP_GET_FALL_TIME = "GROUP_GET_FALL_TIME";
		    public static final String GROUP_GET_LATENCY = "GROUP_GET_LATENCY";
		}
				
",
		newContent:"
		 */
		package org.apache.rocketmq.common.stats;
		
		public class Stats {
		
		    // Constants have been moved to BrokerStatsItemKeys
		}
				
",
,

	],
	store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		16",
		toLine:"		74",
		oldContent:"
		 */
		package org.apache.rocketmq.store.stats;
		
		import java.util.HashMap;
		import java.util.concurrent.ScheduledExecutorService;
		import org.apache.commons.lang3.tuple.Pair;
		import org.apache.rocketmq.common.BrokerConfig;
		import org.apache.rocketmq.common.ThreadFactoryImpl;
		import org.apache.rocketmq.common.UtilAll;
		import org.apache.rocketmq.common.constant.LoggerName;
		import org.apache.rocketmq.common.statistics.StatisticsItem;
		import org.apache.rocketmq.common.statistics.StatisticsItemFormatter;
		import org.apache.rocketmq.common.statistics.StatisticsItemPrinter;
		import org.apache.rocketmq.common.statistics.StatisticsItemScheduledIncrementPrinter;
		import org.apache.rocketmq.common.statistics.StatisticsItemScheduledPrinter;
		import org.apache.rocketmq.common.statistics.StatisticsItemStateGetter;
		import org.apache.rocketmq.common.statistics.StatisticsKindMeta;
		import org.apache.rocketmq.common.statistics.StatisticsManager;
		import org.apache.rocketmq.common.stats.MomentStatsItemSet;
		import org.apache.rocketmq.common.stats.Stats;
		import org.apache.rocketmq.common.stats.StatsItem;
		import org.apache.rocketmq.common.stats.StatsItemSet;
		import org.apache.rocketmq.common.topic.TopicValidator;
		import org.apache.rocketmq.common.utils.ThreadUtils;
		import org.apache.rocketmq.logging.org.slf4j.Logger;
		import org.apache.rocketmq.logging.org.slf4j.LoggerFactory;
		
		public class BrokerStatsManager {
		
		    @Deprecated public static final String QUEUE_PUT_NUMS = Stats.QUEUE_PUT_NUMS;
		    @Deprecated public static final String QUEUE_PUT_SIZE = Stats.QUEUE_PUT_SIZE;
		    @Deprecated public static final String QUEUE_GET_NUMS = Stats.QUEUE_GET_NUMS;
		    @Deprecated public static final String QUEUE_GET_SIZE = Stats.QUEUE_GET_SIZE;
		    @Deprecated public static final String TOPIC_PUT_NUMS = Stats.TOPIC_PUT_NUMS;
		    @Deprecated public static final String TOPIC_PUT_SIZE = Stats.TOPIC_PUT_SIZE;
		
		    @Deprecated public static final String GROUP_GET_NUMS = Stats.GROUP_GET_NUMS;
		    @Deprecated public static final String GROUP_GET_SIZE = Stats.GROUP_GET_SIZE;
		
		    @Deprecated public static final String SNDBCK_PUT_NUMS = Stats.SNDBCK_PUT_NUMS;
		    @Deprecated public static final String BROKER_PUT_NUMS = Stats.BROKER_PUT_NUMS;
		    @Deprecated public static final String BROKER_GET_NUMS = Stats.BROKER_GET_NUMS;
		    @Deprecated public static final String GROUP_GET_FROM_DISK_NUMS = Stats.GROUP_GET_FROM_DISK_NUMS;
		    @Deprecated public static final String GROUP_GET_FROM_DISK_SIZE = Stats.GROUP_GET_FROM_DISK_SIZE;
		    @Deprecated public static final String BROKER_GET_FROM_DISK_NUMS = Stats.BROKER_GET_FROM_DISK_NUMS;
		    @Deprecated public static final String BROKER_GET_FROM_DISK_SIZE = Stats.BROKER_GET_FROM_DISK_SIZE;
		    // For commercial
		    @Deprecated public static final String COMMERCIAL_SEND_TIMES = Stats.COMMERCIAL_SEND_TIMES;
		    @Deprecated public static final String COMMERCIAL_SNDBCK_TIMES = Stats.COMMERCIAL_SNDBCK_TIMES;
		    @Deprecated public static final String COMMERCIAL_RCV_TIMES = Stats.COMMERCIAL_RCV_TIMES;
		    @Deprecated public static final String COMMERCIAL_RCV_EPOLLS = Stats.COMMERCIAL_RCV_EPOLLS;
		    @Deprecated public static final String COMMERCIAL_SEND_SIZE = Stats.COMMERCIAL_SEND_SIZE;
		    @Deprecated public static final String COMMERCIAL_RCV_SIZE = Stats.COMMERCIAL_RCV_SIZE;
		    @Deprecated public static final String COMMERCIAL_PERM_FAILURES = Stats.COMMERCIAL_PERM_FAILURES;
		
		    // Send message latency
		    public static final String TOPIC_PUT_LATENCY = "TOPIC_PUT_LATENCY";
		    public static final String GROUP_ACK_NUMS = "GROUP_ACK_NUMS";
		    public static final String GROUP_CK_NUMS = "GROUP_CK_NUMS";		
",
		newContent:"
		 */
		package org.apache.rocketmq.store.stats;
		
		import java.util.HashMap;
		import java.util.concurrent.ScheduledExecutorService;
		import org.apache.commons.lang3.tuple.Pair;
		import org.apache.rocketmq.common.BrokerConfig;
		import org.apache.rocketmq.common.ThreadFactoryImpl;
		import org.apache.rocketmq.common.UtilAll;
		import org.apache.rocketmq.common.constant.LoggerName;
		import org.apache.rocketmq.common.statistics.StatisticsItem;
		import org.apache.rocketmq.common.statistics.StatisticsItemFormatter;
		import org.apache.rocketmq.common.statistics.StatisticsItemPrinter;
		import org.apache.rocketmq.common.statistics.StatisticsItemScheduledIncrementPrinter;
		import org.apache.rocketmq.common.statistics.StatisticsItemScheduledPrinter;
		import org.apache.rocketmq.common.statistics.StatisticsItemStateGetter;
		import org.apache.rocketmq.common.statistics.StatisticsKindMeta;
		import org.apache.rocketmq.common.statistics.StatisticsManager;
		import org.apache.rocketmq.common.stats.MomentStatsItemSet;
		import org.apache.rocketmq.common.stats.StatsItem;
		import org.apache.rocketmq.common.stats.StatsItemSet;
		import org.apache.rocketmq.common.topic.TopicValidator;
		import org.apache.rocketmq.common.utils.ThreadUtils;
		import org.apache.rocketmq.logging.org.slf4j.Logger;
		import org.apache.rocketmq.logging.org.slf4j.LoggerFactory;
		
		public class BrokerStatsManager {
		
		    // Constants have been moved to BrokerStatsItemKeys
		
		    // Send message latency
		    public static final String TOPIC_PUT_LATENCY = "TOPIC_PUT_LATENCY";
		    public static final String GROUP_ACK_NUMS = "GROUP_ACK_NUMS";
		    public static final String GROUP_CK_NUMS = "GROUP_CK_NUMS";		
",
,
		fromLine:"		105",
		toLine:"		118",
		oldContent:"
		    public static final String SUCCESS_MSG_SIZE = "SUCCESS_MSG_SIZE";
		    public static final String FAILURE_MSG_SIZE = "FAILURE_MSG_SIZE";
		    public static final String RT = "RT";
		    public static final String INNER_RT = "INNER_RT";
		
		    @Deprecated public static final String GROUP_GET_FALL_SIZE = Stats.GROUP_GET_FALL_SIZE;
		    @Deprecated public static final String GROUP_GET_FALL_TIME = Stats.GROUP_GET_FALL_TIME;
		    // Pull Message Latency
		    @Deprecated public static final String GROUP_GET_LATENCY = Stats.GROUP_GET_LATENCY;
		
		    // Consumer Register Time
		    public static final String CONSUMER_REGISTER_TIME = "CONSUMER_REGISTER_TIME";
		    // Producer Register Time
		    public static final String PRODUCER_REGISTER_TIME = "PRODUCER_REGISTER_TIME";		
",
		newContent:"
		    public static final String SUCCESS_MSG_SIZE = "SUCCESS_MSG_SIZE";
		    public static final String FAILURE_MSG_SIZE = "FAILURE_MSG_SIZE";
		    public static final String RT = "RT";
		    public static final String INNER_RT = "INNER_RT";
		
		    // Constants have been moved to BrokerStatsItemKeys
		
		    // Consumer Register Time
		    public static final String CONSUMER_REGISTER_TIME = "CONSUMER_REGISTER_TIME";
		    // Producer Register Time
		    public static final String PRODUCER_REGISTER_TIME = "PRODUCER_REGISTER_TIME";		
",
,
		fromLine:"		580",
		toLine:"		597",
		oldContent:"
		    public double tpsGroupGetNums(final String group, final String topic) {
		        final String statsKey = buildStatsKey(topic, group);
		        return this.statsTable.get(Stats.GROUP_GET_NUMS).getStatsDataInMinute(statsKey).getTps();
		    }
		
		    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,
		        final long fallBehind) {
		        final String statsKey = buildStatsKey(queueId, topic, group);
		        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);
		    }
		
		    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,
		        final long fallBehind) {
		        final String statsKey = buildStatsKey(queueId, topic, group);
		        this.momentStatsItemSetFallSize.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);
		    }
		
		    public void incDLQStatValue(final String key, final String owner, final String group,		
",
		newContent:"
		    public double tpsGroupGetNums(final String group, final String topic) {
		        final String statsKey = buildStatsKey(topic, group);
		        return this.statsTable.get(BrokerStatsItemKeys.GROUP_GET_NUMS).getStatsDataInMinute(statsKey).getTps();
		    }
		
		    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,
		        final long fallBehind) {
		        final String statsKey = buildStatsKey(queueId, topic, group);
		        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);
		    }
		
		    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,
		        final long fallBehind) {
		        final String statsKey = buildStatsKey(queueId, topic, group);
		        this.momentStatsItemSetFallSize.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);
		    }
		
		    public void incDLQStatValue(final String key, final String owner, final String group,		
",
,

	],

}
