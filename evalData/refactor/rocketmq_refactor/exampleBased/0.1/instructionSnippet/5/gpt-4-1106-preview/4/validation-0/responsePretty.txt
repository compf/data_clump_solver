refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		133",
		toLine:"		198",
		oldContent:"
		        momentStatsItemSetFallSize = new MomentStatsItemSet(GROUP_GET_FALL_SIZE,
		            scheduledExecutorService, log);
		
		        momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,
		            scheduledExecutorService, log);
		
		        if (enableQueueStat) {
		            this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));
		            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));
		            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));
		            this.statsTable.put(Stats.QUEUE_GET_SIZE, new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));
		        }
		        this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.GROUP_GET_SIZE, new StatsItemSet(Stats.GROUP_GET_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.GROUP_GET_LATENCY, new StatsItemSet(Stats.GROUP_GET_LATENCY, this.scheduledExecutorService, log));
		        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.SNDBCK_PUT_NUMS, new StatsItemSet(Stats.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.BROKER_GET_NUMS, new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC,
		            new StatsItemSet(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));
		        this.statsTable.put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,
		            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_NUMS,
		            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_SIZE,
		            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_NUMS,
		            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_SIZE,
		            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));
		
		        this.statsTable.put(SNDBCK2DLQ_TIMES,
		            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));
		
		        this.statsTable.put(Stats.COMMERCIAL_SEND_TIMES,
		            new StatsItemSet(Stats.COMMERCIAL_SEND_TIMES, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(Stats.COMMERCIAL_RCV_TIMES,
		            new StatsItemSet(Stats.COMMERCIAL_RCV_TIMES, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(Stats.COMMERCIAL_SEND_SIZE,
		            new StatsItemSet(Stats.COMMERCIAL_SEND_SIZE, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(Stats.COMMERCIAL_RCV_SIZE,
		            new StatsItemSet(Stats.COMMERCIAL_RCV_SIZE, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(Stats.COMMERCIAL_RCV_EPOLLS,
		            new StatsItemSet(Stats.COMMERCIAL_RCV_EPOLLS, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(Stats.COMMERCIAL_SNDBCK_TIMES,
		            new StatsItemSet(Stats.COMMERCIAL_SNDBCK_TIMES, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(Stats.COMMERCIAL_PERM_FAILURES,
		            new StatsItemSet(Stats.COMMERCIAL_PERM_FAILURES, this.commercialExecutor, COMMERCIAL_LOG));
		
		        this.statsTable.put(CONSUMER_REGISTER_TIME,
		            new StatsItemSet(CONSUMER_REGISTER_TIME, this.scheduledExecutorService, log));
		        this.statsTable.put(PRODUCER_REGISTER_TIME,
		            new StatsItemSet(PRODUCER_REGISTER_TIME, this.scheduledExecutorService, log));		
",
		newContent:"
		        momentStatsItemSetFallSize = new MomentStatsItemSet(BrokerStatsItemKeys.GROUP_GET_FALL_SIZE,
		            scheduledExecutorService, log);
		
		        momentStatsItemSetFallTime = new MomentStatsItemSet(BrokerStatsItemKeys.GROUP_GET_FALL_TIME,
		            scheduledExecutorService, log);
		
		        if (enableQueueStat) {
		            this.statsTable.put(BrokerStatsItemKeys.QUEUE_PUT_NUMS, new StatsItemSet(BrokerStatsItemKeys.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));
		            this.statsTable.put(BrokerStatsItemKeys.QUEUE_PUT_SIZE, new StatsItemSet(BrokerStatsItemKeys.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));
		            this.statsTable.put(BrokerStatsItemKeys.QUEUE_GET_NUMS, new StatsItemSet(BrokerStatsItemKeys.QUEUE_GET_NUMS, this.scheduledExecutorService, log));
		            this.statsTable.put(BrokerStatsItemKeys.QUEUE_GET_SIZE, new StatsItemSet(BrokerStatsItemKeys.QUEUE_GET_SIZE, this.scheduledExecutorService, log));
		        }
		        this.statsTable.put(BrokerStatsItemKeys.TOPIC_PUT_NUMS, new StatsItemSet(BrokerStatsItemKeys.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.TOPIC_PUT_SIZE, new StatsItemSet(BrokerStatsItemKeys.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.GROUP_GET_NUMS, new StatsItemSet(BrokerStatsItemKeys.GROUP_GET_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.GROUP_GET_SIZE, new StatsItemSet(BrokerStatsItemKeys.GROUP_GET_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.GROUP_ACK_NUMS, new StatsItemSet(BrokerStatsItemKeys.GROUP_ACK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.GROUP_CK_NUMS, new StatsItemSet(BrokerStatsItemKeys.GROUP_CK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.GROUP_GET_LATENCY, new StatsItemSet(BrokerStatsItemKeys.GROUP_GET_LATENCY, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.TOPIC_PUT_LATENCY, new StatsItemSet(BrokerStatsItemKeys.TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.SNDBCK_PUT_NUMS, new StatsItemSet(BrokerStatsItemKeys.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.DLQ_PUT_NUMS, new StatsItemSet(BrokerStatsItemKeys.DLQ_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.BROKER_PUT_NUMS, new StatsItemSet(BrokerStatsItemKeys.BROKER_PUT_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.BROKER_GET_NUMS, new StatsItemSet(BrokerStatsItemKeys.BROKER_GET_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.BROKER_ACK_NUMS, new StatsItemSet(BrokerStatsItemKeys.BROKER_ACK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.BROKER_CK_NUMS, new StatsItemSet(BrokerStatsItemKeys.BROKER_CK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC,
		            new StatsItemSet(BrokerStatsItemKeys.BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,
		            new StatsItemSet(BrokerStatsItemKeys.BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.GROUP_GET_FROM_DISK_NUMS,
		            new StatsItemSet(BrokerStatsItemKeys.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.GROUP_GET_FROM_DISK_SIZE,
		            new StatsItemSet(BrokerStatsItemKeys.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.BROKER_GET_FROM_DISK_NUMS,
		            new StatsItemSet(BrokerStatsItemKeys.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.BROKER_GET_FROM_DISK_SIZE,
		            new StatsItemSet(BrokerStatsItemKeys.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));
		
		        this.statsTable.put(BrokerStatsItemKeys.SNDBCK2DLQ_TIMES,
		            new StatsItemSet(BrokerStatsItemKeys.SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));
		
		        this.statsTable.put(BrokerStatsItemKeys.COMMERCIAL_SEND_TIMES,
		            new StatsItemSet(BrokerStatsItemKeys.COMMERCIAL_SEND_TIMES, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(BrokerStatsItemKeys.COMMERCIAL_RCV_TIMES,
		            new StatsItemSet(BrokerStatsItemKeys.COMMERCIAL_RCV_TIMES, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(BrokerStatsItemKeys.COMMERCIAL_SEND_SIZE,
		            new StatsItemSet(BrokerStatsItemKeys.COMMERCIAL_SEND_SIZE, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(BrokerStatsItemKeys.COMMERCIAL_RCV_SIZE,
		            new StatsItemSet(BrokerStatsItemKeys.COMMERCIAL_RCV_SIZE, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(BrokerStatsItemKeys.COMMERCIAL_RCV_EPOLLS,
		            new StatsItemSet(BrokerStatsItemKeys.COMMERCIAL_RCV_EPOLLS, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(BrokerStatsItemKeys.COMMERCIAL_SNDBCK_TIMES,
		            new StatsItemSet(BrokerStatsItemKeys.COMMERCIAL_SNDBCK_TIMES, this.commercialExecutor, COMMERCIAL_LOG));
		        this.statsTable.put(BrokerStatsItemKeys.COMMERCIAL_PERM_FAILURES,
		            new StatsItemSet(BrokerStatsItemKeys.COMMERCIAL_PERM_FAILURES, this.commercialExecutor, COMMERCIAL_LOG));
		
		        this.statsTable.put(BrokerStatsItemKeys.CONSUMER_REGISTER_TIME,
		            new StatsItemSet(BrokerStatsItemKeys.CONSUMER_REGISTER_TIME, this.scheduledExecutorService, log));
		        this.statsTable.put(BrokerStatsItemKeys.PRODUCER_REGISTER_TIME,
		            new StatsItemSet(BrokerStatsItemKeys.PRODUCER_REGISTER_TIME, this.scheduledExecutorService, log));		
",
,

	],

}
extractedClasses:
{
	BrokerStatsItemKeys.java:"
	public class BrokerStatsItemKeys {
	    public static final String QUEUE_PUT_NUMS = "QUEUE_PUT_NUMS";
	    public static final String QUEUE_PUT_SIZE = "QUEUE_PUT_SIZE";
	    public static final String QUEUE_GET_NUMS = "QUEUE_GET_NUMS";
	    public static final String QUEUE_GET_SIZE = "QUEUE_GET_SIZE";
	    public static final String TOPIC_PUT_NUMS = "TOPIC_PUT_NUMS";
	    public static final String TOPIC_PUT_SIZE = "TOPIC_PUT_SIZE";
	    public static final String GROUP_GET_NUMS = "GROUP_GET_NUMS";
	    public static final String GROUP_GET_SIZE = "GROUP_GET_SIZE";
	    public static final String SNDBCK_PUT_NUMS = "SNDBCK_PUT_NUMS";
	    public static final String BROKER_PUT_NUMS = "BROKER_PUT_NUMS";
	    public static final String BROKER_GET_NUMS = "BROKER_GET_NUMS";
	    public static final String GROUP_GET_FROM_DISK_NUMS = "GROUP_GET_FROM_DISK_NUMS";
	    public static final String GROUP_GET_FROM_DISK_SIZE = "GROUP_GET_FROM_DISK_SIZE";
	    public static final String BROKER_GET_FROM_DISK_NUMS = "BROKER_GET_FROM_DISK_NUMS";
	    public static final String BROKER_GET_FROM_DISK_SIZE = "BROKER_GET_FROM_DISK_SIZE";
	    public static final String COMMERCIAL_SEND_TIMES = "COMMERCIAL_SEND_TIMES";
	    public static final String COMMERCIAL_SNDBCK_TIMES = "COMMERCIAL_SNDBCK_TIMES";
	    public static final String COMMERCIAL_RCV_TIMES = "COMMERCIAL_RCV_TIMES";
	    public static final String COMMERCIAL_RCV_EPOLLS = "COMMERCIAL_RCV_EPOLLS";
	    public static final String COMMERCIAL_SEND_SIZE = "COMMERCIAL_SEND_SIZE";
	    public static final String COMMERCIAL_RCV_SIZE = "COMMERCIAL_RCV_SIZE";
	    public static final String COMMERCIAL_PERM_FAILURES = "COMMERCIAL_PERM_FAILURES";
	    public static final String GROUP_GET_FALL_SIZE = "GROUP_GET_FALL_SIZE";
	    public static final String GROUP_GET_FALL_TIME = "GROUP_GET_FALL_TIME";
	    public static final String GROUP_GET_LATENCY = "GROUP_GET_LATENCY";
	    public static final String TOPIC_PUT_LATENCY = "TOPIC_PUT_LATENCY";
	    public static final String GROUP_ACK_NUMS = "GROUP_ACK_NUMS";
	    public static final String GROUP_CK_NUMS = "GROUP_CK_NUMS";
	    public static final String DLQ_PUT_NUMS = "DLQ_PUT_NUMS";
	    public static final String BROKER_ACK_NUMS = "BROKER_ACK_NUMS";
	    public static final String BROKER_CK_NUMS = "BROKER_CK_NUMS";
	    public static final String BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC = "BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC";
	    public static final String BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC = "BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC";
	    public static final String SNDBCK2DLQ_TIMES = "SNDBCK2DLQ_TIMES";
	    public static final String CONSUMER_REGISTER_TIME = "CONSUMER_REGISTER_TIME";
	    public static final String PRODUCER_REGISTER_TIME = "PRODUCER_REGISTER_TIME";
	}	
",

}
