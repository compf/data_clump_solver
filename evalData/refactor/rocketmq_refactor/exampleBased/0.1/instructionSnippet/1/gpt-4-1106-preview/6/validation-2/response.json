{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 147,
                "toLine": 149,
                "oldContent": "        this.statsTable.put(SNDBCK2DLQ_TIMES,\n            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));\n",
                "newContent": "        this.statsTable.put(StatsKey.SNDBCK2DLQ_TIMES,\n            new StatsItemSet(StatsKey.SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));\n"
            },
            {
                "fromLine": 259,
                "toLine": 261,
                "oldContent": "\n        this.momentStatsItemSetFallTime.delValueByInfixKey(topic, \"@\");\n    }",
                "newContent": "\n        this.momentStatsItemSetFallTime.delValueByInfixKey(topic, \"@\");\n    }\n"
            },
            {
                "fromLine": 263,
                "toLine": 268,
                "oldContent": "\n        this.momentStatsItemSetFallTime.delValueBySuffixKey(group, \"@\");\n    }\n\n    public void incQueuePutNums(final String topic, final Integer queueId) {\n",
                "newContent": "\n        this.momentStatsItemSetFallTime.delValueBySuffixKey(group, \"@\");\n    }\n\n    public void incQueuePutNums(final String topic, final Integer queueId) {\n        this.statsTable.get(StatsKey.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), 1, 1);\n    }\n"
            },
            {
                "fromLine": 270,
                "toLine": 272,
                "oldContent": "\n    public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {\n",
                "newContent": "\n    public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {\n        this.statsTable.get(StatsKey.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), num, times);\n    }\n"
            },
            {
                "fromLine": 274,
                "toLine": 276,
                "oldContent": "\n    public void incQueuePutSize(final String topic, final Integer queueId, final int size) {\n",
                "newContent": "\n    public void incQueuePutSize(final String topic, final Integer queueId, final int size) {\n        this.statsTable.get(StatsKey.QUEUE_PUT_SIZE).addValue(buildStatsKey(topic, queueId), size, 1);\n    }\n"
            },
            {
                "fromLine": 278,
                "toLine": 280,
                "oldContent": "\n    public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {",
                "newContent": "\n    public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = buildStatsKey(topic, queueId, group);\n            this.statsTable.get(StatsKey.QUEUE_GET_NUMS).addValue(statsKey, incValue, 1);\n        }\n    }\n"
            },
            {
                "fromLine": 283,
                "toLine": 285,
                "oldContent": "\n    public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {",
                "newContent": "\n    public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = buildStatsKey(topic, queueId, group);\n            this.statsTable.get(StatsKey.QUEUE_GET_SIZE).addValue(statsKey, incValue, 1);\n        }\n    }\n"
            },
            {
                "fromLine": 288,
                "toLine": 312,
                "oldContent": "\n    public void incConsumerRegisterTime(final int incValue) {\n        this.statsTable.get(CONSUMER_REGISTER_TIME).addValue(this.clusterName, incValue, 1);\n    }\n\n    public void incProducerRegisterTime(final int incValue) {\n        this.statsTable.get(PRODUCER_REGISTER_TIME).addValue(this.clusterName, incValue, 1);\n    }\n\n    public void incChannelConnectNum() {\n        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_CONNECT, 1, 1);\n    }\n\n    public void incChannelCloseNum() {\n        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_CLOSE, 1, 1);\n    }\n\n    public void incChannelExceptionNum() {\n        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_EXCEPTION, 1, 1);\n    }\n\n    public void incChannelIdleNum() {\n        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_IDLE, 1, 1);\n    }\n",
                "newContent": "\n    public void incConsumerRegisterTime(final int incValue) {\n        this.statsTable.get(StatsKey.CONSUMER_REGISTER_TIME).addValue(this.clusterName, incValue, 1);\n    }\n\n    public void incProducerRegisterTime(final int incValue) {\n        this.statsTable.get(StatsKey.PRODUCER_REGISTER_TIME).addValue(this.clusterName, incValue, 1);\n    }\n\n    public void incChannelConnectNum() {\n        this.statsTable.get(StatsKey.CHANNEL_ACTIVITY).addValue(StatsKey.CHANNEL_ACTIVITY_CONNECT, 1, 1);\n    }\n\n    public void incChannelCloseNum() {\n        this.statsTable.get(StatsKey.CHANNEL_ACTIVITY).addValue(StatsKey.CHANNEL_ACTIVITY_CLOSE, 1, 1);\n    }\n\n    public void incChannelExceptionNum() {\n        this.statsTable.get(StatsKey.CHANNEL_ACTIVITY).addValue(StatsKey.CHANNEL_ACTIVITY_EXCEPTION, 1, 1);\n    }\n\n    public void incChannelIdleNum() {\n        this.statsTable.get(StatsKey.CHANNEL_ACTIVITY).addValue(StatsKey.CHANNEL_ACTIVITY_IDLE, 1, 1);\n    }\n"
            },
            {
                "fromLine": 318,
                "toLine": 384,
                "oldContent": "\n    public void incGroupGetNums(final String group, final String topic, final int incValue) {\n\n\n    public void incGroupCkNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(GROUP_CK_NUMS).addValue(statsKey, incValue, 1);\n    }\n\n    public void incGroupAckNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(GROUP_ACK_NUMS).addValue(statsKey, incValue, 1);\n    }\n\n    public String buildStatsKey(String topic, String group) {\n        StringBuilder strBuilder;\n        if (topic != null && group != null) {\n            strBuilder = new StringBuilder(topic.length() + group.length() + 1);\n        } else {\n            strBuilder = new StringBuilder();\n        }\n        strBuilder.append(topic).append(\"@\").append(group);\n        return strBuilder.toString();\n    }\n\n    public String buildStatsKey(String topic, int queueId) {\n        StringBuilder strBuilder;\n        if (topic != null) {\n            strBuilder = new StringBuilder(topic.length() + 5);\n        } else {\n            strBuilder = new StringBuilder();\n        }\n        strBuilder.append(topic).append(\"@\").append(queueId);\n        return strBuilder.toString();\n    }\n\n    public String buildStatsKey(String topic, int queueId, String group) {\n        StringBuilder strBuilder;\n        if (topic != null && group != null) {\n            strBuilder = new StringBuilder(topic.length() + group.length() + 6);\n        } else {\n            strBuilder = a new StringBuilder();\n        }\n        strBuilder.append(topic).append(\"@\").append(queueId).append(\"@\").append(group);\n        return strBuilder.toString();\n    }\n\n    public String buildStatsKey(int queueId, String topic, String group) {\n        StringBuilder strBuilder;\n        if (topic != null and group != null) {\n            strBuilder = new StringBuilder(topic.length() + group.length() + 6);\n        } else {\n            strBuilder = new StringBuilder();\n        }\n        strBuilder.append(queueId).append(\"@\").append(topic).append(\"@\").append(group);\n        return strBuilder.toString();\n    }\n\n    public void incGroupGetSize(final String group, final String topic, final int incValue) {\n\n\n    public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String statsKey;\n        if (enableQueueStat) {\n            statsKey = buildStatsKey(queueId, topic, group);\n        } else {\n            statsKey = buildStatsKey(topic, group);",
                "newContent": "\n    public void incGroupGetNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(StatsKey.GROUP_GET_NUMS).addValue(statsKey, incValue, 1);\n    }\n\n    public void incGroupCkNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(StatsKey.GROUP_CK_NUMS).addValue(statsKey, incValue, 1);\n    }\n\n    public void incGroupAckNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(StatsKey.GROUP_ACK_NUMS).addValue(statsKey, incValue, 1);\n    }\n\n    public String buildStatsKey(String topic, String group) {\n        StringBuilder strBuilder;\n        if (topic != null && group != null) {\n            strBuilder = new StringBuilder(topic.length() + group.length() + 1);\n        } else {\n            strBuilder = new StringBuilder();\n        }\n        strBuilder.append(topic).append(\"@\").append(group);\n        return strBuilder.toString();\n    }\n\n    public String buildStatsKey(String topic, int queueId) {\n        StringBuilder strBuilder;\n        if (topic != null) {\n            strBuilder = new StringBuilder(topic.length() + 5);\n        } else {\n            strBuilder = new StringBuilder();\n        }\n        strBuilder.append(topic).append(\"@\").append(queueId);\n        return strBuilder.toString();\n    }\n\n    public String buildStatsKey(String topic, int queueId, String group) {\n        StringBuilder strBuilder;\n        if (topic != null && group != null) {\n            strBuilder = new StringBuilder(topic.length() + group.length() + 6);\n        } else {\n            strBuilder = new StringBuilder();\n        }\n        strBuilder.append(topic).append(\"@\").append(queueId).append(\"@\").append(group);\n        return strBuilder.toString();\n    }\n\n    public String buildStatsKey(int queueId, String topic, String group) {\n        StringBuilder strBuilder;\n        if (topic != null && group != null) {\n            strBuilder = new StringBuilder(topic.length() + group.length() + 6);\n        } else {\n            strBuilder = new StringBuilder();\n        }\n        strBuilder.append(queueId).append(\"@\").append(topic).append(\"@\").append(group);\n        return strBuilder.toString();\n    }\n\n    public void incGroupGetSize(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(StatsKey.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);\n    }\n\n    public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String statsKey;\n        if (enableQueueStat) {\n            statsKey = buildStatsKey(queueId, topic, group);\n        } else {\n            statsKey = buildStatsKey(topic, group);\n        }\n        this.statsTable.get(StatsKey.GROUP_GET_LATENCY).addRTValue(statsKey, incValue, 1);\n    }\n\n    public void incTopicPutLatency(final String topic, final int queueId, final int incValue) {\n        StringBuilder statsKey;\n        if (topic != null) {\n            statsKey = new StringBuilder(topic.length() + 6);\n        } else {\n            statsKey = new StringBuilder();\n        }\n        statsKey.append(topic).append(\"@\").append(queueId);\n        this.statsTable.get(StatsKey.TOPIC_PUT_LATENCY).addRTValue(statsKey.toString(), incValue, 1);\n    }\n"
            }
        ]
    }
}