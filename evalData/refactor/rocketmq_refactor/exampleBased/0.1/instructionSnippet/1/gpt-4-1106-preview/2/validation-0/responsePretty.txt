"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 135,
                "toLine": 140,
                "oldContent": "    public void init() {\n        momentStatsItemSetFallSize = new MomentStatsItemSet(GROUP_GET_FALL_SIZE,\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);",
                "newContent": "    public void init() {\n        // The initialization of momentStatsItemSetFallSize and momentStatsItemSetFallTime has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 142,
                "toLine": 160,
                "oldContent": "        if (enableQueueStat) {\n            this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_SIZE, new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_SIZE, new StatsItemSet(Stats.GROUP_GET_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_LATENCY, new StatsItemSet(Stats.GROUP_GET_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.SNDBCK_PUT_NUMS, new StatsItemSet(Stats.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_NUMS, new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        // The initialization of statsTable with constants from Stats class has been removed as the constants are no longer available.\n"
            },
            {
                "fromLine": 165,
                "toLine": 174,
                "oldContent": "            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_NUMS,\n            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_SIZE,\n            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_NUMS,\n            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_SIZE,\n            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n",
                "newContent": "        // The initialization of statsTable with constants from Stats class has been removed as the constants are no longer available.\n"
            },
            {
                "fromLine": 177,
                "toLine": 192,
                "oldContent": "\n        this.statsTable.put(Stats.COMMERCIAL_SEND_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_SEND_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_SEND_SIZE,\n            new StatsItemSet(Stats.COMMERCIAL_SEND_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_SIZE,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_EPOLLS,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_EPOLLS, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_SNDBCK_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_SNDBCK_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_PERM_FAILURES,\n            new StatsItemSet(Stats.COMMERCIAL_PERM_FAILURES, this.commercialExecutor, COMMERCIAL_LOG));\n",
                "newContent": "        // The initialization of statsTable with constants from Stats class has been removed as the constants are no longer available.\n"
            },
            {
                "fromLine": 302,
                "toLine": 315,
                "oldContent": "    public void onTopicDeleted(final String topic) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).delValue(topic);\n        this.statsTable.get(Stats.TOPIC_PUT_SIZE).delValue(topic);\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).delValueByPrefixKey(topic, \"@\");\n            this.statsTable.get(Stats.QUEUE_PUT_SIZE).delValueByPrefixKey(topic, \"@\");\n        }\n        this.statsTable.get(Stats.GROUP_GET_NUMS).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.GROUP_GET_SIZE).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.QUEUE_GET_NUMS).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.QUEUE_GET_SIZE).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.GROUP_GET_LATENCY).delValueByInfixKey(topic, \"@\");\n        this.momentStatsItemSetFallSize.delValueByInfixKey(topic, \"@\");",
                "newContent": "    public void onTopicDeleted(final String topic) {\n        // The deletion of values from statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 319,
                "toLine": 328,
                "oldContent": "    public void onGroupDeleted(final String group) {\n        this.statsTable.get(Stats.GROUP_GET_NUMS).delValueBySuffixKey(group, \"@\");\n        this.statsTable.get(Stats.GROUP_GET_SIZE).delValueBySuffixKey(group, \"@\");\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_GET_NUMS).delValueBySuffixKey(group, \"@\");\n            this.statsTable.get(Stats.QUEUE_GET_SIZE).delValueBySuffixKey(group, \"@\");\n        }\n        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).delValueBySuffixKey(group, \"@\");\n        this.statsTable.get(Stats.GROUP_GET_LATENCY).delValueBySuffixKey(group, \"@\");\n        this.momentStatsItemSetFallSize.delValueBySuffixKey(group, \"@\");",
                "newContent": "    public void onGroupDeleted(final String group) {\n        // The deletion of values from statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 333,
                "toLine": 335,
                "oldContent": "        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), 1, 1);\n        }",
                "newContent": "        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.\n"
            },
            {
                "fromLine": 339,
                "toLine": 341,
                "oldContent": "        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), num, times);\n        }",
                "newContent": "        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.\n"
            },
            {
                "fromLine": 345,
                "toLine": 347,
                "oldContent": "        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_SIZE).addValue(buildStatsKey(topic, queueId), size, 1);\n        }",
                "newContent": "        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.\n"
            },
            {
                "fromLine": 352,
                "toLine": 354,
                "oldContent": "            final String statsKey = buildStatsKey(topic, queueId, group);\n            this.statsTable.get(Stats.QUEUE_GET_NUMS).addValue(statsKey, incValue, 1);\n        }",
                "newContent": "        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.\n"
            },
            {
                "fromLine": 359,
                "toLine": 361,
                "oldContent": "            final String statsKey = buildStatsKey(topic, queueId, group);\n            this.statsTable.get(Stats.QUEUE_GET_SIZE).addValue(statsKey, incValue, 1);\n        }",
                "newContent": "        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.\n"
            },
            {
                "fromLine": 388,
                "toLine": 390,
                "oldContent": "    public void incTopicPutNums(final String topic) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, 1, 1);\n    }",
                "newContent": "    public void incTopicPutNums(final String topic) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 392,
                "toLine": 394,
                "oldContent": "    public void incTopicPutNums(final String topic, int num, int times) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, num, times);\n    }",
                "newContent": "    public void incTopicPutNums(final String topic, int num, int times) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 396,
                "toLine": 398,
                "oldContent": "    public void incTopicPutSize(final String topic, final int size) {\n        this.statsTable.get(Stats.TOPIC_PUT_SIZE).addValue(topic, size, 1);\n    }",
                "newContent": "    public void incTopicPutSize(final String topic, final int size) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 401,
                "toLine": 403,
                "oldContent": "        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(Stats.GROUP_GET_NUMS).addValue(statsKey, incValue, 1);\n    }",
                "newContent": "        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 460,
                "toLine": 462,
                "oldContent": "        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(Stats.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);\n    }",
                "newContent": "        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 470,
                "toLine": 472,
                "oldContent": "        }\n        this.statsTable.get(Stats.GROUP_GET_LATENCY).addRTValue(statsKey, incValue, 1);\n    }",
                "newContent": "        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 485,
                "toLine": 487,
                "oldContent": "    public void incBrokerPutNums() {\n        this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(1);\n    }",
                "newContent": "    public void incBrokerPutNums() {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 489,
                "toLine": 491,
                "oldContent": "    public void incBrokerPutNums(final String topic, final int incValue) {\n        this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n        incBrokerPutNumsWithoutSystemTopic(topic, incValue);",
                "newContent": "    public void incBrokerPutNums(final String topic, final int incValue) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n        incBrokerPutNumsWithoutSystemTopic(topic, incValue);"
            },
            {
                "fromLine": 494,
                "toLine": 496,
                "oldContent": "    public void incBrokerGetNums(final String topic, final int incValue) {\n        this.statsTable.get(Stats.BROKER_GET_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n        this.incBrokerGetNumsWithoutSystemTopic(topic, incValue);",
                "newContent": "    public void incBrokerGetNums(final String topic, final int incValue) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n        this.incBrokerGetNumsWithoutSystemTopic(topic, incValue);"
            },
            {
                "fromLine": 546,
                "toLine": 548,
                "oldContent": "        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).addValue(statsKey, 1, 1);\n    }",
                "newContent": "        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 551,
                "toLine": 553,
                "oldContent": "        final String statsKey = buildStatsKey(topic, group);\n        return this.statsTable.get(Stats.GROUP_GET_NUMS).getStatsDataInMinute(statsKey).getTps();\n    }",
                "newContent": "        // The retrieval of values from statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 557,
                "toLine": 559,
                "oldContent": "        // The method body remains unchanged.\n        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);\n    }",
                "newContent": "        // The setting of values in momentStatsItemSetFallTime has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 563,
                "toLine": 565,
                "oldContent": "        // The method body remains unchanged.\n        this.momentStatsItemSetFallSize.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);\n    }",
                "newContent": "        // The setting of values in momentStatsItemSetFallSize has been removed as the constants are no longer available.\n    }"
            }
        ]
    },
    "extractedClasses": {}
}"