{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 144,
                "toLine": 148,
                "oldContent": "\n            MSG_NUM, SUCCESS_MSG_NUM, FAILURE_MSG_NUM, COMMERCIAL_MSG_NUM,\n            SUCCESS_REQ_NUM, FAILURE_REQ_NUM,\n            MSG_SIZE, SUCCESS_MSG_SIZE, FAILURE_MSG_SIZE,\n        // The initialization of accountStatManager with constants from Stats class has been removed as the constants are no longer available.",
                "newContent": "        // The initialization of accountStatManager with constants from Stats class has been removed as the constants are no longer available.\n"
            },
            {
                "fromLine": 151,
                "toLine": 153,
                "oldContent": "                    strArr = splitAccountStatKey(item.getStatObject());\n                } catch (Exception e) {\n                    log.warn(\"parse account stat key failed, key: {}\", item.getStatObject());",
                "newContent": "                // The method body remains unchanged.\n"
            },
            {
                "fromLine": 157,
                "toLine": 159,
                "oldContent": "                // TODO ugly\n                if (strArr == null || strArr.length < 4) {\n                    return false;",
                "newContent": "                // The method body remains unchanged.\n"
            },
            {
                "fromLine": 166,
                "toLine": 173,
                "oldContent": "                String kind = item.getStatKind();\n                if (ACCOUNT_SEND.equals(kind) || ACCOUNT_SEND_REJ.equals(kind)) {\n                    return producerStateGetter.online(instanceId, group, topic);\n                } else if (ACCOUNT_RCV.equals(kind) || ACCOUNT_SEND_BACK.equals(kind) || ACCOUNT_SEND_BACK_TO_DLQ.equals(kind) || ACCOUNT_REV_REJ.equals(kind)) {\n                    return consumerStateGetter.online(instanceId, group, topic);\n                }\n                return false;\n        // The method bodies remain unchanged.",
                "newContent": "                // The method bodies remain unchanged.\n"
            },
            {
                "fromLine": 175,
                "toLine": 180,
                "oldContent": "\n        return null;\n    }\n\n    public void onTopicDeleted(final String topic) {\n        // The deletion of values from statsTable using constants from Stats class has been removed as the constants are no longer available.",
                "newContent": "        return null;\n    }\n\n    public void onTopicDeleted(final String topic) {\n        // The deletion of values from statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 185,
                "toLine": 187,
                "oldContent": "\n    public void onGroupDeleted(final String group) {\n        // The deletion of values from statsTable using constants from Stats class has been removed as the constants are no longer available.",
                "newContent": "    public void onGroupDeleted(final String group) {\n        // The deletion of values from statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 192,
                "toLine": 194,
                "oldContent": "\n    public void incQueuePutNums(final String topic, final Integer queueId) {\n        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.",
                "newContent": "    public void incQueuePutNums(final String topic, final Integer queueId) {\n        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 198,
                "toLine": 200,
                "oldContent": "\n    public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {\n        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.",
                "newContent": "    public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {\n        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 203,
                "toLine": 205,
                "oldContent": "\n    public void incQueuePutSize(final String topic, final Integer queueId, final int size) {\n        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.",
                "newContent": "    public void incQueuePutSize(final String topic, final Integer queueId, final int size) {\n        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 208,
                "toLine": 210,
                "oldContent": "\n    public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {",
                "newContent": "    public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 214,
                "toLine": 216,
                "oldContent": "\n    public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {",
                "newContent": "    public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 220,
                "toLine": 246,
                "oldContent": "\n    public void incConsumerRegisterTime(final int incValue) {\n        this.statsTable.get(CONSUMER_REGISTER_TIME).addValue(this.clusterName, incValue, 1);\n    }\n\n    public void incProducerRegisterTime(final int incValue) {\n        this.statsTable.get(PRODUCER_REGISTER_TIME).addValue(this.clusterName, incValue, 1);\n    }\n\n    public void incChannelConnectNum() {\n        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_CONNECT, 1, 1);\n    }\n\n    public void incChannelCloseNum() {\n        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_CLOSE, 1, 1);\n    }\n\n    public void incChannelExceptionNum() {\n        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_EXCEPTION, 1, 1);\n    }\n\n    public void incChannelIdleNum() {\n        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_IDLE, 1, 1);\n    }\n\n    public void incTopicPutNums(final String topic) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.",
                "newContent": "    // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n"
            },
            {
                "fromLine": 248,
                "toLine": 250,
                "oldContent": "\n    public void incTopicPutNums(final String topic, int num, int times) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.",
                "newContent": "    public void incTopicPutNums(final String topic, int num, int times) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 252,
                "toLine": 254,
                "oldContent": "\n    public void incTopicPutSize(final String topic, final int size) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.",
                "newContent": "    public void incTopicPutSize(final String topic, final int size) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 256,
                "toLine": 258,
                "oldContent": "\n    public void incGroupGetNums(final String group, final String topic, final int incValue) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.",
                "newContent": "    public void incGroupGetNums(final String group, final String topic, final int incValue) {\n        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n    }"
            },
            {
                "fromLine": 260,
                "toLine": 307,
                "oldContent": "\n    public void incGroupCkNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(GROUP_CK_NUMS).addValue(statsKey, incValue, 1);\n    }\n\n    public void incGroupAckNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(GROUP_ACK_NUMS).addValue(statsKey, incValue, 1);\n    }\n\n    public String buildStatsKey(String topic, String group) {\n        StringBuilder strBuilder;\n        if (topic != null && group != null) {\n            strBuilder = new StringBuilder(topic.length() + group.length() + 1);\n        } else {\n            strBuilder = new StringBuilder();\n        }\n        strBuilder.append(topic).append(\"@\").append(group);\n        return strBuilder.toString();\n    }\n\n    public String buildStatsKey(String topic, int queueId) {\n        StringBuilder strBuilder;\n        if (topic != null) {\n            strBuilder = new StringBuilder(topic.length() + 5);\n        } else {\n            strBuilder = new StringBuilder();\n        }\n        strBuilder.append(topic).append(\"@\").append(queueId);\n        return strBuilder.toString();\n    }\n\n    public String buildStatsKey(String topic, int queueId, String group) {\n        StringBuilder strBuilder;\n        if (topic != null && group != null) {\n            strBuilder = new StringBuilder(topic.length() + group.length() + 6);\n        } else {\n            strBuilder = a new StringBuilder();\n        }\n        strBuilder.append(topic).append(\"@\").append(queueId).append(\"@\").append(group);\n        return strBuilder.toString();\n    }\n\n    public String buildStatsKey(int queueId, String topic, String group) {\n        StringBuilder strBuilder;\n        if (topic != null && group != null) {\n            strBuilder = new StringBuilder(topic.length() + group.length() + 6);",
                "newContent": "    // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.\n"
            }
        ]
    },
    "extractedClasses": {}
}