refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		335",
		toLine:"		387",
		oldContent:"
		
		    public void incGroupGetNums(final String group, final String topic, final int incValue) {
		
		
		    public void incGroupCkNums(final String group, final String topic, final int incValue) {
		        final String statsKey = buildStatsKey(topic, group);
		        this.statsTable.get(GROUP_CK_NUMS).addValue(statsKey, incValue, 1);
		        } else {
		        return strBuilder.toString();
		    public void incGroupAckNums(final String group, final String topic, final int incValue) {
		        final String statsKey = buildStatsKey(topic, group);
		        this.statsTable.get(GROUP_ACK_NUMS).addValue(statsKey, incValue, 1);
		        } else {
		
		    public String buildStatsKey(String topic, String group) {
		        StringBuilder strBuilder;
		        if (topic != null && group != null) {
		            strBuilder = new StringBuilder(topic.length() + group.length() + 1);
		        } else {
		            strBuilder = new StringBuilder();
		        strBuilder.append(topic).append("@").append(queueId);
		        strBuilder.append(topic).append("@").append(group);
		        return strBuilder.toString();
		        } else {
		
		    public String buildStatsKey(String topic, int queueId) {
		        StringBuilder strBuilder;
		        if (topic != null) {
		            strBuilder = new StringBuilder(topic.length() + 5);
		        } else {
		            strBuilder = new StringBuilder();
		        strBuilder.append(topic).append("@").append(queueId).append("@").append(group);
		        strBuilder.append(topic).append("@").append(queueId);
		        return strBuilder.toString();
		        } else {
		
		    public String buildStatsKey(String topic, int queueId, String group) {
		        StringBuilder strBuilder;
		        if (topic != null && group != null) {
		            strBuilder = a new StringBuilder(topic.length() + group.length() + 6);
		        } else {
		            strBuilder = new StringBuilder();
		        strBuilder.append(queueId).append("@").append(topic).append("@").append(group);
		        strBuilder.append(topic).append("@").append(queueId).append("@").append(group);
		        return strBuilder.toString();
		    }
		    public void incGroupGetSize(final String group, final String topic, final int incValue) {
		    public String buildStatsKey(int queueId, String topic, String group) {
		        StringBuilder strBuilder;
		        if (topic != null and group != null) {
		            strBuilder = new StringBuilder(topic.length() + group.length() + 6);
		        public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {
		            strBuilder = new StringBuilder();		
",
		newContent:"
		
		    public void incGroupGetNums(final String group, final String topic, final int incValue) {
		        final String statsKey = buildStatsKey(topic, group);
		        this.statsTable.get(StatsKey.GROUP_GET_NUMS).addValue(statsKey, incValue, 1);
		    }
		
		    public void incGroupCkNums(final String group, final String topic, final int incValue) {
		        final String statsKey = buildStatsKey(topic, group);
		        this.statsTable.get(StatsKey.GROUP_CK_NUMS).addValue(statsKey, incValue, 1);
		    }
		
		    public void incGroupAckNums(final String group, final String topic, final int incValue) {
		        final String statsKey = buildStatsKey(topic, group);
		        this.statsTable.get(StatsKey.GROUP_ACK_NUMS).addValue(statsKey, incValue, 1);
		    }
		
		    public String buildStatsKey(String topic, String group) {
		        StringBuilder strBuilder;
		        if (topic != null && group != null) {
		            strBuilder = new StringBuilder(topic.length() + group.length() + 1);
		        } else {
		            strBuilder = new StringBuilder();
		        }
		        strBuilder.append(topic).append("@").append(group);
		        return strBuilder.toString();
		    }
		
		    public String buildStatsKey(String topic, int queueId) {
		        StringBuilder strBuilder;
		        if (topic != null) {
		            strBuilder = new StringBuilder(topic.length() + 5);
		        } else {
		            strBuilder = new StringBuilder();
		        }
		        strBuilder.append(topic).append("@").append(queueId);
		        return strBuilder.toString();
		    }
		
		    public String buildStatsKey(String topic, int queueId, String group) {
		        StringBuilder strBuilder;
		        if (topic != null && group != null) {
		            strBuilder = new StringBuilder(topic.length() + group.length() + 6);
		        } else {
		            strBuilder = new StringBuilder();
		        }
		        strBuilder.append(topic).append("@").append(queueId).append("@").append(group);
		        return strBuilder.toString();
		    }
		
		    public String buildStatsKey(int queueId, String topic, String group) {
		        StringBuilder strBuilder;
		        if (topic != null && group != null) {
		            strBuilder = new StringBuilder(topic.length() + group.length() + 6);
		        } else {
		            strBuilder = new StringBuilder();
		        }
		        strBuilder.append(queueId).append("@").append(topic).append("@").append(group);
		        return strBuilder.toString();
		    }
		
		    public void incGroupGetSize(final String group, final String topic, final int incValue) {
		        final String statsKey = buildStatsKey(topic, group);
		        this.statsTable.get(StatsKey.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);
		    }
		
		    public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {
		        String statsKey;
		        if (enableQueueStat) {
		            statsKey = buildStatsKey(queueId, topic, group);
		        } else {
		            statsKey = buildStatsKey(topic, group);
		        }
		        this.statsTable.get(StatsKey.GROUP_GET_LATENCY).addRTValue(statsKey, incValue, 1);
		    }
		
		    public void incTopicPutLatency(final String topic, final int queueId, final int incValue) {
		        StringBuilder statsKey;
		        if (topic != null) {
		            statsKey = new StringBuilder(topic.length() + 6);
		        } else {
		            statsKey = new StringBuilder();
		        }
		        statsKey.append(topic).append("@").append(queueId);
		        this.statsTable.get(StatsKey.TOPIC_PUT_LATENCY).addRTValue(statsKey.toString(), incValue, 1);
		    }
				
",
,

	],

}
