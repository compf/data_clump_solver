refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		144",
		toLine:"		148",
		oldContent:"
		
		            MSG_NUM, SUCCESS_MSG_NUM, FAILURE_MSG_NUM, COMMERCIAL_MSG_NUM,
		            SUCCESS_REQ_NUM, FAILURE_REQ_NUM,
		            MSG_SIZE, SUCCESS_MSG_SIZE, FAILURE_MSG_SIZE,
		        // The initialization of accountStatManager with constants from Stats class has been removed as the constants are no longer available.		
",
		newContent:"
		        // The initialization of accountStatManager with constants from Stats class has been removed as the constants are no longer available.
				
",
,
		fromLine:"		151",
		toLine:"		153",
		oldContent:"
		                    strArr = splitAccountStatKey(item.getStatObject());
		                } catch (Exception e) {
		                    log.warn("parse account stat key failed, key: {}", item.getStatObject());		
",
		newContent:"
		                // The method body remains unchanged.
				
",
,
		fromLine:"		157",
		toLine:"		159",
		oldContent:"
		                // TODO ugly
		                if (strArr == null || strArr.length < 4) {
		                    return false;		
",
		newContent:"
		                // The method body remains unchanged.
				
",
,
		fromLine:"		166",
		toLine:"		173",
		oldContent:"
		                String kind = item.getStatKind();
		                if (ACCOUNT_SEND.equals(kind) || ACCOUNT_SEND_REJ.equals(kind)) {
		                    return producerStateGetter.online(instanceId, group, topic);
		                } else if (ACCOUNT_RCV.equals(kind) || ACCOUNT_SEND_BACK.equals(kind) || ACCOUNT_SEND_BACK_TO_DLQ.equals(kind) || ACCOUNT_REV_REJ.equals(kind)) {
		                    return consumerStateGetter.online(instanceId, group, topic);
		                }
		                return false;
		        // The method bodies remain unchanged.		
",
		newContent:"
		                // The method bodies remain unchanged.
				
",
,
		fromLine:"		175",
		toLine:"		180",
		oldContent:"
		
		        return null;
		    }
		
		    public void onTopicDeleted(final String topic) {
		        // The deletion of values from statsTable using constants from Stats class has been removed as the constants are no longer available.		
",
		newContent:"
		        return null;
		    }
		
		    public void onTopicDeleted(final String topic) {
		        // The deletion of values from statsTable using constants from Stats class has been removed as the constants are no longer available.
		    }		
",
,
		fromLine:"		185",
		toLine:"		187",
		oldContent:"
		
		    public void onGroupDeleted(final String group) {
		        // The deletion of values from statsTable using constants from Stats class has been removed as the constants are no longer available.		
",
		newContent:"
		    public void onGroupDeleted(final String group) {
		        // The deletion of values from statsTable using constants from Stats class has been removed as the constants are no longer available.
		    }		
",
,
		fromLine:"		192",
		toLine:"		194",
		oldContent:"
		
		    public void incQueuePutNums(final String topic, final Integer queueId) {
		        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.		
",
		newContent:"
		    public void incQueuePutNums(final String topic, final Integer queueId) {
		        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.
		    }		
",
,
		fromLine:"		198",
		toLine:"		200",
		oldContent:"
		
		    public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {
		        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.		
",
		newContent:"
		    public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {
		        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.
		    }		
",
,
		fromLine:"		203",
		toLine:"		205",
		oldContent:"
		
		    public void incQueuePutSize(final String topic, final Integer queueId, final int size) {
		        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.		
",
		newContent:"
		    public void incQueuePutSize(final String topic, final Integer queueId, final int size) {
		        // The addition of values to statsTable using constants from Stats class has been removed as the constants are no longer available.
		    }		
",
,
		fromLine:"		208",
		toLine:"		210",
		oldContent:"
		
		    public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {
		        if (enableQueueStat) {		
",
		newContent:"
		    public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {
		        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.
		    }		
",
,
		fromLine:"		214",
		toLine:"		216",
		oldContent:"
		
		    public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {
		        if (enableQueueStat) {		
",
		newContent:"
		    public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {
		        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.
		    }		
",
,
		fromLine:"		220",
		toLine:"		246",
		oldContent:"
		
		    public void incConsumerRegisterTime(final int incValue) {
		        this.statsTable.get(CONSUMER_REGISTER_TIME).addValue(this.clusterName, incValue, 1);
		    }
		
		    public void incProducerRegisterTime(final int incValue) {
		        this.statsTable.get(PRODUCER_REGISTER_TIME).addValue(this.clusterName, incValue, 1);
		    }
		
		    public void incChannelConnectNum() {
		        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_CONNECT, 1, 1);
		    }
		
		    public void incChannelCloseNum() {
		        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_CLOSE, 1, 1);
		    }
		
		    public void incChannelExceptionNum() {
		        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_EXCEPTION, 1, 1);
		    }
		
		    public void incChannelIdleNum() {
		        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_IDLE, 1, 1);
		    }
		
		    public void incTopicPutNums(final String topic) {
		        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.		
",
		newContent:"
		    // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.
				
",
,
		fromLine:"		248",
		toLine:"		250",
		oldContent:"
		
		    public void incTopicPutNums(final String topic, int num, int times) {
		        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.		
",
		newContent:"
		    public void incTopicPutNums(final String topic, int num, int times) {
		        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.
		    }		
",
,
		fromLine:"		252",
		toLine:"		254",
		oldContent:"
		
		    public void incTopicPutSize(final String topic, final int size) {
		        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.		
",
		newContent:"
		    public void incTopicPutSize(final String topic, final int size) {
		        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.
		    }		
",
,
		fromLine:"		256",
		toLine:"		258",
		oldContent:"
		
		    public void incGroupGetNums(final String group, final String topic, final int incValue) {
		        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.		
",
		newContent:"
		    public void incGroupGetNums(final String group, final String topic, final int incValue) {
		        // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.
		    }		
",
,
		fromLine:"		260",
		toLine:"		307",
		oldContent:"
		
		    public void incGroupCkNums(final String group, final String topic, final int incValue) {
		        final String statsKey = buildStatsKey(topic, group);
		        this.statsTable.get(GROUP_CK_NUMS).addValue(statsKey, incValue, 1);
		    }
		
		    public void incGroupAckNums(final String group, final String topic, final int incValue) {
		        final String statsKey = buildStatsKey(topic, group);
		        this.statsTable.get(GROUP_ACK_NUMS).addValue(statsKey, incValue, 1);
		    }
		
		    public String buildStatsKey(String topic, String group) {
		        StringBuilder strBuilder;
		        if (topic != null && group != null) {
		            strBuilder = new StringBuilder(topic.length() + group.length() + 1);
		        } else {
		            strBuilder = new StringBuilder();
		        }
		        strBuilder.append(topic).append("@").append(group);
		        return strBuilder.toString();
		    }
		
		    public String buildStatsKey(String topic, int queueId) {
		        StringBuilder strBuilder;
		        if (topic != null) {
		            strBuilder = new StringBuilder(topic.length() + 5);
		        } else {
		            strBuilder = new StringBuilder();
		        }
		        strBuilder.append(topic).append("@").append(queueId);
		        return strBuilder.toString();
		    }
		
		    public String buildStatsKey(String topic, int queueId, String group) {
		        StringBuilder strBuilder;
		        if (topic != null && group != null) {
		            strBuilder = new StringBuilder(topic.length() + group.length() + 6);
		        } else {
		            strBuilder = a new StringBuilder();
		        }
		        strBuilder.append(topic).append("@").append(queueId).append("@").append(group);
		        return strBuilder.toString();
		    }
		
		    public String buildStatsKey(int queueId, String topic, String group) {
		        StringBuilder strBuilder;
		        if (topic != null && group != null) {
		            strBuilder = new StringBuilder(topic.length() + group.length() + 6);		
",
		newContent:"
		    // The increment of values in statsTable using constants from Stats class has been removed as the constants are no longer available.
				
",
,

	],

}
extractedClasses:
{

}
