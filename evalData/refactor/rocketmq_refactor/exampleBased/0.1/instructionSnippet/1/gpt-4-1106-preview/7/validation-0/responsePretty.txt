refactorings:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java:
	[
		fromLine:"		16",
		toLine:"		42",
		oldContent:"
		import org.apache.rocketmq.common.stats.Stats;		
",
		newContent:"
				
",
,
		fromLine:"		134",
		toLine:"		139",
		oldContent:"
		momentStatsItemSetFallSize = new MomentStatsItemSet(GROUP_GET_FALL_SIZE,
		            scheduledExecutorService, log);		
",
		newContent:"
				
",
,
		fromLine:"		141",
		toLine:"		159",
		oldContent:"
		this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));		
",
		newContent:"
				
",
,
		fromLine:"		164",
		toLine:"		173",
		oldContent:"
		this.statsTable.put(Stats.GROUP_GET_FROM_DISK_NUMS,
		            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));		
",
		newContent:"
				
",
,
		fromLine:"		176",
		toLine:"		191",
		oldContent:"
		this.statsTable.put(Stats.COMMERCIAL_SEND_TIMES,
		            new StatsItemSet(Stats.COMMERCIAL_SEND_TIMES, this.commercialExecutor, COMMERCIAL_LOG));		
",
		newContent:"
				
",
,
		fromLine:"		301",
		toLine:"		314",
		oldContent:"
		this.statsTable.get(Stats.TOPIC_PUT_NUMS).delValue(topic);		
",
		newContent:"
				
",
,
		fromLine:"		318",
		toLine:"		327",
		oldContent:"
		this.statsTable.get(Stats.GROUP_GET_NUMS).delValueBySuffixKey(group, "@");		
",
		newContent:"
				
",
,
		fromLine:"		332",
		toLine:"		334",
		oldContent:"
		this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), 1, 1);		
",
		newContent:"
				
",
,
		fromLine:"		338",
		toLine:"		340",
		oldContent:"
		this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), num, times);		
",
		newContent:"
				
",
,
		fromLine:"		344",
		toLine:"		346",
		oldContent:"
		this.statsTable.get(Stats.QUEUE_PUT_SIZE).addValue(buildStatsKey(topic, queueId), size, 1);		
",
		newContent:"
				
",
,
		fromLine:"		351",
		toLine:"		353",
		oldContent:"
		this.statsTable.get(Stats.QUEUE_GET_NUMS).addValue(statsKey, incValue, 1);		
",
		newContent:"
				
",
,
		fromLine:"		358",
		toLine:"		360",
		oldContent:"
		this.statsTable.get(Stats.QUEUE_GET_SIZE).addValue(statsKey, incValue, 1);		
",
		newContent:"
				
",
,
		fromLine:"		387",
		toLine:"		389",
		oldContent:"
		this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, 1, 1);		
",
		newContent:"
				
",
,
		fromLine:"		391",
		toLine:"		393",
		oldContent:"
		this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, num, times);		
",
		newContent:"
				
",
,
		fromLine:"		395",
		toLine:"		397",
		oldContent:"
		this.statsTable.get(Stats.TOPIC_PUT_SIZE).addValue(topic, size, 1);		
",
		newContent:"
				
",
,
		fromLine:"		400",
		toLine:"		402",
		oldContent:"
		this.statsTable.get(Stats.GROUP_GET_NUMS).addValue(statsKey, incValue, 1);		
",
		newContent:"
				
",
,
		fromLine:"		459",
		toLine:"		461",
		oldContent:"
		this.statsTable.get(Stats.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);		
",
		newContent:"
				
",
,
		fromLine:"		469",
		toLine:"		471",
		oldContent:"
		this.statsTable.get(Stats.GROUP_GET_LATENCY).addRTValue(statsKey, incValue, 1);		
",
		newContent:"
				
",
,
		fromLine:"		484",
		toLine:"		486",
		oldContent:"
		this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(1);		
",
		newContent:"
				
",
,
		fromLine:"		488",
		toLine:"		490",
		oldContent:"
		this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);		
",
		newContent:"
				
",
,
		fromLine:"		493",
		toLine:"		495",
		oldContent:"
		this.statsTable.get(Stats.BROKER_GET_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);		
",
		newContent:"
				
",
,
		fromLine:"		545",
		toLine:"		547",
		oldContent:"
		this.statsTable.get(Stats.SNDBCK_PUT_NUMS).addValue(statsKey, 1, 1);		
",
		newContent:"
				
",
,
		fromLine:"		550",
		toLine:"		555",
		oldContent:"
		return this.statsTable.get(Stats.GROUP_GET_NUMS).getStatsDataInMinute(statsKey).getTps();		
",
		newContent:"
				
",
,
		fromLine:"		558",
		toLine:"		560",
		oldContent:"
		public void recordDiskFallBehindSize(final StatsKey statsKey,
		        final long fallBehind) {		
",
		newContent:"
		public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,
		        final long fallBehind) {		
",
,

	],
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java:
	[
		fromLine:"		939",
		toLine:"		941",
		oldContent:"
		brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);		
",
		newContent:"
		brokerStatsManager.recordDiskFallBehindSize(new StatsKey(group, topic, queueId), fallBehind);		
",
,

	],
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/LmqBrokerStatsManager.java:
	[
		fromLine:"		91",
		toLine:"		93",
		oldContent:"
		public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,		
",
		newContent:"
		public void recordDiskFallBehindTime(final StatsKey statsKey,		
",
,
		fromLine:"		102",
		toLine:"		107",
		oldContent:"
		super.recordDiskFallBehindTime(lmqGroup, lmqTopic, queueId, fallBehind);		
",
		newContent:"
		super.recordDiskFallBehindTime(new StatsKey(lmqGroup, lmqTopic, queueId), fallBehind);		
",
,
		fromLine:"		106",
		toLine:"		107",
		oldContent:"
		public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,		
",
		newContent:"
		public void recordDiskFallBehindSize(final StatsKey statsKey,		
",
,
		fromLine:"		116",
		toLine:"		118",
		oldContent:"
		super.recordDiskFallBehindSize(lmqGroup, lmqTopic, queueId, fallBehind);		
",
		newContent:"
		super.recordDiskFallBehindSize(new StatsKey(lmqGroup, lmqTopic, queueId), fallBehind);		
",
,

	],

}
extractedClasses:
{
	/root/data_clump_solver/cloned_projects/rocketmq_refactor/common/src/main/java/org/apache/rocketmq/common/stats/StatsKey.java:"
	package org.apache.rocketmq.common.stats;
	
	public class StatsKey {
	    private final String group;
	    private final String topic;
	    private final int queueId;
	
	    public StatsKey(String group, String topic, int queueId) {
	        this.group = group;
	        this.topic = topic;
	        this.queueId = queueId;
	    }
	
	    public String getGroup() {
	        return group;
	    }
	
	    public String getTopic() {
	        return topic;
	    }
	
	    public int getQueueId() {
	        return queueId;
	    }
	
	    public String buildStatsKey() {
	        return topic + "-" + queueId + "-" + group;
	    }
	}	
",

}
