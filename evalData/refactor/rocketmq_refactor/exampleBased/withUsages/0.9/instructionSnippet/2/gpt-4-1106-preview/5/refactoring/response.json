{
    "refactorings": {
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 16,
                "toLine": 70,
                "oldContent": " ... (content truncated) ... om.rocketmq.logging.org.slf4j.LoggerFactory;\n\npublic class BrokerStatsManager { ... (content truncated) ... public static final String COMMERCIAL_PERM_FAILURES = Stats.COMMERCIAL_PERM_FAILURES;\n}",
                "newContent": " ... (content truncated) ... om.rocketmq.logging.org.slf4j.LoggerFactory;\n\npublic class BrokerStatsManager { ... (content truncated) ... private StatMetricKeys statMetricKeys;\n}"
            },
            {
                "fromLine": 107,
                "toLine": 114,
                "oldContent": " ... (content truncated) ... d public static final String GROUP_GET_FALL_TIME = Stats.GROUP_GET_FALL_TIME;\n    // Pull Message Latency\n    @Deprecated public static final String GROUP_GET_LATENCY = Stats.GROUP_GET_LATENCY;\n}",
                "newContent": " ... (content truncated) ... d public static final String GROUP_GET_FALL_TIME = statMetricKeys.GROUP_GET_FALL_TIME;\n    // Pull Message Latency\n    @Deprecated public static final String GROUP_GET_LATENCY = statMetricKeys.GROUP_GET_LATENCY;\n}"
            },
            {
                "fromLine": 163,
                "toLine": 190,
                "oldContent": " ... (content truncated) ... this.statsTable.put(Stats.BROKER_GET_NUMS, new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log)); ... (content truncated) ... .statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log)); ... (content truncated) ... ",
                "newContent": " ... (content truncated) ... this.statsTable.put(statMetricKeys.BROKER_GET_NUMS, new StatsItemSet(statMetricKeys.BROKER_GET_NUMS, this.scheduledExecutorService, log)); ... (content truncated) ... .statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log)); ... (content truncated) ... "
            },
            {
                "fromLine": 193,
                "toLine": 222,
                "oldContent": " ... (content truncated) ... put(Stats.BROKER_GET_FROM_DISK_NUMS,\n            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log)); ... (content truncated) ... \n        this.statsTable.put(SNDBCK2DLQ_TIMES,\n            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG)); ... (content truncated) ... ",
                "newContent": " ... (content truncated) ... put(statMetricKeys.BROKER_GET_FROM_DISK_NUMS,\n            new StatsItemSet(statMetricKeys.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log)); ... (content truncated) ... \n        this.statsTable.put(SNDBCK2DLQ_TIMES,\n            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG)); ... (content truncated) ... "
            },
            {
                "fromLine": 330,
                "toLine": 345,
                "oldContent": " ... (content truncated) ... his.statsTable.get(Stats.TOPIC_PUT_NUMS).delValue(topic);\n        this.statsTable.get(Stats.TOPIC_PUT_SIZE).delValue(topic); ... (content truncated) ... ",
                "newContent": " ... (content truncated) ... his.statsTable.get(statMetricKeys.TOPIC_PUT_NUMS).delValue(topic);\n        this.statsTable.get(statMetricKeys.TOPIC_PUT_SIZE).delValue(topic); ... (content truncated) ... "
            },
            {
                "fromLine": 347,
                "toLine": 358,
                "oldContent": " ... (content truncated) ... his.statsTable.get(Stats.GROUP_GET_NUMS).delValueBySuffixKey(group, \"@\");\n        this.statsTable.get(Stats.GROUP_GET_SIZE).delValueBySuffixKey(group, \"@\"); ... (content truncated) ... ",
                "newContent": " ... (content truncated) ... his.statsTable.get(statMetricKeys.GROUP_GET_NUMS).delValueBySuffixKey(group, \"@\");\n        this.statsTable.get(statMetricKeys.GROUP_GET_SIZE).delValueBySuffixKey(group, \"@\"); ... (content truncated) ... "
            },
            {
                "fromLine": 361,
                "toLine": 365,
                "oldContent": "\n    public void incQueuePutNums(final String topic, final Integer queueId) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), 1, 1);\n        }",
                "newContent": "\n    public void incQueuePutNums(final String topic, final Integer queueId) {\n        if (enableQueueStat) {\n            this.statsTable.get(statMetricKeys.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), 1, 1);\n        }"
            },
            {
                "fromLine": 367,
                "toLine": 371,
                "oldContent": "\n    public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), num, times);\n        }",
                "newContent": "\n    public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {\n        if (enableQueueStat) {\n            this.statsTable.get(statMetricKeys.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), num, times);\n        }"
            },
            {
                "fromLine": 373,
                "toLine": 377,
                "oldContent": "\n    public void incQueuePutSize(final String topic, final Integer queueId, final int size) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_SIZE).addValue(buildStatsKey(topic, queueId), size, 1);\n        }",
                "newContent": "\n    public void incQueuePutSize(final String topic, final Integer queueId, final int size) {\n        if (enableQueueStat) {\n            this.statsTable.get(statMetricKeys.QUEUE_PUT_SIZE).addValue(buildStatsKey(topic, queueId), size, 1);\n        }"
            },
            {
                "fromLine": 380,
                "toLine": 384,
                "oldContent": "    public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = buildStatsKey(topic, queueId, group);\n            this.statsTable.get(Stats.QUEUE_GET_NUMS).addValue(statsKey, incValue, 1);\n        }",
                "newContent": "    public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = buildStatsKey(topic, queueId, group);\n            this.statsTable.get(statMetricKeys.QUEUE_GET_NUMS).addValue(statsKey, incValue, 1);\n        }"
            },
            {
                "fromLine": 387,
                "toLine": 391,
                "oldContent": "    public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = buildStatsKey(topic, queueId, group);\n            this.statsTable.get(Stats.QUEUE_GET_SIZE).addValue(statsKey, incValue, 1);\n        }",
                "newContent": "    public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = buildStatsKey(topic, queueId, group);\n            this.statsTable.get(statMetricKeys.QUEUE_GET_SIZE).addValue(statsKey, incValue, 1);\n        }"
            },
            {
                "fromLine": 416,
                "toLine": 433,
                "oldContent": " ... (content truncated) ... his.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, 1, 1);\n    }\n\n    public void incTopicPutNums(final String topic, int num, int times) ... (content truncated) ... \n        this.statsTable.get(Stats.TOPIC_PUT_SIZE).addValue(topic, size, 1);\n    }\n\n    public void incGroupGetNums(final String group, final String topic, final int incValue) ... (content truncated) ... ",
                "newContent": " ... (content truncated) ... his.statsTable.get(statMetricKeys.TOPIC_PUT_NUMS).addValue(topic, 1, 1);\n    }\n\n    public void incTopicPutNums(final String topic, int num, int times) ... (content truncated) ... \n        this.statsTable.get(statMetricKeys.TOPIC_PUT_SIZE).addValue(topic, size, 1);\n    }\n\n    public void incGroupGetNums(final String group, final String topic, final int incValue) ... (content truncated) ... "
            },
            {
                "fromLine": 488,
                "toLine": 492,
                "oldContent": "\n    public void incGroupGetSize(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(Stats.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);\n    }",
                "newContent": "\n    public void incGroupGetSize(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(statMetricKeys.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);\n    }"
            },
            {
                "fromLine": 498,
                "toLine": 502,
                "oldContent": " ... (content truncated) ... is.statsTable.get(Stats.GROUP_GET_LATENCY).addRTValue(statsKey, incValue, 1);\n    } ... (content truncated) ...",
                "newContent": " ... (content truncated) ... is.statsTable.get(statMetricKeys.GROUP_GET_LATENCY).addRTValue(statsKey, incValue, 1);\n    } ... (content truncated) ..."
            },
            {
                "fromLine": 513,
                "toLine": 526,
                "oldContent": " ... (content truncated) ... this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(1);\n    }\n\n    public void incBrokerPutNums(final String topic, final int incValue) ... (content truncated) ... this.statsTable.get(Stats.BROKER_GET_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n        this.incBrokerGetNumsWithoutSystemTopic(topic, incValue); ... (content truncated) ...",
                "newContent": " ... (content truncated) ... this.statsTable.get(statMetricKeys.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(1);\n    }\n\n    public void incBrokerPutNums(final String topic, final int incValue) ... (content truncated) ... this.statsTable.get(statMetricKeys.BROKER_GET_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n        this.incBrokerGetNumsWithoutSystemTopic(topic, incValue); ... (content truncated) ..."
            },
            {
                "fromLine": 574,
                "toLine": 583,
                "oldContent": " ... (content truncated) ... this.statsTable.get(Stats.SNDBCK_PUT_NUMS).addValue(statsKey, 1, 1);\n    }\n\n    public double tpsGroupGetNums(final String group, final String topic) ... (content truncated) ... this.statsTable.get(Stats.GROUP_GET_NUMS).getStatsDataInMinute(statsKey).getTps(); ... (content truncated) ...",
                "newContent": " ... (content truncated) ... this.statsTable.get(statMetricKeys.SNDBCK_PUT_NUMS).addValue(statsKey, 1, 1);\n    }\n\n    public double tpsGroupGetNums(final String group, final String topic) ... (content truncated) ... this.statsTable.get(statMetricKeys.GROUP_GET_NUMS).getStatsDataInMinute(statsKey).getTps(); ... (content truncated) ..."
            },
            {
                "fromLine": 622,
                "toLine": 629,
                "oldContent": " ... (content truncated) ... .addValue(statsKey, incValue, 1);\n    }\n\n    public void incAccountValue(final String statType, final String owner, final String instanceId, final String topic, ... (content truncated) ... final String group, final String msgType, ... (content truncated) ... final long... incValues) {\n        final String key = buildAccountStatKey(owner, instanceId, topic, group, msgType); ... (content truncated) ...",
                "newContent": " ... (content truncated) ... .addValue(statsKey, incValue, 1);\n    }\n\n    public void incAccountValue(final String statType, final String owner, final String instanceId, final String topic, ... (content truncated) ... final String group, final String msgType, ... (content truncated) ... final long... incValues) {\n        final String key = buildAccountStatKey(owner, instanceId, topic, group, msgType); ... (content truncated) ..."
            },
            {
                "fromLine": 632,
                "toLine": 636,
                "oldContent": "\n    public void incAccountValue(final String statType, final String owner, final String instanceId, final String topic, ... (content truncated) ... final String group, final String msgType, final String flowlimitThreshold, ... (content truncated) ... final long... incValues) {\n        final String key = buildAccountStatKey(owner, instanceId, topic, group, msgType, flowlimitThreshold); ... (content truncated) ...",
                "newContent": "\n    public void incAccountValue(final String statType, final String owner, final String instanceId, final String topic, ... (content truncated) ... final String group, final String msgType, final String flowlimitThreshold, ... (content truncated) ... final long... incValues) {\n        final String key = buildAccountStatKey(owner, instanceId, topic, group, msgType, flowlimitThreshold); ... (content truncated) ..."
            },
            {
                "fromLine": 697,
                "toLine": 710,
                "oldContent": "\n    public String buildAccountStatKey(final String owner, final String instanceId, ... (content truncated) ... final String topic, final String group, ... (content truncated) ... final String msgType, String flowlimitThreshold) {\n        final String sep = \"|\"; ... (content truncated) ...",
                "newContent": "\n    public String buildAccountStatKey(final String owner, final String instanceId, ... (content truncated) ... final String topic, final String group, ... (content truncated) ... final String msgType, String flowlimitThreshold) {\n        final String sep = \"|\"; ... (content truncated) ..."
            }
        ],
        "common/src/main/java/org/apache/rocketmq/common/stats/Stats.java": [
            {
                "fromLine": 16,
                "toLine": 47,
                "oldContent": " ... (content truncated) ... public class Stats {\n\n    public static final String QUEUE_PUT_NUMS = \"QUEUE_PUT_NUMS\";\n    public static final String QUEUE_PUT_SIZE = \"QUEUE_PUT_SIZE\"; ... (content truncated) ... public static final String GROUP_GET_FALL_TIME = \"GROUP_GET_FALL_TIME\";\n    public static final String GROUP_GET_LATENCY = \"GROUP_GET_LATENCY\";\n}",
                "newContent": " ... (content truncated) ... public class Stats {\n    private static final String QUEUE_PUT_NUMS = \"QUEUE_PUT_NUMS\";\n    private static final String QUEUE_PUT_SIZE = \"QUEUE_PUT_SIZE\"; ... (content truncated) ... private static final String GROUP_GET_FALL_TIME = \"GROUP_GET_FALL_TIME\";\n    private static final String GROUP_GET_LATENCY = \"GROUP_GET_LATENCY\";\n}"
            }
        ],
        "store/src/test/java/org/apache/rocketmq/store/stats/BrokerStatsManagerTest.java": [
            {
                "fromLine": 17,
                "toLine": 40,
                "oldContent": " ... (content truncated) ... import org.junit.Test;\n\nimport static org.apache.rocketmq.common.stats.Stats.BROKER_PUT_NUMS; ... (content truncated) ... import static org.apache.rocketmq.common.stats.Stats.TOPIC_PUT_SIZE; ... (content truncated) ... import static org.assertj.core.api.Assertions.assertThat;\n",
                "newContent": " ... (content truncated) ... import org.junit.Test;\n\nimport static org.apache.rocketmq.common.stats.StatMetricKeys.BROKER_PUT_NUMS; ... (content truncated) ... import static org.apache.rocketmq.common.stats.StatMetricKeys.TOPIC_PUT_SIZE; ... (content truncated) ... import static org.assertj.core.api.Assertions.assertThat;\n"
            },
            {
                "fromLine": 66,
                "toLine": 72,
                "oldContent": "    public void testIncQueuePutNums() { ... (content truncated) ... brokerStatsManager.incQueuePutNums(TOPIC, QUEUE_ID); ... (content truncated) ... String statsKey = brokerStatsManager.buildStatsKey(TOPIC, String.valueOf(QUEUE_ID)); ... (content truncated) ... assertThat(brokerStatsManager.getStatsItem(QUEUE_PUT_NUMS, statsKey).getTimes().doubleValue()).isEqualTo(1L); ... (content truncated) ... brokerStatsManager.incQueuePutNums(TOPIC, QUEUE_ID, 2, 2); ... (content truncated) ... assertThat(brokerStatsManager.getStatsItem(QUEUE_PUT_NUMS, statsKey).getValue().doubleValue()).isEqualTo(3L);\n    }",
                "new

                {
                    "fromLine": 75,
                    "toLine": 79,
                    "oldContent": "    public void testIncQueuePutSize() {\n        brokerStatsManager.incQueuePutSize(TOPIC, QUEUE_ID, 2);\n        String statsKey = brokerStatsManager.buildStatsKey(TOPIC, String.valueOf(QUEUE_ID));\n        assertThat(brokerStatsManager.getStatsItem(QUEUE_PUT_SIZE, statsKey).getValue().doubleValue()).isEqualTo(2L);\n    }",
                    "newContent": "    public void testIncQueuePutSize() {\n        brokerStatsManager.incQueuePutSize(TOPIC, QUEUE_ID, 2);\n        String statsKey = brokerStatsManager.buildStatsKey(TOPIC, String.valueOf(QUEUE_ID));\n        assertThat(brokerStatsManager.getStatsItem(StatMetricKeys.QUEUE_PUT_SIZE, statsKey).getValue().doubleValue()).isEqualTo(2L);\n    }"
                }
            
           
            
        
       
    
   

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    
    
       
    
    

    
    
       
    

{
    "refactorings": {
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 17,
                "toLine": 40,
                "oldContent": " ... (content truncated) ... \nimport static org.apache.rocketmq.common.stats.Stats.QUEUE_GET_SIZE;\n ... (content truncated) ... \nimport static org.apache.rocketmq.common.stats.Stats.TOPIC_PUT_SIZE;\n ... (content truncated) ... \nimport static org.assertj.core.api.Assertions.assertThat;\n",
                "newContent": " ... (content truncated) ... \nimport static org.apache.rocketmq.store.stats.StatMetricKeys.QUEUE_GET_SIZE;\n ... (content truncated) ... \nimport static org.apache.rocketmq.store.stats.StatMetricKeys.TOPIC_PUT_SIZE;\n ... (content truncated) ... \nimport static org.assertj.core.api.Assertions.assertThat;\n"
            },
            {
                "fromLine": 66,
                "toLine": 72,
                "oldContent": " ... (content truncated) ... brokerStatsManager.incQueuePutNums(TOPIC, QUEUE_ID);\n ... (content truncated) ... assertThat(brokerStatsManager.getStatsItem(QUEUE_PUT_NUMS, statsKey).getTimes().doubleValue()).isEqualTo(1L);\n ... (content truncated) ...",
                "newContent": " ... (content truncated) ... brokerStatsManager.incQueuePutNums(TOPIC, QUEUE_ID);\n ... (content truncated) ... assertThat(brokerStatsManager.getStatsItem(statMetricKeys.QUEUE_PUT_NUMS, statsKey).getTimes().doubleValue()).isEqualTo(1L);\n ... (content truncated) ..."
            },
            {
                "fromLine": 75,
                "toLine": 79,
                "oldContent": "    public void testIncQueuePutSize() {\n        brokerStatsManager.incQueuePutSize(TOPIC, QUEUE_ID, 2);\n        String statsKey = brokerStatsManager.buildStatsKey(TOPIC, String.valueOf(QUEUE_ID));\n        assertThat(brokerStatsManager.getStatsItem(QUEUE_PUT_SIZE, statsKey).getValue().doubleValue()).isEqualTo(2L);\n    }",
                "newContent": "    public void testIncQueuePutSize() {\n        brokerStatsManager.incQueuePutSize(TOPIC, QUEUE_ID, 2);\n        String statsKey = brokerStatsManager.buildStatsKey(TOPIC, String.valueOf(QUEUE_ID));\n        assertThat(brokerStatsManager.getStatsItem(statMetricKeys.QUEUE_PUT_SIZE, statsKey).getValue().doubleValue()).isEqualTo(2L);\n    }"
            },
            {
                "fromLine": 82,
                "toLine": 86,
                "oldContent": "    public void testIncQueueGetNums() {\n        brokerStatsManager.incQueueGetNums(GROUP_NAME, TOPIC, QUEUE_ID, 1);\n        final String statsKey = brokerStatsManager.buildStatsKey(brokerStatsManager.buildStatsKey(TOPIC, String.valueOf(QUEUE_ID)), GROUP_NAME);\n        assertThat(brokerStatsManager.getStatsItem(QUEUE_GET_NUMS, statsKey).getValue().doubleValue()).isEqualTo(1L);\n    }",
                "newContent": "    public void testIncQueueGetNums() {\n        brokerStatsManager.incQueueGetNums(GROUP_NAME, TOPIC, QUEUE_ID, 1);\n        final String statsKey = brokerStatsManager.buildStatsKey(brokerStatsManager.buildStatsKey(TOPIC, String.valueOf(QUEUE_ID)), GROUP_NAME);\n        assertThat(brokerStatsManager.getStatsItem(statMetricKeys.QUEUE_GET_NUMS, statsKey).getValue().doubleValue()).isEqualTo(1L);\n    }"
            },
            {
                "fromLine": 89,
                "toLine": 93,
                "oldContent": "    public void testIncQueueGetSize() {\n        brokerStatsManager.incQueueGetSize(GROUP_NAME, TOPIC, QUEUE_ID, 1);\n        final String statsKey = brokerStatsManager.buildStatsKey(brokerStatsManager.buildStatsKey(TOPIC, String.valueOf(QUEUE_ID)), GROUP_NAME);\n        assertThat(brokerStatsManager.getStatsItem(QUEUE_GET_SIZE, statsKey).getValue().doubleValue()).isEqualTo(1L);\n    }",
                "newContent": "    public void testIncQueueGetSize() {\n        brokerStatsManager.incQueueGetSize(GROUP_NAME, TOPIC, QUEUE_ID, 1);\n        final String statsKey = brokerStatsManager.buildStatsKey(brokerStatsManager.buildStatsKey(TOPIC, String.valueOf(QUEUE_ID)), GROUP_NAME);\n        assertThat(brokerStatsManager.getStatsItem(statMetricKeys.QUEUE_GET_SIZE, statsKey).getValue().doubleValue()).isEqualTo(1L);\n    }"
            },
            {
                "fromLine": 95,
                "toLine": 101,
                "oldContent": " ... (content truncated) ... public void testIncTopicPutNums() {\n        brokerStatsManager.incTopicPutNums(TOPIC);\n ... (content truncated) ... assertThat(brokerStatsManager.getStatsItem(TOPIC_PUT_NUMS, TOPIC).getTimes().doubleValue()).isEqualTo(1L);\n ... (content truncated) ...",
                "newContent": " ... (content truncated) ... public void testIncTopicPutNums() {\n        brokerStatsManager.incTopicPutNums(TOPIC);\n ... (content truncated) ... assertThat(brokerStatsManager.getStatsItem(statMetricKeys.TOPIC_PUT_NUMS, TOPIC).getTimes().doubleValue()).isEqualTo(1L);\n ... (content truncated) ..."
            },
            {
                "fromLine": 103,
                "toLine": 107,
                "oldContent": "    public void testIncTopicPutSize() {\n        brokerStatsManager.incTopicPutSize(TOPIC, 2);\n        assertThat(brokerStatsManager.getStatsItem(TOPIC_PUT_SIZE, TOPIC).getValue().doubleValue()).isEqualTo(2L);\n    }",
                "newContent": "    public void testIncTopicPutSize() {\n        brokerStatsManager.incTopicPutSize(TOPIC, 2);\n        assertThat(brokerStatsManager.getStatsItem(statMetricKeys.TOPIC_PUT_SIZE, TOPIC).getValue().doubleValue()).isEqualTo(2L);\n    }"
            },
            {
                "fromLine": 110,
                "toLine": 114,
                "oldContent": "    public void testIncGroupGetNums() {\n        brokerStatsManager.incGroupGetNums(GROUP_NAME, TOPIC, 1);\n        String statsKey = brokerStatsManager.buildStatsKey(TOPIC, GROUP_NAME);\n        assertThat(brokerStatsManager.getStatsItem(GROUP_GET_NUMS, statsKey).getValue().doubleValue()).isEqualTo(1L);\n    }",
                "newContent": "    public void testIncGroupGetNums() {\n        brokerStatsManager.incGroupGetNums(GROUP_NAME, TOPIC, 1);\n        String statsKey = brokerStatsManager.buildStatsKey(TOPIC, GROUP_NAME);\n        assertThat(brokerStatsManager.getStatsItem(statMetricKeys.GROUP_GET_NUMS, statsKey).getValue().doubleValue()).isEqualTo(1L);\n    }"
            },
            {
                "fromLine": 117,
                "toLine": 121,
                "oldContent": "    public void testIncGroupGetSize() {\n        brokerStatsManager.incGroupGetSize(GROUP_NAME, TOPIC, 1);\n        String statsKey = brokerStatsManager.buildStatsKey(TOPIC, GROUP_NAME);\n        assertThat(brokerStatsManager.getStatsItem(GROUP_GET_SIZE, statsKey).getValue().doubleValue()).isEqualTo(1L);\n    }",
                "newContent": "    public void testIncGroupGetSize() {\n        brokerStatsManager.incGroupGetSize(GROUP_NAME, TOPIC, 1);\n        String statsKey = brokerStatsManager.buildStatsKey(TOPIC, GROUP_NAME);\n        assertThat(brokerStatsManager.getStatsItem(statMetricKeys.GROUP_GET_SIZE, statsKey).getValue().doubleValue()).isEqualTo(1L);\n    }"
            },
            {
                "fromLine": 124,
                "toLine": 128,
                "oldContent": "    public void testIncGroupGetLatency() {\n        brokerStatsManager.incGroupGetLatency(GROUP_NAME, TOPIC, 1, 1);\n        String statsKey = String.format(\"%d@%s@%s\", 1, TOPIC, GROUP_NAME);\n        assertThat(brokerStatsManager.getStatsItem(GROUP_GET_LATENCY, statsKey).getValue().doubleValue()).isEqualTo(1L);\n    }",
                "newContent": "    public void testIncGroupGetLatency() {\n        brokerStatsManager.incGroupGetLatency(GROUP_NAME, TOPIC, 1, 1);\n        String statsKey = String.format(\"%d@%s@%s\", 1, TOPIC, GROUP_NAME);\n        assertThat(brokerStatsManager.getStatsItem(statMetricKeys.GROUP_GET_LATENCY, statsKey).getValue().doubleValue()).isEqualTo(1L);\n    }"
            },
            {
                "fromLine": 130,
                "toLine": 134,
                "oldContent": "    @Test\n    public void testIncBrokerPutNums() {\n        brokerStatsManager.incBrokerPutNums();\n        assertThat(brokerStatsManager.getStatsItem(BROKER_PUT_NUMS, CLUSTER_NAME).getValue().doubleValue()).isEqualTo(1L);\n    }",
                "newContent": "    @Test\n    public void testIncBrokerPutNums() {\n        brokerStatsManager.incBrokerPutNums();\n        assertThat(brokerStatsManager.getStatsItem(statMetricKeys.BROKER_PUT_NUMS, CLUSTER_NAME).getValue().doubleValue()).isEqualTo(1L);\n    }"
            }
        ],
        "broker/src/test/java/org/apache/rocketmq/broker/processor/EndTransactionProcessorTest.java": [
            {
                "fromLine": 16,
                "toLine": 56,
                "oldContent": " ... (content truncated) ... org.apache.rocketmq.common.stats.Stats;\n ... (content truncated) ... org.apache.rocketmq.remoting.netty.NettyClientConfig;\n ... (content truncated) ...",
                "newContent": " ... (content truncated) ... org.apache.rocketmq.store.stats.StatMetricKeys;\n ... (content truncated) ... org.apache.rocketmq.remoting.netty.NettyClientConfig;\n ... (content truncated) ..."
            },
            {
                "fromLine": 102,
                "toLine": 108,
                "oldContent": " ... (content truncated) ... assertThat(response.getCode()).isEqualTo(ResponseCode.SUCCESS);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(Stats.BROKER_PUT_NUMS, brokerController.getBrokerConfig().getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n ... (content truncated) ...",
                "newContent": " ... (content truncated) ... assertThat(response.getCode()).isEqualTo(ResponseCode.SUCCESS);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(statMetricKeys.BROKER_PUT_NUMS, brokerController.getBrokerConfig().getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n ... (content truncated) ..."
            },
            {
                "fromLine": 115,
                "toLine": 121,
                "oldContent": " ... (content truncated) ... assertThat(response.getCode()).isEqualTo(ResponseCode.SUCCESS);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(Stats.BROKER_PUT_NUMS, brokerController.getBrokerConfig().getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n ... (content truncated) ...",
                "newContent": " ... (content truncated) ... assertThat(response.getCode()).isEqualTo(ResponseCode.SUCCESS);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(statMetricKeys.BROKER_PUT_NUMS, brokerController.getBrokerConfig().getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n ... (content truncated) ..."
            }
        ],
        "broker/src/test/java/org/apache/rocketmq/broker/schedule/ScheduleMessageServiceTest.java": [
            {
                "fromLine": 17,
                "toLine": 62,
                "oldContent": "\npackage org.apache.rocketmq.broker.schedule;\n ... (content truncated) ... org.apache.rocketmq.broker.failover.EscapeBridge;\n ... (content truncated) ... \nimport static org.apache.rocketmq.common.stats.Stats.BROKER_PUT_NUMS;\n ... (content truncated) ...",
                "newContent": "\npackage org.apache.rocketmq.broker.schedule;\n ... (content truncated) ... org.apache.rocketmq.broker.failover.EscapeBridge;\n ... (content truncated) ... \nimport static org.apache.rocketmq.store.stats.StatMetricKeys.BROKER_PUT_NUMS;\n ... (content truncated) ..."
            },
            {
                "fromLine": 196,
                "toLine": 200,
                "oldContent": "    public void testDeliverDelayedMessageTimerTask() throws Exception {\n        assertThat(messageStore.getMessageStoreConfig().isEnableScheduleMessageStats()).isTrue();\n\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(TOPIC_PUT_NUMS, topic)).isNull();\n}",
                "newContent": "    public void testDeliverDelayedMessageTimerTask() throws Exception {\n        assertThat(messageStore.getMessageStoreConfig().isEnableScheduleMessageStats()).isTrue();\n\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(statMetricKeys.TOPIC_PUT_NUMS, topic)).isNull();\n}"
            },
            {
                "fromLine": 226,
                "toLine": 232,
                "oldContent": "        assertThat(messageResult.getStatus()).isEqualTo(GetMessageStatus.FOUND);\n\n        // get the stats change\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(BROKER_PUT_NUMS, brokerConfig.getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(TOPIC_PUT_NUMS, topic).getValue().sum()).isEqualTo(1L);\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(TOPIC_PUT_SIZE, topic).getValue().sum()).isEqualTo(messageResult.getBufferTotalSize());\n",
                "newContent": "        assertThat(messageResult.getStatus()).isEqualTo(GetMessageStatus.FOUND);\n\n        // get the stats change\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(statMetricKeys.BROKER_PUT_NUMS, brokerConfig.getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(statMetricKeys.TOPIC_PUT_NUMS, topic).getValue().sum()).isEqualTo(1L);\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(statMetricKeys.TOPIC_PUT_SIZE, topic).getValue().sum()).isEqualTo(messageResult.getBufferTotalSize());\n"
            }
        ],
        "tools/src/main/java/org/apache/rocketmq/tools/command/export/ExportMetricsCommand.java": [
            {
                "fromLine": 16,
                "toLine": 49,
                "oldContent": " ... (content truncated) ... import com.alibaba.fastjson.JSON;\n ... (content truncated) ... import org.apache.commons.cli.Option;\n ... (content truncated) ...",
                "newContent": " ... (content truncated) ... import com.alibaba.fastjson.JSON;\n ... (content truncated) ... import org.apache.commons.cli.Option;\n ... (content truncated) ..."
            },
            {
                "fromLine": 184,
                "toLine": 188,
                "oldContent": "\n        try {\n            transStatsData = defaultMQAdminExt.viewBrokerStatsData(brokerAddr,\n                Stats.TOPIC_PUT_NUMS,\n                TopicValidator.RMQ_SYS_TRANS_HALF_TOPIC);",
                "newContent": "\n        try {\n            transStatsData = defaultMQAdminExt.viewBrokerStatsData(brokerAddr,\n                statMetricKeys.TOPIC_PUT_NUMS,\n                TopicValidator.RMQ_SYS_TRANS_HALF_TOPIC);"
            },
            {
                "fromLine": 192,
                "toLine": 196,
                "oldContent": "        BrokerStatsData scheduleStatsData = null;\n        try {\n            scheduleStatsData = defaultMQAdminExt.viewBrokerStatsData(brokerAddr,\n                Stats.TOPIC_PUT_NUMS, TopicValidator.RMQ_SYS_SCHEDULE_TOPIC);\n        } catch (MQClientException e) {",
                "newContent": "        BrokerStatsData scheduleStatsData = null;\n        try {\n            scheduleStatsData = defaultMQAdminExt.viewBrokerStatsData(brokerAddr,\n                statMetricKeys.TOPIC_PUT_NUMS, TopicValidator.RMQ_SYS_SCHEDULE_TOPIC);\n        } catch (MQClientException e) {"
            }
        ],
        "tools/src/main/java/org/apache/rocketmq/tools/command/stats/StatsAllSubCommand.java": [
            {
                "fromLine": 17,
                "toLine": 39,
                "oldContent": "\npackage org.apache.rocketmq.tools.command.stats;\n ... (content truncated) ... import org.apache.rocketmq.client.exception.MQBrokerException;\n ... (content truncated) ...",
                "newContent": "\npackage org.apache.rocketmq.tools.command.stats;\n ... (content truncated) ... import org.apache.rocketmq.client.exception.MQBrokerException;\n ... (content truncated) ..."
            },
            {
                "fromLine": 52,
                "toLine": 56,
                "oldContent": "            String masterAddr = bd.getBrokerAddrs().get(MixAll.MASTER_ID);\n            if (masterAddr != null) {\n                try {\n                    BrokerStatsData bsd = admin.viewBrokerStatsData(masterAddr, Stats.TOPIC_PUT_NUMS, topic);\n                    inTPS += bsd.getStatsMinute().getTps();",
                "newContent": "            String masterAddr = bd.getBrokerAddrs().get(MixAll.MASTER_ID);\n            if (masterAddr != null) {\n                try {\n                    BrokerStatsData bsd = admin.viewBrokerStatsData(masterAddr, statMetricKeys.TOPIC_PUT_NUMS, topic);\n                    inTPS += bsd.getStatsMinute().getTps();"
            },
            {
                "fromLine": 71,
                "toLine": 75,
                "oldContent": "                    if (masterAddr != null) {\n                        try {\n                            String statsKey = String.format(\"%s@%s\", topic, group);\n                            BrokerStatsData bsd = admin.viewBrokerStatsData(masterAddr, Stats.GROUP_GET_NUMS, statsKey);\n                            outTPS += bsd.getStatsMinute().getTps();",
                "newContent": "                    if (masterAddr != null) {\n                        try {\n                            String statsKey = String.format(\"%s@%s\", topic, group);\n                            BrokerStatsData bsd = admin.viewBrokerStatsData(masterAddr, statMetricKeys.GROUP_GET_NUMS, statsKey);\n                            outTPS

                {
                    "fromLine": 52,
                    "toLine": 56,
                    "oldContent": "            String masterAddr = bd.getBrokerAddrs().get(MixAll.MASTER_ID);\n            if (masterAddr != null) {\n                try {\n                    BrokerStatsData bsd = admin.viewBrokerStatsData(masterAddr, Stats.TOPIC_PUT_NUMS, topic);\n                    inTPS += bsd.getStatsMinute().getTps();",
                    "newContent": "            String masterAddr = bd.getBrokerAddrs().get(MixAll.MASTER_ID);\n            if (masterAddr != null) {\n                try {\n                    BrokerStatsData bsd = admin.viewBrokerStatsData(masterAddr, statMetricKeys.TOPIC_PUT_NUMS, topic);\n                    inTPS += bsd.getStatsMinute().getTps();"
                }
           	      
       	   		            
           	            
	             
    	  
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
   	      	                
    	     
    	   	      
    	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
    	  
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
   	      	               
    	     
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 	               
    	 