{
    "refactorings": {
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 44,
                "toLine": 49,
                "oldContent": "\n    @Deprecated public static final String QUEUE_PUT_NUMS = Stats.QUEUE_PUT_NUMS;\n    @Deprecated public static final String QUEUE_PUT_SIZE = Stats.QUEUE_PUT_SIZE;\n    @Deprecated public static final String QUEUE_GET_NUMS = Stats.QUEUE_GET_NUMS;\n    @Deprecated public static final String QUEUE_GET_SIZE = Stats.QUEUE_GET_SIZE;\n    @Deprecated public static final String TOPIC_PUT_NUMS = Stats.TOPIC_PUT_NUMS;",
                "newContent": "\n    // Deprecated stats constants are removed."
            },
            {
                "fromLine": 51,
                "toLine": 52,
                "oldContent": "\n    @Deprecated public static final String GROUP_GET_NUMS = Stats.GROUP_GET_NUMS;",
                "newContent": ""
            },
            {
                "fromLine": 54,
                "toLine": 60,
                "oldContent": "\n    @Deprecated public static final String SNDBCK_PUT_NUMS = Stats.SNDBCK_PUT_NUMS;\n    @Deprecated public static final String BROKER_PUT_NUMS = Stats.BROKER_PUT_NUMS;\n    @Deprecated public static final String BROKER_GET_NUMS = Stats.BROKER_GET_NUMS;\n    @Deprecated public static final String GROUP_GET_FROM_DISK_NUMS = Stats.GROUP_GET_FROM_DISK_NUMS;\n    @Deprecated public static final String GROUP_GET_FROM_DISK_SIZE = Stats.GROUP_GET_FROM_DISK_SIZE;\n    @Deprecated public static final String BROKER_GET_FROM_DISK_NUMS = Stats.BROKER_GET_FROM_DISK_NUMS;",
                "newContent": ""
            },
            {
                "fromLine": 62,
                "toLine": 68,
                "oldContent": "    // For commercial\n    @Deprecated public static final String COMMERCIAL_SEND_TIMES = Stats.COMMERCIAL_SEND_TIMES;\n    @Deprecated public static final String COMMERCIAL_SNDBCK_TIMES = Stats.COMMERCIAL_SNDBCK_TIMES;\n    @Deprecated public static final String COMMERCIAL_RCV_TIMES = Stats.COMMERCIAL_RCV_TIMES;\n    @Deprecated public static final String COMMERCIAL_RCV_EPOLLS = Stats.COMMERCIAL_RCV_EPOLLS;\n    @Deprecated public static final String COMMERCIAL_SEND_SIZE = Stats.COMMERCIAL_SEND_SIZE;\n    @Deprecated public static final String COMMERCIAL_RCV_SIZE = Stats.COMMERCIAL_RCV_SIZE;",
                "newContent": ""
            },
            {
                "fromLine": 109,
                "toLine": 110,
                "oldContent": "\n    @Deprecated public static final String GROUP_GET_FALL_SIZE = Stats.GROUP_GET_FALL_SIZE;",
                "newContent": ""
            },
            {
                "fromLine": 172,
                "toLine": 175,
                "oldContent": "        if (enableQueueStat) {\n            this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        if (enableQueueStat) {\n            this.statsTable = StatsItemSetsBuilder.buildForQueue(this.statsTable, this.scheduledExecutorService, log);"
            },
            {
                "fromLine": 177,
                "toLine": 180,
                "oldContent": "        }\n        this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        }\n        this.statsTable = StatsItemSetsBuilder.buildForTopicsAndGroups(this.statsTable, this.scheduledExecutorService, log);"
            },
            {
                "fromLine": 187,
                "toLine": 188,
                "oldContent": "        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable = StatsItemSetsBuilder.buildForBroker(this.statsTable, this.scheduledExecutorService, log);"
            },
            {
                "fromLine": 195,
                "toLine": 202,
                "oldContent": "            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_NUMS,\n            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_SIZE,\n            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_NUMS,\n            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_SIZE,",
                "newContent": "            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable = StatsItemSetsBuilder.buildForDiskAccess(this.statsTable, this.scheduledExecutorService, log);"
            },
            {
                "fromLine": 207,
                "toLine": 220,
                "oldContent": "\n        this.statsTable.put(Stats.COMMERCIAL_SEND_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_SEND_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_SEND_SIZE,\n            new StatsItemSet(Stats.COMMERCIAL_SEND_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_SIZE,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_EPOLLS,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_EPOLLS, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_SNDBCK_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_SNDBCK_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_PERM_FAILURES,",
                "newContent": "\n        this.statsTable = StatsItemSetsBuilder.buildForCommercial(this.statsTable, this.commercialExecutor, COMMERCIAL_LOG);"
            },
            {
                "fromLine": 332,
                "toLine": 333,
                "oldContent": "    public void onTopicDeleted(final String topic) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).delValue(topic);",
                "newContent": "    public void onTopicDeleted(final String topic) {\n        this.statsTable = StatsItemSetsBuilder.onTopicDeleted(this.statsTable, topic, enableQueueStat);"
            },
            {
                "fromLine": 349,
                "toLine": 350,
                "oldContent": "    public void onGroupDeleted(final String group) {\n        this.statsTable.get(Stats.GROUP_GET_NUMS).delValueBySuffixKey(group, \"@\");",
                "newContent": "    public void onGroupDeleted(final String group) {\n        this.statsTable = StatsItemSetsBuilder.onGroupDeleted(this.statsTable, group, enableQueueStat);"
            }
        ]
    },
    "extractedClasses": {
        "common/src/main/java/org/apache/rocketmq/common/stats/StatsItemSetsBuilder.java": "package org.apache.rocketmq.common.stats;\n\nimport java.util.concurrent.ScheduledExecutorService;\nimport org.slf4j.Logger;\n\npublic class StatsItemSetsBuilder {\n\n    public static Map<String, StatsItemSet> buildForQueue(Map<String, StatsItemSet> statsTable, ScheduledExecutorService scheduledExecutorService, Logger log) {\n        // Logic to build Queue stats\n        return statsTable;\n    }\n\n    public static Map<String, StatsItemSet> buildForTopicsAndGroups(Map<String, StatsItemSet> statsTable, ScheduledExecutorService scheduledExecutorService, Logger log) {\n        // Logic to build Topics and Groups stats\n        return statsTable;\n    }\n\n    public static Map<String, StatsItemSet> buildForBroker(Map<String, StatsItemSet> statsTable, ScheduledExecutorService scheduledExecutorService, Logger log) {\n        // Logic to build Broker stats\n        return statsTable;\n    }\n\n    public static Map<String, StatsItemSet> buildForDiskAccess(Map<String, StatsItemSet> statsTable, ScheduledExecutorService scheduledExecutorService, Logger log) {\n        // Logic to build Disk Access stats\n        return statsTable;\n    }\n\n    public static Map<String, StatsItemSet> buildForCommercial(Map<String, StatsItemSet> statsTable, ScheduledExecutorService commercialExecutor, Logger log) {\n        // Logic to build Commercial stats\n        return statsTable;\n    }\n\n    public static Map<String, StatsItemSet> onTopicDeleted(Map<String, StatsItemSet> statsTable, String topic, boolean enableQueueStat) {\n        // Logic when a topic is deleted\n        return statsTable;\n    }\n\n    public static Map<String, StatsItemSet> onGroupDeleted(Map<String, StatsItemSet> statsTable, String group, boolean enableQueueStat) {\n        // Logic when a group is deleted\n        return statsTable;\n    }\n}\n"
    }
}