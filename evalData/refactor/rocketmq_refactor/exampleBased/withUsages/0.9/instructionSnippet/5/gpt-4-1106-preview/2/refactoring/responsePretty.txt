"{
    "refactorings": {
        "common/src/main/java/org/apache/rocketmq/common/stats/Stats.java": [
            {
                "fromLine": 15,
                "toLine": 50,
                "oldContent": " * limitations under the License.\n */\npackage org.apache.rocketmq.common.stats;\n\npublic class Stats {\n\n    public static final String QUEUE_PUT_NUMS = \"QUEUE_PUT_NUMS\";\n    public static final String QUEUE_PUT_SIZE = \"QUEUE_PUT_SIZE\";\n    public static final String QUEUE_GET_NUMS = \"QUEUE_GET_NUMS\";\n    public static final String QUEUE_GET_SIZE = \"QUEUE_GET_SIZE\";\n    public static final String TOPIC_PUT_NUMS = \"TOPIC_PUT_NUMS\";\n    public static final String TOPIC_PUT_SIZE = \"TOPIC_PUT_SIZE\";\n    public static final String GROUP_GET_NUMS = \"GROUP_GET_NUMS\";\n    public static final String GROUP_GET_SIZE = \"GROUP_GET_SIZE\";\n    public static final String SNDBCK_PUT_NUMS = \"SNDBCK_PUT_NUMS\";\n    public static final String BROKER_PUT_NUMS = \"BROKER_PUT_NUMS\";\n    public static final String BROKER_GET_NUMS = \"BROKER_GET_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_NUMS = \"GROUP_GET_FROM_DISK_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_SIZE = \"GROUP_GET_FROM_DISK_SIZE\";\n    public static final String BROKER_GET_FROM_DISK_NUMS = \"BROKER_GET_FROM_DISK_NUMS\";\n    public static final String BROKER_GET_FROM_DISK_SIZE = \"BROKER_GET_FROM_DISK_SIZE\";\n    public static final String COMMERCIAL_SEND_TIMES = \"COMMERCIAL_SEND_TIMES\";\n    public static final String COMMERCIAL_SNDBCK_TIMES = \"COMMERCIAL_SNDBCK_TIMES\";\n    public static final String COMMERCIAL_RCV_TIMES = \"COMMERCIAL_RCV_TIMES\";\n    public static final String COMMERCIAL_RCV_EPOLLS = \"COMMERCIAL_RCV_EPOLLS\";\n    public static final String COMMERCIAL_SEND_SIZE = \"COMMERCIAL_SEND_SIZE\";\n    public static final String COMMERCIAL_RCV_SIZE = \"COMMERCIAL_RCV_SIZE\";\n    public static final String COMMERCIAL_PERM_FAILURES = \"COMMERCIAL_PERM_FAILURES\";\n\n    public static final String GROUP_GET_FALL_SIZE = \"GROUP_GET_FALL_SIZE\";\n    public static final String GROUP_GET_FALL_TIME = \"GROUP_GET_FALL_TIME\";\n    public static final String GROUP_GET_LATENCY = \"GROUP_GET_LATENCY\";\n}\n",
                "newContent": " * limitations under the License.\n */\npackage org.apache.rocketmq.common.stats;\n\npublic class Stats {\n\n    // All constants are removed\n}\n"
            }
        ],
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 16,
                "toLine": 73,
                "oldContent": " */\npackage org.apache.rocketmq.store.stats;\n\nimport java.util.HashMap;\nimport java.util.concurrent.ScheduledExecutorService;\nimport org.apache.commons.lang3.tuple.Pair;\nimport org.apache.rocketmq.common.BrokerConfig;\nimport org.apache.rocketmq.common.ThreadFactoryImpl;\nimport org.apache.rocketmq.common.UtilAll;\nimport org.apache.rocketmq.common.constant.LoggerName;\nimport org.apache.rocketmq.common.statistics.StatisticsItem;\nimport org.apache.rocketmq.common.statistics.StatisticsItemFormatter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledIncrementPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemStateGetter;\nimport org.apache.rocketmq.common.statistics.StatisticsKindMeta;\nimport org.apache.rocketmq.common.statistics.StatisticsManager;\nimport org.apache.rocketmq.common.stats.MomentStatsItemSet;\nimport org.apache.rocketmq.common.stats.Stats;\nimport org.apache.rocketmq.common.stats.StatsItem;\nimport org.apache.rocketmq.common.stats.StatsItemSet;\nimport org.apache.rocketmq.common.topic.TopicValidator;\nimport org.apache.rocketmq.common.utils.ThreadUtils;\nimport org.apache.rocketmq.logging.org.slf4j.Logger;\nimport org.apache.rocketmq.logging.org.slf4j.LoggerFactory;\n\npublic class BrokerStatsManager {\n\n    @Deprecated public static final String QUEUE_PUT_NUMS = Stats.QUEUE_PUT_NUMS;\n    ...",
                "newContent": " */\npackage org.apache.rocketmq.store.stats;\n\nimport java.util.HashMap;\nimport java.util.concurrent.ScheduledExecutorService;\nimport org.apache.commons.lang3.tuple.Pair;\nimport org.apache.rocketmq.common.BrokerConfig;\nimport org.apache.rocketmq.common.ThreadFactoryImpl;\nimport org.apache.rocketmq.common.UtilAll;\nimport org.apache.rocketmq.common.constant.LoggerName;\nimport org.apache.rocketmq.common.statistics.StatisticsItem;\nimport org.apache.rocketmq.common.statistics.StatisticsItemFormatter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledIncrementPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemStateGetter;\nimport org.apache.rocketmq.common.statistics.StatisticsKindMeta;\nimport org.apache.rocketmq.common.statistics.StatisticsManager;\nimport org.apache.rocketmq.common.stats.MomentStatsItemSet;\nimport org.apache.rocketmq.common.stats.Stats;\nimport org.apache.rocketmq.common.stats.StatsItem;\nimport org.apache.rocketmq.common.stats.StatsItemSet;\nimport org.apache.rocketmq.common.topic.TopicValidator;\nimport org.apache.rocketmq.common.utils.ThreadUtils;\nimport org.apache.rocketmq.logging.org.slf4j.Logger;\nimport org.apache.rocketmq.logging.org.slf4j LoggerFactory;\n\npublic class BrokerStatsManager {\n\n    // All deprecated fields removed\n    ..."
            },
            {
                "fromLine": 160,
                "toLine": 225,
                "oldContent": "        this.enableQueueStat = enableQueueStat;\n        initScheduleService();\n        init();\n    }\n\n    public void init() {\n        momentStatsItemSetFallSize = new MomentStatsItemSet(GROUP_GET_FALL_SIZE,\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);\n\n        if (enableQueueStat) {\n            this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            ...",
                "newContent": "        this.enableQueueStat = enableQueueStat;\n        initScheduleService();\n        init();\n    }\n\n    public void init() {\n        momentStatsItemSetFallSize = new MomentStatsItemSet(StatNameConst.GROUP_GET_FALL_SIZE,\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new MomentStatsItemSet(StatNameConst.GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);\n\n        if (enableQueueStat) {\n            this.statsTable.put(StatNameConst.QUEUE_PUT_NUMS, new StatsItemSet(StatNameConst.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(StatNameConst.QUEUE_PUT_SIZE, new StatsItemSet(StatNameConst.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            ..."
            },
            {
                "fromLine": 327,
                "toLine": 394,
                "oldContent": "        }\n\n        return null;\n    }\n\n    public void onTopicDeleted(final String topic) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).delValue(topic);\n        this.statsTable.get(Stats.TOPIC_PUT_SIZE).delValue(topic);\n        ...",
                "newContent": "        }\n\n        return null;\n    }\n\n    public void onTopicDeleted(final String topic) {\n        this.statsTable.get(StatNameConst.TOPIC_PUT_NUMS).delValue(topic);\n        this.statsTable.get(StatNameConst.TOPIC_PUT_SIZE).delValue(topic);\n        ..."
            },
            {
                "fromLine": 413,
                "toLine": 436,
                "oldContent": "\n    public void incChannelIdleNum() {\n        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_IDLE, 1, 1);\n    }\n\n    public void incTopicPutNums(final String topic) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, 1, 1);\n    ...\n    }",
                "newContent": "\n    public void incChannelIdleNum() {\n        this.statsTable.get(CHANNEL_ACTIVITY).addValue(CHANNEL_ACTIVITY_IDLE, 1, 1);\n    }\n\n    public void incTopicPutNums(final String topic) {\n        this.statsTable.get(StatNameConst.TOPIC_PUT_NUMS).addValue(topic, 1, 1);\n    ...\n    }"
            },
            {
                "fromLine": 485,
                "toLine": 505,
                "oldContent": "        strBuilder.append(queueId).append(\"@\").append(topic).append(\"@\").append(group);\n        return strBuilder.toString();\n    }\n\n    public void incGroupGetSize(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(Stats.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);\n    ...\n    }",
                "newContent": "        strBuilder.append(queueId).append(\"@\").append(topic).append(\"@\").append(group);\n        return strBuilder.toString();\n    }\n\n    public void incGroupGetSize(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(StatNameConst.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);\n    ...\n    }"
            },
            {
                "fromLine": 510,
                "toLine": 529,
                "oldContent": "        }\n        statsKey.append(queueId).append(\"@\").append(topic);\n        this.statsTable.get(TOPIC_PUT_LATENCY).addValue(statsKey.toString(), incValue, 1);\n    }\n\n    public void incBrokerPutNums() {\n        this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(1);\n    ...\n    }",
                "newContent": "        }\n        statsKey.append(queueId).append(\"@\").append(topic);\n        this.statsTable.get(TOPIC_PUT_LATENCY).addValue(statsKey.toString(), incValue, 1);\n    }\n\n    public void incBrokerPutNums() {\n        this.statsTable.get(StatNameConst.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(1);\n    ...\n    }"
            },
            {
                "fromLine": 571,
                "toLine": 586,
                "oldContent": "        }\n        return statsItem.getValue().longValue();\n    }\n\n    public void incSendBackNums(final String group, final String topic) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).addValue(statsKey, 1, 1);\n    ...\n    }",
                "newContent": "        }\n        return statsItem.getValue().longValue();\n    }\n\n    public void incSendBackNums(final String group, final String topic) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(StatNameConst.SNDBCK_PUT_NUMS).addValue(statsKey, 1, 1);\n    ...\n    }"
            },
            {
                "fromLine": 619,
                "toLine": 639,
                "oldContent": "        final String msgType, final String flowlimitThreshold, final int incValue) {\n        final String statsKey = buildAccountStatsKey(accountOwnerParent, accountOwnerSelf, instanceId, topic, group,\n            msgType, flowlimitThreshold);\n        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n    ...\n    }",
                "newContent": "        final String msgType, final String flowlimitThreshold, final int incValue) {\n        final String statsKey = buildAccountStatsKey(accountOwnerParent, accountOwnerSelf, instanceId, topic, group,\n            msgType, flowlimitThreshold);\n        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n    ...\n    }"
            },
            {
                "fromLine": 694,
                "toLine": 713,
                "oldContent": "        strBuilder.append(topic).append(sep);\n        strBuilder.append(group).append(sep);\n        strBuilder.append(msgType);\n        return strBuilder.toString();\n    }\n\n    public String buildAccountStatKey(final String owner, final String instanceId,\n        final String topic, final String group,\n        final String msgType, String flowlimitThreshold) {\n        final String sep = \"|\";\n        StringBuffer strBuilder = new StringBuffer();\n        strBuilder.append(owner).append(sep);\n        strBuilder.append(instanceId).append(sep);\n        strBuilder.append(topic).append(sep);\n        strBuilder.append(group).append(sep);\n        strBuilder.append(msgType).append(sep);\n        strBuilder.append(flowlimitThreshold);\n        return strBuilder.toString();\n    }\n",
                "newContent": "        strBuilder.append(topic).append(sep);\n        strBuilder.append(group).append(sep);\n        strBuilder.append(msgType);\n        return strBuilder.toString();\n    }\n\n    public String buildAccountStatKey(final String owner, final String instanceId,\n        final String topic, final String group,\n        final String msgType, String flowlimitThreshold) {\n        final String sep = \"|\";\n        StringBuffer strBuilder = new StringBuffer();\n        strBuilder.append(owner).append(sep);\n        strBuilder.append(instanceId).append(sep);\n        strBuilder.append(topic).append(sep);\n        strBuilder.append(group).append(sep);\n        strBuilder.append(msgType).append(sep);\n        strBuilder.append(flowlimitThreshold);\n        return strBuilder.toString();\n    }\n"
            }
        ],
        "store/src/test/java/org/apache/rocketmq/store/stats/BrokerStatsManagerTest.java": [
            {
                "fromLine": 17,
                "toLine": 42,
                "oldContent": "\npackage org.apache.rocketmq.store.stats;\n\nimport org.apache.rocketmq.common.topic.TopicValidator;\nimport org.junit.After;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport static org.apache.rocketmq.common.stats.Stats.BROKER_PUT_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.GROUP_GET_FALL_SIZE;\nimport static org.apache.rocketmq.common.stats.Stats.GROUP_GET_FALL_TIME;\nimport static org.apache.rocketmq.common.stats.Stats.GROUP_GET_LATENCY;\nimport static org.apache.rocketmq.common.stats.Stats.GROUP_GET_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.GROUP_GET_SIZE;\nimport static org.apache.rocketmq.common.stats.Stats.QUEUE_GET_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.QUEUE_GET_SIZE;\nimport static org.apache.rocketmq.common.stats.Stats.QUEUE_PUT_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.QUEUE_PUT_SIZE;\nimport static org.apache.rocketmq.common.stats.Stats.SNDBCK_PUT_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.TOPIC_PUT_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.TOPIC_PUT_SIZE;\nimport static org.assertj.core.api.Assertions.assertThat;\n\npublic class BrokerStatsManagerTest {\n    private BrokerStatsManager brokerStatsManager;",
                "newContent": "\npackage org.apache.rocketmq.store.stats;\n\nimport org.apache.rocketmq.common.topic.TopicValidator;\nimport org.junit.After;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport static org.apache.rocketmq.store.stats.StatNameConst.BROKER_PUT_NUMS;\nimport static org.apache.rocketmq.store.stats.StatNameConst.GROUP_GET_FALL_SIZE;\nimport static org.apache.rocketmq.store.stats.StatNameConst.GROUP_GET_FALL_TIME;\nimport static org.apache.rocketmq.store.stats.StatNameConst.GROUP_GET_LATENCY;\nimport static org.apache.rocketmq.store.stats.StatNameConst.GROUP_GET_NUMS;\nimport static org.apache.rocketmq.store.stats.StatNameConst.GROUP_GET_SIZE;\nimport static org.apache.rocketmq.store.stats.StatNameConst.QUEUE_GET_NUMS;\nimport static org.apache.rocketmq.store.stats.StatNameConst.QUEUE_GET_SIZE;\nimport static org.apache.rocketmq.store.stats.StatNameConst.QUEUE_PUT_NUMS;\nimport static org.apache.rocketmq.store.stats.StatNameConst.QUEUE_PUT_SIZE;\nimport static org.apache.rocketmq.store.stats.StatNameConst.SNDBCK_PUT_NUMS;\nimport static org.apache.rocketmq.store.stats.StatNameConst.TOPIC_PUT_NUMS;\nimport static org.apache.rocketmq.store.stats.StatNameConst.TOPIC_PUT_SIZE;\nimport static org.assertj.core.api.Assertions.assertThat;\n\npublic class BrokerStatsManagerTest {\n    private BrokerStatsManager brokerStatsManager;"
            },
            {
                "fromLine": 63,
                "toLine": 137,
                "oldContent": "\n    ...\n    }\n\n    @Test\n    public void testIncQueuePutNums() {\n        brokerStatsManager.incQueuePutNums(TOPIC, QUEUE_ID);\n        String stats
{
    "refactorings": {
        "store/src/test/java/org/apache/rocketmq/store/stats/BrokerStatsManagerTest.java": [
            {
                "fromLine": 63,
                "toLine": 137,
                "oldContent": "...",
                "newContent": "..."
            },
            {
                "fromLine": 147,
                "toLine": 168,
                "oldContent": "...",
                "newContent": "..."
            },
            {
                "fromLine": 174,
                "toLine": 191,
                "oldContent": "...",
                "newContent": "..."
            }
        ],
        "broker/src/test/java/org/apache/rocketmq/broker/processor/EndTransactionProcessorTest.java": [
            {
                "fromLine": 16,
                "toLine": 56,
                "oldContent": "...",
                "newContent": "..."
            },
            {
                "fromLine": 99,
                "toLine": 124,
                "oldContent": "...",
                "newContent": "..."
            }
        ],
        "broker/src/test/java/org/apache/rocketmq/broker/schedule/ScheduleMessageServiceTest.java": [
            {
                "fromLine": 17,
                "toLine": 62,
                "oldContent": "...",
                "newContent": "..."
            },
            {
                "fromLine": 193,
                "toLine": 203,
                "oldContent": "...",
                "newContent": "..."
            },
            {
                "fromLine": 223,
                "toLine": 235,
                "oldContent": "...",
                "newContent": "..."
            }
        ],
        "tools/src/main/java/org/apache/rocketmq/tools/command/export/ExportMetricsCommand.java": [
            {
                "fromLine": 16,
                "toLine": 49,
                "oldContent": "...",
                "newContent": "..."
            },
            {
                "fromLine": 181,
                "toLine": 199,
                "oldContent": "...",
                "newContent": "..."
            }
        ],
        "tools/src/main/java/org/apache/rocketmq/tools/command/stats/StatsAllSubCommand.java": [
            {
                "fromLine": 17,
                "toLine": 39,
                "oldContent": "...",
                "newContent": "..."
            },
            {
                "fromLine": 49,
                "toLine": 59,
                "oldContent": "...",
                "newContent": "..."
            },
            {
                "fromLine": 68,
                "toLine": 78,
                "oldContent": "...",
                "newContent": "..."
            }
        ]
    },
    "extractedClasses": {
        "common/src/main/java/org/apache/rocketmq/common/stats/StatNameConst.java": "..."
    }
}"