"{
    "refactorings": {
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 16,
                "toLine": 73,
                "oldContent": " */\npackage org.apache.rocketmq.store.stats;\n\n...",
                "newContent": " */\npackage org.apache.rocketmq.store.stats;\n\nimport org.apache.rocketmq.common.stats.StatsKeys;\n\npublic class BrokerStatsManager {\n\n    public static final String TOPIC_PUT_LATENCY = \"TOPIC_PUT_LATENCY\";\n    public static final String GROUP_ACK_NUMS = \"GROUP_ACK_NUMS\";"
            },
            {
                "fromLine": 104,
                "toLine": 117,
                "oldContent": "    public static final String FAILURE_REQ_NUM = \"FAILURE_REQ_NUM\";\n...",
                "newContent": "    public static final String FAILURE_REQ_NUM = \"FAILURE_REQ_NUM\";\n ..."
            },
            {
                "fromLine": 160,
                "toLine": 225,
                "oldContent": "        this.enableQueueStat = enableQueueStat;\n...",
                "newContent": "        this.enableQueueStat = enableQueueStat;\n        initScheduleService();\n        init();\n    }\n\n    public void init() {\n        momentStatsItemSetFallSize = new MomentStatsItemSet(StatsKeys.GROUP_GET_FALL_SIZE,\n           ..."
            },
            {
                "fromLine": 327,
                "toLine": 394,
                "oldContent": "        }\n\n        return null;\n    }\n\n    public void onTopicDeleted(final String topic) {\n ...",
                "newContent": "        }\n\n        return null;\n    }\n\n    public void onTopicDeleted(final String topic) {\n        this.statsTable.get(StatsKeys.TOPIC_PUT_NUMS)..."
            },
            {
                "fromLine": 413,
                "toLine": 436,
                "oldContent": "\n    public void incChannelIdleNum() { ...",
                "newContent": "\n    public void incChannelIdleNum() {\n        this.statsTable.get(CHANNEL_ACTIVITY)..."
            },
            {
                "fromLine": 485,
                "toLine": 505,
                "oldContent": "        strBuilder.append(queueId).append(\"@\").append(topic).append(\"@\").append(group);\n...",
                "newContent": "        strBuilder.append(queueId).append(\"@\").append(topic).append(\"@\").append(group);\n ..."
            },
            {
                "fromLine": 510,
                "toLine": 529,
                "oldContent": "        }\n        statsKey.append(queueId).append(\"@\").append(topic);\n...",
                "newContent": "        }\n        statsKey.append(queueId).append(\"@\").append(topic);\n ..."
            },
            {
                "fromLine": 571,
                "toLine": 586,
                "oldContent": "        }\n        return statsItem.getValue().longValue();\n...",
                "newContent": "        }\n        return statsItem.getValue().longValue();\n ..."
            },
            {
                "fromLine": 619,
                "toLine": 639,
                "oldContent": "        final String msgType, final String flowlimitThreshold, final int incValue) {\n ...",
                "newContent": "        final String msgType, final String flowlimitThreshold, final int incValue) {\n ..."
            },
            {
                "fromLine": 694,
                "toLine": 713,
                "oldContent": "        strBuilder.append(topic).append(sep);\n...",
                "newContent": "        strBuilder.append(topic).append(sep);\n ..."
            }
        ],
        "common/src/main/java/org/apache/rocketmq/common/stats/Stats.java": [
            {
                "fromLine": 15,
                "toLine": 50,
                "oldContent": " * limitations under the License.\n */\npackage org.apache.rocketmq.common.stats;\n\npublic class Stats {\n\n    public static final String QUEUE_PUT_NUMS ...",
                "newContent": "package org.apache.rocketmq.common.stats;\n\npublic class StatsKeys {\n ..."
            }
        ],
        "store/src/test/java/org/apache/rocketmq/store/stats/BrokerStatsManagerTest.java": [
            {
                "fromLine": 17,
                "toLine": 42,
                "oldContent": "\npackage org.apache.rocketmq.store.stats;\n\nimport org.apache.rocketmq.common.topic.TopicValidator;\n ...",
                "newContent": "\npackage org.apache.rocketmq.store.stats;\n\nimport org.apache.rocketmq.common.stats.StatsKeys;\n ..."
            },
            {
                "fromLine": 63,
                "toLine": 137,
                "oldContent": "    }\n\n    @Test\n    public void testIncQueuePutNums() {\n... ",
                "newContent": "    }\n\n    @Test\n    public void testIncQueuePutNums() {\n ..."
            },
            {
                "fromLine": 147,
                "toLine": 168,
                "oldContent": "        brokerStatsManager.incGroupGetLatency(GROUP_NAME, TOPIC, 1, 1);\n...",
                "newContent": "        brokerStatsManager.incGroupGetLatency(GROUP_NAME, TOPIC, 1, 1);\n ..."
            },
            {
                "fromLine": 174,
                "toLine": 191,
                "oldContent": "        brokerStatsManager.incGroupGetLatency(GROUP_NAME, TOPIC, 1, 1);\n...",
                "newContent": "        brokerStatsManager.incGroupGetLatency(GROUP_NAME, TOPIC, 1, 1);\n ..."
            }
        ],
        "broker/src/test/java/org/apache/rocketmq/broker/processor/EndTransactionProcessorTest.java": [
            {
                "fromLine": 16,
                "toLine": 56,
                "oldContent": " */\npackage org.apache.rocketmq.broker.processor;\n\nimport io.netty.channel.ChannelHandlerContext;\n ...",
                "newContent": "package org.apache.rocketmq.broker.processor;\n\nimport org.apache.rocketmq.common.stats.StatsKeys;\n ..."
            },
            {
                "fromLine": 99,
                "toLine": 124,
                "oldContent": "        when(transactionMsgService.commitMessage(any(EndTransactionRequestHeader.class))).thenReturn(createResponse(ResponseCode.SUCCESS));\n...",
                "newContent": "        when(transactionMsgService.commitMessage(any(EndTransactionRequestHeader.class))).thenReturn(createResponse(..."
            }
        ],
        "broker/src/test/java/org/apache/rocketmq/broker/schedule/ScheduleMessageServiceTest.java": [
            {
                "fromLine": 17,
                "toLine": 62,
                "oldContent": "\npackage org.apache.rocketmq.broker.schedule;\n\nimport java.io.File;\n...",
                "newContent": "package org.apache.rocketmq.broker.schedule;\n\nimport org.apache.rocketmq.common.stats.StatsKeys;\n ..."
            },
            {
                "fromLine": 193,
                "toLine": 203,
                "oldContent": "    }\n\n    @Test\n    public void testDeliverDelayedMessageTimerTask() throws Exception {\n...",
                "newContent": "    }\n\n    @Test\n    public void testDeliverDelayedMessageTimerTask() throws Exception {\n ..."
            },
            {
                "fromLine": 223,
                "toLine": 235,
                "oldContent": "\n        messageResult = getMessage(realQueueId, offset);\n...",
                "newContent": "\n        messageResult = getMessage(realQueueId, offset);\n ..."
            }
        ],
        "tools/src/main/java/org/apache/rocketmq/tools/command/export/ExportMetricsCommand.java": [
            {
                "fromLine": 16,
                "toLine": 49,
                "oldContent": " */\npackage org.apache.rocketmq.tools.command.export;\n\nimport com.alibaba.fastjson.JSON;\n...",
                "newContent": "package org.apache.rocketmq.tools.command.export;\n\nimport org.apache.rocketmq.common.stats.StatsKeys;\n ..."
            },
            {
                "fromLine": 181,
                "toLine": 199,
                "oldContent": "            brokerAddr, false, 10000);\n\n ...",
                "newContent": "            brokerAddr, false, 10000);\n\n ..."
            }
        ],
        "tools/src/main/java/org/apache/rocketmq/tools/command/stats/StatsAllSubCommand.java": [
            {
                "fromLine": 17,
                "toLine": 39,
                "oldContent": "\npackage org.apache.rocketmq.tools.command.stats;\n\nimport org.apache.commons.cli.CommandLine;\n...",
                "newContent": "package org.apache.rocketmq.tools.command.stats;\n\nimport org.apache.rocketmq.common.stats.StatsKeys;\n ..."
            },
            {
                "fromLine": 49,
                "toLine": 59,
                "oldContent": "        long inMsgCntToday = 0;\n\n...",
                "newContent": "        long inMsgCntToday = 0;\n\n ..."
            },
            {
                "fromLine": 68,
                "toLine": 78,
                "oldContent": "\n                for (BrokerData bd : topicRouteData.getBrokerDatas()) {\n...",
                "newContent": "\n                for (BrokerData bd : topicRouteData.getBrokerDatas()) {\n ..."
            }
        ]
    },
    "extractedClasses": {
        "common/src/main/java/org/apache/rocketmq/common/stats/StatsKeys.java": "package org.apache.rocketmq.common.stats;\n\npublic class StatsKeys {\n\n    public static final String QUEUE_PUT_NUMS = \"QUEUE_PUT_NUMS\";\n    public static final String QUEUE_PUT_SIZE = \"QUEUE_PUT_SIZE\";\n    public static final String QUEUE_GET_NUMS = \"QUEUE_GET_NUMS\";\n    public static final String QUEUE_GET_SIZE = \"QUEUE_GET_SIZE\";\n    public static final String TOPIC_PUT_NUMS = \"TOPIC_PUT_NUMS\";\n    public static final String TOPIC_PUT_SIZE = \"TOPIC_PUT_SIZE\";\n    public static final String GROUP_GET_NUMS = \"GROUP_GET_NUMS\";\n    public static final String GROUP_GET_SIZE = \"GROUP_GET_SIZE\";\n    public static final String SNDBCK_PUT_NUMS = \"SNDBCK_PUT_NUMS\";\n    public static final String BROKER_PUT_NUMS = \"BROKER_PUT_NUMS\";\n    public static final String BROKER_GET_NUMS = \"BROKER_GET_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_NUMS = \"GROUP_GET_FROM_DISK_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_SIZE = \"GROUP_GET_FROM_DISK_SIZE\";\n    public static final String BROKER_GET_FROM_DISK_NUMS = \"BROKER_GET_FROM_DISK_NUMS\";\n    public static final String BROKER_GET_FROM_DISK_SIZE = \"BROKER_GET_FROM_DISK_SIZE\";\n    public static final String COMMERCIAL_SEND_TIMES = \"COMMERCIAL_SEND_TIMES\";\n    public static final String COMMERCIAL_SNDBCK_TIMES = \"COMMERCIAL_SNDBCK_TIMES\";\n    public static final String COMMERCIAL_RCV_TIMES = \"COMMERCIAL_RCV_TIMES\";\n    public static final String COMMERCIAL_RCV_EPOLLS = \"COMMERCIAL_RCV_EPOLLS\";\n    public static final String COMMERCIAL_SEND_SIZE = \"COMMERCIAL_SEND_SIZE\";\n    public static final String COMMERCIAL_RCV_SIZE = \"COMMERCIAL_RCV_SIZE\";\n    public static final String COMMERCIAL_PERM_FAILURES = \"COMMERCIAL_PERM_FAILURES\";\n\n    public static final String GROUP_GET_FALL_SIZE = \"GROUP_GET_FALL_SIZE\";\n    public static final String GROUP_GET_FALL_TIME = \"GROUP_GET_FALL_TIME\";\n    public static final String GROUP_GET_LATENCY = \"GROUP_GET_LATENCY\";\n}\n"
    }
}"