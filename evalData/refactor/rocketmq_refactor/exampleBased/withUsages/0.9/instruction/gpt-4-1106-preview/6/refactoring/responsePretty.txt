"{
    "refactorings": {
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 330,
                "toLine": 341,
                "oldContent": "private void initScheduleService() {\n        this.scheduledExecutorService =\n            ThreadUtils.newSingleThreadScheduledExecutor(new ThreadFactoryImpl(\"BrokerStatsThread\", true, brokerConfig));\n        this.commercialExecutor =\n            ThreadUtils.newSingleThreadScheduledExecutor(new ThreadFactoryImpl(\"CommercialStatsThread\", true, brokerConfig));\n        this.accountExecutor =\n            ThreadUtils.newSingleThreadScheduledExecutor(new ThreadFactoryImpl(\"AccountStatsThread\", true, brokerConfig));\n    }",
                "newContent": "private void initScheduleService() {\n        this.scheduledExecutorService =\n            ThreadUtils.newSingleThreadScheduledExecutor(new ThreadFactoryImpl(\n                \"BrokerStatsThread\", true, brokerConfig));\n        this.commercialExecutor =\n            ThreadUtils.newSingleThreadScheduledExecutor(new ThreadFactoryImpl(\n                \"CommercialStatsThread\", true, brokerConfig));\n        this.accountExecutor =\n            ThreadUtils.newSingleThreadScheduledExecutor(new ThreadFactoryImpl(\n                \"AccountStatsThread\", true, brokerConfig));\n    }"
            },
            {
                "fromLine": 380,
                "toLine": 381,
                "oldContent": "public void incQueuePutNums(final String topic, final Integer queueId) {\n        if (enableQueueStat) {",
                "newContent": "public void incQueuePutNums(final String topic, final Integer queueId) {\n        if (this.enableQueueStat) {"
            },
            {
                "fromLine": 384,
                "toLine": 385,
                "oldContent": "public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {\n        if (enableQueueStat) {",
                "newContent": "public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {\n        if (this.enableQueueStat) {"
            },
            {
                "fromLine": 388,
                "toLine": 389,
                "oldContent": "public void incQueuePutSize(final String topic, final Integer queueId, final int size) {\n        if (enableQueueStat) {",
                "newContent": "public void incQueuePutSize(final String topic, final Integer queueId, final int size) {\n        if (this.enableQueueStat) {"
            },
            {
                "fromLine": 392,
                "toLine": 393,
                "oldContent": "public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {",
                "newContent": "public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (this.enableQueueStat) {"
            },
            {
                "fromLine": 396,
                "toLine": 397,
                "oldContent": "public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {",
                "newContent": "public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (this.enableQueueStat) {"
            },
            {
                "fromLine": 416,
                "toLine": 417,
                "oldContent": "public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String statsKey;",
                "newContent": "public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        if (this.enableQueueStat) {\n            String statsKey = buildStatsKey(queueId, topic, group);\n            this.statsTable.get(Stats.GROUP_GET_LATENCY).addRTValue(statsKey, incValue, 1);\n        } else {\n            String statsKey = buildStatsKey(topic, group);"
            },
            {
                "fromLine": 765,
                "toLine": 766,
                "oldContent": "        final String statsKey = buildStatsKey(queueId, topic, group);",
                "newContent": "            String statsKey = buildStatsKey(queueId, topic, group);"
            }
        ]
    },
    "extractedClasses": {}
}"