"{
  "refactorings": {
    "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
      {
        "fromLine": 95,
        "toLine": 95,
        "oldContent": "    private StateGetter producerStateGetter;",
        "newContent": "    private StateAccessor producerStateAccessor;"
      },
      {
        "fromLine": 152,
        "toLine": 152,
        "oldContent": "    public StateGetter getProducerStateGetter() {",
        "newContent": "    public StateAccessor getProducerStateAccessor() {"
      },
      {
        "fromLine": 156,
        "toLine": 156,
        "oldContent": "    public void setProducerStateGetter(StateGetter producerStateGetter) {",
        "newContent": "    public void setProducerStateAccessor(StateAccessor producerStateAccessor) {"
      },
      {
        "fromLine": 158,
        "toLine": 158,
        "oldContent": "        this.producerStateGetter = producerStateGetter;",
        "newContent": "        this.producerStateAccessor = producerStateAccessor;"
      },
      {
        "fromLine": 160,
        "toLine": 160,
        "oldContent": "    public StateGetter getConsumerStateGetter() {",
        "newContent": "    public StateAccessor getConsumerStateAccessor() {"
      },
      {
        "fromLine": 164,
        "toLine": 164,
        "oldContent": "    public void setConsumerStateGetter(StateGetter consumerStateGetter) {",
        "newContent": "    public void setConsumerStateAccessor(StateAccessor consumerStateAccessor) {"
      },
      {
        "fromLine": 166,
        "toLine": 166,
        "oldContent": "        this.consumerStateGetter = consumerStateGetter;",
        "newContent": "        this.consumerStateAccessor = consumerStateAccessor;"
      },
      {
        "fromLine": 259,
        "toLine": 285,
        "oldContent": "        this.accountStatManager.setStatisticsItemStateGetter(new StatisticsItemStateGetter() {\n            @Override\n            public boolean online(StatisticsItem item) {\n                String[] strArr = null;\n                try {\n                    strArr = splitAccountStatKey(item.getStatObject());\n                } catch (Exception e) {\n                    log.warn(\"parse account stat key failed, key: {}\", item.getStatObject());\n                    return false;\n                }\n\n                // TODO ugly\n                if (strArr == null || strArr.length < 4) {\n                    return false;\n                }\n\n                String instanceId = strArr[1];\n                String topic = strArr[2];\n                String group = strArr[3];\n\n                String kind = item.getStatKind();\n                if (ACCOUNT_SEND.equals(kind) || ACCOUNT_SEND_REJ.equals(kind)) {\n                    return producerStateGetter.online(instanceId, group, topic);\n                } else if (ACCOUNT_RCV.equals(kind) || ACCOUNT_SEND_BACK.equals(kind) || ACCOUNT_SEND_BACK_TO_DLQ.equals(kind) || ACCOUNT_REV_REJ.equals(kind)) {\n                    return consumerStateGetter.online(instanceId, group, topic);\n                }\n                return false;\n            }\n        });",
        "newContent": "        this.accountStatManager.setStateAccessor(new StateAccessor() {\n            @Override\n            public boolean isOnline(StatisticsItem item) {\n                String[] strArr = null;\n                try {\n                    strArr = splitAccountStatKey(item.getStatObject());\n                } catch (Exception e) {\n                    log.warn(\"parse account stat key failed, key: {}\", item.getStatObject());\n                    return false;\n                }\n\n                // TODO ugly\n                if (strArr == null || strArr.length < 4) {\n                    return false;\n                }\n\n                String instanceId = strArr[1];\n                String topic = strArr[2];\n                String group = strArr[3];\n\n                String kind = item.getStatKind();\n                if (ACCOUNT_SEND.equals(kind) || ACCOUNT_SEND_REJ.equals(kind)) {\n                    return producerStateAccessor.isOnline(instanceId, group, topic);\n                } else if (ACCOUNT_RCV.equals(kind) || ACCOUNT_SEND_BACK.equals(kind) || ACCOUNT_SEND_BACK_TO_DLQ.equals(kind) || ACCOUNT_REV_REJ.equals(kind)) {\n                    return consumerStateAccessor.isOnline(instanceId, group, topic);\n                }\n                return false;\n            }\n        });"
      }
    ]
  },
  "extractedClasses": {
    "store/src/main/java/org/apache/rocketmq/store/stats/StateAccessor.java": "package org.apache.rocketmq.store.stats;\n\npublic interface StateAccessor {\n    boolean isOnline(String instanceId, String group, String topic);\n}"
  }
}"