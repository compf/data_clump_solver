{
    "refactorings": {
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 443,
                "toLine": 445,
                "oldContent": "public void incQueuePutNums(final String topic, final Integer queueId) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), 1, 1);",
                "newContent": "public void incQueuePutNums(StatsItemKey key) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(key.getKey(), 1, 1);"
            },
            {
                "fromLine": 447,
                "toLine": 449,
                "oldContent": "public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), num, times);",
                "newContent": "public void incQueuePutNums(StatsItemKey key, int num, int times) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(key.getKey(), num, times);"
            },
            {
                "fromLine": 451,
                "toLine": 453,
                "oldContent": "public void incQueuePutSize(final String topic, final Integer queueId, final int size) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_SIZE).addValue(buildStatsKey(topic, queueId), size, 1);",
                "newContent": "public void incQueuePutSize(StatsItemKey key, final int size) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_SIZE).addValue(key.getKey(), size, 1);"
            },
            {
                "fromLine": 455,
                "toLine": 457,
                "oldContent": "public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = buildStatsKey(topic, queueId, group);",
                "newContent": "public void incQueueGetNums(StatsItemKey key, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = key.getKey();"
            },
            {
                "fromLine": 459,
                "toLine": 461,
                "oldContent": "public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = buildStatsKey(topic, queueId, group);",
                "newContent": "public void incQueueGetSize(StatsItemKey key, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = key.getKey();"
            },
            {
                "fromLine": 491,
                "toLine": 493,
                "oldContent": "public void incGroupGetNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(Stats.GROUP_GET_NUMS).addValue(statsKey, incValue, 1);",
                "newContent": "public void incGroupGetNums(StatsItemKey key, final int incValue) {\n        final String statsKey = key.getKey();\n        this.statsTable.get(Stats.GROUP_GET_NUMS).addValue(statsKey, incValue, 1);"
            },
            {
                "fromLine": 497,
                "toLine": 499,
                "oldContent": "public void incGroupGetSize(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(Stats.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);",
                "newContent": "public void incGroupGetSize(StatsItemKey key, final int incValue) {\n        final String statsKey = key.getKey();\n        this.statsTable.get(Stats.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);"
            },
            {
                "fromLine": 501,
                "toLine": 503,
                "oldContent": "public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String statsKey;\n        if (enableQueueStat) {",
                "newContent": "public void incGroupGetLatency(StatsItemKey key, final int incValue) {\n        String statsKey = enableQueueStat ? key.getKeyExt() : key.getKey();\n        "
            },
            {
                "fromLine": 505,
                "toLine": 506,
                "oldContent": "            statsKey = buildStatsKey(queueId, topic, group);",
                "newContent": ""
            },
            {
                "fromLine": 508,
                "toLine": 509,
                "oldContent": "            statsKey = buildStatsKey(topic, group);",
                "newContent": ""
            },
            {
                "fromLine": 515,
                "toLine": 516,
                "oldContent": "public void incTopicPutNums(final String topic) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, 1, 1);",
                "newContent": "public void incTopicPutNums(StatsItemKey key) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(key.getKey(), 1, 1);"
            },
            {
                "fromLine": 518,
                "toLine": 519,
                "oldContent": "public void incTopicPutNums(final String topic, int num, int times) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, num, times);",
                "newContent": "public void incTopicPutNums(StatsItemKey key, int num, int times) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(key.getKey(), num, times);"
            },
            {
                "fromLine": 521,
                "toLine": 521,
                "oldContent": "public void incTopicPutSize(final String topic, final int size) {",
                "newContent": "public void incTopicPutSize(StatsItemKey key, final int size) {"
            },
            {
                "fromLine": 523,
                "toLine": 523,
                "oldContent": "        this.statsTable.get(Stats.TOPIC_PUT_SIZE).addValue(topic, size, 1);",
                "newContent": "        this.statsTable.get(Stats.TOPIC_PUT_SIZE).addValue(key.getKey(), size, 1);"
            },
            {
                "fromLine": 525,
                "toLine": 525,
                "oldContent": "public void incSendBackNums(final String group, final String topic) {",
                "newContent": "public void incSendBackNums(StatsItemKey key) {"
            },
            {
                "fromLine": 526,
                "toLine": 526,
                "oldContent": "        final String statsKey = buildStatsKey(topic, group);",
                "newContent": "        final String statsKey = key.getKey();"
            },
            {
                "fromLine": 528,
                "toLine": 528,
                "oldContent": "        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).addValue(statsKey, 1, 1);",
                "newContent": "        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).addValue(statsKey, 1, 1);"
            }
        ]
    },
    "extractedClasses": {
        "store/src/main/java/org/apache/rocketmq/store/stats/StatsItemKey.java": "package org.apache.rocketmq.store.stats;\n\npublic class StatsItemKey {\n    private String key;\n    private String keyExt;\n\n    public StatsItemKey(String topic, String group) {\n        this.key = topic + '@' + group;\n    }\n\n    public StatsItemKey(String topic, Integer queueId, String group) {\n        this(topic, group);\n        this.keyExt = this.key + '@' + queueId;\n    }\n\n    public String getKey() {\n        return key;\n    }\n\n    public String getKeyExt() {\n        return keyExt;\n    }\n}\n"
    }
}