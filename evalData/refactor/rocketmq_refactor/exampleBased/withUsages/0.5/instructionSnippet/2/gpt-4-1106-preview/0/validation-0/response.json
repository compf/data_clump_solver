{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 16,
                "toLine": 49,
                "oldContent": " */\npackage org.apache.rocketmq.store.stats;\n\nimport java.util.HashMap;\nimport java.util.concurrent.ScheduledExecutorService;\nimport org.apache.commons.lang3.tuple.Pair;\nimport org.apache.rocketmq.common.BrokerConfig;\nimport org.apache.rocketmq.common.ThreadFactoryImpl;\nimport org.apache.rocketmq.common.UtilAll;\nimport org.apache.rocketmq.common.constant.LoggerName;\nimport org.apache.rocketmq.common.statistics.StatisticsItem;\nimport org.apache.rocketmq.common.statistics.StatisticsItemFormatter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledIncrementPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemStateGetter;\nimport org.apache.rocketmq.common.statistics.StatisticsKindMeta;\nimport org.apache.rocketmq.common.statistics.StatisticsManager;\nimport org.apache.rocketmq.common.stats.MomentStatsItemSet;\nimport org.apache.rocketmq.common.stats.StatsItem;\nimport org.apache.rocketmq.common.stats.StatsItemSet;\nimport org.apache.rocketmq.common.topic.TopicValidator;\nimport org.apache.rocketmq.common.utils.ThreadUtils;\nimport org.apache.rocketmq.logging.org.slf4j.Logger;\nimport org.apache.rocketmq.logging.org.slf4j.LoggerFactory;\n\npublic class BrokerStatsManager {\n\n    private final StatsManager statsManager;\n\n    public BrokerStatsManager(BrokerConfig brokerConfig, ScheduledExecutorService scheduledExecutorService, Logger log) {\n        this.statsManager = new StatsManager(scheduledExecutorService, log);\n    }\n",
                "newContent": " */\npackage org.apache.rocketmq.store.stats;\n\nimport java.util.HashMap;\nimport java.util.concurrent.ScheduledExecutorService;\nimport org.apache.commons.lang3.tuple.Pair;\nimport org.apache.rocketmq.common.BrokerConfig;\nimport org.apache.rocketmq.common.ThreadFactoryImpl;\nimport org.apache.rocketmq.common.UtilAll;\nimport org.apache.rocketmq.common.constant.LoggerName;\nimport org.apache.rocketmq.common.statistics.StatisticsItem;\nimport org.apache.rocketmq.common.statistics.StatisticsItemFormatter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledIncrementPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemScheduledPrinter;\nimport org.apache.rocketmq.common.statistics.StatisticsItemStateGetter;\nimport org.apache.rocketmq.common.statistics.StatisticsKindMeta;\nimport org.apache.rocketmq.common.statistics.StatisticsManager;\nimport org.apache.rocketmq.common.stats.MomentStatsItemSet;\nimport org.apache.rocketmq.common.stats.StatsItem;\nimport org.apache.rocketmq.common.stats.StatsItemSet;\nimport org.apache.rocketmq.common.topic.TopicValidator;\nimport org.apache.rocketmq.common.utils.ThreadUtils;\nimport org.apache.rocketmq.logging.org.slf4j.Logger;\nimport org.apache.rocketmq.logging.org.slf4j.LoggerFactory;\n\npublic class BrokerStatsManager {\n\n    public BrokerStatsManager(BrokerConfig brokerConfig, ScheduledExecutorService scheduledExecutorService, Logger log) {\n        this.statsManager = new StatisticsManager(scheduledExecutorService, log);\n    }\n"
            },
            {
                "fromLine": 138,
                "toLine": 165,
                "oldContent": "\n    public void init() {\n        momentStatsItemSetFallSize = new MomentStatsItemSet(StatsManager.GROUP_GET_FALL_SIZE,\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new MomentStatsItemSet(StatsManager.GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);\n\n        if (enableQueueStat) {\n            this.statsTable.put(StatsManager.QUEUE_PUT_NUMS, new StatsItemSet(StatsManager.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(StatsManager.QUEUE_PUT_SIZE, new StatsItemSet(StatsManager.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(StatsManager.QUEUE_GET_NUMS, new StatsItemSet(StatsManager.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(StatsManager.QUEUE_GET_SIZE, new StatsItemSet(StatsManager.QUEUE_GET_SIZE, this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(StatsManager.TOPIC_PUT_NUMS, new StatsItemSet(StatsManager.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsManager.TOPIC_PUT_SIZE, new StatsItemSet(StatsManager.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsManager.GROUP_GET_NUMS, new StatsItemSet(StatsManager.GROUP_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsManager.GROUP_GET_SIZE, new StatsItemSet(StatsManager.GROUP_GET_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsManager.GROUP_GET_LATENCY, new StatsItemSet(StatsManager.GROUP_GET_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsManager.SNDBCK_PUT_NUMS, new StatsItemSet(StatsManager.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsManager.BROKER_PUT_NUMS, new StatsItemSet(StatsManager.BROKER_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsManager.BROKER_GET_NUMS, new StatsItemSet(StatsManager.BROKER_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "\n    public void init() {\n        momentStatsItemSetFallSize = new MomentStatsItemSet(StatisticsManager.GROUP_GET_FALL_SIZE,\n            scheduledExecutorService, log);\n\n        momentStatsItemSetFallTime = new MomentStatsItemSet(StatisticsManager.GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);\n\n        if (enableQueueStat) {\n            this.statsTable.put(StatisticsManager.QUEUE_PUT_NUMS, new StatsItemSet(StatisticsManager.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(StatisticsManager.QUEUE_PUT_SIZE, new StatsItemSet(StatisticsManager.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(StatisticsManager.QUEUE_GET_NUMS, new StatsItemSet(StatisticsManager.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(StatisticsManager.QUEUE_GET_SIZE, new StatsItemSet(StatisticsManager.QUEUE_GET_SIZE, this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(StatisticsManager.TOPIC_PUT_NUMS, new StatsItemSet(StatisticsManager.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatisticsManager.TOPIC_PUT_SIZE, new StatsItemSet(StatisticsManager.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(StatisticsManager.GROUP_GET_NUMS, new StatsItemSet(StatisticsManager.GROUP_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatisticsManager.GROUP_GET_SIZE, new StatsItemSet(StatisticsManager.GROUP_GET_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatisticsManager.GROUP_GET_LATENCY, new StatsItemSet(StatisticsManager.GROUP_GET_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(StatisticsManager.SNDBCK_PUT_NUMS, new StatsItemSet(StatisticsManager.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatisticsManager.BROKER_PUT_NUMS, new StatsItemSet(StatisticsManager.BROKER_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatisticsManager.BROKER_GET_NUMS, new StatsItemSet(StatisticsManager.BROKER_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 168,
                "toLine": 197,
                "oldContent": "        this.statsTable.put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,\n            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsManager.GROUP_GET_FROM_DISK_NUMS,\n            new StatsItemSet(StatsManager.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsManager.GROUP_GET_FROM_DISK_SIZE,\n            new StatsItemSet(StatsManager.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsManager.BROKER_GET_FROM_DISK_NUMS,\n            new StatsItemSet(StatsManager.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsManager.BROKER_GET_FROM_DISK_SIZE,\n            new StatsItemSet(StatsManager.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n\n        this.statsTable.put(SNDBCK2DLQ_TIMES,\n            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));\n\n        this.statsTable.put(StatsManager.COMMERCIAL_SEND_TIMES,\n            new StatsItemSet(StatsManager.COMMERCIAL_SEND_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsManager.COMMERCIAL_RCV_TIMES,\n            new StatsItemSet(StatsManager.COMMERCIAL_RCV_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsManager.COMMERCIAL_SEND_SIZE,\n            new StatsItemSet(StatsManager.COMMERCIAL_SEND_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsManager.COMMERCIAL_RCV_SIZE,\n            new StatsItemSet(StatsManager.COMMERCIAL_RCV_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsManager.COMMERCIAL_RCV_EPOLLS,\n            new StatsItemSet(StatsManager.COMMERCIAL_RCV_EPOLLS, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsManager.COMMERCIAL_SNDBCK_TIMES,\n            new StatsItemSet(StatsManager.COMMERCIAL_SNDBCK_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsManager.COMMERCIAL_PERM_FAILURES,\n            new StatsItemSet(StatsManager.COMMERCIAL_PERM_FAILURES, this.commercialExecutor, COMMERCIAL_LOG));\n\n        this.statsTable.put(CONSUMER_REGISTER_TIME,",
                "newContent": "        this.statsTable.put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,\n            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(StatisticsManager.GROUP_GET_FROM_DISK_NUMS,\n            new StatsItemSet(StatisticsManager.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatisticsManager.GROUP_GET_FROM_DISK_SIZE,\n            new StatsItemSet(StatisticsManager.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(StatisticsManager.BROKER_GET_FROM_DISK_NUMS,\n            new StatsItemSet(StatisticsManager.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatisticsManager.BROKER_GET_FROM_DISK_SIZE,\n            new StatsItemSet(StatisticsManager.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n\n        this.statsTable.put(SNDBCK2DLQ_TIMES,\n            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));\n\n        this.statsTable.put(StatisticsManager.COMMERCIAL_SEND_TIMES,\n            new StatsItemSet(StatisticsManager.COMMERCIAL_SEND_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatisticsManager.COMMERCIAL_RCV_TIMES,\n            new StatsItemSet(StatisticsManager.COMMERCIAL_RCV_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatisticsManager.COMMERCIAL_SEND_SIZE,\n            new StatsItemSet(StatisticsManager.COMMERCIAL_SEND_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatisticsManager.COMMERCIAL_RCV_SIZE,\n            new StatsItemSet(StatisticsManager.COMMERCIAL_RCV_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatisticsManager.COMMERCIAL_RCV_EPOLLS,\n            new StatsItemSet(StatisticsManager.COMMERCIAL_RCV_EPOLLS, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatisticsManager.COMMERCIAL_SNDBCK_TIMES,\n            new StatsItemSet(StatisticsManager.COMMERCIAL_SNDBCK_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatisticsManager.COMMERCIAL_PERM_FAILURES,\n            new StatsItemSet(StatisticsManager.COMMERCIAL_PERM_FAILURES, this.commercialExecutor, COMMERCIAL_LOG));\n"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/rocketmq/store/stats/StatisticsManager.java": "package org.apache.rocketmq.store.stats;\n\nimport java.util.concurrent.ScheduledExecutorService;\nimport org.apache.rocketmq.logging.org.slf4j.Logger;\n\npublic class StatisticsManager {\n\n    public static final String QUEUE_PUT_NUMS = \"QUEUE_PUT_NUMS\";\n    public static final String QUEUE_PUT_SIZE = \"QUEUE_PUT_SIZE\";\n    public static final String QUEUE_GET_NUMS = \"QUEUE_GET_NUMS\";\n    public static final String QUEUE_GET_SIZE = \"QUEUE_GET_SIZE\";\n    public static final String TOPIC_PUT_NUMS = \"TOPIC_PUT_NUMS\";\n    public static final String TOPIC_PUT_SIZE = \"TOPIC_PUT_SIZE\";\n    public static final String GROUP_GET_NUMS = \"GROUP_GET_NUMS\";\n    public static final String GROUP_GET_SIZE = \"GROUP_GET_SIZE\";\n    public static final String SNDBCK_PUT_NUMS = \"SNDBCK_PUT_NUMS\";\n    public static final String BROKER_PUT_NUMS = \"BROKER_PUT_NUMS\";\n    public static final String BROKER_GET_NUMS = \"BROKER_GET_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_NUMS = \"GROUP_GET_FROM_DISK_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_SIZE = \"GROUP_GET_FROM_DISK_SIZE\";\n    public static final String BROKER_GET_FROM_DISK_NUMS = \"BROKER_GET_FROM_DISK_NUMS\";\n    public static final String BROKER_GET_FROM_DISK_SIZE = \"BROKER_GET_FROM_DISK_SIZE\";\n    public static final String COMMERCIAL_SEND_TIMES = \"COMMERCIAL_SEND_TIMES\";\n    public static final String COMMERCIAL_SNDBCK_TIMES = \"COMMERCIAL_SNDBCK_TIMES\";\n    public static final String COMMERCIAL_RCV_TIMES = \"COMMERCIAL_RCV_TIMES\";\n    public static final String COMMERCIAL_RCV_EPOLLS = \"COMMERCIAL_RCV_EPOLLS\";\n    public static final String COMMERCIAL_SEND_SIZE = \"COMMERCIAL_SEND_SIZE\";\n    public static final String COMMERCIAL_RCV_SIZE = \"COMMERCIAL_RCV_SIZE\";\n    public static final String COMMERCIAL_PERM_FAILURES = \"COMMERCIAL_PERM_FAILURES\";\n    public static final String GROUP_GET_FALL_SIZE = \"GROUP_GET_FALL_SIZE\";\n    public static final String GROUP_GET_FALL_TIME = \"GROUP_GET_FALL_TIME\";\n    public static final String GROUP_GET_LATENCY = \"GROUP_GET_LATENCY\";\n\n    public StatisticsManager(ScheduledExecutorService scheduledExecutorService, Logger log) {\n        // Initialization code goes here\n    }\n\n    // Additional methods related to statistics management can be added here\n}\n"
    }
}