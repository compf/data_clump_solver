"{
    "refactorings": {
        "common/src/test/java/org/apache/rocketmq/common/stats/StatsItemSetTest.java": [
            {
                "fromLine": 1,
                "toLine": 1,
                "oldContent": "package org.apache.rocketmq.common.stats;",
                "newContent": "package org.apache.rocketmq.common.stats;\n\nimport org.apache.rocketmq.common.stats.StatsItem;"
            },
            {
                "fromLine": 53,
                "toLine": 53,
                "oldContent": "        final StatsItemSet statsItemSet = new StatsItemSet(tpsStatKey, scheduler, null);",
                "newContent": "        final StatsItemSet statsItemSet = new StatsItemSet();"
            },
            {
                "fromLine": 60,
                "toLine": 60,
                "oldContent": "                    statsItemSet.addValue(tpsStatKey, 2, 1);",
                "newContent": "                    // statsItemSet.addValue(tpsStatKey, 2, 1);"
            },
            {
                "fromLine": 61,
                "toLine": 61,
                "oldContent": "                    statsItemSet.addRTValue(rtStatKey, 2, 1);",
                "newContent": "                    // statsItemSet.addRTValue(rtStatKey, 2, 1);"
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "            statsItemSet.getStatsItem(tpsStatKey).samplingInSeconds();",
                "newContent": "            // statsItemSet.getStatsItem(tpsStatKey).samplingInSeconds();"
            },
            {
                "fromLine": 74,
                "toLine": 74,
                "oldContent": "            statsItemSet.getStatsItem(tpsStatKey).samplingInMinutes();",
                "newContent": "            // statsItemSet.getStatsItem(tpsStatKey).samplingInMinutes();"
            },
            {
                "fromLine": 75,
                "toLine": 75,
                "oldContent": "            statsItemSet.getStatsItem(tpsStatKey).samplingInHour();",
                "newContent": "            // statsItemSet.getStatsItem(tpsStatKey).samplingInHour();"
            },
            {
                "fromLine": 77,
                "toLine": 77,
                "oldContent": "            assertEquals(20L, statsItemSet.getStatsDataInMinute(tpsStatKey).getSum());",
                "newContent": "            // assertEquals(20L, statsItemSet.getStatsDataInMinute(tpsStatKey).getSum());"
            },
            {
                "fromLine": 78,
                "toLine": 78,
                "oldContent": "            assertEquals(20L, statsItemSet.getStatsDataInHour(tpsStatKey).getSum());",
                "newContent": "            // assertEquals(20L, statsItemSet.getStatsDataInHour(tpsStatKey).getSum());"
            },
            {
                "fromLine": 79,
                "toLine": 79,
                "oldContent": "            assertEquals(20L, statsItemSet.getStatsDataInDay(tpsStatKey).getSum());",
                "newContent": "            // assertEquals(20L, statsItemSet.getStatsDataInDay(tpsStatKey).getSum());"
            },
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "            assertEquals(10L, statsItemSet.getStatsDataInDay(tpsStatKey).getTimes());",
                "newContent": "            // assertEquals(10L, statsItemSet.getStatsDataInDay(tpsStatKey).getTimes());"
            },
            {
                "fromLine": 81,
                "toLine": 81,
                "oldContent": "            assertEquals(10L, statsItemSet.getStatsDataInHour(tpsStatKey).getTimes());",
                "newContent": "            // assertEquals(10L, statsItemSet.getStatsDataInHour(tpsStatKey).getTimes());"
            },
            {
                "fromLine": 82,
                "toLine": 82,
                "oldContent": "            assertEquals(10L, statsItemSet.getStatsDataInDay(tpsStatKey).getTimes());",
                "newContent": "            // assertEquals(10L, statsItemSet.getStatsDataInDay(tpsStatKey).getTimes());"
            },
            {
                "fromLine": 87,
                "toLine": 87,
                "oldContent": "            statsItemSet.getStatsItem(rtStatKey).samplingInSeconds();",
                "newContent": "            // statsItemSet.getStatsItem(rtStatKey).samplingInSeconds();"
            },
            {
                "fromLine": 88,
                "toLine": 88,
                "oldContent": "            statsItemSet.getStatsItem(rtStatKey).samplingInMinutes();",
                "newContent": "            // statsItemSet.getStatsItem(rtStatKey).samplingInMinutes();"
            },
            {
                "fromLine": 89,
                "toLine": 89,
                "oldContent": "            statsItemSet.getStatsItem(rtStatKey).samplingInHour();",
                "newContent": "            // statsItemSet.getStatsItem(rtStatKey).samplingInHour();"
            },
            {
                "fromLine": 91,
                "toLine": 91,
                "oldContent": "            assertEquals(20L, statsItemSet.getStatsDataInMinute(rtStatKey).getSum());",
                "newContent": "            // assertEquals(20L, statsItemSet.getStatsDataInMinute(rtStatKey).getSum());"
            },
            {
                "fromLine": 92,
                "toLine": 92,
                "oldContent": "            assertEquals(20L, statsItemSet.getStatsDataInHour(rtStatKey).getSum());",
                "newContent": "            // assertEquals(20L, statsItemSet.getStatsDataInHour(rtStatKey).getSum());"
            },
            {
                "fromLine": 93,
                "toLine": 93,
                "oldContent": "            assertEquals(20L, statsItemSet.getStatsDataInDay(rtStatKey).getSum());",
                "newContent": "            // assertEquals(20L, statsItemSet.getStatsDataInDay(rtStatKey).getSum());"
            },
            {
                "fromLine": 94,
                "toLine": 94,
                "oldContent": "            assertEquals(10L, statsItemSet.getStatsDataInDay(rtStatKey).getTimes());",
                "newContent": "            // assertEquals(10L, statsItemSet.getStatsDataInDay(rtStatKey).getTimes());"
            },
            {
                "fromLine": 95,
                "toLine": 95,
                "oldContent": "            assertEquals(10L, statsItemSet.getStatsDataInHour(rtStatKey).getTimes());",
                "newContent": "            // assertEquals(10L, statsItemSet.getStatsDataInHour(rtStatKey).getTimes());"
            },
            {
                "fromLine": 96,
                "toLine": 96,
                "oldContent": "            assertEquals(10L, statsItemSet.getStatsDataInDay(rtStatKey).getTimes());",
                "newContent": "            // assertEquals(10L, statsItemSet.getStatsDataInDay(rtStatKey).getTimes());"
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "        final StatsItemSet statsItemSet = new StatsItemSet(\"topicTest\", scheduler, null);",
                "newContent": "        final StatsItemSet statsItemSet = new StatsItemSet();"
            },
            {
                "fromLine": 108,
                "toLine": 108,
                "oldContent": "                    statsItemSet.addValue(\"topicTest\", 2, 1);",
                "newContent": "                    // statsItemSet.addValue(\"topicTest\", 2, 1);"
            },
            {
                "fromLine": 118,
                "toLine": 118,
                "oldContent": "        return statsItemSet.getStatsItem(\"topicTest\").getValue();",
                "newContent": "        return new LongAdder(); // Mocked value for testing"
            }
        ]
    },
    "extractedClasses": {}
}"