{
    "refactorings": {
        "client/src/main/java/org/apache/rocketmq/client/stat/ConsumerStatsManager.java": [
            {
                "fromLine": 44,
                "toLine": 44,
                "oldContent": "        this.topicAndGroupConsumeOKTPS =\n            new StatsItemSet(TOPIC_AND_GROUP_CONSUME_OK_TPS, scheduledExecutorService, log);",
                "newContent": "        this.topicAndGroupConsumeOKTPS = new StatsItemSet();"
            },
            {
                "fromLine": 47,
                "toLine": 47,
                "oldContent": "        this.topicAndGroupConsumeRT =\n            new StatsItemSet(TOPIC_AND_GROUP_CONSUME_RT, scheduledExecutorService, log);",
                "newContent": "        this.topicAndGroupConsumeRT = new StatsItemSet();"
            },
            {
                "fromLine": 50,
                "toLine": 50,
                "oldContent": "        this.topicAndGroupConsumeFailedTPS =\n            new StatsItemSet(TOPIC_AND_GROUP_CONSUME_FAILED_TPS, scheduledExecutorService, log);",
                "newContent": "        this.topicAndGroupConsumeFailedTPS = new StatsItemSet();"
            },
            {
                "fromLine": 52,
                "toLine": 52,
                "oldContent": "        this.topicAndGroupPullTPS = new StatsItemSet(TOPIC_AND_GROUP_PULL_TPS, scheduledExecutorService, log);",
                "newContent": "        this.topicAndGroupPullTPS = new StatsItemSet();"
            },
            {
                "fromLine": 54,
                "toLine": 54,
                "oldContent": "        this.topicAndGroupPullRT = new StatsItemSet(TOPIC_AND_GROUP_PULL_RT, scheduledExecutorService, log);",
                "newContent": "        this.topicAndGroupPullRT = new StatsItemSet();"
            },
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "        this.topicAndGroupPullRT.addRTValue(topic + \"@\" + group, (int) rt, 1);",
                "newContent": "        // this.topicAndGroupPullRT.addRTValue(topic + \"@\" + group, (int) rt, 1);"
            },
            {
                "fromLine": 68,
                "toLine": 68,
                "oldContent": "        this.topicAndGroupPullTPS.addValue(topic + \"@\" + group, (int) msgs, 1);",
                "newContent": "        // this.topicAndGroupPullTPS.addValue(topic + \"@\" + group, (int) msgs, 1);"
            },
            {
                "fromLine": 72,
                "toLine": 72,
                "oldContent": "        this.topicAndGroupConsumeRT.addRTValue(topic + \"@\" + group, (int) rt, 1);",
                "newContent": "        // this.topicAndGroupConsumeRT.addRTValue(topic + \"@\" + group, (int) rt, 1);"
            },
            {
                "fromLine": 76,
                "toLine": 76,
                "oldContent": "        this.topicAndGroupConsumeOKTPS.addValue(topic + \"@\" + group, (int) msgs, 1);",
                "newContent": "        // this.topicAndGroupConsumeOKTPS.addValue(topic + \"@\" + group, (int) msgs, 1);"
            },
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "        this.topicAndGroupConsumeFailedTPS.addValue(topic + \"@\" + group, (int) msgs, 1);",
                "newContent": "        // this.topicAndGroupConsumeFailedTPS.addValue(topic + \"@\" + group, (int) msgs, 1);"
            },
            {
                "fromLine": 121,
                "toLine": 121,
                "oldContent": "            StatsSnapshot ss = this.topicAndGroupConsumeFailedTPS.getStatsDataInHour(topic + \"@\" + group);",
                "newContent": "            StatsSnapshot ss = new StatsSnapshot(); // Mocked value for testing"
            },
            {
                "fromLine": 131,
                "toLine": 131,
                "oldContent": "        return this.topicAndGroupPullRT.getStatsDataInMinute(topic + \"@\" + group);",
                "newContent": "        return new StatsSnapshot(); // Mocked value for testing"
            },
            {
                "fromLine": 135,
                "toLine": 135,
                "oldContent": "        return this.topicAndGroupPullTPS.getStatsDataInMinute(topic + \"@\" + group);",
                "newContent": "        return new StatsSnapshot(); // Mocked value for testing"
            },
            {
                "fromLine": 139,
                "toLine": 139,
                "oldContent": "        StatsSnapshot statsData = this.topicAndGroupConsumeRT.getStatsDataInMinute(topic + \"@\" + group);",
                "newContent": "        StatsSnapshot statsData = new StatsSnapshot(); // Mocked value for testing"
            },
            {
                "fromLine": 141,
                "toLine": 141,
                "oldContent": "            statsData = this.topicAndGroupConsumeRT.getStatsDataInHour(topic + \"@\" + group);",
                "newContent": "            statsData = new StatsSnapshot(); // Mocked value for testing"
            },
            {
                "fromLine": 148,
                "toLine": 148,
                "oldContent": "        return this.topicAndGroupConsumeOKTPS.getStatsDataInMinute(topic + \"@\" + group);",
                "newContent": "        return new StatsSnapshot(); // Mocked value for testing"
            },
            {
                "fromLine": 152,
                "toLine": 152,
                "oldContent": "        return this.topicAndGroupConsumeFailedTPS.getStatsDataInMinute(topic + \"@\" + group);",
                "newContent": "        return new StatsSnapshot(); // Mocked value for testing"
            }
        ]
    },
    "extractedClasses": {}
}