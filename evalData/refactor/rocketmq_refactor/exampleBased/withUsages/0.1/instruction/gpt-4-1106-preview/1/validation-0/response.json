{
    "refactorings": {
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 19,
                "toLine": 19,
                "oldContent": "import org.apache.rocketmq.store.stats.dataclumps.StatsKey;",
                "newContent": ""
            },
            {
                "fromLine": 140,
                "toLine": 140,
                "oldContent": "    private final HashMap<StatsKey, StatsItemSet> statsTable = new HashMap<>();",
                "newContent": "    private final HashMap<String, StatsItemSet> statsTable = new HashMap<>();"
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "    private final StatsKey clusterName;",
                "newContent": "    private final String clusterName;"
            },
            {
                "fromLine": 111,
                "toLine": 111,
                "oldContent": "    private final MomentStatsItemSet momentStatsItemSetFallSize;",
                "newContent": "    private MomentStatsItemSet momentStatsItemSetFallSize;"
            },
            {
                "fromLine": 112,
                "toLine": 112,
                "oldContent": "    private final MomentStatsItemSet momentStatsItemSetFallTime;",
                "newContent": "    private MomentStatsItemSet momentStatsItemSetFallTime;"
            },
            {
                "fromLine": 114,
                "toLine": 114,
                "oldContent": "    private final StateGetter producerStateGetter;",
                "newContent": "    private StateGetter producerStateGetter;"
            },
            {
                "fromLine": 115,
                "toLine": 115,
                "oldContent": "    private final StateGetter consumerStateGetter;",
                "newContent": "    private StateGetter consumerStateGetter;"
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "    private final BrokerConfig brokerConfig;",
                "newContent": "    private BrokerConfig brokerConfig;"
            },
            {
                "fromLine": 119,
                "toLine": 119,
                "oldContent": "    public BrokerStatsManager(BrokerConfig brokerConfig, StateGetter producerStateGetter, StateGetter consumerStateGetter) {",
                "newContent": "    public BrokerStatsManager(BrokerConfig brokerConfig) {"
            },
            {
                "fromLine": 120,
                "toLine": 120,
                "oldContent": "        this(brokerConfig.getBrokerClusterName(), brokerConfig.isEnableDetailStat(), brokerConfig, producerStateGetter, consumerStateGetter);",
                "newContent": "        this.brokerConfig = brokerConfig;"
            },
            {
                "fromLine": 121,
                "toLine": 121,
                "oldContent": "",
                "newContent": "        this.enableQueueStat = brokerConfig.isEnableDetailStat();"
            },
            {
                "fromLine": 122,
                "toLine": 122,
                "oldContent": "",
                "newContent": "        initScheduleService();"
            },
            {
                "fromLine": 123,
                "toLine": 123,
                "oldContent": "",
                "newContent": "        this.clusterName = brokerConfig.getBrokerClusterName();"
            },
            {
                "fromLine": 124,
                "toLine": 124,
                "oldContent": "",
                "newContent": "        init();"
            },
            {
                "fromLine": 126,
                "toLine": 126,
                "oldContent": "    public BrokerStatsManager(String clusterName, boolean enableQueueStat, BrokerConfig brokerConfig, StateGetter producerStateGetter, StateGetter consumerStateGetter) {",
                "newContent": "    public BrokerStatsManager(String clusterName, boolean enableQueueStat) {"
            },
            {
                "fromLine": 127,
                "toLine": 127,
                "oldContent": "        this.clusterName = new StatsKey(clusterName);",
                "newContent": "        this.clusterName = clusterName;"
            },
            {
                "fromLine": 128,
                "toLine": 128,
                "oldContent": "        this.brokerConfig = brokerConfig;",
                "newContent": "        this.enableQueueStat = enableQueueStat;"
            },
            {
                "fromLine": 129,
                "toLine": 129,
                "oldContent": "        this.producerStateGetter = producerStateGetter;",
                "newContent": "        initScheduleService();"
            },
            {
                "fromLine": 130,
                "toLine": 130,
                "oldContent": "        this.consumerStateGetter = consumerStateGetter;",
                "newContent": "        init();"
            },
            {
                "fromLine": 131,
                "toLine": 131,
                "oldContent": "        initScheduleService();\n        init();\n    }",
                "newContent": "    }"
            },
            {
                "fromLine": 133,
                "toLine": 133,
                "oldContent": "    private void init() {",
                "newContent": "    public void init() {"
            },
            {
                "fromLine": 134,
                "toLine": 134,
                "oldContent": "        this.momentStatsItemSetFallSize = new MomentStatsItemSet(GROUP_GET_FALL_SIZE,",
                "newContent": "        momentStatsItemSetFallSize = new MomentStatsItemSet(GROUP_GET_FALL_SIZE,"
            },
            {
                "fromLine": 137,
                "toLine": 137,
                "oldContent": "        this.momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,",
                "newContent": "        momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,"
            },
            {
                "fromLine": 140,
                "toLine": 140,
                "oldContent": "        if (this.brokerConfig.isEnableDetailStat()) {",
                "newContent": "        if (enableQueueStat) {"
            },
            {
                "fromLine": 141,
                "toLine": 141,
                "oldContent": "            this.statsTable.put(new StatsKey(Stats.QUEUE_PUT_NUMS), new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "            this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 142,
                "toLine": 142,
                "oldContent": "            this.statsTable.put(new StatsKey(Stats.QUEUE_PUT_SIZE), new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));",
                "newContent": "            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 143,
                "toLine": 143,
                "oldContent": "            this.statsTable.put(new StatsKey(Stats.QUEUE_GET_NUMS), new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));",
                "newContent": "            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 144,
                "toLine": 144,
                "oldContent": "            this.statsTable.put(new StatsKey(Stats.QUEUE_GET_SIZE), new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));",
                "newContent": "            this.statsTable.put(Stats.QUEUE_GET_SIZE, new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 146,
                "toLine": 146,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.TOPIC_PUT_NUMS), new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 147,
                "toLine": 147,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.TOPIC_PUT_SIZE), new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 148,
                "toLine": 148,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.GROUP_GET_NUMS), new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 149,
                "toLine": 149,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.GROUP_GET_SIZE), new StatsItemSet(Stats.GROUP_GET_SIZE, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(Stats.GROUP_GET_SIZE, new StatsItemSet(Stats.GROUP_GET_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 150,
                "toLine": 150,
                "oldContent": "        this.statsTable.put(new StatsKey(GROUP_ACK_NUMS), new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 151,
                "toLine": 151,
                "oldContent": "        this.statsTable.put(new StatsKey(GROUP_CK_NUMS), new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 152,
                "toLine": 152,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.GROUP_GET_LATENCY), new StatsItemSet(Stats.GROUP_GET_LATENCY, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(Stats.GROUP_GET_LATENCY, new StatsItemSet(Stats.GROUP_GET_LATENCY, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 153,
                "toLine": 153,
                "oldContent": "        this.statsTable.put(new StatsKey(TOPIC_PUT_LATENCY), new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 154,
                "toLine": 154,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.SNDBCK_PUT_NUMS), new StatsItemSet(Stats.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(Stats.SNDBCK_PUT_NUMS, new StatsItemSet(Stats.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 155,
                "toLine": 155,
                "oldContent": "        this.statsTable.put(new StatsKey(DLQ_PUT_NUMS), new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 156,
                "toLine": 156,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.BROKER_PUT_NUMS), new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 157,
                "toLine": 157,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.BROKER_GET_NUMS), new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(Stats.BROKER_GET_NUMS, new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 158,
                "toLine": 158,
                "oldContent": "        this.statsTable.put(new StatsKey(BROKER_ACK_NUMS), new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 159,
                "toLine": 159,
                "oldContent": "        this.statsTable.put(new StatsKey(BROKER_CK_NUMS), new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 160,
                "toLine": 160,
                "oldContent": "        this.statsTable.put(new StatsKey(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC),",
                "newContent": "        this.statsTable.put(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC,"
            },
            {
                "fromLine": 161,
                "toLine": 161,
                "oldContent": "            new StatsItemSet(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 162,
                "toLine": 162,
                "oldContent": "        this.statsTable.put(new StatsKey(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC),",
                "newContent": "        this.statsTable.put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,"
            },
            {
                "fromLine": 163,
                "toLine": 163,
                "oldContent": "            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 164,
                "toLine": 164,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.GROUP_GET_FROM_DISK_NUMS),",
                "newContent": "        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_NUMS,"
            },
            {
                "fromLine": 165,
                "toLine": 165,
                "oldContent": "            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 166,
                "toLine": 166,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.GROUP_GET_FROM_DISK_SIZE),",
                "newContent": "        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_SIZE,"
            },
            {
                "fromLine": 167,
                "toLine": 167,
                "oldContent": "            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 168,
                "toLine": 168,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.BROKER_GET_FROM_DISK_NUMS),",
                "newContent": "        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_NUMS,"
            },
            {
                "fromLine": 169,
                "toLine": 169,
                "oldContent": "            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 170,
                "toLine": 170,
                "oldContent": "        this.statsTable.put(new StatsKey(Stats.BROKER_GET_FROM_DISK_SIZE),",
                "newContent": "        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_SIZE,"
            },
            {
                "fromLine": 171,
                "toLine": 171,
                "oldContent": "            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 306,
                "toLine": 306,
                "oldContent": "        this.producerStateGetter = producerStateGetter;",
                "newContent": ""
            },
            {
               
{
    "fromLine": 314,
    "toLine": 314,
    "oldContent": "        this.consumerStateGetter = consumerStateGetter;",
    "newContent": ""
}
       