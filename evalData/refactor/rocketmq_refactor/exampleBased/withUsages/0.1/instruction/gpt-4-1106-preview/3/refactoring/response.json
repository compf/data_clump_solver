
{
    "refactorings": {
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 1,
                "toLine": 1,
                "oldContent": "package org.apache.rocketmq.store.stats;",
                "newContent": "package org.apache.rocketmq.store.stats;\n\nimport org.apache.rocketmq.common.stats.StatsItemSet;"
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "    private final HashMap<String, StatsItemSet> statsTable = new HashMap<>();",
                "newContent": ""
            },
            {
                "fromLine": 104,
                "toLine": 104,
                "oldContent": "    private MomentStatsItemSet momentStatsItemSetFallSize;",
                "newContent": ""
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "    private MomentStatsItemSet momentStatsItemSetFallTime;",
                "newContent": ""
            },
            {
                "fromLine": 108,
                "toLine": 108,
                "oldContent": "    private final StatisticsManager accountStatManager = new StatisticsManager();",
                "newContent": ""
            },
            {
                "fromLine": 110,
                "toLine": 110,
                "oldContent": "    private StateGetter producerStateGetter;",
                "newContent": ""
            },
            {
                "fromLine": 111,
                "toLine": 111,
                "oldContent": "    private StateGetter consumerStateGetter;",
                "newContent": ""
            },
            {
                "fromLine": 113,
                "toLine": 113,
                "oldContent": "    private BrokerConfig brokerConfig;",
                "newContent": ""
            },
            {
                "fromLine": 115,
                "toLine": 115,
                "oldContent": "    public BrokerStatsManager(BrokerConfig brokerConfig) {",
                "newContent": "    public BrokerStatsManager(BrokerConfig brokerConfig, BrokerStatsData brokerStatsData) {"
            },
            {
                "fromLine": 116,
                "toLine": 116,
                "oldContent": "        this.brokerConfig = brokerConfig;",
                "newContent": "        this.brokerStatsData = brokerStatsData;"
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "        this.enableQueueStat = brokerConfig.isEnableDetailStat();",
                "newContent": "        this.enableQueueStat = brokerConfig.isEnableDetailStat();"
            },
            {
                "fromLine": 118,
                "toLine": 118,
                "oldContent": "        initScheduleService();",
                "newContent": "        initScheduleService();"
            },
            {
                "fromLine": 119,
                "toLine": 119,
                "oldContent": "        this.clusterName = brokerConfig.getBrokerClusterName();",
                "newContent": "        this.clusterName = brokerConfig.getBrokerClusterName();"
            },
            {
                "fromLine": 120,
                "toLine": 120,
                "oldContent": "        init();",
                "newContent": "        init();"
            },
            {
                "fromLine": 122,
                "toLine": 122,
                "oldContent": "    public BrokerStatsManager(String clusterName, boolean enableQueueStat) {",
                "newContent": "    public BrokerStatsManager(String clusterName, boolean enableQueueStat, BrokerStatsData brokerStatsData) {"
            },
            {
                "fromLine": 123,
                "toLine": 123,
                "oldContent": "        this.clusterName = clusterName;",
                "newContent": "        this.clusterName = clusterName;"
            },
            {
                "fromLine": 124,
                "toLine": 124,
                "oldContent": "        this.enableQueueStat = enableQueueStat;",
                "newContent": "        this.enableQueueStat = enableQueueStat;"
            },
            {
                "fromLine": 125,
                "toLine": 125,
                "oldContent": "        initScheduleService();",
                "newContent": "        initScheduleService();"
            },
            {
                "fromLine": 126,
                "toLine": 126,
                "oldContent": "        init();",
                "newContent": "        init();"
            },
            {
                "fromLine": 128,
                "toLine": 128,
                "oldContent": "    public void init() {",
                "newContent": "    public void init() {"
            },
            {
                "fromLine": 129,
                "toLine": 129,
                "oldContent": "        momentStatsItemSetFallSize = new MomentStatsItemSet(GROUP_GET_FALL_SIZE,",
                "newContent": "        brokerStatsData.setMomentStatsItemSetFallSize(new MomentStatsItemSet(GROUP_GET_FALL_SIZE,"
            },
            {
                "fromLine": 130,
                "toLine": 130,
                "oldContent": "            scheduledExecutorService, log);",
                "newContent": "            scheduledExecutorService, log));"
            },
            {
                "fromLine": 132,
                "toLine": 132,
                "oldContent": "        momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,",
                "newContent": "        brokerStatsData.setMomentStatsItemSetFallTime(new MomentStatsItemSet(GROUP_GET_FALL_TIME,"
            },
            {
                "fromLine": 133,
                "toLine": 133,
                "oldContent": "            scheduledExecutorService, log);",
                "newContent": "            scheduledExecutorService, log));"
            },
            {
                "fromLine": 135,
                "toLine": 135,
                "oldContent": "        if (enableQueueStat) {",
                "newContent": "        if (enableQueueStat) {"
            },
            {
                "fromLine": 136,
                "toLine": 136,
                "oldContent": "            this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "            brokerStatsData.getStatsTable().put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 137,
                "toLine": 137,
                "oldContent": "            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));",
                "newContent": "            brokerStatsData.getStatsTable().put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 138,
                "toLine": 138,
                "oldContent": "            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));",
                "newContent": "            brokerStatsData.getStatsTable().put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 139,
                "toLine": 139,
                "oldContent": "            this.statsTable.put(Stats.QUEUE_GET_SIZE, new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));",
                "newContent": "            brokerStatsData.getStatsTable().put(Stats.QUEUE_GET_SIZE, new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 141,
                "toLine": 141,
                "oldContent": "        this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 142,
                "toLine": 142,
                "oldContent": "        this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 143,
                "toLine": 143,
                "oldContent": "        this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 144,
                "toLine": 144,
                "oldContent": "        this.statsTable.put(Stats.GROUP_GET_SIZE, new StatsItemSet(Stats.GROUP_GET_SIZE, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.GROUP_GET_SIZE, new StatsItemSet(Stats.GROUP_GET_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 145,
                "toLine": 145,
                "oldContent": "        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 146,
                "toLine": 146,
                "oldContent": "        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 147,
                "toLine": 147,
                "oldContent": "        this.statsTable.put(Stats.GROUP_GET_LATENCY, new StatsItemSet(Stats.GROUP_GET_LATENCY, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.GROUP_GET_LATENCY, new StatsItemSet(Stats.GROUP_GET_LATENCY, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 148,
                "toLine": 148,
                "oldContent": "        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 149,
                "toLine": 149,
                "oldContent": "        this.statsTable.put(Stats.SNDBCK_PUT_NUMS, new StatsItemSet(Stats.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.SNDBCK_PUT_NUMS, new StatsItemSet(Stats.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 150,
                "toLine": 150,
                "oldContent": "        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 151,
                "toLine": 151,
                "oldContent": "        this.statsTable.put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 152,
                "toLine": 152,
                "oldContent": "        this.statsTable.put(Stats.BROKER_GET_NUMS, new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.BROKER_GET_NUMS, new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 153,
                "toLine": 153,
                "oldContent": "        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 154,
                "toLine": 154,
                "oldContent": "        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        brokerStatsData.getStatsTable().put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 155,
                "toLine": 155,
                "oldContent": "        this.statsTable.put(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC,",
                "newContent": "        brokerStatsData.getStatsTable().put(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC,"
            },
            {
                "fromLine": 156,
                "toLine": 156,
                "oldContent": "            new StatsItemSet(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 157,
                "toLine": 157,
                "oldContent": "        this.statsTable.put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,",
                "newContent": "        brokerStatsData.getStatsTable().put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,"
            },
            {
                "fromLine": 158,
                "toLine": 158,
                "oldContent": "            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 159,
                "toLine": 159,
                "oldContent": "        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_NUMS,",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.GROUP_GET_FROM_DISK_NUMS,"
            },
            {
                "fromLine": 160,
                "toLine": 160,
                "oldContent": "            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 161,
                "toLine": 161,
                "oldContent": "        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_SIZE,",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.GROUP_GET_FROM_DISK_SIZE,"
            },
            {
                "fromLine": 162,
                "toLine": 162,
                "oldContent": "            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 163,
                "toLine": 163,
                "oldContent": "        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_NUMS,",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.BROKER_GET_FROM_DISK_NUMS,"
            },
            {
                "fromLine": 164,
                "toLine": 164,
                "oldContent": "            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 165,
                "toLine": 165,
                "oldContent": "        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_SIZE,",
                "newContent": "        brokerStatsData.getStatsTable().put(Stats.BROKER_GET_FROM_DISK_SIZE,"
            },
            {
                "fromLine": 166,
                "toLine": 166,
                "oldContent": "            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));",
                "newContent": "            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 168,
                "toLine": 168,
                "oldContent": "        this.statsTable.put(SNDBCK2DLQ_TIMES,",
                "newContent": "
{
                "fromLine": 169,
                "toLine": 169,
                "oldContent": "            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));",
                "newContent": "            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));"
            }
       			
       			
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		

       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       
       		
       
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		
       		