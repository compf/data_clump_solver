{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 78,
                "toLine": 91,
                "oldContent": "@Deprecated public static final String GROUP_GET_FALL_SIZE = Stats.GROUP_GET_FALL_SIZE;\n    @Deprecated public static final String GROUP_GET_FALL_TIME = Stats.GROUP_GET_FALL_TIME;\n    // Pull Message Latency\n    @Deprecated public static final String GROUP_GET_LATENCY = Stats.GROUP_GET_LATENCY;",
                "newContent": "@Deprecated public static final String GROUP_GET_FALL_SIZE = StatsItemKey.GROUP_GET_FALL_SIZE.getKey();\n    @Deprecated public static final String GROUP_GET_FALL_TIME = StatsItemKey.GROUP_GET_FALL_TIME.getKey();\n    // Pull Message Latency\n    @Deprecated public static final String GROUP_GET_LATENCY = StatsItemKey.GROUP_GET_LATENCY.getKey();"
            },
            {
                "fromLine": 141,
                "toLine": 199,
                "oldContent": "this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_SIZE, new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_SIZE, new StatsItemSet(Stats.GROUP_GET_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_LATENCY, new StatsItemSet(Stats.GROUP_GET_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.SNDBCK_PUT_NUMS, new StatsItemSet(Stats.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_NUMS, new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC,\n            new StatsItemSet(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,\n            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_NUMS,\n            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_SIZE,\n            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_NUMS,\n            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_SIZE,\n            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n\n        this.statsTable.put(SNDBCK2DLQ_TIMES,\n            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));\n\n        this.statsTable.put(Stats.COMMERCIAL_SEND_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_SEND_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_SEND_SIZE,\n            new StatsItemSet(Stats.COMMERCIAL_SEND_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_SIZE,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_EPOLLS,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_EPOLLS, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_SNDBCK_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_SNDBCK_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_PERM_FAILURES,\n            new StatsItemSet(Stats.COMMERCIAL_PERM_FAILURES, this.commercialExecutor, COMMERCIAL_LOG));\n\n        this.statsTable.put(CONSUMER_REGISTER_TIME,\n            new StatsItemSet(CONSUMER_REGISTER_TIME, this.scheduledExecutorService, log));\n        this.statsTable.put(PRODUCER_REGISTER_TIME,\n            new StatsItemSet(PRODUCER_REGISTER_TIME, this.scheduledExecutorService, log));",
                "newContent": "momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);\n\n        if (enableQueueStat) {\n            this.statsTable.put(StatsItemKey.QUEUE_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.QUEUE_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_PUT_SIZE.getKey(), new StatsItemSet(StatsItemKey.QUEUE_PUT_SIZE.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_GET_NUMS.getKey(), new StatsItemSet(StatsItemKey.QUEUE_GET_NUMS.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_GET_SIZE.getKey(), new StatsItemSet(StatsItemKey.QUEUE_GET_SIZE.getKey(), this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(StatsItemKey.TOPIC_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.TOPIC_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.TOPIC_PUT_SIZE.getKey(), new StatsItemSet(StatsItemKey.TOPIC_PUT_SIZE.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_NUMS.getKey(), new StatsItemSet(StatsItemKey.GROUP_GET_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_SIZE.getKey(), new StatsItemSet(StatsItemKey.GROUP_GET_SIZE.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_LATENCY.getKey(), new StatsItemSet(StatsItemKey.GROUP_GET_LATENCY.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.SNDBCK_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.SNDBCK_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.BROKER_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.BROKER_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.BROKER_GET_NUMS.getKey(), new StatsItemSet(StatsItemKey.BROKER_GET_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC,\n            new StatsItemSet(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,\n            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_FROM_DISK_NUMS.getKey(),\n            new StatsItemSet(StatsItemKey.GROUP_GET_FROM_DISK_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_FROM_DISK_SIZE.getKey(),\n            new StatsItemSet(StatsItemKey.GROUP_GET_FROM_DISK_SIZE.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.BROKER_GET_FROM_DISK_NUMS.getKey(),\n            new StatsItemSet(StatsItemKey.BROKER_GET_FROM_DISK_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.BROKER_GET_FROM_DISK_SIZE.getKey(),\n            new StatsItemSet(StatsItemKey.BROKER_GET_FROM_DISK_SIZE.getKey(), this.scheduledExecutorService, log));\n\n        this.statsTable.put(SNDBCK2DLQ_TIMES,\n            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));\n\n        this.statsTable.put(StatsItemKey.COMMERCIAL_SEND_TIMES.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_SEND_TIMES.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_RCV_TIMES.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_RCV_TIMES.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_SEND_SIZE.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_SEND_SIZE.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_RCV_SIZE.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_RCV_SIZE.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_RCV_EPOLLS.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_RCV_EPOLLS.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_SNDBCK_TIMES.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_SNDBCK_TIMES.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_PERM_FAILURES.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_PERM_FAILURES.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n\n        this.statsTable.put(CONSUMER_REGISTER_TIME,\n            new StatsItemSet(CONSUMER_REGISTER_TIME, this.scheduledExecutorService, log));\n        this.statsTable.put(PRODUCER_REGISTER_TIME,\n            new StatsItemSet(PRODUCER_REGISTER_TIME, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 301,
                "toLine": 368,
                "oldContent": "this.statsTable.get(Stats.TOPIC_PUT_NUMS).delValue(topic);\n        this.statsTable.get(Stats.TOPIC_PUT_SIZE).delValue(topic);\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).delValueByPrefixKey(topic, \"@\");\n            this.statsTable.get(Stats.QUEUE_PUT_SIZE).delValueByPrefixKey(topic, \"@\");\n        }\n        this.statsTable.get(Stats.GROUP_GET_NUMS).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.GROUP_GET_SIZE).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.QUEUE_GET_NUMS).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.QUEUE_GET_SIZE).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.GROUP_GET_LATENCY).delValueByInfixKey(topic, \"@\");\n        this.momentStatsItemSetFallSize.delValueByInfixKey(topic, \"@\");\n        this.momentStatsItemSetFallTime.delValueByInfixKey(topic, \"@\");\n    }\n\n    public void onGroupDeleted(final String group) {\n        this.statsTable.get(Stats.GROUP_GET_NUMS).delValueBySuffixKey(group, \"@\");\n        this.statsTable.get(Stats.GROUP_GET_SIZE).delValueBySuffixKey(group, \"@\");\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_GET_NUMS).delValueBySuffixKey(group, \"@\");\n            this.statsTable.get(Stats.QUEUE_GET_SIZE).delValueBySuffixKey(group, \"@\");\n        }\n        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).delValueBySuffixKey(group, \"@\");\n        this.statsTable.get(Stats.GROUP_GET_LATENCY).delValueBySuffixKey(group, \"@\");\n        this.momentStatsItemSetFallSize.delValueBySuffixKey(group, \"@\");\n        this.momentStatsItemSetFallTime.delValueBySuffixKey(group, \"@\");\n    }\n\n    public void incQueuePutNums(final String topic, final Integer queueId) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), 1, 1);\n        }\n    }\n\n    public void incQueuePutNums(final String topic, final Integer queueId, int num, int times) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), num, times);\n        }\n    }\n\n    public void incQueuePutSize(final String topic, final Integer queueId, final int size) {\n        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_SIZE).addValue(buildStatsKey(topic, queueId), size, 1);\n        }\n    }\n\n    public void incQueueGetNums(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = buildStatsKey(topic, queueId, group);\n            this.statsTable.get(Stats.QUEUE_GET_NUMS).addValue(statsKey, incValue, 1);\n        }\n    }\n\n    public void incQueueGetSize(final String group, final String topic, final Integer queueId, final int incValue) {\n        if (enableQueueStat) {\n            final String statsKey = buildStatsKey(topic, queueId, group);\n            this.statsTable.get(Stats.QUEUE_GET_SIZE).addValue(statsKey, incValue, 1);\n        }\n    }\n\n    public void incConsumerRegisterTime(final int incValue) {\n        this.statsTable.get(CONSUMER_REGISTER_TIME).addValue(this.clusterName, incValue, 1);",
                "newContent": "this.statsTable.get(StatsItemKey.TOPIC_PUT_NUMS.getKey()).delValue(topic);\n        this.statsTable.get(StatsItemKey.TOPIC_PUT_SIZE.getKey()).delValue(topic);\n        if (enableQueueStat) {\n            this.statsTable.get(StatsItemKey.QUEUE_PUT_NUMS.getKey()).delValueByPrefixKey(topic, \"@\");\n            this.statsTable.get(StatsItemKey.QUEUE_PUT_SIZE.getKey()).delValueByPrefixKey(topic, \"@\");\n        }\n        this.statsTable.get(StatsItemKey.GROUP_GET_NUMS.getKey()).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(StatsItemKey
{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 78,
                "toLine": 91,
                "oldContent": "@Deprecated public static final String GROUP_GET_FALL_SIZE = Stats.GROUP_GET_FALL_SIZE;\n    @Deprecated public static final String GROUP_GET_FALL_TIME = Stats.GROUP_GET_FALL_TIME;\n    // Pull Message Latency\n    @Deprecated public static final String GROUP_GET_LATENCY = Stats.GROUP_GET_LATENCY;",
                "newContent": "@Deprecated public static final String GROUP_GET_FALL_SIZE = StatsItemKey.GROUP_GET_FALL_SIZE.getKey();\n    @Deprecated public static final String GROUP_GET_FALL_TIME = StatsItemKey.GROUP_GET_FALL_TIME.getKey();\n    // Pull Message Latency\n    @Deprecated public static final String GROUP_GET_LATENCY = StatsItemKey.GROUP_GET_LATENCY.getKey();"
            },
            {
                "fromLine": 141,
                "toLine": 199,
                "oldContent": "this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_SIZE, new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_SIZE, new StatsItemSet(Stats.GROUP_GET_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_LATENCY, new StatsItemSet(Stats.GROUP_GET_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.SNDBCK_PUT_NUMS, new StatsItemSet(Stats.SNDBCK_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_NUMS, new StatsItemSet(Stats.BROKER_GET_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC,\n            new StatsItemSet(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,\n            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_NUMS,\n            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_SIZE,\n            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_NUMS,\n            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_SIZE,\n            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n\n        this.statsTable.put(SNDBCK2DLQ_TIMES,\n            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));\n\n        this.statsTable.put(Stats.COMMERCIAL_SEND_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_SEND_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_SEND_SIZE,\n            new StatsItemSet(Stats.COMMERCIAL_SEND_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_SIZE,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_EPOLLS,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_EPOLLS, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_SNDBCK_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_SNDBCK_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_PERM_FAILURES,\n            new StatsItemSet(Stats.COMMERCIAL_PERM_FAILURES, this.commercialExecutor, COMMERCIAL_LOG));\n\n        this.statsTable.put(CONSUMER_REGISTER_TIME,\n            new StatsItemSet(CONSUMER_REGISTER_TIME, this.scheduledExecutorService, log));\n        this.statsTable.put(PRODUCER_REGISTER_TIME,\n            new StatsItemSet(PRODUCER_REGISTER_TIME, this.scheduledExecutorService, log));",
                "newContent": "momentStatsItemSetFallTime = new MomentStatsItemSet(GROUP_GET_FALL_TIME,\n            scheduledExecutorService, log);\n\n        if (enableQueueStat) {\n            this.statsTable.put(StatsItemKey.QUEUE_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.QUEUE_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_PUT_SIZE.getKey(), new StatsItemSet(StatsItemKey.QUEUE_PUT_SIZE.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_GET_NUMS.getKey(), new StatsItemSet(StatsItemKey.QUEUE_GET_NUMS.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_GET_SIZE.getKey(), new StatsItemSet(StatsItemKey.QUEUE_GET_SIZE.getKey(), this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(StatsItemKey.TOPIC_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.TOPIC_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.TOPIC_PUT_SIZE.getKey(), new StatsItemSet(StatsItemKey.TOPIC_PUT_SIZE.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_NUMS.getKey(), new StatsItemSet(StatsItemKey.GROUP_GET_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_SIZE.getKey(), new StatsItemSet(StatsItemKey.GROUP_GET_SIZE.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_ACK_NUMS, new StatsItemSet(GROUP_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(GROUP_CK_NUMS, new StatsItemSet(GROUP_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_LATENCY.getKey(), new StatsItemSet(StatsItemKey.GROUP_GET_LATENCY.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(TOPIC_PUT_LATENCY, new StatsItemSet(TOPIC_PUT_LATENCY, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.SNDBCK_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.SNDBCK_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.BROKER_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.BROKER_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.BROKER_GET_NUMS.getKey(), new StatsItemSet(StatsItemKey.BROKER_GET_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_ACK_NUMS, new StatsItemSet(BROKER_ACK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_CK_NUMS, new StatsItemSet(BROKER_CK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC,\n            new StatsItemSet(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC,\n            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_FROM_DISK_NUMS.getKey(),\n            new StatsItemSet(StatsItemKey.GROUP_GET_FROM_DISK_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_FROM_DISK_SIZE.getKey(),\n            new StatsItemSet(StatsItemKey.GROUP_GET_FROM_DISK_SIZE.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.BROKER_GET_FROM_DISK_NUMS.getKey(),\n            new StatsItemSet(StatsItemKey.BROKER_GET_FROM_DISK_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.BROKER_GET_FROM_DISK_SIZE.getKey(),\n            new StatsItemSet(StatsItemKey.BROKER_GET_FROM_DISK_SIZE.getKey(), this.scheduledExecutorService, log));\n\n        this.statsTable.put(SNDBCK2DLQ_TIMES,\n            new StatsItemSet(SNDBCK2DLQ_TIMES, this.scheduledExecutorService, DLQ_STAT_LOG));\n\n        this.statsTable.put(StatsItemKey.COMMERCIAL_SEND_TIMES.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_SEND_TIMES.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_RCV_TIMES.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_RCV_TIMES.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_SEND_SIZE.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_SEND_SIZE.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_RCV_SIZE.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_RCV_SIZE.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_RCV_EPOLLS.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_RCV_EPOLLS.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_SNDBCK_TIMES.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_SNDBCK_TIMES.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_PERM_FAILURES.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_PERM_FAILURES.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n\n        this.statsTable.put(CONSUMER_REGISTER_TIME,\n            new StatsItemSet(CONSUMER_REGISTER_TIME, this.scheduledExecutorService, log));\n        this.statsTable.put(PRODUCER_REGISTER_TIME,\n            new StatsItemSet(PRODUCER_REGISTER_TIME, this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 387,
                "toLine": 410,
                "oldContent": "this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, 1, 1);\n    }\n\n    public void incTopicPutNums(final String topic, int num, int times) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, num, times);\n    }\n\n    public void incTopicPutSize(final String topic, final int size) {\n        this.statsTable.get(Stats.TOPIC_PUT_SIZE).addValue(topic, size, 1);\n    }\n\n    public void incGroupGetNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(Stats.GROUP_GET_NUMS).addValue(statsKey, incValue, 1);\n    }\n\n    public void incGroupCkNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(GROUP_CK_NUMS).addValue(statsKey, incValue, 1);",
                "newContent": "this.statsTable.get(StatsItemKey.TOPIC_PUT_NUMS.getKey()).addValue(topic, 1, 1);\n    }\n\n    public void incTopicPutNums(final String topic, int num, int times) {\n        this.statsTable.get(StatsItemKey.TOPIC_PUT_NUMS.getKey()).addValue(topic, num, times);\n    }\n\n    public void incTopicPutSize(final String topic, final int size) {\n        this.statsTable.get(StatsItemKey.TOPIC_PUT_SIZE.getKey()).addValue(topic, size, 1);\n    }\n\n    public void incGroupGetNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(StatsItemKey.GROUP_GET_NUMS.getKey()).addValue(statsKey, incValue, 1);\n    }\n\n    public void incGroupCkNums(final String group, final String topic, final int incValue) {\n        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(GROUP_CK_NUMS).addValue(statsKey, incValue, 1);"
            },
            {
                "fromLine": 459,
                "toLine": 479,
                "oldContent": "this.statsTable.get(Stats.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);\n    }\n\n    public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String statsKey;\n        if (enableQueueStat) {\n            statsKey = buildStatsKey(queueId, topic, group);\n        } else {\n            statsKey = buildStatsKey(topic, group);\n        }\n        this.statsTable.get(Stats.GROUP_GET_LATENCY).addRTValue(statsKey, incValue, 1);\n    }\n\n    public void incTopicPutLatency(final String topic, final int queueId, final int incValue) {\n        StringBuilder statsKey;\n        if (topic != null) {",
                "newContent": "this.statsTable.get(StatsItemKey.GROUP_GET_SIZE.getKey()).addValue(statsKey, incValue, 1);\n    }\n\n    public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String statsKey;\n        if (enableQueueStat) {\n            statsKey = buildStatsKey(queueId, topic, group);\n        } else {\n            statsKey = buildStatsKey(topic, group);\n        }\n        this.statsTable.get(StatsItemKey.GROUP_GET_LATENCY.getKey()).addRTValue(statsKey, incValue, 1);\n    }\n\n    public void incTopicPutLatency(final String topic, final int queueId, final int incValue) {\n        StringBuilder statsKey;\n        if (topic != null) {"
            },
            {
                "fromLine": 484,
                "toLine": 503,
                "oldContent": "this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(1);\n    }\n\n    public void incBrokerPutNums(final String topic, final int incValue) {\n        this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n        incBrokerPutNumsWithoutSystemTopic(topic, incValue);\n    }\n\n    public void incBrokerGetNums(final String topic, final int incValue) {\n        this.statsTable.get(Stats.BROKER_GET_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n
        {
                "fromLine": 484,
                "toLine": 503,
                "oldContent": "this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(1);\n    }\n\n    public void incBrokerPutNums(final String topic, final int incValue) {\n        this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n        incBrokerPutNumsWithoutSystemTopic(topic, incValue);\n    }\n\n    public void incBrokerGetNums(final String topic, final int incValue) {\n        this.statsTable.get(Stats.BROKER_GET_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n        this.incBrokerGetNumsWithoutSystemTopic(topic, incValue);\n    }\n\n    public void incBrokerAckNums(final int incValue) {\n        this.statsTable.get(BROKER_ACK_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);",
                "newContent": "this.statsTable.get(StatsItemKey.BROKER_PUT_NUMS.getKey()).getAndCreateStatsItem(this.clusterName).getValue().add(1);\n    }\n\n    public void incBrokerPutNums(final String topic, final int incValue) {\n        this.statsTable.get(StatsItemKey.BROKER_PUT_NUMS.getKey()).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n        incBrokerPutNumsWithoutSystemTopic(topic, incValue);\n    }\n\n    public void incBrokerGetNums(final String topic, final int incValue) {\n        this.statsTable.get(StatsItemKey.BROKER_GET_NUMS.getKey()).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n        this.incBrokerGetNumsWithoutSystemTopic(topic, incValue);\n    }\n\n    public void incBrokerAckNums(final int incValue) {\n        this.statsTable.get(BROKER_ACK_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);"
            }
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       

       	            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       

       	            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		            
       		