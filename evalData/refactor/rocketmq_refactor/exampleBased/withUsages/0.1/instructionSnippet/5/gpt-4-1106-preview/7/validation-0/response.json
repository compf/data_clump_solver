{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 78,
                "toLine": 91,
                "oldContent": "@Deprecated public static final String GROUP_GET_FALL_SIZE = Stats.GROUP_GET_FALL_SIZE;\n    @Deprecated public static final String GROUP_GET_FALL_TIME = Stats.GROUP_GET_FALL_TIME;\n    // Pull Message Latency\n    @Deprecated public static final String GROUP_GET_LATENCY = Stats.GROUP_GET_LATENCY;",
                "newContent": "@Deprecated public static final String GROUP_GET_FALL_SIZE = StatsItemKey.GROUP_GET_FALL_SIZE.getKey();\n    @Deprecated public static final String GROUP_GET_FALL_TIME = StatsItemKey.GROUP_GET_FALL_TIME.getKey();\n    // Pull Message Latency\n    @Deprecated public static final String GROUP_GET_LATENCY = StatsItemKey.GROUP_GET_LATENCY.getKey();"
            },
            {
                "fromLine": 141,
                "toLine": 199,
                "oldContent": "this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_SIZE, new StatsItemSet(Stats.QUEUE_GET_SIZE, this.scheduledExecutorService, log));",
                "newContent": "this.statsTable.put(StatsItemKey.QUEUE_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.QUEUE_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_PUT_SIZE.getKey(), new StatsItemSet(StatsItemKey.QUEUE_PUT_SIZE.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_GET_NUMS.getKey(), new StatsItemSet(StatsItemKey.QUEUE_GET_NUMS.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_GET_SIZE.getKey(), new StatsItemSet(StatsItemKey.QUEUE_GET_SIZE.getKey(), this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 301,
                "toLine": 368,
                "oldContent": "this.statsTable.get(Stats.TOPIC_PUT_NUMS).delValue(topic);\n        this.statsTable.get(Stats.TOPIC_PUT_SIZE).delValue(topic);",
                "newContent": "this.statsTable.get(StatsItemKey.TOPIC_PUT_NUMS.getKey()).delValue(topic);\n        this.statsTable.get(StatsItemKey.TOPIC_PUT_SIZE.getKey()).delValue(topic);"
            },
            {
                "fromLine": 387,
                "toLine": 410,
                "oldContent": "this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, 1, 1);\n    }\n\n    public void incTopicPutNums(final String topic, int num, int times) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).addValue(topic, num, times);",
                "newContent": "this.statsTable.get(StatsItemKey.TOPIC_PUT_NUMS.getKey()).addValue(topic, 1, 1);\n    }\n\n    public void incTopicPutNums(final String topic, int num, int times) {\n        this.statsTable.get(StatsItemKey.TOPIC_PUT_NUMS.getKey()).addValue(topic, num, times);"
            },
            {
                "fromLine": 459,
                "toLine": 479,
                "oldContent": "this.statsTable.get(Stats.GROUP_GET_SIZE).addValue(statsKey, incValue, 1);\n    }\n\n    public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String statsKey;\n        if (enableQueueStat) {\n            statsKey = buildStatsKey(queueId, topic, group);\n        } else {\n            statsKey = buildStatsKey(topic, group);\n        }\n        this.statsTable.get(Stats.GROUP_GET_LATENCY).addRTValue(statsKey, incValue, 1);",
                "newContent": "this.statsTable.get(StatsItemKey.GROUP_GET_SIZE.getKey()).addValue(statsKey, incValue, 1);\n    }\n\n    public void incGroupGetLatency(final String group, final String topic, final int queueId, final int incValue) {\n        String statsKey;\n        if (enableQueueStat) {\n            statsKey = buildStatsKey(queueId, topic, group);\n        } else {\n            statsKey = buildStatsKey(topic, group);\n        }\n        this.statsTable.get(StatsItemKey.GROUP_GET_LATENCY.getKey()).addRTValue(statsKey, incValue, 1);"
            },
            {
                "fromLine": 484,
                "toLine": 503,
                "oldContent": "this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(1);\n    }\n\n    public void incBrokerPutNums(final String topic, final int incValue) {\n        this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);",
                "newContent": "this.statsTable.get(StatsItemKey.BROKER_PUT_NUMS.getKey()).getAndCreateStatsItem(this.clusterName).getValue().add(1);\n    }\n\n    public void incBrokerPutNums(final String topic, final int incValue) {\n        this.statsTable.get(StatsItemKey.BROKER_PUT_NUMS.getKey()).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);"
            },
            {
                "fromLine": 545,
                "toLine": 560,
                "oldContent": "this.statsTable.get(Stats.SNDBCK_PUT_NUMS).addValue(statsKey, 1, 1);\n    }\n\n    public double tpsGroupGetNums(final String group, final String topic) {\n        final String statsKey = buildStatsKey(topic, group);\n        return this.statsTable.get(Stats.GROUP_GET_NUMS).getStatsDataInMinute(statsKey).getTps();",
                "newContent": "this.statsTable.get(StatsItemKey.SNDBCK_PUT_NUMS.getKey()).addValue(statsKey, 1, 1);\n    }\n\n    public double tpsGroupGetNums(final String group, final String topic) {\n        final String statsKey = buildStatsKey(topic, group);\n        return this.statsTable.get(StatsItemKey.GROUP_GET_NUMS.getKey()).getStatsDataInMinute(statsKey).getTps();"
            }
        ]
    }
}