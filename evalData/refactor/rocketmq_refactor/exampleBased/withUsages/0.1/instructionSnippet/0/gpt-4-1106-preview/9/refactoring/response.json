{
    "refactorings": {
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 44,
                "toLine": 49,
                "oldContent": "\n    @Deprecated public static final String QUEUE_PUT_NUMS = Stats.QUEUE_PUT_NUMS;\n    @Deprecated public static final String QUEUE_PUT_SIZE = Stats.QUEUE_PUT_SIZE;\n    @Deprecated public static final String QUEUE_GET_NUMS = Stats.QUEUE_GET_NUMS;\n    @Deprecated public static final String QUEUE_GET_SIZE = Stats.QUEUE_GET_SIZE;\n    @Deprecated public static final String TOPIC_PUT_NUMS = Stats.TOPIC_PUT_NUMS;",
                "newContent": ""
            },
            {
                "fromLine": 51,
                "toLine": 52,
                "oldContent": "\n    @Deprecated public static final String GROUP_GET_NUMS = Stats.GROUP_GET_NUMS;",
                "newContent": ""
            },
            {
                "fromLine": 54,
                "toLine": 60,
                "oldContent": "\n    @Deprecated public static final String SNDBCK_PUT_NUMS = Stats.SNDBCK_PUT_NUMS;\n    @Deprecated public static final String BROKER_PUT_NUMS = Stats.BROKER_PUT_NUMS;\n    @Deprecated public static final String BROKER_GET_NUMS = Stats.BROKER_GET_NUMS;\n    @Deprecated public static final String GROUP_GET_FROM_DISK_NUMS = Stats.GROUP_GET_FROM_DISK_NUMS;\n    @Deprecated public static final String GROUP_GET_FROM_DISK_SIZE = Stats.GROUP_GET_FROM_DISK_SIZE;\n    @Deprecated public static final String BROKER_GET_FROM_DISK_NUMS = Stats.BROKER_GET_FROM_DISK_NUMS;",
                "newContent": ""
            },
            {
                "fromLine": 62,
                "toLine": 68,
                "oldContent": "    // For commercial\n    @Deprecated public static final String COMMERCIAL_SEND_TIMES = Stats.COMMERCIAL_SEND_TIMES;\n    @Deprecated public static final String COMMERCIAL_SNDBCK_TIMES = Stats.COMMERCIAL_SNDBCK_TIMES;\n    @Deprecated public static final String COMMERCIAL_RCV_TIMES = Stats.COMMERCIAL_RCV_TIMES;\n    @Deprecated public static final String COMMERCIAL_RCV_EPOLLS = Stats.COMMERCIAL_RCV_EPOLLS;\n    @Deprecated public static final String COMMERCIAL_SEND_SIZE = Stats.COMMERCIAL_SEND_SIZE;\n    @Deprecated public static final String COMMERCIAL_RCV_SIZE = Stats.COMMERCIAL_RCV_SIZE;",
                "newContent": ""
            },
            {
                "fromLine": 109,
                "toLine": 110,
                "oldContent": "\n    @Deprecated public static final String GROUP_GET_FALL_SIZE = Stats.GROUP_GET_FALL_SIZE;",
                "newContent": ""
            },
            {
                "fromLine": 172,
                "toLine": 180,
                "oldContent": "        if (enableQueueStat) {\n            this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        if (enableQueueStat) {\n            this.statsTable.put(StatsItemKey.QUEUE_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.QUEUE_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_PUT_SIZE.getKey(), new StatsItemSet(StatsItemKey.QUEUE_PUT_SIZE.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_GET_NUMS.getKey(), new StatsItemSet(StatsItemKey.QUEUE_GET_NUMS.getKey(), this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(StatsItemKey.TOPIC_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.TOPIC_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.TOPIC_PUT_SIZE.getKey(), new StatsItemSet(StatsItemKey.TOPIC_PUT_SIZE.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_NUMS.getKey(), new StatsItemSet(StatsItemKey.GROUP_GET_NUMS.getKey(), this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 187,
                "toLine": 188,
                "oldContent": "        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_PUT_NUMS, new StatsItemSet(Stats.BROKER_PUT_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        this.statsTable.put(DLQ_PUT_NUMS, new StatsItemSet(DLQ_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.BROKER_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.BROKER_PUT_NUMS.getKey(), this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 195,
                "toLine": 202,
                "oldContent": "            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_NUMS,\n            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_FROM_DISK_SIZE,\n            new StatsItemSet(Stats.GROUP_GET_FROM_DISK_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_NUMS,\n            new StatsItemSet(Stats.BROKER_GET_FROM_DISK_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.BROKER_GET_FROM_DISK_SIZE,",
                "newContent": "            new StatsItemSet(BROKER_PUT_NUMS_WITHOUT_SYSTEM_TOPIC, this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_FROM_DISK_NUMS.getKey(),\n            new StatsItemSet(StatsItemKey.GROUP_GET_FROM_DISK_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_FROM_DISK_SIZE.getKey(),\n            new StatsItemSet(StatsItemKey.GROUP_GET_FROM_DISK_SIZE.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.BROKER_GET_FROM_DISK_NUMS.getKey(),\n            new StatsItemSet(StatsItemKey.BROKER_GET_FROM_DISK_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.BROKER_GET_FROM_DISK_SIZE.getKey(),"
            },
            {
                "fromLine": 207,
                "toLine": 220,
                "oldContent": "\n        this.statsTable.put(Stats.COMMERCIAL_SEND_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_SEND_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_SEND_SIZE,\n            new StatsItemSet(Stats.COMMERCIAL_SEND_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_SIZE,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_SIZE, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_RCV_EPOLLS,\n            new StatsItemSet(Stats.COMMERCIAL_RCV_EPOLLS, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_SNDBCK_TIMES,\n            new StatsItemSet(Stats.COMMERCIAL_SNDBCK_TIMES, this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(Stats.COMMERCIAL_PERM_FAILURES,",
                "newContent": "\n        this.statsTable.put(StatsItemKey.COMMERCIAL_SEND_TIMES.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_SEND_TIMES.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_RCV_TIMES.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_RCV_TIMES.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_SEND_SIZE.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_SEND_SIZE.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_RCV_SIZE.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_RCV_SIZE.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_RCV_EPOLLS.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_RCV_EPOLLS.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_SNDBCK_TIMES.getKey(),\n            new StatsItemSet(StatsItemKey.COMMERCIAL_SNDBCK_TIMES.getKey(), this.commercialExecutor, COMMERCIAL_LOG));\n        this.statsTable.put(StatsItemKey.COMMERCIAL_PERM_FAILURES.getKey(),"
            },
            {
                "fromLine": 332,
                "toLine": 333,
                "oldContent": "    public void onTopicDeleted(final String topic) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).delValue(topic);",
                "newContent": "    public void onTopicDeleted(final String topic) {\n        this.statsTable.get(StatsItemKey.TOPIC_PUT_NUMS.getKey()).delValue(topic);"
            },
            {
                "fromLine": 335,
                "toLine": 336,
                "oldContent": "        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).delValueByPrefixKey(topic, \"@\");",
                "newContent": "        if (enableQueueStat) {\n            this.statsTable.get(StatsItemKey.QUEUE_PUT_NUMS.getKey()).delValueByPrefixKey(topic, \"@\");"
            },
            {
                "fromLine": 338,
                "toLine": 343,
                "oldContent": "        }\n        this.statsTable.get(Stats.GROUP_GET_NUMS).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.GROUP_GET_SIZE).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.QUEUE_GET_NUMS).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.QUEUE_GET_SIZE).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).delValueByPrefixKey(topic, \"@\");",
                "newContent": "        }\n        this.statsTable.get(StatsItemKey.GROUP_GET_NUMS.getKey()).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(StatsItemKey.GROUP_GET_SIZE.getKey()).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(StatsItemKey.QUEUE_GET_NUMS.getKey()).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(StatsItemKey.QUEUE_GET_SIZE.getKey()).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(StatsItemKey.SNDBCK_PUT_NUMS.getKey()).delValueByPrefixKey(topic, \"@\");"
            },
            {
                "fromLine": 349,
                "toLine": 350,
                "oldContent": "    public void onGroupDeleted(final String group) {\n        this.statsTable.get(Stats.GROUP_GET_NUMS).delValueBySuffixKey(group, \"@\");",
                "newContent": "    public void onGroupDeleted(final String group) {\n        this.statsTable.get(StatsItemKey.GROUP_GET_NUMS.getKey()).delValueBySuffixKey(group, \"@\");"
            },
            {
                "fromLine": 352,
                "toLine": 353,
                "oldContent": "        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_GET_NUMS).delValueBySuffixKey(group, \"@\");",
                "newContent": "        if (enableQueueStat) {\n            this.statsTable.get(StatsItemKey.QUEUE_GET_NUMS.getKey()).delValueBySuffixKey(group, \"@\");"
            },
            {
                "fromLine": 355,
                "toLine": 356,
                "oldContent": "        }\n        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).delValueBySuffixKey(group, \"@\");",
                "newContent": "        }\n        this.statsTable.get(StatsItemKey.SNDBCK_PUT_NUMS.getKey()).delValueBySuffixKey(group, \"@\");"
            }
        ]
    },
    "extractedClasses": {
        "common/src/main/java/org/apache/rocketmq/common/stats/StatsItemKey.java": "package org.apache.rocketmq.common.stats;\n\npublic enum StatsItemKey {\n    QUEUE_PUT_NUMS(\"QUEUE_PUT_NUMS\"),\n    QUEUE_PUT_SIZE(\"QUEUE_PUT_SIZE\"),\n    QUEUE_GET_NUMS(\"QUEUE_GET_NUMS\"),\n    QUEUE_GET_SIZE(\"QUEUE_GET_SIZE\"),\n    TOPIC_PUT_NUMS(\"TOPIC_PUT_NUMS\"),\n    TOPIC_PUT_SIZE(\"TOPIC_PUT_SIZE\"),\n    GROUP_GET_NUMS(\"GROUP_GET_NUMS\"),\n    GROUP_GET_SIZE(\"GROUP_GET_SIZE\"),\n    SNDBCK_PUT_NUMS(\"SNDBCK_PUT_NUMS\"),\n    BROKER_PUT_NUMS(\"BROKER_PUT_NUMS\"),\n    BROKER_GET_NUMS(\"BROKER_GET_NUMS\"),\n    GROUP_GET_FROM_DISK_NUMS(\"GROUP_GET_FROM_DISK_NUMS\"),\n    GROUP_GET_FROM_DISK_SIZE(\"GROUP_GET_FROM_DISK_SIZE\"),\n    BROKER_GET_FROM_DISK_NUMS(\"BROKER_GET_FROM_DISK_NUMS\"),\n    BROKER_GET_FROM_DISK_SIZE(\"BROKER_GET_FROM_DISK_SIZE\"),\n    COMMERCIAL_SEND_TIMES(\"COMMERCIAL_SEND_TIMES\"),\n    COMMERCIAL_SNDBCK_TIMES(\"COMMERCIAL_SNDBCK_TIMES\"),\n    COMMERCIAL_RCV_TIMES(\"COMMERCIAL_RCV_TIMES\"),\n    COMMERCIAL_RCV_EPOLLS(\"COMMERCIAL_RCV_EPOLLS\"),\n    COMMERCIAL_SEND_SIZE(\"COMMERCIAL_SEND_SIZE\"),\n    COMMERCIAL_RCV_SIZE(\"COMMERCIAL_RCV_SIZE\"),\n    GROUP_GET_FALL_SIZE(\"GROUP_GET_FALL_SIZE\"),\n    GROUP_GET_FALL_TIME(\"GROUP_GET_FALL_TIME\");\n\n    private final String key;\n\n    StatsItemKey(String key) {\n        this.key = key;\n    }\n\n    public String getKey() {\n        return key;\n    }\n}\n"
    }
}