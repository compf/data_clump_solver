"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/rocketmq_refactor/store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 222,
                "toLine": 222,
                "oldContent": "        this.scheduledExecutorService =",
                "newContent": ""
            },
            {
                "fromLine": 290,
                "toLine": 290,
                "oldContent": "            this.statsTable.get(Stats.QUEUE_PUT_NUMS).addValue(buildStatsKey(topic, queueId), num, times);",
                "newContent": ""
            },
            {
                "fromLine": 296,
                "toLine": 296,
                "oldContent": "            this.statsTable.get(Stats.QUEUE_PUT_SIZE).addValue(buildStatsKey(topic, queueId), size, 1);",
                "newContent": ""
            },
            {
                "fromLine": 314,
                "toLine": 314,
                "oldContent": "        this.statsTable.get(CONSUMER_REGISTER_TIME).addValue(this.clusterName, incValue, 1);",
                "newContent": ""
            },
            {
                "fromLine": 370,
                "toLine": 370,
                "oldContent": "        strBuilder.append(topic).append(\"@\").append(group);",
                "newContent": ""
            },
            {
                "fromLine": 379,
                "toLine": 379,
                "oldContent": "        strBuilder.append(topic).append(\"@\").append(queueId);",
                "newContent": ""
            },
            {
                "fromLine": 388,
                "toLine": 388,
                "oldContent": "        strBuilder.append(topic).append(\"@\").append(queueId).append(\"@\").append(group);",
                "newContent": ""
            },
            {
                "fromLine": 398,
                "toLine": 398,
                "oldContent": "        strBuilder.append(queueId).append(\"@\").append(topic).append(\"@\").append(group);",
                "newContent": ""
            },
            {
                "fromLine": 416,
                "toLine": 416,
                "oldContent": "        StringBuilder statsKey;",
                "newContent": ""
            },
            {
                "fromLine": 421,
                "toLine": 421,
                "oldContent": "        statsKey.append(queueId).append(\"@\").append(topic);",
                "newContent": ""
            },
            {
                "fromLine": 425,
                "toLine": 426,
                "oldContent": "        this.statsTable.get(Stats.BROKER_PUT_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(1);\n    }",
                "newContent": ""
            },
            {
                "fromLine": 433,
                "toLine": 434,
                "oldContent": "        this.statsTable.get(Stats.BROKER_GET_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n        this.incBrokerGetNumsWithoutSystemTopic(topic, incValue);",
                "newContent": ""
            },
            {
                "fromLine": 438,
                "toLine": 439,
                "oldContent": "        this.statsTable.get(BROKER_ACK_NUMS).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);\n    }",
                "newContent": ""
            },
            {
                "fromLine": 443,
                "toLine": 443,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 448,
                "toLine": 448,
                "oldContent": "        this.statsTable.get(BROKER_GET_NUMS_WITHOUT_SYSTEM_TOPIC).getAndCreateStatsItem(this.clusterName).getValue().add(incValue);",
                "newContent": ""
            },
            {
                "fromLine": 452,
                "toLine": 452,
                "oldContent": "        if (TopicValidator.isSystemTopic(topic)) {",
                "newContent": ""
            },
            {
                "fromLine": 454,
                "toLine": 454,
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": 459,
                "toLine": 459,
                "oldContent": "            return 0;",
                "newContent": ""
            },
            {
                "fromLine": 461,
                "toLine": 462,
                "oldContent": "        final StatsItem statsItem = statsItemSet.getStatsItem(this.clusterName);\n        if (statsItem == null) {",
                "newContent": ""
            },
            {
                "fromLine": 465,
                "toLine": 465,
                "oldContent": "        return statsItem.getValue().longValue();",
                "newContent": ""
            },
            {
                "fromLine": 469,
                "toLine": 469,
                "oldContent": "            return 0;",
                "newContent": ""
            },
            {
                "fromLine": 471,
                "toLine": 472,
                "oldContent": "            return 0;\n        }",
                "newContent": ""
            },
            {
                "fromLine": 478,
                "toLine": 478,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 480,
                "toLine": 480,
                "oldContent": "    public double tpsGroupGetNums(final String group, final String topic) {",
                "newContent": ""
            },
            {
                "fromLine": 483,
                "toLine": 483,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 485,
                "toLine": 488,
                "oldContent": "    public void recordDiskFallBehindTime(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n        final String statsKey = buildStatsKey(queueId, topic, group);\n        this.momentStatsItemSetFallTime.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);",
                "newContent": ""
            },
            {
                "fromLine": 491,
                "toLine": 494,
                "oldContent": "    public void recordDiskFallBehindSize(final String group, final String topic, final int queueId,\n        final long fallBehind) {\n        final String statsKey = buildStatsKey(queueId, topic, group);\n        this.momentStatsItemSetFallSize.getAndCreateStatsItem(statsKey).getValue().set(fallBehind);",
                "newContent": ""
            },
            {
                "fromLine": 497,
                "toLine": 501,
                "oldContent": "    public void incDLQStatValue(final String key, final String owner, final String group,\n        final String topic, final String type, final int incValue) {\n        final String statsKey = buildCommercialStatsKey(owner, topic, group, type);\n        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n    }",
                "newContent": ""
            },
            {
                "fromLine": 503,
                "toLine": 507,
                "oldContent": "    public void incCommercialValue(final String key, final String owner, final String group,\n        final String topic, final String type, final int incValue) {\n        final String statsKey = buildCommercialStatsKey(owner, topic, group, type);\n        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n    }",
                "newContent": ""
            },
            {
                "fromLine": 509,
                "toLine": 512,
                "oldContent": "    public void incAccountValue(final String statType, final String owner, final String instanceId, final String topic,\n        final String group, final String msgType,",
                "newContent": ""
            },
            {
                "fromLine": 514,
                "toLine": 515,
                "oldContent": "        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n    }",
                "newContent": ""
            },
            {
                "fromLine": 517,
                "toLine": 520,
                "oldContent": "    public void incAccountValue(final String key, final String accountOwnerParent, final String accountOwnerSelf,\n        final String instanceId, final String group, final String topic,\n        final String msgType, final String flowlimitThreshold, final int incValue) {\n        final String statsKey = buildAccountStatsKey(accountOwnerParent, accountOwnerSelf, instanceId, topic, group,",
                "newContent": ""
            },
            {
                "fromLine": 522,
                "toLine": 523,
                "oldContent": "        this.statsTable.get(key).addValue(statsKey, incValue, 1);\n    }",
                "newContent": ""
            },
            {
                "fromLine": 525,
                "toLine": 526,
                "oldContent": "    public void incAccountValue(final String statType, final String owner, final String instanceId, final String topic,\n        final String group, final String msgType,",
                "newContent": ""
            }
        ]
    }
}"