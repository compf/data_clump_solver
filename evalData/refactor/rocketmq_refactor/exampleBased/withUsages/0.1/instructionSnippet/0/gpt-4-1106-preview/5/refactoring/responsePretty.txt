"{
    "refactorings": {
        "store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java": [
            {
                "fromLine": 44,
                "toLine": 49,
                "oldContent": "\n    @Deprecated public static final String QUEUE_PUT_NUMS = Stats.QUEUE_PUT_NUMS;\n    @Deprecated public static final String QUEUE_PUT_SIZE = Stats.QUEUE_PUT_SIZE;\n    @Deprecated public static final String QUEUE_GET_NUMS = Stats.QUEUE_GET_NUMS;\n    @Deprecated public static final String QUEUE_GET_SIZE = Stats.QUEUE_GET_SIZE;\n    @Deprecated public static final String TOPIC_PUT_NUMS = Stats.TOPIC_PUT_NUMS;",
                "newContent": ""
            },
            {
                "fromLine": 51,
                "toLine": 52,
                "oldContent": "\n    @Deprecated public static final String GROUP_GET_NUMS = Stats.GROUP_GET_NUMS;",
                "newContent": ""
            },
            {
                "fromLine": 54,
                "toLine": 60,
                "oldContent": "\n    @Deprecated public static final String SNDBCK_PUT_NUMS = Stats.SNDBCK_PUT_NUMS;\n    @Deprecated public static final String BROKER_PUT_NUMS = Stats.BROKER_PUT_NUMS;\n    @Deprecated public static final String BROKER_GET_NUMS = Stats.BROKER_GET_NUMS;\n    @Deprecated public static final String GROUP_GET_FROM_DISK_NUMS = Stats.GROUP_GET_FROM_DISK_NUMS;\n    @Deprecated public static final String GROUP_GET_FROM_DISK_SIZE = Stats.GROUP_GET_FROM_DISK_SIZE;\n    @Deprecated public static final String BROKER_GET_FROM_DISK_NUMS = Stats.BROKER_GET_FROM_DISK_NUMS;",
                "newContent": ""
            },
            {
                "fromLine": 62,
                "toLine": 68,
                "oldContent": "    // For commercial\n    @Deprecated public static final String COMMERCIAL_SEND_TIMES = Stats.COMMERCIAL_SEND_TIMES;\n    @Deprecated public static final String COMMERCIAL_SNDBCK_TIMES = Stats.COMMERCIAL_SNDBCK_TIMES;\n    @Deprecated public static final String COMMERCIAL_RCV_TIMES = Stats.COMMERCIAL_RCV_TIMES;\n    @Deprecated public static final String COMMERCIAL_RCV_EPOLLS = Stats.COMMERCIAL_RCV_EPOLLS;\n    @Deprecated public static final String COMMERCIAL_SEND_SIZE = Stats.COMMERCIAL_SEND_SIZE;\n    @Deprecated public static final String COMMERCIAL_RCV_SIZE = Stats.COMMERCIAL_RCV_SIZE;",
                "newContent": ""
            },
            {
                "fromLine": 109,
                "toLine": 110,
                "oldContent": "\n    @Deprecated public static final String GROUP_GET_FALL_SIZE = Stats.GROUP_GET_FALL_SIZE;",
                "newContent": ""
            },
            {
                "fromLine": 172,
                "toLine": 180,
                "oldContent": "        if (enableQueueStat) {\n            this.statsTable.put(Stats.QUEUE_PUT_NUMS, new StatsItemSet(Stats.QUEUE_PUT_NUMS, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_PUT_SIZE, new StatsItemSet(Stats.QUEUE_PUT_SIZE, this.scheduledExecutorService, log));\n            this.statsTable.put(Stats.QUEUE_GET_NUMS, new StatsItemSet(Stats.QUEUE_GET_NUMS, this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(Stats.TOPIC_PUT_NUMS, new StatsItemSet(Stats.TOPIC_PUT_NUMS, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.TOPIC_PUT_SIZE, new StatsItemSet(Stats.TOPIC_PUT_SIZE, this.scheduledExecutorService, log));\n        this.statsTable.put(Stats.GROUP_GET_NUMS, new StatsItemSet(Stats.GROUP_GET_NUMS, this.scheduledExecutorService, log));",
                "newContent": "        if (enableQueueStat) {\n            this.statsTable.put(StatsItemKey.QUEUE_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.QUEUE_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_PUT_SIZE.getKey(), new StatsItemSet(StatsItemKey.QUEUE_PUT_SIZE.getKey(), this.scheduledExecutorService, log));\n            this.statsTable.put(StatsItemKey.QUEUE_GET_NUMS.getKey(), new StatsItemSet(StatsItemKey.QUEUE_GET_NUMS.getKey(), this.scheduledExecutorService, log));\n        }\n        this.statsTable.put(StatsItemKey.TOPIC_PUT_NUMS.getKey(), new StatsItemSet(StatsItemKey.TOPIC_PUT_NUMS.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.TOPIC_PUT_SIZE.getKey(), new StatsItemSet(StatsItemKey.TOPIC_PUT_SIZE.getKey(), this.scheduledExecutorService, log));\n        this.statsTable.put(StatsItemKey.GROUP_GET_NUMS.getKey(), new StatsItemSet(StatsItemKey.GROUP_GET_NUMS.getKey(), this.scheduledExecutorService, log));"
            },
            {
                "fromLine": 332,
                "toLine": 333,
                "oldContent": "    public void onTopicDeleted(final String topic) {\n        this.statsTable.get(Stats.TOPIC_PUT_NUMS).delValue(topic);",
                "newContent": "    public void onTopicDeleted(final String topic) {\n        this.statsTable.get(StatsItemKey.TOPIC_PUT_NUMS.getKey()).delValue(topic);"
            },
            {
                "fromLine": 335,
                "toLine": 343,
                "oldContent": "        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_PUT_NUMS).delValueByPrefixKey(topic, \"@\");\n        }\n        this.statsTable.get(Stats.GROUP_GET_NUMS).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.GROUP_GET_SIZE).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.QUEUE_GET_NUMS).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.QUEUE_GET_SIZE).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(Stats.SNDBCK_PUT_NUMS).delValueByPrefixKey(topic, \"@\");",
                "newContent": "        if (enableQueueStat) {\n            this.statsTable.get(StatsItemKey.QUEUE_PUT_NUMS.getKey()).delValueByPrefixKey(topic, \"@\");\n        }\n        this.statsTable.get(StatsItemKey.GROUP_GET_NUMS.getKey()).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(StatsItemKey.GROUP_GET_SIZE.getKey()).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(StatsItemKey.QUEUE_GET_NUMS.getKey()).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(StatsItemKey.QUEUE_GET_SIZE.getKey()).delValueByPrefixKey(topic, \"@\");\n        this.statsTable.get(StatsItemKey.SNDBCK_PUT_NUMS.getKey()).delValueByPrefixKey(topic, \"@\");"
            },
            {
                "fromLine": 349,
                "toLine": 350,
                "oldContent": "    public void onGroupDeleted(final String group) {\n        this.statsTable.get(Stats.GROUP_GET_NUMS).delValueBySuffixKey(group, \"@\");",
                "newContent": "    public void onGroupDeleted(final String group) {\n        this.statsTable.get(StatsItemKey.GROUP_GET_NUMS.getKey()).delValueBySuffixKey(group, \"@\");"
            },
            {
                "fromLine": 352,
                "toLine": 353,
                "oldContent": "        if (enableQueueStat) {\n            this.statsTable.get(Stats.QUEUE_GET_NUMS).delValueBySuffixKey(group, \"@\");",
                "newContent": "        if (enableQueueStat) {\n            this.statsTable.get(StatsItemKey.QUEUE_GET_NUMS.getKey()).delValueBySuffixKey(group, \"@\");"
            },
            {
                "fromLine": 418,
                "toLine": 418,
                "oldContent": "    public void incTopicPutNums(final String topic) {",
                "newContent": "    public void incTopicPutNums(final String topic) {\n        this.statsTable.get(StatsItemKey.TOPIC_PUT_NUMS.getKey()).increment();"
            },
            {
                "fromLine": 422,
                "toLine": 422,
                "oldContent": "    public void incTopicPutNums(final String topic, int num, int times) {",
                "newContent": "    public void incTopicPutNums(final String topic, int num, int times) {\n        this.statsTable.get(StatsItemKey.TOPIC_PUT_NUMS.getKey()).addValue(num, times);"
            },
            {
                "fromLine": 426,
                "toLine": 426,
                "oldContent": "    public void incTopicPutSize(final String topic, final int size) {",
                "newContent": "    public void incTopicPutSize(final String topic, final int size) {\n        this.statsTable.get(StatsItemKey.TOPIC_PUT_SIZE.getKey()).addValue(size);"
            },
            {
                "fromLine": 431,
                "toLine": 431,
                "oldContent": "        final String statsKey = buildStatsKey(topic, group);",
                "newContent": "        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(StatsItemKey.GROUP_GET_NUMS.getKey()).addValue(statsKey, 1);"
            },
            {
                "fromLine": 490,
                "toLine": 490,
                "oldContent": "        final String statsKey = buildStatsKey(topic, group);",
                "newContent": "        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(StatsItemKey.GROUP_GET_SIZE.getKey()).addValue(statsKey, size);"
            },
            {
                "fromLine": 515,
                "toLine": 515,
                "oldContent": "    public void incBrokerPutNums() {",
                "newContent": "    public void incBrokerPutNums() {\n        this.statsTable.get(StatsItemKey.BROKER_PUT_NUMS.getKey()).increment();"
            },
            {
                "fromLine": 519,
                "toLine": 519,
                "oldContent": "    public void incBrokerPutNums(final String topic, final int incValue) {",
                "newContent": "    public void incBrokerPutNums(final String topic, final int incValue) {\n        this.statsTable.get(StatsItemKey.BROKER_PUT_NUMS.getKey()).addValue(topic, incValue);"
            },
            {
                "fromLine": 524,
                "toLine": 524,
                "oldContent": "    public void incBrokerGetNums(final String topic, final int incValue) {",
                "newContent": "    public void incBrokerGetNums(final String topic, final int incValue) {\n        this.statsTable.get(StatsItemKey.BROKER_GET_NUMS.getKey()).addValue(topic, incValue);"
            },
            {
                "fromLine": 576,
                "toLine": 576,
                "oldContent": "        final String statsKey = buildStatsKey(topic, group);",
                "newContent": "        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(StatsItemKey.GROUP_GET_FROM_DISK_NUMS.getKey()).addValue(statsKey, incValue);"
            },
            {
                "fromLine": 581,
                "toLine": 581,
                "oldContent": "        final String statsKey = buildStatsKey(topic, group);",
                "newContent": "        final String statsKey = buildStatsKey(topic, group);\n        this.statsTable.get(StatsItemKey.GROUP_GET_FROM_DISK_SIZE.getKey()).addValue(statsKey, incValue);"
            }
        ],
        "common/src/main/java/org/apache/rocketmq/common/stats/Stats.java": [
            {
                "fromLine": 20,
                "toLine": 41,
                "oldContent": "\n    public static final String QUEUE_PUT_NUMS = \"QUEUE_PUT_NUMS\";\n    public static final String QUEUE_PUT_SIZE = \"QUEUE_PUT_SIZE\";\n    public static final String QUEUE_GET_NUMS = \"QUEUE_GET_NUMS\";\n    public static final String QUEUE_GET_SIZE = \"QUEUE_GET_SIZE\";\n    public static final String TOPIC_PUT_NUMS = \"TOPIC_PUT_NUMS\";\n    public static final String TOPIC_PUT_SIZE = \"TOPIC_PUT_SIZE\";\n    public static final String GROUP_GET_NUMS = \"GROUP_GET_NUMS\";\n    public static final String GROUP_GET_SIZE = \"GROUP_GET_SIZE\";\n    public static final String SNDBCK_PUT_NUMS = \"SNDBCK_PUT_NUMS\";\n    public static final String BROKER_PUT_NUMS = \"BROKER_PUT_NUMS\";\n    public static final String BROKER_GET_NUMS = \"BROKER_GET_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_NUMS = \"GROUP_GET_FROM_DISK_NUMS\";\n    public static final String GROUP_GET_FROM_DISK_SIZE = \"GROUP_GET_FROM_DISK_SIZE\";\n    public static final String BROKER_GET_FROM_DISK_NUMS = \"BROKER_GET_FROM_DISK_NUMS\";\n    public static final String BROKER_GET_FROM_DISK_SIZE = \"BROKER_GET_FROM_DISK_SIZE\";\n    public static final String COMMERCIAL_SEND_TIMES = \"COMMERCIAL_SEND_TIMES\";\n    public static final String COMMERCIAL_SNDBCK_TIMES = \"COMMERCIAL_SNDBCK_TIMES\";\n    public static final String COMMERCIAL_RCV_TIMES = \"COMMERCIAL_RCV_TIMES\";\n    public static final String COMMERCIAL_RCV_EPOLLS = \"COMMERCIAL_RCV_EPOLLS\";\n    public static final String COMMERCIAL_SEND_SIZE = \"COMMERCIAL_SEND_SIZE\";\n    public static final String COMMERCIAL_RCV_SIZE = \"COMMERCIAL_RCV_SIZE\";",
                "newContent": ""
            },
            {
                "fromLine": 43,
                "toLine": 45,
                "oldContent": "\n    public static final String GROUP_GET_FALL_SIZE = \"GROUP_GET_FALL_SIZE\";\n    public static final String GROUP_GET_FALL_TIME = \"GROUP_GET_FALL_TIME\";",
                "newContent": ""
            }
        ],
        "store/src/test/java/org/apache/rocketmq/store/stats/BrokerStatsManagerTest.java": [
            {
                "fromLine": 17,
                "toLine": 40,
                "oldContent": "\npackage org.apache.rocketmq.store.stats;\n\nimport org.apache.rocketmq.common.topic.TopicValidator;\nimport org.junit.After;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport static org.apache.rocketmq.common.stats.Stats.BROKER_PUT_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.GROUP_GET_FALL_SIZE;\nimport static org.apache.rocketmq.common.stats.Stats.GROUP_GET_FALL_TIME;\nimport static org.apache.rocketmq.common.stats.Stats.GROUP_GET_LATENCY;\nimport static org.apache.rocketmq.common.stats.Stats.GROUP_GET_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.GROUP_GET_SIZE;\nimport static org.apache.rocketmq.common.stats.Stats.QUEUE_GET_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.QUEUE_GET_SIZE;\nimport static org.apache.rocketmq.common.stats.Stats.QUEUE_PUT_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.QUEUE_PUT_SIZE;\nimport static org.apache.rocketmq.common.stats.Stats.SNDBCK_PUT_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.TOPIC_PUT_NUMS;\nimport static org.apache.rocketmq.common.stats.Stats.TOPIC_PUT_SIZE;\nimport static org.assertj.core.api.Assertions.assertThat;\n",
                "newContent": "\npackage org.apache.rocketmq.store.stats;\n\nimport org.apache.rocketmq.common.topic.TopicValidator;\nimport org.junit.After;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n"
            },
            {
                "fromLine": 152,
                "toLine": 163,
                "oldContent": "\n        Assert.assertNull(brokerStatsManager.getStatsItem(TOPIC_PUT_NUMS, TOPIC));\n        Assert.assertNull(brokerStatsManager.getStatsItem(TOPIC_PUT_SIZE, TOPIC));\n        Assert.assertNull(brokerStatsManager.getStatsItem(QUEUE_PUT_NUMS, TOPIC + \"@\" + QUEUE_ID));\n        Assert.assertNull(brokerStatsManager.getStatsItem(QUEUE_PUT_SIZE, TOPIC + \"@\" + QUEUE_ID));\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_SIZE, TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_NUMS, TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(QUEUE_GET_SIZE, TOPIC + \"@\" + QUEUE_ID + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(QUEUE_GET_NUMS, TOPIC + \"@\" + QUEUE_ID + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(SNDBCK_PUT_NUMS, TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_LATENCY, \"1@\" + TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_FALL_SIZE, \"1@\" + TOPIC + \"@\" + GROUP_NAME));",
                "newContent": "\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.TOPIC_PUT_NUMS.getKey(), TOPIC));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.TOPIC_PUT_SIZE.getKey(), TOPIC));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.QUEUE_PUT_NUMS.getKey(), TOPIC + \"@\" + QUEUE_ID));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.QUEUE_PUT_SIZE.getKey(), TOPIC + \"@\" + QUEUE_ID));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.GROUP_GET_SIZE
{
    "refactorings": {
        "store/src/test/java/org/apache/rocketmq/store/stats/BrokerStatsManagerTest.java": [
            {
                "fromLine": 152,
                "toLine": 163,
                "oldContent": "\n        Assert.assertNull(brokerStatsManager.getStatsItem(TOPIC_PUT_NUMS, TOPIC));\n        Assert.assertNull(brokerStatsManager.getStatsItem(TOPIC_PUT_SIZE, TOPIC));\n        Assert.assertNull(brokerStatsManager.getStatsItem(QUEUE_PUT_NUMS, TOPIC + \"@\" + QUEUE_ID));\n        Assert.assertNull(brokerStatsManager.getStatsItem(QUEUE_PUT_SIZE, TOPIC + \"@\" + QUEUE_ID));\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_SIZE, TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_NUMS, TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(QUEUE_GET_SIZE, TOPIC + \"@\" + QUEUE_ID + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(QUEUE_GET_NUMS, TOPIC + \"@\" + QUEUE_ID + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(SNDBCK_PUT_NUMS, TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_LATENCY, \"1@\" + TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_FALL_SIZE, \"1@\" + TOPIC + \"@\" + GROUP_NAME));",
                "newContent": "\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.TOPIC_PUT_NUMS.getKey(), TOPIC));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.TOPIC_PUT_SIZE.getKey(), TOPIC));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.QUEUE_PUT_NUMS.getKey(), TOPIC + \"@\" + QUEUE_ID));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.QUEUE_PUT_SIZE.getKey(), TOPIC + \"@\" + QUEUE_ID));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.GROUP_GET_SIZE.getKey(), TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.GROUP_GET_NUMS.getKey(), TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.QUEUE_GET_SIZE.getKey(), TOPIC + \"@\" + QUEUE_ID + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.QUEUE_GET_NUMS.getKey(), TOPIC + \"@\" + QUEUE_ID + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.SNDBCK_PUT_NUMS.getKey(), TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.GROUP_GET_LATENCY.getKey(), \"1@\" + TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.GROUP_GET_FALL_SIZE.getKey(), \"1@\" + TOPIC + \"@\" + GROUP_NAME));"
            },
            {
                "fromLine": 179,
                "toLine": 186,
                "oldContent": "\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_SIZE, TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_NUMS, TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(QUEUE_GET_SIZE, TOPIC + \"@\" + QUEUE_ID + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(QUEUE_GET_NUMS, TOPIC + \"@\" + QUEUE_ID + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(SNDBCK_PUT_NUMS, TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_LATENCY, \"1@\" + TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(GROUP_GET_FALL_SIZE, \"1@\" + TOPIC + \"@\" + GROUP_NAME));",
                "newContent": "\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.GROUP_GET_SIZE.getKey(), TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.GROUP_GET_NUMS.getKey(), TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.QUEUE_GET_SIZE.getKey(), TOPIC + \"@\" + QUEUE_ID + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.QUEUE_GET_NUMS.getKey(), TOPIC + \"@\" + QUEUE_ID + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.SNDBCK_PUT_NUMS.getKey(), TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.GROUP_GET_LATENCY.getKey(), \"1@\" + TOPIC + \"@\" + GROUP_NAME));\n        Assert.assertNull(brokerStatsManager.getStatsItem(StatsItemKey.GROUP_GET_FALL_SIZE.getKey(), \"1@\" + TOPIC + \"@\" + GROUP_NAME));"
            }
        ],
        "broker/src/test/java/org/apache/rocketmq/broker/processor/EndTransactionProcessorTest.java": [
            {
                "fromLine": 104,
                "toLine": 106,
                "oldContent": "        assertThat(response.getCode()).isEqualTo(ResponseCode.SUCCESS);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(Stats.BROKER_PUT_NUMS, brokerController.getBrokerConfig().getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(Stats.TOPIC_PUT_NUMS, TOPIC).getValue().sum()).isEqualTo(1L);",
                "newContent": "        assertThat(response.getCode()).isEqualTo(ResponseCode.SUCCESS);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(StatsItemKey.BROKER_PUT_NUMS.getKey(), brokerController.getBrokerConfig().getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(StatsItemKey.TOPIC_PUT_NUMS.getKey(), TOPIC).getValue().sum()).isEqualTo(1L);"
            },
            {
                "fromLine": 117,
                "toLine": 119,
                "oldContent": "        assertThat(response.getCode()).isEqualTo(ResponseCode.SUCCESS);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(Stats.BROKER_PUT_NUMS, brokerController.getBrokerConfig().getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(Stats.TOPIC_PUT_NUMS, TOPIC).getValue().sum()).isEqualTo(1L);",
                "newContent": "        assertThat(response.getCode()).isEqualTo(ResponseCode.SUCCESS);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(StatsItemKey.BROKER_PUT_NUMS.getKey(), brokerController.getBrokerConfig().getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n        assertThat(brokerController.getBrokerStatsManager().getStatsItem(StatsItemKey.TOPIC_PUT_NUMS.getKey(), TOPIC).getValue().sum()).isEqualTo(1L);"
            }
        ],
        "broker/src/test/java/org/apache/rocketmq/broker/schedule/ScheduleMessageServiceTest.java": [
            {
                "fromLine": 228,
                "toLine": 230,
                "oldContent": "        // get the stats change\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(BROKER_PUT_NUMS, brokerConfig.getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(TOPIC_PUT_NUMS, topic).getValue().sum()).isEqualTo(1L);",
                "newContent": "        // get the stats change\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(StatsItemKey.BROKER_PUT_NUMS.getKey(), brokerConfig.getBrokerClusterName()).getValue().sum()).isEqualTo(1);\n        assertThat(messageStore.getBrokerStatsManager().getStatsItem(StatsItemKey.TOPIC_PUT_NUMS.getKey(), topic).getValue().sum()).isEqualTo(1L);"
            }
        ],
        "tools/src/main/java/org/apache/rocketmq/tools/command/export/ExportMetricsCommand.java": [
            {
                "fromLine": 186,
                "toLine": 186,
                "oldContent": "            transStatsData = defaultMQAdminExt.viewBrokerStatsData(brokerAddr,",
                "newContent": "            transStatsData = defaultMQAdminExt.viewBrokerStatsData(brokerAddr, StatsItemKey.BROKER_PUT_NUMS.getKey()"
            },
            {
                "fromLine": 194,
                "toLine": 194,
                "oldContent": "            scheduleStatsData = defaultMQAdminExt.viewBrokerStatsData(brokerAddr,",
                "newContent": "            scheduleStatsData = defaultMQAdminExt.viewBrokerStatsData(brokerAddr, StatsItemKey.TOPIC_PUT_NUMS.getKey()"
            }
        ],
        "tools/src/main/java/org/apache/rocketmq/tools/command/stats/StatsAllSubCommand.java": [
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "                            String statsKey = String.format(\"%s@%s\", topic, group);",
                "newContent": "                            String statsKey = String.format(\"%s@%s\", topic, group);\n                            defaultMQAdminExt.viewBrokerStatsData(brokerAddr, StatsItemKey.TOPIC_PUT_NUMS.getKey(), statsKey);"
            }
        ]
    },
    "extractedClasses": {
        "common/src/main/java/org/apache/rocketmq/common/stats/StatsItemKey.java": "package org.apache.rocketmq.common.stats;\n\npublic enum StatsItemKey {\n    QUEUE_PUT_NUMS(\"QUEUE_PUT_NUMS\"),\n    QUEUE_PUT_SIZE(\"QUEUE_PUT_SIZE\"),\n    QUEUE_GET_NUMS(\"QUEUE_GET_NUMS\"),\n    QUEUE_GET_SIZE(\"QUEUE_GET_SIZE\"),\n    TOPIC_PUT_NUMS(\"TOPIC_PUT_NUMS\"),\n    TOPIC_PUT_SIZE(\"TOPIC_PUT_SIZE\"),\n    GROUP_GET_NUMS(\"GROUP_GET_NUMS\"),\n    GROUP_GET_SIZE(\"GROUP_GET_SIZE\"),\n    SNDBCK_PUT_NUMS(\"SNDBCK_PUT_NUMS\"),\n    BROKER_PUT_NUMS(\"BROKER_PUT_NUMS\"),\n    BROKER_GET_NUMS(\"BROKER_GET_NUMS\"),\n    GROUP_GET_FROM_DISK_NUMS(\"GROUP_GET_FROM_DISK_NUMS\"),\n    GROUP_GET_FROM_DISK_SIZE(\"GROUP_GET_FROM_DISK_SIZE\"),\n    BROKER_GET_FROM_DISK_NUMS(\"BROKER_GET_FROM_DISK_NUMS\"),\n    BROKER_GET_FROM_DISK_SIZE(\"BROKER_GET_FROM_DISK_SIZE\"),\n    COMMERCIAL_SEND_TIMES(\"COMMERCIAL_SEND_TIMES\"),\n    COMMERCIAL_SNDBCK_TIMES(\"COMMERCIAL_SNDBCK_TIMES\"),\n    COMMERCIAL_RCV_TIMES(\"COMMERCIAL_RCV_TIMES\"),\n    COMMERCIAL_RCV_EPOLLS(\"COMMERCIAL_RCV_EPOLLS\"),\n    COMMERCIAL_SEND_SIZE(\"COMMERCIAL_SEND_SIZE\"),\n    COMMERCIAL_RCV_SIZE(\"COMMERCIAL_RCV_SIZE\"),\n    GROUP_GET_FALL_SIZE(\"GROUP_GET_FALL_SIZE\"),\n    GROUP_GET_FALL_TIME(\"GROUP_GET_FALL_TIME\");\n\n    private final String key;\n\n    StatsItemKey(String key) {\n        this.key = key;\n    }\n\n    public String getKey() {\n        return key;\n    }\n}\n"
    }
}"