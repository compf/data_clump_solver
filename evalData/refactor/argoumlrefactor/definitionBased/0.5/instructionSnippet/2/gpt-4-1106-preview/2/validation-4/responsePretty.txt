"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 46,
                "toLine": 52,
                "oldContent": "public class JasonsHugeTheme extends MetalTheme {\n\n    private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 16, 14);\n\n    /**",
                "newContent": "public class JasonsHugeTheme extends MetalTheme {\n\n    private final ThemeColors primaryColors;\n    private final ThemeColors secondaryColors;\n    private final ThemeFonts themeFonts;\n\n    public JasonsHugeTheme() {\n        primaryColors = new ThemeColors(102, 153, 204);\n        secondaryColors = new ThemeColors(102, 153, 204);\n        themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 16, 14);\n    }\n\n    /**"
            }
        ],
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 46,
                "toLine": 52,
                "oldContent": "public class JasonsBigTheme extends MetalTheme {\n\n    private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 14, 12);\n\n    /**",
                "newContent": "public class JasonsBigTheme extends MetalTheme {\n\n    private final ThemeColors primaryColors;\n    private final ThemeColors secondaryColors;\n    private final ThemeFonts themeFonts;\n\n    public JasonsBigTheme() {\n        primaryColors = new ThemeColors(102, 153, 204);\n        secondaryColors = new ThemeColors(102, 153, 204);\n        themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 14, 12);\n    }\n\n    /**"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColors {\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n\n    public ThemeColors(int shade1, int shade2, int shade3) {\n        primary1 = new ColorUIResource(shade1, shade1, shade1);\n        primary2 = new ColorUIResource(shade2, shade2, shade2);\n        primary3 = new ColorUIResource(shade3, shade3, shade3);\n    }\n\n    public ColorUIResource getPrimary1() { return primary1; }\n    public ColorUIResource getPrimary2() { return primary2; }\n    public ColorUIResource getPrimary3() { return primary3; }\n}\n",
        "src/argouml/ui/ThemeFonts.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFonts {\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(String controlFontName, String systemFontName, int regularSize, int smallSize) {\n        controlFont = new FontUIResource(controlFontName, Font.PLAIN, regularSize);\n        systemFont = new FontUIResource(systemFontName, Font.PLAIN, regularSize);\n        windowTitleFont = new FontUIResource(controlFontName, Font.BOLD, regularSize);\n        userFont = new FontUIResource(controlFontName, Font.PLAIN, regularSize);\n        smallFont = new FontUIResource(systemFontName, Font.PLAIN, smallSize);\n    }\n\n    public FontUIResource getControlFont() { return controlFont; }\n    public FontUIResource getSystemFont() { return systemFont; }\n    public FontUIResource getWindowTitleFont() { return windowTitleFont; }\n    public FontUIResource getUserFont() { return userFont; }\n    public FontUIResource getSmallFont() { return smallFont; }\n}\n"
    }
}"