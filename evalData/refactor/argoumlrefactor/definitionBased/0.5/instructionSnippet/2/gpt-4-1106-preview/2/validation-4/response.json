{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": 40,
                "toLine": 45,
                "oldContent": "    FigBaseNode(final Object owner, final FigDimensions dimensions,\n            final DiagramSettings settings) {\n        super(owner, dimensions.toRectangle());\n        setBounds(bounds);\n        this.settings = settings;\n    }",
                "newContent": "    FigBaseNode(final Object owner, final FigDimensions dimensions,\n            final DiagramSettings settings) {\n        super(owner, dimensions.toRectangle());\n        this.settings = settings;\n    }"
            }
        ],
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/UMLActivityDiagram.java": [
            {
                "fromLine": 76,
                "toLine": 80,
                "oldContent": "        \n        if (Model.getFacade().isAActivityNode(modelElement)) {\n            figNode = new FigBaseNode(modelElement, bounds, settings);\n            final String style;\n            if (Model.getFacade().isAObjectNode(modelElement)) {",
                "newContent": "        \n        if (Model.getFacade().isAActivityNode(modelElement)) {\n            figNode = new FigBaseNode(modelElement, new FigDimensions(bounds.x, bounds.y, bounds.width, bounds.height), settings);\n            final String style;\n            if (Model.getFacade().isAObjectNode(modelElement)) {"
            }
        ],
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/ModePlaceDiagramElement.java": [
            {
                "fromLine": 92,
                "toLine": 96,
                "oldContent": "\n    private GraphNode createDiagramElement(Layer lay, Object owner, DiagramSettings settings) {\n        FigBaseNode fig = new FigBaseNode(owner, new Rectangle(0, 0, 0, 0), settings);\n        DiagramElementBuilder.buildDiagramElement(fig, style, owner, settings);\n        fig.setLayer(lay);",
                "newContent": "\n    private GraphNode createDiagramElement(Layer lay, Object owner, DiagramSettings settings) {\n        FigBaseNode fig = new FigBaseNode(owner, new FigDimensions(0, 0, 0, 0), settings);\n        DiagramElementBuilder.buildDiagramElement(fig, style, owner, settings);\n        fig.setLayer(lay);"
            }
        ]
    },
    "extractedClasses": {}
}