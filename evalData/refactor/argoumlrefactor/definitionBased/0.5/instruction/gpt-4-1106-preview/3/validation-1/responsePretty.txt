refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		29",
		toLine:"		29",
		oldContent:"
		private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);		
",
		newContent:"
		private final ThemeColors primaryColors = new ThemeColors(102, 102, 153);		
",
,
		fromLine:"		31",
		toLine:"		31",
		oldContent:"
		private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);		
",
		newContent:"
		private final ThemeColors secondaryColors = new ThemeColors(102, 102, 102);		
",
,
		fromLine:"		33",
		toLine:"		33",
		oldContent:"
		private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 16, 14);		
",
		newContent:"
		private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", Font.BOLD, 16, Font.PLAIN, 14);		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		29",
		toLine:"		29",
		oldContent:"
		private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);		
",
		newContent:"
		private final ThemeColors primaryColors = new ThemeColors(102, 102, 153);		
",
,
		fromLine:"		31",
		toLine:"		31",
		oldContent:"
		private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);		
",
		newContent:"
		private final ThemeColors secondaryColors = new ThemeColors(102, 102, 102);		
",
,
		fromLine:"		33",
		toLine:"		33",
		oldContent:"
		private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 14, 12);		
",
		newContent:"
		private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", Font.PLAIN, 14, Font.PLAIN, 12);		
",
,

	],

}
extractedClasses:
{
	ThemeColors.java:"
	public class ThemeColors {
	
	    private final ColorUIResource color1;
	    private final ColorUIResource color2;
	    private final ColorUIResource color3;
	
	    public ThemeColors(int shade, int tint, int tone) {
	        this.color1 = new ColorUIResource(shade, shade, shade + 51);
	        this.color2 = new ColorUIResource(tint, tint, tint + 51);
	        this.color3 = new ColorUIResource(tone, tone, tone + 51);
	    }
	
	    public ColorUIResource getColor1() {
	        return color1;
	    }
	
	    public ColorUIResource getColor2() {
	        return color2;
	    }
	
	    public ColorUIResource getColor3() {
	        return color3;
	    }
	}	
",
	ThemeFonts.java:"
	public class ThemeFonts {
	
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    public ThemeFonts(String controlAndUserFontFamily, String systemAndSmallFontFamily, int controlAndWindowTitleFontStyle, int controlAndUserFontSize, int systemAndSmallFontStyle, int smallFontSize) {
	        this.controlFont = new FontUIResource(controlAndUserFontFamily, controlAndWindowTitleFontStyle, controlAndUserFontSize);
	        this.systemFont = new FontUIResource(systemAndSmallFontFamily, systemAndSmallFontStyle, controlAndUserFontSize);
	        this.windowTitleFont = new FontUIResource(controlAndUserFontFamily, controlAndWindowTitleFontStyle, controlAndUserFontSize);
	        this.userFont = new FontUIResource(controlAndUserFontFamily, systemAndSmallFontStyle, controlAndUserFontSize);
	        this.smallFont = new FontUIResource(systemAndSmallFontFamily, systemAndSmallFontStyle, smallFontSize);
	    }
	
	    public FontUIResource getControlFont() {
	        return controlFont;
	    }
	
	    public FontUIResource getSystemFont() {
	        return systemFont;
	    }
	
	    public FontUIResource getWindowTitleFont() {
	        return windowTitleFont;
	    }
	
	    public FontUIResource getUserFont() {
	        return userFont;
	    }
	
	    public FontUIResource getSmallFont() {
	        return smallFont;
	    }
	}	
",

}
