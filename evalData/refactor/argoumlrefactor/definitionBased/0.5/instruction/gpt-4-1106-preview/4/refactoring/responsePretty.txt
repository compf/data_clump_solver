refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		38",
		toLine:"		54",
		oldContent:"
		private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
		private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);
		    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);		
",
,
		fromLine:"		57",
		toLine:"		61",
		oldContent:"
		private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
		    private final FontUIResource windowTitleFont =		
",
		newContent:"
		private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 14, 12);		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		38",
		toLine:"		54",
		oldContent:"
		private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
		private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);
		    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);		
",
,
		fromLine:"		57",
		toLine:"		61",
		oldContent:"
		private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 16);
		    private final FontUIResource windowTitleFont =		
",
		newContent:"
		private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 16, 14);		
",
,

	],
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:"		37",
		toLine:"		45",
		oldContent:"
		private FigLine lineFig;
		    private FigRect rectFig;
		    
		    private List<FigActivation> activations;
		    private List<FigActivation> stackedActivations;
		    
		    static final int WIDTH = 150;
		    static final int HEIGHT = 500;		
",
		newContent:"
		private LifeLineFigures lifeLineFigures;
		    private List<FigActivation> activations;
		    private List<FigActivation> stackedActivations;		
",
,
		fromLine:"		52",
		toLine:"		62",
		oldContent:"
		rectFig = new FigRect(x, y, WIDTH, HEIGHT); 
		        rectFig.setFilled(false);
		        rectFig.setLineWidth(0);
		        lineFig = new FigLine(x + WIDTH / 2, y, 
		                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);
		        lineFig.setDashed(true);
		        lineFig.setLineWidth(LINE_WIDTH);
		        
		        addFig(rectFig);
		        addFig(lineFig);		
",
		newContent:"
		lifeLineFigures = new LifeLineFigures(x, y, settings);
		        addFig(lifeLineFigures.getRect());
		        addFig(lifeLineFigures.getLine());		
",
,

	],

}
extractedClasses:
{
	src/argouml-app/src/org/argouml/ui/ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	    private final ColorUIResource color1;
	    private final ColorUIResource color2;
	    private final ColorUIResource color3;
	
	    public ThemeColors(int shade1, int shade2, int shade3) {
	        color1 = new ColorUIResource(shade1, shade1, shade1 + 51);
	        color2 = new ColorUIResource(shade2, shade2, shade2 + 51);
	        color3 = new ColorUIResource(shade3, shade3, shade3 + 51);
	    }
	
	    public ColorUIResource getColor1() {
	        return color1;
	    }
	
	    public ColorUIResource getColor2() {
	        return color2;
	    }
	
	    public ColorUIResource getColor3() {
	        return color3;
	    }
	}	
",
	src/argouml-app/src/org/argouml/ui/ThemeFonts.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFonts {
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource titleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    public ThemeFonts(String controlFamily, String systemFamily, int fontSize, int smallFontSize) {
	        controlFont = new FontUIResource(controlFamily, Font.PLAIN, fontSize);
	        systemFont = new FontUIResource(systemFamily, Font.PLAIN, fontSize);
	        titleFont = new FontUIResource(controlFamily, Font.BOLD, fontSize);
	        userFont = new FontUIResource(controlFamily, Font.PLAIN, fontSize);
	        smallFont = new FontUIResource(systemFamily, Font.PLAIN, smallFontSize);
	    }
	
	    public FontUIResource getControlFont() {
	        return controlFont;
	    }
	
	    public FontUIResource getSystemFont() {
	        return systemFont;
	    }
	
	    public FontUIResource getTitleFont() {
	        return titleFont;
	    }
	
	    public FontUIResource getUserFont() {
	        return userFont;
	    }
	
	    public FontUIResource getSmallFont() {
	        return smallFont;
	    }
	}	
",
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/LifeLineFigures.java:"
	package org.argouml.sequence2.diagram;
	
	import org.argouml.uml.diagram.DiagramSettings;
	import org.tigris.gef.presentation.FigLine;
	import org.tigris.gef.presentation.FigRect;
	
	public class LifeLineFigures {
	
	    private static final int WIDTH = 150;
	    private static final int HEIGHT = 500;
	
	    private final FigLine lineFig;
	    private final FigRect rectFig;
	
	    public LifeLineFigures(int x, int y, DiagramSettings settings) {
	        rectFig = new FigRect(x, y, WIDTH, HEIGHT);
	        rectFig.setFilled(false);
	        rectFig.setLineWidth(0);
	        lineFig = new FigLine(x + WIDTH / 2, y, x + WIDTH / 2, y + HEIGHT, settings.getLineColor());
	        lineFig.setDashed(true);
	        lineFig.setLineWidth(settings.getLineWidth());
	    }
	
	    public FigLine getLine() {
	        return lineFig;
	    }
	
	    public FigRect getRect() {
	        return rectFig;
	    }
	}	
",

}
