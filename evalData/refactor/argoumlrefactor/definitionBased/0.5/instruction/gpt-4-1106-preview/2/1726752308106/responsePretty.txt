"{
    "refactorings":{
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 45,
                "toLine": 53,
                "oldContent": "    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "    private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 55,
                "toLine": 63,
                "oldContent": "    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "    private final ThemeFonts fonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 14, 12);"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 45,
                "toLine": 53,
                "oldContent": "    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "    private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 55,
                "toLine": 63,
                "oldContent": "    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "    private final ThemeFonts fonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 16, 14);"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 50,
                "toLine": 62,
                "oldContent": "    private FigLine lineFig;\n    private FigRect rectFig;\n    \n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;\n    \n    static final int WIDTH = 150;\n    static final int HEIGHT = 500;\n\n    FigLifeLine(Object owner, Rectangle bounds, DiagramSettings settings) {\n        super(owner, settings);\n        initialize(bounds.x, bounds.y);\n    }",
                "newContent": "    private LifeLineElements elements;\n\n    FigLifeLine(Object owner, Rectangle bounds, DiagramSettings settings) {\n        super(owner, settings);\n        elements = new LifeLineElements(bounds.x, bounds.y, 150, 500, LINE_COLOR, LINE_WIDTH);\n        addFig(elements.getRectFig());\n        addFig(elements.getLineFig());\n    }"
            }
        ]
    },
    "extractedClasses":{
        "src/argouml-app/src/org/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColors {\n\n    private final ColorUIResource color1;\n    private final ColorUIResource color2;\n    private final ColorUIResource color3;\n\n    public ThemeColors(int colorValue1, int colorValue2, int colorValue3) {\n        color1 = new ColorUIResource(colorValue1, colorValue1, colorValue1 + 51);\n        color2 = new ColorUIResource(colorValue2, colorValue2, colorValue2 + 51);\n        color3 = new ColorUIResource(colorValue3, colorValue3, colorValue3 + 51);\n    }\n\n    public ColorUIResource getColor1() {\n        return color1;\n    }\n\n    public ColorUIResource getColor2() {\n        return color2;\n    }\n\n    public ColorUIResource getColor3() {\n        return color3;\n    }\n}\n",
        "src/argouml-app/src/org/argouml/ui/ThemeFonts.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFonts {\n\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(String controlFontFamily, String systemFontFamily, int mainFontSize, int smallFontSize) {\n        controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, mainFontSize);\n        systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, mainFontSize);\n        windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, mainFontSize);\n        userFont = new FontUIResource(controlFontFamily, Font.PLAIN, mainFontSize);\n        smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallFontSize);\n    }\n\n    public FontUIResource getControlFont() {\n        return controlFont;\n    }\n\n    public FontUIResource getSystemFont() {\n        return systemFont;\n    }\n\n    public FontUIResource getWindowTitleFont() {\n        return windowTitleFont;\n    }\n\n    public FontUIResource getUserFont() {\n        return userFont;\n    }\n\n    public FontUIResource getSmallFont() {\n        return smallFont;\n    }\n}\n",
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/LifeLineElements.java": "package org.argouml.sequence2.diagram;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\nimport java.awt.*;\nimport java.util.LinkedList;\nimport java.util.List;\n\npublic class LifeLineElements {\n\n    private FigLine lineFig;\n    private FigRect rectFig;\n\n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;\n\n    public LifeLineElements(int x, int y, int width, int height, Color lineColor, int lineWidth) {\n        activations = new LinkedList<>();\n        stackedActivations = new LinkedList<>();\n\n        rectFig = new FigRect(x, y, width, height);\n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        lineFig = new FigLine(x + width / 2, y, x + width / 2, y + height, lineColor);\n        lineFig.setDashed(true);\n        lineFig.setLineWidth(lineWidth);\n    }\n\n    public FigLine getLineFig() {\n        return lineFig;\n    }\n\n    public FigRect getRectFig() {\n        return rectFig;\n    }\n\n    // Other methods related to activations and stackedActivations would be here\n}\n"
    }
}"