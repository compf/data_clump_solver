{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 38,
                "toLine": 80,
                "oldContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsBigTheme extends MetalTheme {\n\n    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);\n\n    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getName()\n     */\n    public String getName() { return \"Large Fonts\"; }\n\n    // these are blue in Metal Default Theme\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getPrimary1()",
                "newContent": "\npackage org.argouml.ui;\n\nimport javax.swing.plaf.metal.DefaultMetalTheme;\nimport java.awt.Color;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsBigTheme extends DefaultMetalTheme {\n\n    private ThemeColors colors = new ThemeColors(new Color(102, 102, 153), new Color(153, 153, 204), new Color(204, 204, 255));\n    private ThemeFonts fonts = new ThemeFonts(\"SansSerif\", 14, \"Dialog\", 12);\n\n    /*\n     * @see javax.swing.plaf.DefaultMetalTheme#getName()\n     */\n    public String getName() { return \"Large Fonts\"; }\n\n    @Override\n    protected ColorUIResource getPrimary1() { return colors.getPrimary1(); }\n\n    @Override\n    protected ColorUIResource getPrimary2() { return colors.getPrimary2(); }\n\n    @Override\n    protected ColorUIResource getPrimary3() { return colors.getPrimary3(); }\n\n    @Override\n    public FontUIResource getControlTextFont() { return fonts.getControlFont(); }\n\n    @Override\n    public FontUIResource getSystemTextFont() { return fonts.getSystemFont(); }\n\n    @Override\n    public FontUIResource getUserTextFont() { return fonts.getUserFont(); }\n\n    @Override\n    public FontUIResource getMenuTextFont() { return fonts.getMenuFont(); }\n\n    @Override\n    public FontUIResource getWindowTitleFont() { return fonts.getWindowTitleFont(); }\n\n    @Override\n    public FontUIResource getSubTextFont() { return fonts.getSmallFont(); }\n}"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 38,
                "toLine": 80,
                "oldContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsHugeTheme extends MetalTheme {\n\n    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);\n\n    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getName()\n     */\n    public String getName() { return \"Very Large Fonts\"; }\n\n    // these are blue in Metal Default Theme\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getPrimary1()",
                "newContent": "\npackage org.argouml.ui;\n\nimport javax.swing.plaf.metal.DefaultMetalTheme;\nimport java.awt.Color;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsHugeTheme extends DefaultMetalTheme {\n\n    private ThemeColors colors = new ThemeColors(new Color(102, 102, 153), new Color(153, 153, 204), new Color(204, 204, 255));\n    private ThemeFonts fonts = new ThemeFonts(\"SansSerif\", 16, \"Dialog\", 14);\n\n    /*\n     * @see javax.swing.plaf.DefaultMetalTheme#getName()\n     */\n    public String getName() { return \"Very Large Fonts\"; }\n\n    @Override\n    protected ColorUIResource getPrimary1() { return colors.getPrimary1(); }\n\n    @Override\n    protected ColorUIResource getPrimary2() { return colors.getPrimary2(); }\n\n    @Override\n    protected ColorUIResource getPrimary3() { return colors.getPrimary3(); }\n\n    @Override\n    public FontUIResource getControlTextFont() { return fonts.getControlFont(); }\n\n    @Override\n    public FontUIResource getSystemTextFont() { return fonts.getSystemFont(); }\n\n    @Override\n    public FontUIResource getUserTextFont() { return fonts.getUserFont(); }\n\n    @Override\n    public FontUIResource getMenuTextFont() { return fonts.getMenuFont(); }\n\n    @Override\n    public FontUIResource getWindowTitleFont() { return fonts.getWindowTitleFont(); }\n\n    @Override\n    public FontUIResource getSubTextFont() { return fonts.getSmallFont(); }\n}"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport java.awt.Color;\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColors {\n\n    private ColorUIResource primary1;\n    private ColorUIResource primary2;\n    private ColorUIResource primary3;\n\n    public ThemeColors(Color primary1, Color primary2, Color primary3) {\n        this.primary1 = new ColorUIResource(primary1);\n        this.primary2 = new ColorUIResource(primary2);\n        this.primary3 = new ColorUIResource(primary3);\n    }\n\n    public ColorUIResource getPrimary1() {\n        return primary1;\n    }\n\n    public ColorUIResource getPrimary2() {\n        return primary2;\n    }\n\n    public ColorUIResource getPrimary3() {\n        return primary3;\n    }\n}",
        "src/argouml-app/src/org/argouml/ui/ThemeFonts.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFonts {\n\n    private FontUIResource controlFont;\n    private FontUIResource systemFont;\n    private FontUIResource windowTitleFont;\n    private FontUIResource userFont;\n    private FontUIResource smallFont;\n\n    public ThemeFonts(String controlAndUserFontFamily, int controlAndUserFontSize, String otherFontFamily, int smallFontSize) {\n        this.controlFont = new FontUIResource(controlAndUserFontFamily, Font.PLAIN, controlAndUserFontSize);\n        this.systemFont = new FontUIResource(otherFontFamily, Font.PLAIN, controlAndUserFontSize);\n        this.windowTitleFont = new FontUIResource(controlAndUserFontFamily, Font.BOLD, controlAndUserFontSize);\n        this.userFont = new FontUIResource(controlAndUserFontFamily, Font.PLAIN, controlAndUserFontSize);\n        this.smallFont = new FontUIResource(otherFontFamily, Font.PLAIN, smallFontSize);\n    }\n\n    public FontUIResource getControlFont() {\n        return controlFont;\n    }\n\n    public FontUIResource getSystemFont() {\n        return systemFont;\n    }\n\n    public FontUIResource getWindowTitleFont() {\n        return windowTitleFont;\n    }\n\n    public FontUIResource getUserFont() {\n        return userFont;\n    }\n\n    public FontUIResource getMenuFont() {\n        return controlFont;\n    }\n\n    public FontUIResource getSmallFont() {\n        return smallFont;\n    }\n}"
    }
}