refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		34",
		toLine:"		105",
		oldContent:"
		// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
		// PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
		// CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,
		// UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
		
		    public String getName() { return "Very Large Fonts"; }
		
		    // these are blue in Metal Default Theme
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary1()
		     */
		    protected ColorUIResource getPrimary1() { return primary1; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary2()
		     */
		    protected ColorUIResource getPrimary2() { return primary2; }
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary3()
		     */
		    protected ColorUIResource getPrimary3() { return primary3; }
		
		    // these are gray in Metal Default Theme
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSecondary1()
		     */
		    protected ColorUIResource getSecondary1() { return secondary1; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSecondary2()
		     */
		    protected ColorUIResource getSecondary2() { return secondary2; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSecondary3()
		     */
		    protected ColorUIResource getSecondary3() { return secondary3; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
		     */
		    public FontUIResource getControlTextFont() { return controlFont; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
		     */
		    public FontUIResource getSystemTextFont() { return systemFont; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
		     */
		    public FontUIResource getUserTextFont() { return userFont; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
		     */
		    public FontUIResource getMenuTextFont() { return controlFont; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
		     */
		    public FontUIResource getSubTextFont() { return smallFont; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
		     */
		    public FontUIResource getWindowTitleFont() { return windowTitleFont; }
		}
				
",
		newContent:"
		// These methods are placeholders that need to pull from a centralized theme
		    protected ColorUIResource getPrimary1() { return ThemeColors.PRIMARY1; }
		    protected ColorUIResource getPrimary2() { return ThemeColors.PRIMARY2; }
		    protected ColorUIResource getPrimary3() { return ThemeColors.PRIMARY3; }
		    protected ColorUIResource getSecondary1() { return ThemeColors.SECONDARY1; }
		    protected ColorUIResource getSecondary2() { return ThemeColors.SECONDARY2; }
		    protected ColorUIResource getSecondary3() { return ThemeColors.SECONDARY3; }
		    public FontUIResource getControlTextFont() { return FontTheme.CONTROL_FONT; }
		    public FontUIResource getSystemTextFont() { return FontTheme.SYSTEM_FONT; }
		    public FontUIResource getUserTextFont() { return FontTheme.USER_FONT; }
		    public FontUIResource getMenuTextFont() { return FontTheme.CONTROL_FONT; }
		    public FontUIResource getSubTextFont() { return FontTheme.SMALL_FONT; }
		    public FontUIResource getWindowTitleFont() { return FontTheme.WINDOW_TITLE_FONT; }
				
",
,

	],
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		34",
		toLine:"		106",
		oldContent:"
		// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
		// PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
		// CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,
		// UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
		
		    public String getName() { return "Large Fonts"; }
		
		    // these are blue in Metal Default Theme
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary1()
		     */
		    protected ColorUIResource getPrimary1() { return primary1; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary2()
		     */
		    protected ColorUIResource getPrimary2() { return primary2; }
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary3()
		     */
		    protected ColorUIResource getPrimary3() { return primary3; }
		
		    // these are gray in Metal Default Theme
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSecondary1()
		     */
		    protected ColorUIResource getSecondary1() { return secondary1; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSecondary2()
		     */
		    protected ColorUIResource getSecondary2() { return secondary2; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSecondary3()
		     */
		    protected ColorUIResource getSecondary3() { return secondary3; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
		     */
		    public FontUIResource getControlTextFont() { return controlFont; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
		     */
		    public FontUIResource getSystemTextFont() { return systemFont; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
		     */
		    public FontUIResource getUserTextFont() { return userFont; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
		     */
		    public FontUIResource getMenuTextFont() { return controlFont; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
		     */
		    public FontUIResource getSubTextFont() { return smallFont; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
		     */
		    public FontUIResource getWindowTitleFont() { return windowTitleFont; }
		}
				
",
		newContent:"
		// These methods are placeholders that need to pull from a centralized theme
		    protected ColorUIResource getPrimary1() { return ThemeColors.PRIMARY1; }
		    protected ColorUIResource getPrimary2() { return ThemeColors.PRIMARY2; }
		    protected ColorUIResource getPrimary3() { return ThemeColors.PRIMARY3; }
		    protected ColorUIResource getSecondary1() { return ThemeColors.SECONDARY1; }
		    protected ColorUIResource getSecondary2() { return ThemeColors.SECONDARY2; }
		    protected ColorUIResource getSecondary3() { return ThemeColors.SECONDARY3; }
		    public FontUIResource getControlTextFont() { return FontTheme.CONTROL_FONT; }
		    public FontUIResource getSystemTextFont() { return FontTheme.SYSTEM_FONT; }
		    public FontUIResource getUserTextFont() { return FontTheme.USER_FONT; }
		    public FontUIResource getMenuTextFont() { return FontTheme.CONTROL_FONT; }
		    public FontUIResource getSubTextFont() { return FontTheme.SMALL_FONT; }
		    public FontUIResource getWindowTitleFont() { return FontTheme.WINDOW_TITLE_FONT; }
				
",
,

	],

}
extractedClasses:
{
	src/argouml-app/src/org/argouml/ui/ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	
	    public static final ColorUIResource PRIMARY1 = new ColorUIResource(102, 102, 153);
	    public static final ColorUIResource PRIMARY2 = new ColorUIResource(153, 153, 204);
	    public static final ColorUIResource PRIMARY3 = new ColorUIResource(204, 204, 255);
	
	    public static final ColorUIResource SECONDARY1 = new ColorUIResource(102, 102, 102);
	    public static final ColorUIResource SECONDARY2 = new ColorUIResource(153, 153, 153);
	    public static final ColorUIResource SECONDARY3 = new ColorUIResource(204, 204, 204);
	
	    private ThemeColors() {
	        // Utility class
	    }
	}
		
",
	src/argouml-app/src/org/argouml/ui/FontTheme.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class FontTheme {
	
	    public static final FontUIResource CONTROL_FONT = new FontUIResource("SansSerif", Font.PLAIN, 14);
	    public static final FontUIResource SYSTEM_FONT = new FontUIResource("Dialog", Font.PLAIN, 14);
	    public static final FontUIResource WINDOW_TITLE_FONT = new FontUIResource("SansSerif", Font.BOLD, 14);
	    public static final FontUIResource USER_FONT = new FontUIResource("SansSerif", Font.PLAIN, 14);
	    public static final FontUIResource SMALL_FONT = new FontUIResource("Dialog", Font.PLAIN, 12);
	
	    private FontTheme() {
	        // Utility class
	    }
	}
		
",

}
