refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		38",
		toLine:"		57",
		oldContent:"
		
		package org.argouml.ui;
		
		import java.awt.Font;
		import javax.swing.plaf.ColorUIResource;
		import javax.swing.plaf.FontUIResource;
		import javax.swing.plaf.metal.MetalTheme;
		
		/**
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsHugeTheme extends MetalTheme {
		
		    private final ThemeColors colorTheme = new ThemeColors();
		    private final ThemeFonts fontTheme = new ThemeFonts(Font.BOLD, 16, 14);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */
		    public String getName() { return "Very Large Fonts"; }		
",
		newContent:"
		
		package org.argouml.ui;
		
		import java.awt.Font;
		import javax.swing.plaf.ColorUIResource;
		import javax.swing.plaf.FontUIResource;
		import javax.swing.plaf.metal.MetalTheme;
		import org.argouml.ui.theme.ThemeColors;
		import org.argouml.ui.theme.ThemeFonts;
		
		/**
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsHugeTheme extends MetalTheme {
		
		    private final ThemeColors colorTheme = new ThemeColors();
		    private final ThemeFonts fontTheme = new ThemeFonts(Font.BOLD, 16, 14);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */
		    public String getName() { return "Very Large Fonts"; }		
",
,

	],
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		38",
		toLine:"		57",
		oldContent:"
		
		package org.argouml.ui;
		
		import java.awt.Font;
		import javax.swing.plaf.ColorUIResource;
		import javax.swing.plaf.FontUIResource;
		import javax.swing.plaf.metal.MetalTheme;
		
		/**
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsBigTheme extends MetalTheme {
		
		    private final ThemeColors colorTheme = new ThemeColors();
		    private final ThemeFonts fontTheme = new ThemeFonts(Font.PLAIN, 14, 12);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */
		    public String getName() { return "Large Fonts"; }		
",
		newContent:"
		
		package org.argouml.ui;
		
		import java.awt.Font;
		import javax.swing.plaf.ColorUIResource;
		import javax.swing.plaf.FontUIResource;
		import javax.swing.plaf.metal.MetalTheme;
		import org.argouml.ui.theme.ThemeColors;
		import org.argouml.ui.theme.ThemeFonts;
		
		/**
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsBigTheme extends MetalTheme {
		
		    private final ThemeColors colorTheme = new ThemeColors();
		    private final ThemeFonts fontTheme = new ThemeFonts(Font.PLAIN, 14, 12);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */
		    public String getName() { return "Large Fonts"; }		
",
,

	],

}
extractedClasses:
{
	src/org/argouml/ui/theme/ThemeColors.java:"
	package org.argouml.ui.theme;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	    public ColorUIResource getPrimary1() { return new ColorUIResource(102, 102, 153); }
	    public ColorUIResource getPrimary2() { return new ColorUIResource(153, 153, 204); }
	    public ColorUIResource getPrimary3() { return new ColorUIResource(204, 204, 255); }
	
	    public ColorUIResource getSecondary1() { return new ColorUIResource(102, 102, 102); }
	    public ColorUIResource getSecondary2() { return new ColorUIResource(153, 153, 153); }
	    public ColorUIResource getSecondary3() { return new ColorUIResource(204, 204, 204); }
	}	
",
	src/org/argouml/ui/theme/ThemeFonts.java:"
	package org.argouml.ui.theme;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFonts {
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	    private final FontUIResource windowTitleFont;
	
	    public ThemeFonts(int fontStyle, int largeSize, int smallSize) {
	        this.controlFont = new FontUIResource("SansSerif", fontStyle, largeSize);
	        this.systemFont = new FontUIResource("Dialog", fontStyle, largeSize);
	        this.userFont = new FontUIResource("SansSerif", fontStyle, largeSize);
	        this.smallFont = new FontUIResource("Dialog", fontStyle, smallSize);
	        this.windowTitleFont = new FontUIResource("SansSerif", Font.BOLD, largeSize);
	    }
	
	    public FontUIResource getControlFont() { return controlFont; }
	    public FontUIResource getSystemFont() { return systemFont; }
	    public FontUIResource getUserFont() { return userFont; }
	    public FontUIResource getSmallFont() { return smallFont; }
	    public FontUIResource getWindowTitleFont() { return windowTitleFont; }
	}	
",

}
