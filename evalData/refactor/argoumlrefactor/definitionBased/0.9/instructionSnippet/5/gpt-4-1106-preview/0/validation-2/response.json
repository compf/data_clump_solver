{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 38,
                "toLine": 57,
                "oldContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsHugeTheme extends MetalTheme {\n\n    private final ThemeColors colorTheme = new ThemeColors();\n    private final ThemeFonts fontTheme = new ThemeFonts(Font.BOLD, 16, 14);\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getName()\n     */\n    public String getName() { return \"Very Large Fonts\"; }",
                "newContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\nimport org.argouml.ui.theme.ThemeColors;\nimport org.argouml.ui.theme.ThemeFonts;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsHugeTheme extends MetalTheme {\n\n    private final ThemeColors colorTheme = new ThemeColors();\n    private final ThemeFonts fontTheme = new ThemeFonts(Font.BOLD, 16, 14);\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getName()\n     */\n    public String getName() { return \"Very Large Fonts\"; }"
            }
        ],
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 38,
                "toLine": 57,
                "oldContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsBigTheme extends MetalTheme {\n\n    private final ThemeColors colorTheme = new ThemeColors();\n    private final ThemeFonts fontTheme = new ThemeFonts(Font.PLAIN, 14, 12);\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getName()\n     */\n    public String getName() { return \"Large Fonts\"; }",
                "newContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\nimport org.argouml.ui.theme.ThemeColors;\nimport org.argouml.ui.theme.ThemeFonts;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsBigTheme extends MetalTheme {\n\n    private final ThemeColors colorTheme = new ThemeColors();\n    private final ThemeFonts fontTheme = new ThemeFonts(Font.PLAIN, 14, 12);\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getName()\n     */\n    public String getName() { return \"Large Fonts\"; }"
            }
        ]
    },
    "extractedClasses": {
        "src/org/argouml/ui/theme/ThemeColors.java": "package org.argouml.ui.theme;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColors {\n    public ColorUIResource getPrimary1() { return new ColorUIResource(102, 102, 153); }\n    public ColorUIResource getPrimary2() { return new ColorUIResource(153, 153, 204); }\n    public ColorUIResource getPrimary3() { return new ColorUIResource(204, 204, 255); }\n\n    public ColorUIResource getSecondary1() { return new ColorUIResource(102, 102, 102); }\n    public ColorUIResource getSecondary2() { return new ColorUIResource(153, 153, 153); }\n    public ColorUIResource getSecondary3() { return new ColorUIResource(204, 204, 204); }\n}",
        "src/org/argouml/ui/theme/ThemeFonts.java": "package org.argouml.ui.theme;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFonts {\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n    private final FontUIResource windowTitleFont;\n\n    public ThemeFonts(int fontStyle, int largeSize, int smallSize) {\n        this.controlFont = new FontUIResource(\"SansSerif\", fontStyle, largeSize);\n        this.systemFont = new FontUIResource(\"Dialog\", fontStyle, largeSize);\n        this.userFont = new FontUIResource(\"SansSerif\", fontStyle, largeSize);\n        this.smallFont = new FontUIResource(\"Dialog\", fontStyle, smallSize);\n        this.windowTitleFont = new FontUIResource(\"SansSerif\", Font.BOLD, largeSize);\n    }\n\n    public FontUIResource getControlFont() { return controlFont; }\n    public FontUIResource getSystemFont() { return systemFont; }\n    public FontUIResource getUserFont() { return userFont; }\n    public FontUIResource getSmallFont() { return smallFont; }\n    public FontUIResource getWindowTitleFont() { return windowTitleFont; }\n}"
    }
}