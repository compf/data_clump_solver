refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		38",
		toLine:"		75",
		oldContent:"
		package org.argouml.ui;
		
		import java.awt.Font;
		import javax.swing.plaf.ColorUIResource;
		import javax.swing.plaf.FontUIResource;
		import javax.swing.plaf.metal.MetalTheme;
		
		/**
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsBigTheme extends MetalTheme {
		
		    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);
		
		    private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 14);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 12);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */		
",
		newContent:"
		package org.argouml.ui;
		
		import javax.swing.plaf.metal.MetalTheme;
		
		/**
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsBigTheme extends MetalTheme {
		
		    private final ThemeColors colors = new ThemeColors(102, 153, 204);
		    private final ThemeFonts fonts = new ThemeFonts("SansSerif", "Dialog", 14, 12);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		38",
		toLine:"		75",
		oldContent:"
		package org.argouml.ui;
		
		import java.awt.Font;
		import javax.swing.plaf.ColorUIResource;
		import javax.swing.plaf.FontUIResource;
		import javax.swing.plaf.metal.MetalTheme;
		
		/**
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsHugeTheme extends MetalTheme {
		
		    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);
		
		    private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 16);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 16);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */		
",
		newContent:"
		package org.argouml.ui;
		
		import javax.swing.plaf.metal.MetalTheme;
		
		/**
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsHugeTheme extends MetalTheme {
		
		    private final ThemeColors colors = new ThemeColors(102, 153, 204);
		    private final ThemeFonts fonts = new ThemeFonts("SansSerif", "Dialog", 16, 14);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */		
",
,

	],
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:"		40",
		toLine:"		53",
		oldContent:"
		package org.argouml.sequence2.diagram;
		
		import java.awt.Rectangle;
		import java.util.Collections;
		import java.util.LinkedList;
		import java.util.List;
		
		import org.argouml.uml.diagram.DiagramSettings;
		import org.argouml.uml.diagram.ui.ArgoFigGroup;
		import org.tigris.gef.presentation.FigLine;
		import org.tigris.gef.presentation.FigRect;
		
				
",
		newContent:"
		package org.argouml.sequence2.diagram;
		
		import java.util.Collections;
		import java.util.LinkedList;
		import java.util.List;
		
		import org.argouml.uml.diagram.DiagramSettings;
		import org.argouml.uml.diagram.ui.ArgoFigGroup;
		import org.tigris.gef.presentation.FigLine;
		import org.tigris.gef.presentation.FigRect;
		
				
",
,
		fromLine:"		249",
		toLine:"		262",
		oldContent:"
		return (messageFig.getSourceFigNode().getOwner() == getOwner());
		    }
		    
		    private FigActivation createActivationFig(
		            final Object owner, 
		            final int x, 
		            final int y, 
		            final int w, 
		            final int h,
		            final DiagramSettings settings,
		            final FigMessage messageFig) {
		        return new FigActivation(
		                owner,
		                new Rectangle(x, y, w, h),		
",
		newContent:"
		return (messageFig.getSourceFigNode().getOwner() == getOwner());
		    }
		    
		    private FigActivation createActivationFig(
		            Rectangle bounds,
		            final DiagramSettings settings,
		            final FigMessage messageFig) {
		        return new FigActivation(bounds,		
",
,

	],
	src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java:
	[
		fromLine:"		13",
		toLine:"		22",
		oldContent:"
		package org.argouml.activity2.diagram;
		
		import java.awt.Dimension;
		import java.awt.Rectangle;
		
		import org.argouml.uml.diagram.DiagramSettings;
		import org.tigris.gef.presentation.FigGroup;
		import org.tigris.gef.presentation.FigNode;
				
",
		newContent:"
		package org.argouml.activity2.diagram;
		
		import java.awt.Dimension;
		import org.argouml.uml.diagram.DiagramSettings;
		import org.tigris.gef.presentation.FigGroup;
		import org.tigris.gef.presentation.FigNode;
				
",
,
		fromLine:"		74",
		toLine:"		87",
		oldContent:"
		updateEdges();
		    }
		    
		    @Override
		    protected void setBoundsImpl(
		            final int x,
		            final int y,
		            final int w,
		            final int h) {
		
		        _x = x;
		        _y = y;
		        _w = w;
		        _h = h;		
",
		newContent:"
		updateEdges();
		    }
		    
		    @Override
		    protected void setBoundsImpl(Rectangle bounds) {
		
		        _x = bounds.x;
		        _y = bounds.y;
		        _w = bounds.width;
		        _h = bounds.height;		
",
,

	],

}
extractedClasses:
{
	src/org/argouml/ui/ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	    private final ColorUIResource primary1;
	    private final ColorUIResource primary2;
	    private final ColorUIResource primary3;
	    private final ColorUIResource secondary1;
	    private final ColorUIResource secondary2;
	    private final ColorUIResource secondary3;
	
	    public ThemeColors(int p1, int p2, int p3) {
	        primary1 = new ColorUIResource(p1, p1, p1 + 51);
	        primary2 = new ColorUIResource(p1 + 51, p1 + 51, p2);
	        primary3 = new ColorUIResource(p2, p2, p3);
	        secondary1 = new ColorUIResource(p1, p1, p1);
	        secondary2 = new ColorUIResource(p1 + 51, p1 + 51, p1 + 51);
	        secondary3 = new ColorUIResource(p2, p2, p2);
	    }
	    // Getters and other methods can go here
	}	
",
	src/org/argouml/ui/ThemeFonts.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFonts {
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    public ThemeFonts(String controlAndUserFontFamily, String systemAndSmallFontFamily, int regularSize, int smallSize) {
	        controlFont = new FontUIResource(controlAndUserFontFamily, Font.PLAIN, regularSize);
	        systemFont = new FontUIResource(systemAndSmallFontFamily, Font.PLAIN, regularSize);
	        windowTitleFont = new FontUIResource(controlAndUserFontFamily, Font.BOLD, regularSize);
	        userFont = new FontUIResource(controlAndUserFontFamily, Font.PLAIN, regularSize);
	        smallFont = new FontUIResource(systemAndSmallFontFamily, Font.PLAIN, smallSize);
	    }
	    // Getters and other methods can go here
	}	
",

}
