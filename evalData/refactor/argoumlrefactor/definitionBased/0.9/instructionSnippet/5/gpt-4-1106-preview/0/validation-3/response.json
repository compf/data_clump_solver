{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": 13,
                "toLine": 21,
                "oldContent": "\npackage org.argouml.activity2.diagram;\n\nimport java.awt.Dimension;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;\n",
                "newContent": "\npackage org.argouml.activity2.diagram;\n\nimport java.awt.Dimension;\nimport java.awt.Rectangle;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;\n"
            },
            {
                "fromLine": 35,
                "toLine": 45,
                "oldContent": "     * \n     * @param owner the owning UML element\n     * @param bounds rectangle describing bounds\n     * @param settings rendering settings\n     */\n    FigBaseNode(final Object owner, final Rectangle bounds,\n            final DiagramSettings settings) {\n        super(owner);\n        setBounds(bounds);\n        this.settings = settings;\n    }",
                "newContent": "     * \n     * @param owner the owning UML element\n     * @param bounds object describing bounds\n     * @param settings rendering settings\n     */\n    FigBaseNode(final Object owner, final NodeBounds bounds,\n            final DiagramSettings settings) {\n        super(owner);\n        setBounds(bounds);\n        this.settings = settings;\n    }"
            },
            {
                "fromLine": 63,
                "toLine": 81,
                "oldContent": "    public void setNameDiagramElement(DiagramElement name) {\n    }\n\n    // TODO: Move an empty implementation to FigGroup in GEF\n    protected void positionChildren() {\n        Rectangle myBounds = getBounds();\n        if (displayState != null) {\n            displayState.setBounds(myBounds);\n        }\n//      calcBounds();\n        updateEdges();\n    }\n    \n    @Override\n    protected void setBoundsImpl(NodeBounds bounds) {\n            \n            _x = bounds.getX();\n            _y = bounds.getY();\n            _w = bounds.getWidth();",
                "newContent": "    public void setNameDiagramElement(DiagramElement name) {\n    }\n\n    // TODO: Move an empty implementation to FigGroup in GEF\n    protected void positionChildren() {\n        Rectangle myBounds = getBounds();\n        if (displayState != null) {\n            displayState.setBounds(myBounds);\n        }\n//      calcBounds();\n        updateEdges();\n    }\n    \n    @Override\n    protected void setBoundsImpl(Rectangle bounds) {\n\n        _x = bounds.x;\n        _y = bounds.y;\n        _w = bounds.width;\n        _h = bounds.height;\n    }"
            }
        ]
    },
    "extractedClasses": {
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/NodeBounds.java": "package org.argouml.activity2.diagram;\n\nimport java.awt.Rectangle;\n\npublic class NodeBounds {\n\n    private final int x;\n    private final int y;\n    private final int width;\n    private final int height;\n\n    public NodeBounds(int x, int y, int width, int height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    public Rectangle toRectangle() {\n        return new Rectangle(x, y, width, height);\n    }\n\n    public int getX() {\n        return x;\n    }\n\n    public int getY() {\n        return y;\n    }\n\n    public int getWidth() {\n        return width;\n    }\n\n    public int getHeight() {\n        return height;\n    }\n}\n"
    }
}