refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java:
	[
		fromLine:"		42",
		toLine:"		47",
		oldContent:"
		            final DiagramSettings settings) {
		        super(owner);
		        setBoundsImpl(dimensions);
		        setBounds(bounds);
		        this.settings = settings;
		    }		
",
		newContent:"
		            final DiagramSettings settings) {
		        super(owner);
		        _x = dimensions.x;
		        _y = dimensions.y;
		        _w = dimensions.width;
		        _h = dimensions.height;
		        this.settings = settings;
		        positionChildren();
		    }		
",
,
		fromLine:"		77",
		toLine:"		81",
		oldContent:"
		    
		    @Override
		    public void setBounds(final int x, final int y, final int width, final int height) {
		
		        _x = x;		
",
		newContent:"
				
",
,

	],
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/UMLActivityDiagram.java:
	[
		fromLine:"		76",
		toLine:"		80",
		oldContent:"
		        
		        if (Model.getFacade().isAActivityNode(modelElement)) {
		            figNode = new FigBaseNode(modelElement, bounds, settings);
		            final String style;
		            if (Model.getFacade().isAObjectNode(modelElement)) {		
",
		newContent:"
		
		        if (Model.getFacade().isAActivityNode(modelElement)) {
		            FigDimensions dimensions = new FigDimensions(bounds.x, bounds.y, bounds.width, bounds.height);
		            figNode = new FigBaseNode(modelElement, dimensions, settings);
		            final String style;
		            if (Model.getFacade().isAObjectNode(modelElement)) {		
",
,

	],
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/ModePlaceDiagramElement.java:
	[
		fromLine:"		92",
		toLine:"		96",
		oldContent:"
		
		    private GraphNode createDiagramElement(Layer lay, Object owner, DiagramSettings settings) {
		        FigBaseNode fig = new FigBaseNode(owner, new Rectangle(0, 0, 0, 0), settings);
		        DiagramElementBuilder.buildDiagramElement(fig, style, owner, settings);
		        fig.setLayer(lay);		
",
		newContent:"
		
		    private GraphNode createDiagramElement(Layer lay, Object owner, DiagramSettings settings) {
		        FigDimensions dimensions = new FigDimensions(0, 0, 0, 0);
		        FigBaseNode fig = new FigBaseNode(owner, dimensions, settings);
		        DiagramElementBuilder.buildDiagramElement(fig, style, owner, settings);
		        fig.setLayer(lay);		
",
,

	],

}
