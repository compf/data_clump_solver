{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 38,
                "toLine": 45,
                "oldContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n",
                "newContent": "\npackage org.argouml.ui;\n\nimport javax.swing.plaf.metal.MetalTheme;\n"
            },
            {
                "fromLine": 49,
                "toLine": 72,
                "oldContent": "public class JasonsBigTheme extends MetalTheme {\n\n    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);\n\n    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);\n",
                "newContent": "public class JasonsBigTheme extends MetalTheme {\n\n    private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);\n    private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);\n    private final ThemeFont themeFonts = new ThemeFont(\"SansSerif\", \"Dialog\", 14, 12);\n"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 38,
                "toLine": 45,
                "oldContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n",
                "newContent": "\npackage org.argouml.ui;\n\nimport javax.swing.plaf.metal.MetalTheme;\n"
            },
            {
                "fromLine": 49,
                "toLine": 72,
                "oldContent": "public class JasonsHugeTheme extends MetalTheme {\n\n    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);\n\n    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n",
                "newContent": "public class JasonsHugeTheme extends MetalTheme {\n\n    private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);\n    private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);\n    private final ThemeFont themeFonts = new ThemeFont(\"SansSerif\", \"Dialog\", 16, 14);\n"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 40,
                "toLine": 53,
                "oldContent": "\npackage org.argouml.sequence2.diagram;\n\nimport java.awt.Rectangle;\nimport java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.argouml.uml.diagram.ui.ArgoFigGroup;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\n",
                "newContent": "\npackage org.argouml.sequence2.diagram;\n\nimport java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.argouml.uml.diagram.ui.ArgoFigGroup;\n\n"
            },
            {
                "fromLine": 252,
                "toLine": 259,
                "oldContent": "    private FigActivation createActivationFig(\n            final Object owner, \n            final int x, \n            final int y, \n            final int w, \n            final int h,\n            final DiagramSettings settings,\n            final FigMessage messageFig) {",
                "newContent": "    private FigActivation createActivationFig(\n            final Object owner, \n            final Rectangle bounds,\n            final DiagramSettings settings,\n            final FigMessage messageFig) {"
            }
        ],
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": 13,
                "toLine": 22,
                "oldContent": "\npackage org.argouml.activity2.diagram;\n\nimport java.awt.Dimension;\nimport java.awt.Rectangle;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;\n",
                "newContent": "\npackage org.argouml.activity2.diagram;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;\n"
            },
            {
                "fromLine": 77,
                "toLine": 84,
                "oldContent": "    @Override\n    protected void setBoundsImpl(\n            final int x,\n            final int y,\n            final int w,\n            final int h) {\n\n        _x = x;",
                "newContent": "    @Override\n    protected void setBoundsImpl(\n            final Rectangle newBounds) {\n\n        _x = newBounds.x;"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColor.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColor {\n\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n\n    public ThemeColor(int shade1, int shade2, int shade3) {\n        primary1 = new ColorUIResource(shade1, shade1, shade1 + 51);\n        primary2 = new ColorUIResource(shade2, shade2, shade2 + 51);\n        primary3 = new ColorUIResource(shade3, shade3, shade3 + 51);\n    }\n\n    public ColorUIResource getPrimary1() {\n        return primary1;\n    }\n\n    public ColorUIResource getPrimary2() {\n        return primary2;\n    }\n\n    public ColorUIResource getPrimary3() {\n        return primary3;\n    }\n}\n",
        "src/argouml-app/src/org/argouml/ui/ThemeFont.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFont {\n\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFont(String controlAndUserFontName, String systemAndSmallFontName, int normalSize, int smallSize) {\n        controlFont = new FontUIResource(controlAndUserFontName, Font.PLAIN, normalSize);\n        systemFont = new FontUIResource(systemAndSmallFontName, Font.PLAIN, normalSize);\n        windowTitleFont = new FontUIResource(controlAndUserFontName, Font.BOLD, normalSize);\n        userFont = new FontUIResource(controlAndUserFontName, Font.PLAIN, normalSize);\n        smallFont = new FontUIResource(systemAndSmallFontName, Font.PLAIN, smallSize);\n    }\n\n    // Getters for the fonts...\n}\n"
    }
}