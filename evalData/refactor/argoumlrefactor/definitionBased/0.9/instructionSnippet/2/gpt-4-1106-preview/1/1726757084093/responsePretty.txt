"{
    "refactorings":{
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 38,
                "toLine": 45,
                "oldContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n",
                "newContent": "\npackage org.argouml.ui;\n\nimport org.argouml.ui.theme.ThemeColors;\nimport org.argouml.ui.theme.ThemeFonts;\nimport javax.swing.plaf.metal.MetalTheme;\n"
            },
            {
                "fromLine": 49,
                "toLine": 72,
                "oldContent": "public class JasonsBigTheme extends MetalTheme {\n\n    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);\n\n    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);\n",
                "newContent": "public class JasonsBigTheme extends MetalTheme {\n\n    private final ThemeColors primaryColors;\n    private final ThemeColors secondaryColors;\n    private final ThemeFonts fonts;\n\n    public JasonsBigTheme() {\n        this.primaryColors = new ThemeColors(102, 153, 204);\n        this.secondaryColors = new ThemeColors(102, 153, 204);\n        this.fonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 14, 12);\n    }\n\n    // Methods to access color and font resources\n    // ...\n}"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 38,
                "toLine": 45,
                "oldContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n",
                "newContent": "\npackage org.argouml.ui;\n\nimport org.argouml.ui.theme.ThemeColors;\nimport org.argouml.ui.theme.ThemeFonts;\nimport javax.swing.plaf.metal.MetalTheme;\n"
            },
            {
                "fromLine": 49,
                "toLine": 72,
                "oldContent": "public class JasonsHugeTheme extends MetalTheme {\n\n    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);\n\n    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n",
                "newContent": "public class JasonsHugeTheme extends MetalTheme {\n\n    private final ThemeColors primaryColors;\n    private final ThemeColors secondaryColors;\n    private final ThemeFonts fonts;\n\n    public JasonsHugeTheme() {\n        this.primaryColors = new ThemeColors(102, 153, 204);\n        this.secondaryColors = new ThemeColors(102, 153, 204);\n        this.fonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 16, 14);\n    }\n\n    // Methods to access color and font resources\n    // ...\n}"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 40,
                "toLine": 53,
                "oldContent": "\npackage org.argouml.sequence2.diagram;\n\nimport java.awt.Rectangle;\nimport java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.argouml.uml.diagram.ui.ArgoFigGroup;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\n",
                "newContent": "\npackage org.argouml.sequence2.diagram;\n\nimport org.argouml.sequence2.diagram.FigActivationParams;\nimport java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.argouml.uml.diagram.ui.ArgoFigGroup;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\n"
            },
            {
                "fromLine": 252,
                "toLine": 259,
                "oldContent": "    private FigActivation createActivationFig(\n            final Object owner, \n            final int x, \n            final int y, \n            final int w, \n            final int h,\n            final DiagramSettings settings,\n            final FigMessage messageFig) {",
                "newContent": "    private FigActivation createActivationFig(\n            final FigActivationParams params) {"
            }
        ],
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": 13,
                "toLine": 22,
                "oldContent": "\npackage org.argouml.activity2.diagram;\n\nimport java.awt.Dimension;\nimport java.awt.Rectangle;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;\n",
                "newContent": "\npackage org.argouml.activity2.diagram;\n\nimport org.argouml.activity2.diagram.NodeBounds;\nimport java.awt.Dimension;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;\n"
            },
            {
                "fromLine": 77,
                "toLine": 84,
                "oldContent": "    @Override\n    protected void setBoundsImpl(\n            final int x,\n            final int y,\n            final int w,\n            final int h) {\n\n        _x = x;",
                "newContent": "    @Override\n    protected void setBoundsImpl(\n            NodeBounds bounds) {\n\n        _x = bounds.getX();"
            }
        ]
    },
    "extractedClasses":{
        "src/argouml-ui/src/org/argouml/ui/theme/ThemeColors.java": "package org.argouml.ui.theme;\n\nimport javax.swing.plaf.ColorUIResource;\n\nclass ThemeColors {\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n\n    public ThemeColors(int colorValue1, int colorValue2, int colorValue3) {\n        this.primary1 = new ColorUIResource(colorValue1, colorValue1, colorValue1 + 51);\n        this.primary2 = new ColorUIResource(colorValue2, colorValue2, colorValue2 + 51);\n        this.primary3 = new ColorUIResource(colorValue3, colorValue3, colorValue3 + 51);\n    }\n\n    // Accessor methods for primary1, primary2, and primary3\n    // ...\n}",
        "src/argouml-ui/src/org/argouml/ui/theme/ThemeFonts.java": "package org.argouml.ui.theme;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\nclass ThemeFonts {\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(String controlFontFamily, String systemFontFamily, int largeSize, int smallSize) {\n        this.controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, largeSize);\n        this.systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, largeSize);\n        this.windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, largeSize);\n        this.userFont = new FontUIResource(controlFontFamily, Font.PLAIN, largeSize);\n        this.smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallSize);\n    }\n\n    // Accessor methods for the fonts\n    // ...\n}",
        "src/argouml-sequence2/src/org/argouml/sequence2/diagram/FigActivationParams.java": "package org.argouml.sequence2.diagram;\n\nimport org.argouml.uml.diagram.DiagramSettings;\n\nclass FigActivationParams {\n    private final Object owner;\n    private final int x;\n    private final int y;\n    private final int w;\n    private final int h;\n    private final DiagramSettings settings;\n    private final FigMessage messageFig;\n\n    public FigActivationParams(Object owner, int x, int y, int w, int h, DiagramSettings settings, FigMessage messageFig) {\n        this.owner = owner;\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        this.settings = settings;\n        this.messageFig = messageFig;\n    }\n\n    // Accessor methods for the fields\n    // ...\n}",
        "src/argouml-activity2/src/org/argouml/activity2/diagram/NodeBounds.java": "package org.argouml.activity2.diagram;\n\nclass NodeBounds {\n    private int x;\n    private int y;\n    private int width;\n    private int height;\n\n    public NodeBounds(int x, int y, int width, int height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    // Accessor methods for x, y, width, and height\n    public int getX() { return x; }\n    public int getY() { return y; }\n    public int getWidth() { return width; }\n    public int getHeight() { return height; }\n\n    // Other potentially useful methods could be added here\n    // ...\n}"
    }
}"