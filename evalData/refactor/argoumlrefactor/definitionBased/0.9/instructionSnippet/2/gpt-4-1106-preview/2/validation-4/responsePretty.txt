refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:"		40",
		toLine:"		51",
		oldContent:"
		
		package org.argouml.sequence2.diagram;
		
		import java.util.Collections;
		import java.util.LinkedList;
		import java.util.List;
		
		import org.argouml.uml.diagram.ui.ArgoFigGroup;
		import org.tigris.gef.presentation.FigLine;
		import org.tigris.gef.presentation.FigRect;
		
				
",
		newContent:"
		
		package org.argouml.sequence2.diagram;
		
		import java.util.Collections;
		import java.util.LinkedList;
		import java.util.List;
		import java.awt.Rectangle;
		import org.argouml.uml.diagram.DiagramSettings;
		import org.argouml.uml.diagram.ui.ArgoFigGroup;
		import org.tigris.gef.presentation.FigLine;
		import org.tigris.gef.presentation.FigRect;
		
				
",
,
		fromLine:"		67",
		toLine:"		71",
		oldContent:"
		    static final int HEIGHT = 500;
		
		    FigLifeLine(Object owner, Rectangle bounds, DiagramSettings settings) {
		        super(owner, settings);
		        initialize(bounds.x, bounds.y);		
",
		newContent:"
		    static final int HEIGHT = 500;
		
		    FigLifeLine(Object owner, ActivationFigDimensions dimensions, DiagramSettings settings) {
		        super(owner, settings);
		        initialize(dimensions.x, dimensions.y);		
",
,
		fromLine:"		126",
		toLine:"		130",
		oldContent:"
		        FigActivation currentActivation = null;
		        if (!hasIncomingCallActionFirst(figMessages)) {
		            currentActivation = createActivationFig(
		                    getOwner(),
		                    lineFig.getX(),		
",
		newContent:"
		        FigActivation currentActivation = null;
		        if (!hasIncomingCallActionFirst(figMessages)) {
		            ActivationFigDimensions actDims = new ActivationFigDimensions(lineFig.getX(), 0, FigActivation.DEFAULT_WIDTH, HEIGHT);
		            currentActivation = createActivationFig(
		                    getOwner(),
		                    actDims,		
",
,
		fromLine:"		153",
		toLine:"		157",
		oldContent:"
		                            // activation, but don't add it until the height is set.
		                            ySender = figMessage.getFinalY();
		                            currentActivation = createActivationFig(
		                                    getOwner(), 
		                                    lineFig.getX(), 		
",
		newContent:"
		                            // activation, but don't add it until the height is set.
		                            ySender = figMessage.getFinalY();
		                            ActivationFigDimensions actDims = new ActivationFigDimensions(lineFig.getX(), ySender, FigActivation.DEFAULT_WIDTH, HEIGHT);
		                            currentActivation = createActivationFig(
		                                    getOwner(), 
		                                    actDims,		
",
,
		fromLine:"		165",
		toLine:"		169",
		oldContent:"
		                            // if we are the destination of a create action,
		                            // create the entire activation
		                            currentActivation = createActivationFig(
		                                    getOwner(),
		                                    lineFig.getX(),		
",
		newContent:"
		                            // if we are the destination of a create action,
		                            // create the entire activation
		                            ActivationFigDimensions actDims = new ActivationFigDimensions(lineFig.getX(), 0, FigActivation.DEFAULT_WIDTH, HEIGHT);
		                            currentActivation = createActivationFig(
		                                    getOwner(),
		                                    actDims,		
",
,
		fromLine:"		251",
		toLine:"		259",
		oldContent:"
		            final Object owner, 
		            final ActivationFigDimensions dimensions,
		            final DiagramSettings settings,
		            final FigMessage messageFig) {
		        return new FigActivation(
		                owner,
		                new Rectangle(x, y, w, h),
		                settings,
		                messageFig);		
",
		newContent:"
		            final Object owner, 
		            final ActivationFigDimensions dimensions,
		            final DiagramSettings settings,
		            final FigMessage messageFig) {
		        return new FigActivation(
		                owner,
		                new Rectangle(dimensions.x, dimensions.y, dimensions.width, dimensions.height),
		                settings,
		                messageFig);		
",
,
		fromLine:"		276",
		toLine:"		280",
		oldContent:"
		                    ySender = figMessage.getFinalY();
		                    currentAct = new FigActivation(figMessage.getOwner(),
		                            new Rectangle(lineFig.getX()
		                                    + FigActivation.DEFAULT_WIDTH / 2, ySender,
		                                    0, 0), getSettings(), figMessage, false);		
",
		newContent:"
		                    ySender = figMessage.getFinalY();
		                    ActivationFigDimensions actDims = new ActivationFigDimensions(lineFig.getX() + FigActivation.DEFAULT_WIDTH / 2, ySender, FigActivation.DEFAULT_WIDTH, HEIGHT);
		                    currentAct = new FigActivation(figMessage.getOwner(),
		                            new Rectangle(actDims.x, actDims.y, actDims.width, actDims.height), getSettings(), figMessage, false);		
",
,
		fromLine:"		330",
		toLine:"		334",
		oldContent:"
		    // below will resolve this and the synch can go.
		    protected synchronized void setBoundsImpl(int x, int y, int w, int h) {
		        final Rectangle oldBounds = getBounds();
		        
		        rectFig.setBounds(x, y, w, h);		
",
		newContent:"
		// below will resolve this and the synch can go.
		    protected synchronized void setBoundsImpl(int x, int y, int w, int h) {
		        final Rectangle oldBounds = new Rectangle(_x, _y, _w, _h);
		        
		        rectFig.setBounds(x, y, w, h);		
",
,

	],

}
extractedClasses:
{
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/ActivationFigDimensions.java:"
	package org.argouml.sequence2.diagram;
	
	public class ActivationFigDimensions {
	    public final int x;
	    public final int y;
	    public final int width;
	    public final int height;
	
	    public ActivationFigDimensions(int x, int y, int width, int height) {
	        this.x = x;
	        this.y = y;
	        this.width = width;
	        this.height = height;
	    }
	}	
",

}
