"
{
    "refactorings":{
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java":[
            {
                "fromLine": 35,
                "toLine": 59,
                "oldContent": "    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "    private final ThemeColors themeColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 61,
                "toLine": 73,
                "oldContent": "    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "    private final ThemeFonts themeFonts = new ThemeFonts(new Font(\"SansSerif\", Font.PLAIN, 14), new Font(\"Dialog\", Font.PLAIN, 12));"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java":[
            {
                "fromLine": 35,
                "toLine": 59,
                "oldContent": "    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "    private final ThemeColors themeColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 61,
                "toLine": 73,
                "oldContent": "    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "    private final ThemeFonts themeFonts = new ThemeFonts(new Font(\"SansSerif\", Font.BOLD, 16), new Font(\"Dialog\", Font.PLAIN, 14));"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java":[
            {
                "fromLine": 44,
                "toLine": 61,
                "oldContent": "    private FigLine lineFig;\n    private FigRect rectFig;\n    \n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;\n    \n    static final int WIDTH = 150;\n    static final int HEIGHT = 500;",
                "newContent": "    private LifeLineFigures lifeLineFigures;\n    \n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;"
            }
        ]
    },
    "extractedClasses":{
        "ThemeColors.java": "public class ThemeColors {\n\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n\n    private final ColorUIResource secondary1;\n    private final ColorUIResource secondary2;\n    private final ColorUIResource secondary3;\n\n    public ThemeColors(int primaryShade, int secondaryShade, int tertiaryShade) {\n        primary1 = new ColorUIResource(primaryShade, primaryShade, tertiaryShade + 51);\n        primary2 = new ColorUIResource(primaryShade + 51, primaryShade + 51, tertiaryShade + 102);\n        primary3 = new ColorUIResource(tertiaryShade + 102, tertiaryShade + 102, tertiaryShade + 153);\n\n        secondary1 = new ColorUIResource(primaryShade, primaryShade, primaryShade);\n        secondary2 = new ColorUIResource(primaryShade + 51, primaryShade + 51, primaryShade + 51);\n        secondary3 = new ColorUIResource(tertiaryShade + 102, tertiaryShade + 102, tertiaryShade + 102);\n    }\n\n    // Additional methods to retrieve and manipulate colors could be added here\n}\n",
        "ThemeFonts.java": "public class ThemeFonts {\n\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(Font controlAndWindowFont, Font smallFont) {\n        this.controlFont = new FontUIResource(controlAndWindowFont.getFamily(), Font.PLAIN, controlAndWindowFont.getSize());\n        this.systemFont = new FontUIResource(\"Dialog\", Font.PLAIN, controlAndWindowFont.getSize());\n        this.windowTitleFont = new FontUIResource(controlAndWindowFont.getFamily(), Font.BOLD, controlAndWindowFont.getSize());\n        this.userFont = new FontUIResource(controlAndWindowFont.getFamily(), Font.PLAIN, controlAndWindowFont.getSize());\n        this.smallFont = new FontUIResource(smallFont.getFamily(), Font.PLAIN, smallFont.getSize());\n    }\n\n    // Additional methods to retrieve and manipulate fonts could be added here\n}\n",
        "LifeLineFigures.java": "public class LifeLineFigures {\n    private final FigLine lineFig;\n    private final FigRect rectFig;\n\n    public LifeLineFigures(int x, int y, int width, int height, Color lineColor, int lineWidth, boolean dashed) {\n        rectFig = new FigRect(x, y, width, height);\n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        lineFig = new FigLine(x + width / 2, y, x + width / 2, y + height, lineColor);\n        lineFig.setDashed(dashed);\n        lineFig.setLineWidth(lineWidth);\n    }\n\n    public FigLine getLineFig() {\n        return lineFig;\n    }\n\n    public FigRect getRectFig() {\n        return rectFig;\n    }\n\n    public void setLineDashed(boolean dashed) {\n        lineFig.setDashed(dashed);\n    }\n\n    public void setLineLineWidth(int lineWidth) {\n        lineFig.setLineWidth(lineWidth);\n    }\n\n    public void setLineColor(Color lineColor) {\n        lineFig.setLineColor(lineColor);\n    }\n    // Additional methods to work with figures could be added here\n}\n"
    }
}"