{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 32,
                "toLine": 41,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final PrimaryColorScheme primaryColors = new PrimaryColorScheme(102, 153, 204);"
            },
            {
                "fromLine": 43,
                "toLine": 52,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final SecondaryColorScheme secondaryColors = new SecondaryColorScheme(102, 153, 204);"
            },
            {
                "fromLine": 54,
                "toLine": 63,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(new Font(\"SansSerif\", Font.PLAIN, 14), new Font(\"Dialog\", Font.PLAIN, 12));"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 32,
                "toLine": 41,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final PrimaryColorScheme primaryColors = new PrimaryColorScheme(102, 153, 204);"
            },
            {
                "fromLine": 43,
                "toLine": 52,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final SecondaryColorScheme secondaryColors = new SecondaryColorScheme(102, 153, 204);"
            },
            {
                "fromLine": 54,
                "toLine": 63,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(new Font(\"SansSerif\", Font.BOLD, 16), new Font(\"Dialog\", Font.PLAIN, 14));"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 25,
                "toLine": 27,
                "oldContent": "    private FigLine lineFig;\n    private FigRect rectFig;",
                "newContent": "    private FigLifeLineComponents lifeLineComponents;"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-ui/org/argouml/ui/PrimaryColorScheme.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class PrimaryColorScheme {\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n\n    public PrimaryColorScheme(int shade, int midShade, int lightShade) {\n        primary1 = new ColorUIResource(shade, shade, midShade);\n        primary2 = new ColorUIResource(midShade, midShade, lightShade);\n        primary3 = new ColorUIResource(lightShade, lightShade, 255);\n    }\n\n    public ColorUIResource getPrimary1() {\n        return primary1;\n    }\n\n    public ColorUIResource getPrimary2() {\n        return primary2;\n    }\n\n    public ColorUIResource getPrimary3() {\n        return primary3;\n    }\n}\n",
        "src/argouml-ui/org/argouml/ui/SecondaryColorScheme.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class SecondaryColorScheme {\n    private final ColorUIResource secondary1;\n    private final ColorUIResource secondary2;\n    private final ColorUIResource secondary3;\n\n    public SecondaryColorScheme(int darkShade, int midShade, int lightShade) {\n        secondary1 = new ColorUIResource(darkShade, darkShade, darkShade);\n        secondary2 = new ColorUIResource(midShade, midShade, midShade);\n        secondary3 = new ColorUIResource(lightShade, lightShade, lightShade);\n    }\n\n    public ColorUIResource getSecondary1() {\n        return secondary1;\n    }\n\n    public ColorUIResource getSecondary2() {\n        return secondary2;\n    }\n\n    public ColorUIResource getSecondary3() {\n        return secondary3;\n    }\n}\n",
        "src/argouml-ui/org/argouml/ui/ThemeFonts.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFonts {\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(Font regularFont, Font smallFont) {\n        this.controlFont = new FontUIResource(regularFont.getFamily(), Font.PLAIN, regularFont.getSize());\n        this.systemFont = new FontUIResource(\"Dialog\", Font.PLAIN, regularFont.getSize());\n        this.windowTitleFont = new FontUIResource(regularFont.getFamily(), Font.BOLD, regularFont.getSize());\n        this.userFont = new FontUIResource(regularFont.getFamily(), Font.PLAIN, regularFont.getSize());\n        this.smallFont = new FontUIResource(smallFont.getFamily(), Font.PLAIN, smallFont.getSize());\n    }\n\n    public FontUIResource getControlTextFont() {\n        return controlFont;\n    }\n\n    public FontUIResource getSystemTextFont() {\n        return systemFont;\n    }\n\n    public FontUIResource getUserTextFont() {\n        return userFont;\n    }\n\n    public FontUIResource getMenuTextFont() {\n        return controlFont;\n    }\n\n    public FontUIResource getSubTextFont() {\n        return this.smallFont;\n    }\n\n    public FontUIResource getWindowTitleFont() {\n        return windowTitleFont;\n    }\n}\n",
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLineComponents.java": "package org.argouml.sequence2.diagram;\nimport java.awt.Rectangle;\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\nclass FigLifeLineComponents {\n    private FigLine lineFig;\n    private FigRect rectFig;\n\n    FigLifeLineComponents(Object owner, Rectangle bounds, DiagramSettings settings) {\n        rectFig = new FigRect(bounds.x, bounds.y, FigLifeLine.WIDTH, FigLifeLine.HEIGHT); \n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        lineFig = new FigLine(bounds.x + FigLifeLine.WIDTH / 2, bounds.y, \n                bounds.x + FigLifeLine.WIDTH / 2, bounds.y + FigLifeLine.HEIGHT, FigLifeLine.LINE_COLOR);\n        lineFig.setDashed(true);\n        lineFig.setLineWidth(FigLifeLine.LINE_WIDTH);\n    }\n\n    public FigLine getLineFig() {\n        return lineFig;\n    }\n\n    public FigRect getRectFig() {\n        return rectFig;\n    }\n\n    // Additional methods related to operations on lineFig and rectFig can be added here\n}\n"
    }
}