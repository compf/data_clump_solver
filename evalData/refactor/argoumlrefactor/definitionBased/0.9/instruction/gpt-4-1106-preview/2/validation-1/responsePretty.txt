refactorings:
{
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:"		76",
		toLine:"		77",
		oldContent:"
		        activations = new LinkedList<FigActivation>();
		        stackedActivations = new LinkedList<FigActivation>();		
",
		newContent:"
		        activationsManager = new ActivationsManager();		
",
,
		fromLine:"		96",
		toLine:"		100",
		oldContent:"
		        activations = createStandardActivations(messages);
		        stackedActivations = createStackedActivations(messages);
		        
		        addActivations(activations);
		        addActivations(stackedActivations);		
",
		newContent:"
		        activationsManager.createStandardActivations(messages);
		        activationsManager.createStackedActivations(messages);
		        
		        addActivations(activationsManager.getActivations());
		        addActivations(activationsManager.getStackedActivations());		
",
,
		fromLine:"		315",
		toLine:"		322",
		oldContent:"
		        for (FigActivation oldActivation : activations) {
		            removeFig(oldActivation);    
		        }
		        for (FigActivation oldActivation : stackedActivations) {
		            removeFig(oldActivation);    
		        }
		        activations.clear();
		        stackedActivations.clear();		
",
		newContent:"
		        activationsManager.clearActivations();		
",
,
		fromLine:"		344",
		toLine:"		350",
		oldContent:"
		        // we don't recalculate activations, just move them
		        for (FigActivation act : activations) {
		            // TODO: why do we need to remove then add the Fig?
		            removeFig(act);
		            act.setLocation(
		                    lineFig.getX() - FigActivation.DEFAULT_WIDTH / 2,
		                    act.getY() - yDiff);
		            if (activations.size() == 1 
		                    && act.getHeight() == oldBounds.height) {
		                act.setHeight(getHeight());
		            }
		            addFig(act);
		        }		
",
		newContent:"
		        // we don't recalculate activations, just move them
		        for (FigActivation act : activationsManager.getActivations()) {
		            // TODO: why do we need to remove then add the Fig?
		            removeFig(act);
		            act.setLocation(
		                    lineFig.getX() - FigActivation.DEFAULT_WIDTH / 2,
		                    act.getY() - yDiff);
		            if (activationsManager.getActivations().size() == 1 
		                    && act.getHeight() == oldBounds.height) {
		                act.setHeight(getHeight());
		            }
		            addFig(act);
		        }		
",
,

	],

}
extractedClasses:
{
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/ActivationsManager.java:"
	package org.argouml.sequence2.diagram;
	
	import java.awt.Rectangle;
	import java.util.Collections;
	import java.util.LinkedList;
	import java.util.List;
	
	import org.argouml.uml.diagram.DiagramSettings;
	
	/**
	 * Manages activations for a FigLifeLine.
	 */
	class ActivationsManager {
	
	    private List<FigActivation> activations;
	    private List<FigActivation> stackedActivations;
	
	    ActivationsManager() {
	        activations = new LinkedList<FigActivation>();
	        stackedActivations = new LinkedList<FigActivation>();
	    }
	
	    void createStandardActivations(List<FigMessage> messages) {
	        // Implement the method using the logic from FigLifeLine
	    }
	
	    void createStackedActivations(List<FigMessage> messages) {
	        // Implement the method using the logic from FigLifeLine
	    }
	
	    List<FigActivation> getActivations() {
	        return activations;
	    }
	
	    List<FigActivation> getStackedActivations() {
	        return stackedActivations;
	    }
	
	    void clearActivations() {
	        for (FigActivation oldActivation : activations) {
	            activations.remove(oldActivation);    
	        }
	        for (FigActivation oldActivation : stackedActivations) {
	            stackedActivations.remove(oldActivation);    
	        }
	        activations.clear();
	        stackedActivations.clear();
	    }
	}
		
",

}
