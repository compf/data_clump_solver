refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		36",
		toLine:"		61",
		oldContent:"
		    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
		    private final ThemeColors themeColors = new ThemeColors(102, 153, 204, 102, 153, 204);		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		36",
		toLine:"		61",
		oldContent:"
		    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
		    private final ThemeColors themeColors = new ThemeColors(102, 153, 204, 102, 153, 204);		
",
,

	],
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:"		39",
		toLine:"		58",
		oldContent:"
		    private FigLine lineFig;
		    private FigRect rectFig;
		    
		    private List<FigActivation> activations;
		    private List<FigActivation> stackedActivations;
		    
		    static final int WIDTH = 150;
		    static final int HEIGHT = 500;		
",
		newContent:"
		    private FigLine lineFig;
		    private FigRect rectFig;
		
		    private ActivationsManager activationsManager;
		    
		    static final int WIDTH = 150;
		    static final int HEIGHT = 500;		
",
,

	],

}
extractedClasses:
{
	src/argouml-app/src/org/argouml/ui/ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	/**
	 * Encapsulates theme colors used in themes for UI.
	 */
	class ThemeColors {
	
	    private final ColorUIResource primary1;
	    private final ColorUIResource primary2;
	    private final ColorUIResource primary3;
	
	    private final ColorUIResource secondary1;
	    private final ColorUIResource secondary2;
	    private final ColorUIResource secondary3;
	
	    ThemeColors(
	            int primaryDark, int primaryMedium, int primaryLight,
	            int secondaryDark, int secondaryMedium, int secondaryLight) {
	        this.primary1 = new ColorUIResource(primaryDark, primaryDark, primaryDark + 51);
	        this.primary2 = new ColorUIResource(primaryMedium, primaryMedium, primaryDark + 102);
	        this.primary3 = new ColorUIResource(primaryLight, primaryLight, primaryLight);
	
	        this.secondary1 = new ColorUIResource(secondaryDark, secondaryDark, secondaryDark);
	        this.secondary2 = new ColorUIResource(secondaryMedium, secondaryMedium, secondaryMedium);
	        this.secondary3 = new ColorUIResource(secondaryLight, secondaryLight, secondaryLight);
	    }
	
	    // Add getters here...
	}
		
",
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/ActivationsManager.java:"
	package org.argouml.sequence2.diagram;
	
	import java.awt.Rectangle;
	import java.util.Collections;
	import java.util.LinkedList;
	import java.util.List;
	
	import org.argouml.uml.diagram.DiagramSettings;
	
	/**
	 * Manages activations for a FigLifeLine.
	 */
	class ActivationsManager {
	
	    private List<FigActivation> activations;
	    private List<FigActivation> stackedActivations;
	
	    ActivationsManager() {
	        activations = new LinkedList<FigActivation>();
	        stackedActivations = new LinkedList<FigActivation>();
	    }
	
	    // Add all activation management methods used by FigLifeLine here...
	
	    // Example stub of a method:
	    void createActivations(List<FigMessage> messages) {
	        // Clear activations
	        // Sort messages
	        // Create standard and stacked activations
	        // ... rest of the logic
	    }
	}
		
",

}
