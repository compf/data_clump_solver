"
{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 36,
                "toLine": 61,
                "oldContent": "    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "    private final ThemeColors themeColors = new ThemeColors(102, 153, 204, 102, 153, 204);"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 36,
                "toLine": 61,
                "oldContent": "    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "    private final ThemeColors themeColors = new ThemeColors(102, 153, 204, 102, 153, 204);"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 39,
                "toLine": 58,
                "oldContent": "    private FigLine lineFig;\n    private FigRect rectFig;\n    \n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;\n    \n    static final int WIDTH = 150;\n    static final int HEIGHT = 500;",
                "newContent": "    private FigLine lineFig;\n    private FigRect rectFig;\n\n    private ActivationsManager activationsManager;\n    \n    static final int WIDTH = 150;\n    static final int HEIGHT = 500;"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\n/**\n * Encapsulates theme colors used in themes for UI.\n */\nclass ThemeColors {\n\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n\n    private final ColorUIResource secondary1;\n    private final ColorUIResource secondary2;\n    private final ColorUIResource secondary3;\n\n    ThemeColors(\n            int primaryDark, int primaryMedium, int primaryLight,\n            int secondaryDark, int secondaryMedium, int secondaryLight) {\n        this.primary1 = new ColorUIResource(primaryDark, primaryDark, primaryDark + 51);\n        this.primary2 = new ColorUIResource(primaryMedium, primaryMedium, primaryDark + 102);\n        this.primary3 = new ColorUIResource(primaryLight, primaryLight, primaryLight);\n\n        this.secondary1 = new ColorUIResource(secondaryDark, secondaryDark, secondaryDark);\n        this.secondary2 = new ColorUIResource(secondaryMedium, secondaryMedium, secondaryMedium);\n        this.secondary3 = new ColorUIResource(secondaryLight, secondaryLight, secondaryLight);\n    }\n\n    // Add getters here...\n}\n",
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/ActivationsManager.java": "package org.argouml.sequence2.diagram;\n\nimport java.awt.Rectangle;\nimport java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport org.argouml.uml.diagram.DiagramSettings;\n\n/**\n * Manages activations for a FigLifeLine.\n */\nclass ActivationsManager {\n\n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;\n\n    ActivationsManager() {\n        activations = new LinkedList<FigActivation>();\n        stackedActivations = new LinkedList<FigActivation>();\n    }\n\n    // Add all activation management methods used by FigLifeLine here...\n\n    // Example stub of a method:\n    void createActivations(List<FigMessage> messages) {\n        // Clear activations\n        // Sort messages\n        // Create standard and stacked activations\n        // ... rest of the logic\n    }\n}\n"
    }
}
"