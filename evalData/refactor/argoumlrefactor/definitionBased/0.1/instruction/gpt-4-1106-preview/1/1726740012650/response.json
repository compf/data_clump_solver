{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 33,
                "toLine": 51,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 53,
                "toLine": 61,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final ThemeFonts fonts = new ThemeFonts(new Font(\"SansSerif\", Font.PLAIN, 14), new Font(\"Dialog\", Font.PLAIN, 14), new Font(\"SansSerif\", Font.BOLD, 14), new Font(\"SansSerif\", Font.PLAIN, 14), new Font(\"Dialog\", Font.PLAIN, 12));"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 33,
                "toLine": 51,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 53,
                "toLine": 61,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final ThemeFonts fonts = new ThemeFonts(new Font(\"SansSerif\", Font.BOLD, 16), new Font(\"Dialog\", Font.PLAIN, 16), new Font(\"SansSerif\", Font.BOLD, 16), new Font(\"SansSerif\", Font.PLAIN, 16), new Font(\"Dialog\", Font.PLAIN, 14));"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 53,
                "toLine": 53,
                "oldContent": "    private List<FigActivation> activations;",
                "newContent": "    private ActivationList activations;"
            },
            {
                "fromLine": 54,
                "toLine": 54,
                "oldContent": "    private List<FigActivation> stackedActivations;",
                "newContent": "    private ActivationList stackedActivations;"
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "        activations = new LinkedList<FigActivation>();",
                "newContent": "        activations = new ActivationList();"
            },
            {
                "fromLine": 74,
                "toLine": 74,
                "oldContent": "        stackedActivations = new LinkedList<FigActivation>();",
                "newContent": "        stackedActivations = new ActivationList();"
            },
            {
                "fromLine": 92,
                "toLine": 92,
                "oldContent": "        activations = createStandardActivations(messages);",
                "newContent": "        activations.addAll(createStandardActivations(messages));"
            },
            {
                "fromLine": 93,
                "toLine": 93,
                "oldContent": "        stackedActivations = createStackedActivations(messages);",
                "newContent": "        stackedActivations.addAll(createStackedActivations(messages));"
            },
            {
                "fromLine": 95,
                "toLine": 95,
                "oldContent": "        addActivations(activations);",
                "newContent": "        activations.addToFig(this);"
            },
            {
                "fromLine": 96,
                "toLine": 96,
                "oldContent": "        addActivations(stackedActivations);",
                "newContent": "        stackedActivations.addToFig(this);"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "    private void addActivations(",
                "newContent": "    // This method has been moved to ActivationList class"
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "        for (final FigActivation figAct : activationFigs) {",
                "newContent": "        // The loop has been moved to ActivationList class"
            },
            {
                "fromLine": 128,
                "toLine": 128,
                "oldContent": "        for (FigActivation oldActivation : activations) {",
                "newContent": "        activations.removeFromFig(this);"
            },
            {
                "fromLine": 130,
                "toLine": 130,
                "oldContent": "        for (FigActivation oldActivation : stackedActivations) {",
                "newContent": "        stackedActivations.removeFromFig(this);"
            },
            {
                "fromLine": 132,
                "toLine": 132,
                "oldContent": "        activations.clear();",
                "newContent": "        // Clearing is now handled within removeFromFig method"
            },
            {
                "fromLine": 133,
                "toLine": 133,
                "oldContent": "        stackedActivations.clear();",
                "newContent": "        // Clearing is now handled within removeFromFig method"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColors {\n\n    private final ColorUIResource color1;\n    private final ColorUIResource color2;\n    private final ColorUIResource color3;\n\n    public ThemeColors(int colorValue1, int colorValue2, int colorValue3) {\n        color1 = new ColorUIResource(colorValue1, colorValue1, colorValue1 + 51);\n        color2 = new ColorUIResource(colorValue2, colorValue2, colorValue2 + 51);\n        color3 = new ColorUIResource(colorValue3, colorValue3, colorValue3 + 51);\n    }\n\n    public ColorUIResource getColor1() {\n        return color1;\n    }\n\n    public ColorUIResource getColor2() {\n        return color2;\n    }\n\n    public ColorUIResource getColor3() {\n        return color3;\n    }\n}",
        "src/argouml-app/src/org/argouml/ui/ThemeFonts.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFonts {\n\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(Font control, Font system, Font windowTitle, Font user, Font small) {\n        controlFont = new FontUIResource(control);\n        systemFont = new FontUIResource(system);\n        windowTitleFont = new FontUIResource(windowTitle);\n        userFont = new FontUIResource(user);\n        smallFont = new FontUIResource(small);\n    }\n\n    public FontUIResource getControlFont() {\n        return controlFont;\n    }\n\n    public FontUIResource getSystemFont() {\n        return systemFont;\n    }\n\n    public FontUIResource getWindowTitleFont() {\n        return windowTitleFont;\n    }\n\n    public FontUIResource getUserFont() {\n        return userFont;\n    }\n\n    public FontUIResource getSmallFont() {\n        return smallFont;\n    }\n}",
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/ActivationList.java": "package org.argouml.sequence2.diagram;\n\nimport java.util.LinkedList;\nimport java.util.List;\n\npublic class ActivationList {\n\n    private List<FigActivation> activations = new LinkedList<FigActivation>();\n\n    public void addAll(List<FigActivation> newActivations) {\n        activations.addAll(newActivations);\n    }\n\n    public void addToFig(FigLifeLine figLifeLine) {\n        for (FigActivation figAct : activations) {\n            figAct.setFillColor(figLifeLine.getFillColor());\n            figLifeLine.addFig(figAct);\n        }\n    }\n\n    public void removeFromFig(FigLifeLine figLifeLine) {\n        for (FigActivation oldActivation : activations) {\n            figLifeLine.removeFig(oldActivation);\n        }\n        activations.clear();\n    }\n}"
    }
}