"{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 29,
                "toLine": 45,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 47,
                "toLine": 51,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 14, 12);"
            },
            {
                "fromLine": 53,
                "toLine": 55,
                "oldContent": "new FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);",
                "newContent": ""
            },
            {
                "fromLine": 57,
                "toLine": 57,
                "oldContent": "private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": ""
            },
            {
                "fromLine": 61,
                "toLine": 61,
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return primaryColors.getColor1(); }"
            },
            {
                "fromLine": 65,
                "toLine": 65,
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return primaryColors.getColor2(); }"
            },
            {
                "fromLine": 69,
                "toLine": 69,
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return primaryColors.getColor3(); }"
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }"
            },
            {
                "fromLine": 77,
                "toLine": 77,
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }"
            },
            {
                "fromLine": 81,
                "toLine": 81,
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }"
            },
            {
                "fromLine": 85,
                "toLine": 85,
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 89,
                "toLine": 89,
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }"
            },
            {
                "fromLine": 93,
                "toLine": 93,
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }"
            },
            {
                "fromLine": 97,
                "toLine": 97,
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 29,
                "toLine": 45,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 47,
                "toLine": 51,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 16, 14);"
            },
            {
                "fromLine": 53,
                "toLine": 55,
                "oldContent": "new FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);",
                "newContent": ""
            },
            {
                "fromLine": 57,
                "toLine": 57,
                "oldContent": "private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": ""
            },
            {
                "fromLine": 61,
                "toLine": 61,
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return primaryColors.getColor1(); }"
            },
            {
                "fromLine": 65,
                "toLine": 65,
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return primaryColors.getColor2(); }"
            },
            {
                "fromLine": 69,
                "toLine": 69,
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return primaryColors.getColor3(); }"
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }"
            },
            {
                "fromLine": 77,
                "toLine": 77,
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }"
            },
            {
                "fromLine": 81,
                "toLine": 81,
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }"
            },
            {
                "fromLine": 85,
                "toLine": 85,
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 89,
                "toLine": 89,
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }"
            },
            {
                "fromLine": 93,
                "toLine": 93,
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }"
            },
            {
                "fromLine": 97,
                "toLine": 97,
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 35,
                "toLine": 37,
                "oldContent": "private FigLine lineFig;\n    private FigRect rectFig;",
                "newContent": "private FigLifeLineComponents lifeLineComponents;"
            },
            {
                "fromLine": 39,
                "toLine": 41,
                "oldContent": "private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;",
                "newContent": "private ActivationList activationList;"
            },
            {
                "fromLine": 43,
                "toLine": 43,
                "oldContent": "static final int WIDTH = 150;\n    static final int HEIGHT = 500;",
                "newContent": ""
            },
            {
                "fromLine": 49,
                "toLine": 49,
                "oldContent": "initialize(bounds.x, bounds.y);",
                "newContent": "lifeLineComponents = new FigLifeLineComponents(bounds.x, bounds.y, WIDTH, HEIGHT, LINE_COLOR, LINE_WIDTH);\n        activationList = new ActivationList();"
            },
            {
                "fromLine": 51,
                "toLine": 55,
                "oldContent": "private void initialize(int x, int y) {\n        activations = new LinkedList<FigActivation>();\n        stackedActivations = new LinkedList<FigActivation>();\n        \n        rectFig = new FigRect(x, y, WIDTH, HEIGHT); ",
                "newContent": ""
            },
            {
                "fromLine": 57,
                "toLine": 61,
                "oldContent": "rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        lineFig = new FigLine(x + WIDTH / 2, y, \n                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);\n        lineFig.setDashed(true);",
                "newContent": ""
            },
            {
                "fromLine": 63,
                "toLine": 65,
                "oldContent": "lineFig.setLineWidth(LINE_WIDTH);\n        \n        addFig(rectFig);",
                "newContent": ""
            },
            {
                "fromLine": 67,
                "toLine": 67,
                "oldContent": "addFig(lineFig);",
                "newContent": "addFig(lifeLineComponents.getRectFig());\n        addFig(lifeLineComponents.getLineFig());"
            },
            {
                "fromLine": 71,
                "toLine": 71,
                "oldContent": "synchronized void createActivations(final List<FigMessage> messages) {",
                "newContent": "synchronized void createActivations(final List<FigMessage> messages, final int WIDTH, final int HEIGHT) {"
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "clearActivations();",
                "newContent": "activationList.clearActivations(this);"
            },
            {
                "fromLine": 75,
                "toLine": 75,
                "oldContent": "activations = createStandardActivations(messages);",
                "newContent": "activationList.setActivations(createStandardActivations(messages, WIDTH, HEIGHT));"
            },
            {
                "fromLine": 77,
                "toLine": 77,
                "oldContent": "stackedActivations = createStackedActivations(messages);",
                "newContent": "activationList.setStackedActivations(createStackedActivations(messages, WIDTH, HEIGHT));"
            },
            {
                "fromLine": 79,
                "toLine": 79,
                "oldContent": "addActivations(activations);",
                "newContent": "activationList.addActivations(this);"
            },
            {
                "fromLine": 81,
                "toLine": 81,
                "oldContent": "addActivations(stackedActivations);",
                "newContent": ""
            },
            {
                "fromLine": 83,
                "toLine": 83,
                "oldContent": "calcBounds();",
                "newContent": ""
            },
            {
                "fromLine": 85,
                "toLine": 85,
                "oldContent": "private void addActivations(",
                "newContent": ""
            },
            {
                "fromLine": 87,
                "toLine": 89,
                "oldContent": "final List<FigActivation> activationFigs) {\n        for (final FigActivation figAct : activationFigs) {\n            figAct.setFillColor(getFillColor());",
                "newContent": ""
            },
            {
                "fromLine": 91,
                "toLine": 93,
                "oldContent": "addFig(figAct);\n        }\n    }",
                "newContent": ""
            },
            {
                "fromLine": 95,
                "toLine": 95,
                "oldContent": "private List<FigActivation> createStandardActivations(",
                "newContent": "private List<FigActivation> createStandardActivations(final List<FigMessage> figMessages, final int WIDTH, final int HEIGHT) {"
            },
            {
                "fromLine": 97,
                "toLine": 97,
                "oldContent": "final List<FigActivation> newActivations =",
                "newContent": "final List<FigActivation> newActivations = new LinkedList<FigActivation>();"
            },
            {
                "fromLine": 99,
                "toLine": 99,
                "oldContent": "new LinkedList<FigActivation>();",
                "newContent": ""
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "FigActivation currentActivation = null;",
                "newContent": "FigActivation currentActivation = activationList.getCurrentActivation();"
            },
            {
                "fromLine": 103,
                "toLine": 103,
                "oldContent": "if (!hasIncomingCallActionFirst(figMessages)) {",
                "newContent": "if (!activationList.hasIncomingCallActionFirst(figMessages, this)) {"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "currentActivation = createActivationFig(",
                "newContent": "currentActivation = activationList.createActivationFig(getOwner(), lifeLineComponents.getLineFig().getX(), lifeLineComponents.getLineFig().getY(), WIDTH, HEIGHT, getSettings(), null);"
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "getOwner(),\n                    lineFig.getX(),\n                    lineFig.getY(), ",
                "newContent": ""
            },
            {
                "fromLine": 109,
                "toLine": 109,
                "oldContent": "lineFig.getWidth(), \n                    lineFig.getHeight(),",
                "newContent": ""
            },
            {
                "
{
    "fromLine": 111,
    "toLine": 111,
    "oldContent": "getSettings(),\n                    null);",
    "newContent": ""
  }
  "