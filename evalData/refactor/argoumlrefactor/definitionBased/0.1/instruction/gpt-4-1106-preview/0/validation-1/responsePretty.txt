refactorings:
{
	src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java:
	[
		fromLine:"		67",
		toLine:"		67",
		oldContent:"
		public void setNameDiagramElement(DiagramElement name) {		
",
		newContent:"
		public void setNameDiagramElement(DiagramElement name) {
		        presentationElement.setNameDiagramElement(name);
		    }		
",
,
		fromLine:"		71",
		toLine:"		83",
		oldContent:"
		protected void positionChildren() {
		        presentationElement.setBounds(getBounds());
		        }
		//      calcBounds();
		        updateEdges();
		    }
		    
		    @Override
		    protected void setBoundsImpl(
		            final int x,
		            final int y,
		            final int w,
		            final int h) {
		
		        _x = x;
		        _y = y;
		        _w = w;
		        _h = h;
		        
		        presentationElement.positionChildren();
		    }		
",
		newContent:"
		protected void positionChildren() {
		        presentationElement.setBounds(getBounds());
		        updateEdges();
		    }
		
		    @Override
		    protected void setBoundsImpl(
		            final int x,
		            final int y,
		            final int w,
		            final int h) {
		
		        _x = x;
		        _y = y;
		        _w = w;
		        _h = h;
		        
		        positionChildren();
		    }		
",
,
		fromLine:"		91",
		toLine:"		96",
		oldContent:"
		public void calcBounds() {
		        if (getGroup() != null) {
		            ((FigGroup) getGroup()).calcBounds();
		        } else {
		            presentationElement.updateBounds(_x, _y, getWidth(), getHeight());
		        }
		    }		
",
		newContent:"
		public void calcBounds() {
		        if (getGroup() != null) {
		            ((FigGroup) getGroup()).calcBounds();
		        } else {
		            final Dimension min = getMinimumSize();
		            int maxw = Math.max(getWidth(), min.width);
		            int maxh = Math.max(getHeight(), min.height);
		            setBounds(_x, _y, maxw, maxh);
		        }
		    }		
",
,

	],

}
extractedClasses:
{

}
