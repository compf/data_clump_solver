"{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 31,
                "toLine": 39,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);"
            },
            {
                "fromLine": 41,
                "toLine": 49,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": ""
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", Font.PLAIN, Font.BOLD, 14, 12);"
            },
            {
                "fromLine": 69,
                "toLine": 69,
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }"
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return primaryColors.getPrimary2(); }"
            },
            {
                "fromLine": 77,
                "toLine": 77,
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return primaryColors.getPrimary3(); }"
            },
            {
                "fromLine": 81,
                "toLine": 81,
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return primaryColors.getSecondary1(); }"
            },
            {
                "fromLine": 85,
                "toLine": 85,
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return primaryColors.getSecondary2(); }"
            },
            {
                "fromLine": 89,
                "toLine": 89,
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return primaryColors.getSecondary3(); }"
            },
            {
                "fromLine": 93,
                "toLine": 93,
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 97,
                "toLine": 97,
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }"
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 109,
                "toLine": 109,
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }"
            },
            {
                "fromLine": 113,
                "toLine": 113,
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 31,
                "toLine": 39,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);"
            },
            {
                "fromLine": 41,
                "toLine": 49,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": ""
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", Font.PLAIN, Font.BOLD, 16, 14);"
            },
            {
                "fromLine": 69,
                "toLine": 69,
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }"
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return primaryColors.getPrimary2(); }"
            },
            {
                "fromLine": 77,
                "toLine": 77,
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return primaryColors.getPrimary3(); }"
            },
            {
                "fromLine": 81,
                "toLine": 81,
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return primaryColors.getSecondary1(); }"
            },
            {
                "fromLine": 85,
                "toLine": 85,
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return primaryColors.getSecondary2(); }"
            },
            {
                "fromLine": 89,
                "toLine": 89,
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return primaryColors.getSecondary3(); }"
            },
            {
                "fromLine": 93,
                "toLine": 93,
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 97,
                "toLine": 97,
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }"
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 109,
                "toLine": 109,
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }"
            },
            {
                "fromLine": 113,
                "toLine": 113,
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 37,
                "toLine": 37,
                "oldContent": "private FigLine lineFig;",
                "newContent": ""
            },
            {
                "fromLine": 38,
                "toLine": 38,
                "oldContent": "private FigRect rectFig;",
                "newContent": ""
            },
            {
                "fromLine": 42,
                "toLine": 42,
                "oldContent": "static final int WIDTH = 150;",
                "newContent": ""
            },
            {
                "fromLine": 43,
                "toLine": 43,
                "oldContent": "static final int HEIGHT = 500;",
                "newContent": ""
            },
            {
                "fromLine": 47,
                "toLine": 47,
                "oldContent": "        initialize(bounds.x, bounds.y);",
                "newContent": "        lifeLineFigures = new LifeLineFigures(bounds.x, bounds.y, WIDTH, HEIGHT, LINE_COLOR, LINE_WIDTH);"
            },
            {
                "fromLine": 49,
                "toLine": 49,
                "oldContent": "    private void initialize(int x, int y) {",
                "newContent": "    private class LifeLineFigures {"
            },
            {
                "fromLine": 50,
                "toLine": 50,
                "oldContent": "        activations = new LinkedList<FigActivation>();",
                "newContent": "        FigLine lineFig;"
            },
            {
                "fromLine": 51,
                "toLine": 51,
                "oldContent": "        stackedActivations = new LinkedList<FigActivation>();",
                "newContent": "        FigRect rectFig;"
            },
            {
                "fromLine": 53,
                "toLine": 53,
                "oldContent": "        rectFig = new FigRect(x, y, WIDTH, HEIGHT); ",
                "newContent": "        LifeLineFigures(int x, int y, int width, int height, ColorUIResource lineColor, int lineWidth) {"
            },
            {
                "fromLine": 54,
                "toLine": 54,
                "oldContent": "        rectFig.setFilled(false);",
                "newContent": "            rectFig = new FigRect(x, y, width, height);"
            },
            {
                "fromLine": 55,
                "toLine": 55,
                "oldContent": "        rectFig.setLineWidth(0);",
                "newContent": "            rectFig.setFilled(false);"
            },
            {
                "fromLine": 56,
                "toLine": 56,
                "oldContent": "        lineFig = new FigLine(x + WIDTH / 2, y, ",
                "newContent": "            rectFig.setLineWidth(0);"
            },
            {
                "fromLine": 57,
                "toLine": 57,
                "oldContent": "                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);",
                "newContent": "            lineFig = new FigLine(x + width / 2, y, "
            },
            {
                "fromLine": 58,
                "toLine": 58,
                "oldContent": "        lineFig.setDashed(true);",
                "newContent": "                    x + width / 2, y + height, lineColor);"
            },
            {
                "fromLine": 59,
                "toLine": 59,
                "oldContent": "        lineFig.setLineWidth(LINE_WIDTH);",
                "newContent": "            lineFig.setDashed(true);"
            },
            {
                "fromLine": 61,
                "toLine": 61,
                "oldContent": "        addFig(rectFig);",
                "newContent": "            lineFig.setLineWidth(lineWidth);"
            },
            {
                "fromLine": 62,
                "toLine": 62,
                "oldContent": "        addFig(lineFig);",
                "newContent": "        }"
            },
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "    }",
                "newContent": "        // Accessors for lineFig and rectFig"
            },
            {
                "fromLine": 66,
                "toLine": 66,
                "oldContent": "    // TODO: Does this still need to be synchronized? If so then explain why.",
                "newContent": "        public FigLine getLineFig() {"
            },
            {
                "fromLine": 67,
                "toLine": 67,
                "oldContent": "    synchronized void createActivations(final List<FigMessage> messages) {",
                "newContent": "            return lineFig;"
            },
            {
                "fromLine": 68,
                "toLine": 68,
                "oldContent": "        clearActivations();",
                "newContent": "        }"
            },
            {
                "fromLine": 69,
                "toLine": 69,
                "oldContent": "        Collections.sort(messages, new FigMessageComparator());",
                "newContent": "        public FigRect getRectFig() {"
            },
            {
                "fromLine": 70,
                "toLine": 70,
                "oldContent": "        ",
                "newContent": "            return rectFig;"
            },
            {
                "fromLine": 71,
                "toLine": 71,
                "oldContent": "        activations = createStandardActivations(messages);",
                "newContent": "        }"
            },
            {
                "fromLine": 72,
                "toLine": 72,
                "oldContent": "        stackedActivations = createStackedActivations(messages);",
                "newContent": "    }"
            },
            {
                "fromLine": 74,
                "toLine": 74,
                "oldContent": "        ",
                "newContent": "    private LifeLineFigures lifeLineFigures;"
            },
            {
                "fromLine": 75,
                "toLine": 75,
                "oldContent": "        addActivations(activations);",
                "newContent": ""
            },
            {
                "fromLine": 76,
                "toLine": 76,
                "oldContent": "        addActivations(stackedActivations);",
                "newContent": ""
            },
            {
                "fromLine": 78,
                "toLine": 78,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 79,
                "toLine": 79,
                "oldContent": "        // TODO: Do we need this?",
                "newContent": ""
            },
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "        calcBounds();",
                "newContent": ""
            },
            {
                "fromLine": 82,
                "toLine": 82,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "from
{
    "refactorings": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 82,
                "toLine": 82,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 84,
                "toLine": 84,
                "oldContent": "    /**",
                "newContent": ""
            },
            {
                "fromLine": 85,
                "toLine": 85,
                "oldContent": "     * Add the given list of activation Figs to the lifeline. The fill colour",
                "newContent": ""
            },
            {
                "fromLine": 86,
                "toLine": 86,
                "oldContent": "     * is forced to the lifeline colour in the process.",
                "newContent": ""
            },
            {
                "fromLine": 87,
                "toLine": 87,
                "oldContent": "     * @param activationFigs",
                "newContent": ""
            },
            {
                "fromLine": 88,
                "toLine": 88,
                "oldContent": "     */",
                "newContent": ""
            },
            {
                "fromLine": 89,
                "toLine": 89,
                "oldContent": "    private void addActivations(",
                "newContent": ""
            },
            {
                "fromLine": 90,
                "toLine": 90,
                "oldContent": "            final List<FigActivation> activationFigs) {",
                "newContent": ""
            },
            {
                "fromLine": 91,
                "toLine": 91,
                "oldContent": "        for (final FigActivation figAct : activationFigs) {",
                "newContent": ""
            },
            {
                "fromLine": 92,
                "toLine": 92,
                "oldContent": "            figAct.setFillColor(getFillColor());",
                "newContent": ""
            },
            {
                "fromLine": 93,
                "toLine": 93,
                "oldContent": "            addFig(figAct);",
                "newContent": ""
            },
            {
                "fromLine": 94,
                "toLine": 94,
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": 95,
                "toLine": 95,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 97,
                "toLine": 97,
                "oldContent": "    private List<FigActivation> createStandardActivations(",
                "newContent": ""
            },
            {
                "fromLine": 98,
                "toLine": 98,
                "oldContent": "                final List<FigMessage> figMessages) {        ",
                "newContent": ""
            },
            {
                "fromLine": 99,
                "toLine": 99,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 100,
                "toLine": 100,
                "oldContent": "        final List<FigActivation> newActivations =",
                "newContent": ""
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "            new LinkedList<FigActivation>();",
                "newContent": ""
            },
            {
                "fromLine": 102,
                "toLine": 102,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 103,
                "toLine": 103,
                "oldContent": "        // Check here if there are no incoming call actions",
                "newContent": ""
            },
            {
                "fromLine": 104,
                "toLine": 104,
                "oldContent": "        // if not then create an activation at the top of the lifeline",
                "newContent": ""
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "        FigActivation currentActivation = null;",
                "newContent": ""
            },
            {
                "fromLine": 106,
                "toLine": 106,
                "oldContent": "        if (!hasIncomingCallActionFirst(figMessages)) {",
                "newContent": ""
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "            currentActivation = createActivationFig(",
                "newContent": ""
            },
            {
                "fromLine": 108,
                "toLine": 108,
                "oldContent": "                    getOwner(),",
                "newContent": ""
            },
            {
                "fromLine": 109,
                "toLine": 109,
                "oldContent": "                    lineFig.getX(),",
                "newContent": ""
            },
            {
                "fromLine": 110,
                "toLine": 110,
                "oldContent": "                    lineFig.getY(), ",
                "newContent": ""
            },
            {
                "fromLine": 111,
                "toLine": 111,
                "oldContent": "                    lineFig.getWidth(), ",
                "newContent": ""
            },
            {
                "fromLine": 112,
                "toLine": 112,
                "oldContent": "                    lineFig.getHeight(),",
                "newContent": ""
            },
            {
                "fromLine": 113,
                "toLine": 113,
                "oldContent": "                    getSettings(),",
                "newContent": ""
            },
            {
                "fromLine": 114,
                "toLine": 114,
                "oldContent": "                    null);",
                "newContent": ""
            },
            {
                "fromLine": 115,
                "toLine": 115,
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": 116,
                "toLine": 116,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "        // This counts the number of repeated call/returns that take place",
                "newContent": ""
            },
            {
                "fromLine": 118,
                "toLine": 118,
                "oldContent": "        // after the first activation. This shouldn't be required once",
                "newContent": ""
            },
            {
                "fromLine": 119,
                "toLine": 119,
                "oldContent": "        // we handle stacked activations better and once issue 5692 and 5693",
                "newContent": ""
            },
            {
                "fromLine": 120,
                "toLine": 120,
                "oldContent": "        // are sorted.",
                "newContent": ""
            },
            {
                "fromLine": 121,
                "toLine": 121,
                "oldContent": "        int activationsCount = 0;",
                "newContent": ""
            },
            {
                "fromLine": 122,
                "toLine": 122,
                "oldContent": "        //",
                "newContent": ""
            },
            {
                "fromLine": 123,
                "toLine": 123,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 124,
                "toLine": 124,
                "oldContent": "        for (FigMessage figMessage : figMessages) {",
                "newContent": ""
            },
            {
                "fromLine": 125,
                "toLine": 125,
                "oldContent": "            int ySender = 0;",
                "newContent": ""
            },
            {
                "fromLine": 126,
                "toLine": 126,
                "oldContent": "            ",
                "newContent": ""
            },
            {
                "fromLine": 127,
                "toLine": 127,
                "oldContent": "            if (!figMessage.isSelfMessage()) {",
                "newContent": ""
            },
            {
                "fromLine": 128,
                "toLine": 128,
                "oldContent": "                if (isIncoming(figMessage)) {",
                "newContent": ""
            },
            {
                "fromLine": 129,
                "toLine": 129,
                "oldContent": "                    if (currentActivation == null) {",
                "newContent": ""
            },
            {
                "fromLine": 130,
                "toLine": 130,
                "oldContent": "                        if (figMessage.isSynchCallMessage()) {",
                "newContent": ""
            },
            {
                "fromLine": 131,
                "toLine": 131,
                "oldContent": "                            // if we are the dest and is a call action, create the ",
                "newContent": ""
            },
            {
                "fromLine": 132,
                "toLine": 132,
                "oldContent": "                            // activation, but don't add it until the height is set.",
                "newContent": ""
            },
            {
                "fromLine": 133,
                "toLine": 133,
                "oldContent": "                            ySender = figMessage.getFinalY();",
                "newContent": ""
            },
            {
                "fromLine": 134,
                "toLine": 134,
                "oldContent": "                            currentActivation = createActivationFig(",
                "newContent": ""
            },
            {
                "fromLine": 135,
                "toLine": 135,
                "oldContent": "                                    getOwner(), ",
                "newContent": ""
            },
            {
                "fromLine": 136,
                "toLine": 136,
                "oldContent": "                                    lineFig.getX(), ",
                "newContent": ""
            },
            {
                "fromLine": 137,
                "toLine": 137,
                "oldContent": "                                    ySender, ",
                "newContent": ""
            },
            {
                "fromLine": 138,
                "toLine": 138,
                "oldContent": "                                    0, ",
                "newContent": ""
            },
            {
                "fromLine": 139,
                "toLine": 139,
                "oldContent": "                                    0,",
                "newContent": ""
            },
            {
                "fromLine": 140,
                "toLine": 140,
                "oldContent": "                                    getSettings(),",
                "newContent": ""
            },
            {
                "fromLine": 141,
                "toLine": 141,
                "oldContent": "                                    figMessage);",
                "newContent": ""
            },
            {
                "fromLine": 142,
                "toLine": 142,
                "oldContent": "                            activationsCount++;",
                "newContent": ""
            },
            {
                "fromLine": 143,
                "toLine": 143,
                "oldContent": "                        } else if (figMessage.isCreateMessage()) {",
                "newContent": ""
            },
            {
                "fromLine": 144,
                "toLine": 144,
                "oldContent": "                            // if we are the destination of a create action,",
                "newContent": ""
            },
            {
                "fromLine": 145,
                "toLine": 145,
                "oldContent": "                            // create the entire activation",
                "newContent": ""
            },
            {
                "fromLine": 146,
                "toLine": 146,
                "oldContent": "                            currentActivation = createActivationFig(",
                "newContent": ""
            },
            {
                "fromLine": 147,
                "toLine": 147,
                "oldContent": "                                    getOwner(),",
                "newContent": ""
            },
            {
                "fromLine": 148,
                "toLine": 148,
                "oldContent": "                                    lineFig.getX(),",
                "newContent": ""
            },
            {
                "fromLine": 149,
                "toLine": 149,
                "oldContent": "                                    lineFig.getY(),",
                "newContent": ""
            },
            {
                "fromLine": 150,
                "toLine": 150,
                "oldContent": "                                    0,",
                "newContent": ""
            },
            {
                "fromLine": 151,
                "toLine": 151,
                "oldContent": "                                    0,",
                "newContent": ""
            },
            {
                "fromLine": 152,
                "toLine": 152,
                "oldContent": "                                    getSettings(),",
                "newContent": ""
            },
            {
                "fromLine": 153,
                "toLine": 153,
                "oldContent": "                                    figMessage);",
                "newContent": ""
            },
            {
                "fromLine": 154,
                "toLine": 154,
                "oldContent": "                            activationsCount++;",
                "newContent": ""
            },
            {
                "fromLine": 155,
                "toLine": 155,
                "oldContent": "                        }",
                "newContent": ""
            },
            {
                "fromLine": 156,
                "toLine": 156,
                "oldContent": "                    } else {",
                "newContent": ""
            },
            {
                "fromLine": 157,
                "toLine": 157,
                "oldContent": "                        if (figMessage.isSynchCallMessage()",
                "newContent": ""
            },
            {
                "fromLine": 158,
                "toLine": 158,
                "oldContent": "                                && isSameClassifierRoles(",
                "newContent": ""
            },
            {
                "fromLine": 159,
                "toLine": 159,
                "oldContent": "                                        currentActivation.getActivatingMessage(),",
                "newContent": ""
            },
            {
                "fromLine": 160,
                "toLine": 160,
                "oldContent": "                                        figMessage)) {",
                "newContent": ""
            },
            {
                "fromLine": 161,
                "toLine": 161,
                "oldContent": "                            activationsCount++;",
                "newContent": ""
            },
            {
                "fromLine": 162,
                "toLine": 162,
                "oldContent": "                        } else if (figMessage.isDeleteMessage()) {",
                "newContent": ""
            },
            {
                "fromLine": 163,
                "toLine": 163,
                "oldContent": "                            // if we are the target of a destroy action",
                "newContent": ""
            },
            {
                "fromLine": 164,
                "toLine": 164,
                "oldContent": "                            // the figlifeline ends here and we add the activation",
                "newContent": ""
            },
            {
                "fromLine": 165,
                "toLine": 165,
                "oldContent": "                            ySender = figMessage.getFinalY();",
                "newContent": ""
            },
            {
                "fromLine": 166,
                "toLine": 166,
                "oldContent": "                            currentActivation.setHeight(",
                "newContent": ""
            },
            {
                "fromLine": 167,
                "toLine": 167,
                "oldContent": "                                    ySender - currentActivation.getY());",
                "newContent": ""
            },
            {
                "fromLine": 168,
                "toLine": 168,
                "oldContent": "                            currentActivation.setDestroy(true);",
                "newContent": ""
            },
            {
                "fromLine": 169,
                "toLine": 169,
                "oldContent": "                            lineFig.setHeight(ySender - getY());",
                "newContent": ""
            },
            {
                "fromLine": 170,
                "toLine": 170,
                "oldContent": "                            newActivations.add(currentActivation);",
                "newContent": ""
            },
            {
                "fromLine": 171,
                "toLine": 171,
                "oldContent": "                            currentActivation = null;",
                "newContent": ""
            },
            {
                "fromLine": 172,
                "toLine": 172,
                "oldContent": "                        }",
                "newContent": ""
            },
            {
                "fromLine": 173,
                "toLine": 173,
                "oldContent": "                    }",
                "newContent": ""
            },
            {
                "fromLine": 174,
                "toLine": 174,
                "oldContent": "                }",
                "newContent": ""
            },
            {
                "fromLine": 175,
                "toLine": 175,
                "oldContent": "                ",
                "newContent": ""
            },
            {
                "fromLine": 176,
                "toLine": 176,
                "oldContent": "                if (isOutgoing(figMessage) && currentActivation != null",
                "newContent": ""
            },
            {
                "fromLine": 177,
                "toLine": 177,
                "oldContent": "                    && currentActivation.isActivatorEnd(figMessage)",
                "newContent": ""
            },
            {
                "fromLine": 178,
                "toLine": 178,
                "oldContent": "                            && --activationsCount == 0) {",
                "newContent": ""
            },
            {
                "fromLine": 179,
                "toLine": 179,
                "oldContent": "                        // if we are the source of a return action",
                "newContent": ""
            },
            {
                "fromLine": 180,
                "toLine": 180,
                "oldContent": "                        // the activation ends here.",
                "newContent": ""
            },
            {
                "fromLine": 181,
                "toLine": 181,
                "oldContent": "                        ySender = figMessage.getStartY();",
                "newContent": ""
            },
            {
                "fromLine": 182,
                "toLine": 182,
                "oldContent": "                        currentActivation.setHeight(",
                "newContent": ""
            },
            {
                "fromLine": 183,
                "toLine": 183,
                "oldContent": "                                ySender - currentActivation.getY());",
                "newContent": ""
            },
            {
                "fromLine": 184,
                "toLine": 184,
                "oldContent": "                        newActivations.add(currentActivation);",
                "newContent": ""
            },
            {
                "fromLine": 185
{
    "refactorings": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 185,
                "toLine": 185,
                "oldContent": "                        newActivations.add(currentActivation);",
                "newContent": ""
            },
            {
                "fromLine": 186,
                "toLine": 186,
                "oldContent": "                        currentActivation = null;",
                "newContent": ""
            },
            {
                "fromLine": 187,
                "toLine": 187,
                "oldContent": "                }",
                "newContent": ""
            },
            {
                "fromLine": 188,
                "toLine": 188,
                "oldContent": "            }",
                "newContent": ""
            },
            {
                "fromLine": 189,
                "toLine": 189,
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": 190,
                "toLine": 190,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 191,
                "toLine": 191,
                "oldContent": "        // If we have a currentAct object that means have reached the end",
                "newContent": ""
            },
            {
                "fromLine": 192,
                "toLine": 192,
                "oldContent": "        // of the lifeline with a call or a create not returned.",
                "newContent": ""
            },
            {
                "fromLine": 193,
                "toLine": 193,
                "oldContent": "        // Add the activation to the list after setting its height to end",
                "newContent": ""
            },
            {
                "fromLine": 194,
                "toLine": 194,
                "oldContent": "        // at the end of the lifeline.",
                "newContent": ""
            },
            {
                "fromLine": 195,
                "toLine": 195,
                "oldContent": "        if (currentActivation != null) {",
                "newContent": ""
            },
            {
                "fromLine": 196,
                "toLine": 196,
                "oldContent": "            currentActivation.setHeight(",
                "newContent": ""
            },
            {
                "fromLine": 197,
                "toLine": 197,
                "oldContent": "                    getHeight() - (currentActivation.getY() - getY()));",
                "newContent": ""
            },
            {
                "fromLine": 198,
                "toLine": 198,
                "oldContent": "            newActivations.add(currentActivation);",
                "newContent": ""
            },
            {
                "fromLine": 199,
                "toLine": 199,
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": 200,
                "toLine": 200,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 201,
                "toLine": 201,
                "oldContent": "        return newActivations;",
                "newContent": ""
            },
            {
                "fromLine": 202,
                "toLine": 202,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 204,
                "toLine": 204,
                "oldContent": "    private boolean isSameClassifierRoles(",
                "newContent": ""
            },
            {
                "fromLine": 205,
                "toLine": 205,
                "oldContent": "            final FigMessage mess1,",
                "newContent": ""
            },
            {
                "fromLine": 206,
                "toLine": 206,
                "oldContent": "            final FigMessage mess2) {",
                "newContent": ""
            },
            {
                "fromLine": 207,
                "toLine": 207,
                "oldContent": "        return mess1 != null",
                "newContent": ""
            },
            {
                "fromLine": 208,
                "toLine": 208,
                "oldContent": "                && mess1.getDestFigNode() == mess2.getDestFigNode()",
                "newContent": ""
            },
            {
                "fromLine": 209,
                "toLine": 209,
                "oldContent": "                && mess1.getSourceFigNode() == mess2.getSourceFigNode();",
                "newContent": ""
            },
            {
                "fromLine": 210,
                "toLine": 210,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 212,
                "toLine": 212,
                "oldContent": "    /**",
                "newContent": ""
            },
            {
                "fromLine": 213,
                "toLine": 213,
                "oldContent": "     * Return true if the given message fig is pointing in to this lifeline.",
                "newContent": ""
            },
            {
                "fromLine": 214,
                "toLine": 214,
                "oldContent": "     * @param messageFig",
                "newContent": ""
            },
            {
                "fromLine": 215,
                "toLine": 215,
                "oldContent": "     * @return true if the message is incoming",
                "newContent": ""
            },
            {
                "fromLine": 216,
                "toLine": 216,
                "oldContent": "     */",
                "newContent": ""
            },
            {
                "fromLine": 217,
                "toLine": 217,
                "oldContent": "    private boolean isIncoming(FigMessage messageFig) {",
                "newContent": ""
            },
            {
                "fromLine": 218,
                "toLine": 218,
                "oldContent": "        return (messageFig.getDestFigNode().getOwner() == getOwner());",
                "newContent": ""
            },
            {
                "fromLine": 219,
                "toLine": 219,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 221,
                "toLine": 221,
                "oldContent": "    /**",
                "newContent": ""
            },
            {
                "fromLine": 222,
                "toLine": 222,
                "oldContent": "     * Return true if the given message fig is pointing out from this lifeline.",
                "newContent": ""
            },
            {
                "fromLine": 223,
                "toLine": 223,
                "oldContent": "     * @param messageFig",
                "newContent": ""
            },
            {
                "fromLine": 224,
                "toLine": 224,
                "oldContent": "     * @return true if the message is outgoing",
                "newContent": ""
            },
            {
                "fromLine": 225,
                "toLine": 225,
                "oldContent": "     */",
                "newContent": ""
            },
            {
                "fromLine": 226,
                "toLine": 226,
                "oldContent": "    private boolean isOutgoing(FigMessage messageFig) {",
                "newContent": ""
            },
            {
                "fromLine": 227,
                "toLine": 227,
                "oldContent": "        return (messageFig.getSourceFigNode().getOwner() == getOwner());",
                "newContent": ""
            },
            {
                "fromLine": 228,
                "toLine": 228,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 230,
                "toLine": 230,
                "oldContent": "    private FigActivation createActivationFig(",
                "newContent": ""
            },
            {
                "fromLine": 231,
                "toLine": 231,
                "oldContent": "            final Object owner, ",
                "newContent": ""
            },
            {
                "fromLine": 232,
                "toLine": 232,
                "oldContent": "            final int x, ",
                "newContent": ""
            },
            {
                "fromLine": 233,
                "toLine": 233,
                "oldContent": "            final int y, ",
                "newContent": ""
            },
            {
                "fromLine": 234,
                "toLine": 234,
                "oldContent": "            final int w, ",
                "newContent": ""
            },
            {
                "fromLine": 235,
                "toLine": 235,
                "oldContent": "            final int h,",
                "newContent": ""
            },
            {
                "fromLine": 236,
                "toLine": 236,
                "oldContent": "            final DiagramSettings settings,",
                "newContent": ""
            },
            {
                "fromLine": 237,
                "toLine": 237,
                "oldContent": "            final FigMessage messageFig) {",
                "newContent": ""
            },
            {
                "fromLine": 238,
                "toLine": 238,
                "oldContent": "        return new FigActivation(",
                "newContent": ""
            },
            {
                "fromLine": 239,
                "toLine": 239,
                "oldContent": "                owner,",
                "newContent": ""
            },
            {
                "fromLine": 240,
                "toLine": 240,
                "oldContent": "                new Rectangle(x, y, w, h),",
                "newContent": ""
            },
            {
                "fromLine": 241,
                "toLine": 241,
                "oldContent": "                settings,",
                "newContent": ""
            },
            {
                "fromLine": 242,
                "toLine": 242,
                "oldContent": "                messageFig);",
                "newContent": ""
            },
            {
                "fromLine": 243,
                "toLine": 243,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 245,
                "toLine": 245,
                "oldContent": "    private List<FigActivation> createStackedActivations(",
                "newContent": ""
            },
            {
                "fromLine": 246,
                "toLine": 246,
                "oldContent": "            final List<FigMessage> figMessages) {",
                "newContent": ""
            },
            {
                "fromLine": 247,
                "toLine": 247,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 248,
                "toLine": 248,
                "oldContent": "        final List<FigActivation> newActivations =",
                "newContent": ""
            },
            {
                "fromLine": 249,
                "toLine": 249,
                "oldContent": "            new LinkedList<FigActivation>();",
                "newContent": ""
            },
            {
                "fromLine": 250,
                "toLine": 250,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 251,
                "toLine": 251,
                "oldContent": "        FigActivation currentAct = null;",
                "newContent": ""
            },
            {
                "fromLine": 252,
                "toLine": 252,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 253,
                "toLine": 253,
                "oldContent": "        for (FigMessage figMessage : figMessages) {",
                "newContent": ""
            },
            {
                "fromLine": 254,
                "toLine": 254,
                "oldContent": "            int ySender = 0;",
                "newContent": ""
            },
            {
                "fromLine": 255,
                "toLine": 255,
                "oldContent": "            // if we are the dest and is a call action, create the ",
                "newContent": ""
            },
            {
                "fromLine": 256,
                "toLine": 256,
                "oldContent": "            // activation, but don't add it until the height is set.",
                "newContent": ""
            },
            {
                "fromLine": 257,
                "toLine": 257,
                "oldContent": "            if (figMessage.isSelfMessage()) {",
                "newContent": ""
            },
            {
                "fromLine": 258,
                "toLine": 258,
                "oldContent": "                if (figMessage.isSynchCallMessage()) {",
                "newContent": ""
            },
            {
                "fromLine": 259,
                "toLine": 259,
                "oldContent": "                    ySender = figMessage.getFinalY();",
                "newContent": ""
            },
            {
                "fromLine": 260,
                "toLine": 260,
                "oldContent": "                    currentAct = new FigActivation(figMessage.getOwner(),",
                "newContent": ""
            },
            {
                "fromLine": 261,
                "toLine": 261,
                "oldContent": "                            new Rectangle(lineFig.getX()",
                "newContent": ""
            },
            {
                "fromLine": 262,
                "toLine": 262,
                "oldContent": "                                    + FigActivation.DEFAULT_WIDTH / 2, ySender,",
                "newContent": ""
            },
            {
                "fromLine": 263,
                "toLine": 263,
                "oldContent": "                                    0, 0), getSettings(), figMessage, false);",
                "newContent": ""
            },
            {
                "fromLine": 264,
                "toLine": 264,
                "oldContent": "                } else if (currentAct != null",
                "newContent": ""
            },
            {
                "fromLine": 265,
                "toLine": 265,
                "oldContent": "                        && figMessage.isReplyMessage()) {",
                "newContent": ""
            },
            {
                "fromLine": 266,
                "toLine": 266,
                "oldContent": "                    ySender = figMessage.getStartY();",
                "newContent": ""
            },
            {
                "fromLine": 267,
                "toLine": 267,
                "oldContent": "                    currentAct.setHeight(ySender - currentAct.getY());",
                "newContent": ""
            },
            {
                "fromLine": 268,
                "toLine": 268,
                "oldContent": "                    newActivations.add(currentAct);",
                "newContent": ""
            },
            {
                "fromLine": 269,
                "toLine": 269,
                "oldContent": "                    currentAct = null;",
                "newContent": ""
            },
            {
                "fromLine": 270,
                "toLine": 270,
                "oldContent": "                }",
                "newContent": ""
            },
            {
                "fromLine": 271,
                "toLine": 271,
                "oldContent": "            }",
                "newContent": ""
            },
            {
                "fromLine": 272,
                "toLine": 272,
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": 273,
                "toLine": 273,
                "oldContent": "        return newActivations;",
                "newContent": ""
            },
            {
                "fromLine": 274,
                "toLine": 274,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 276,
                "toLine": 276,
                "oldContent": "    private boolean hasIncomingCallActionFirst(",
                "newContent": ""
            },
            {
                "fromLine": 277,
                "toLine": 277,
                "oldContent": "                final List<FigMessage> figMessages) {",
                "newContent": ""
            },
            {
                "fromLine": 278,
                "toLine": 278,
                "oldContent": "        final FigClassifierRole cr =",
                "newContent": ""
            },
            {
                "fromLine": 279,
                "toLine": 279,
                "oldContent": "            (FigClassifierRole) getGroup();",
                "newContent": ""
            },
            {
                "fromLine": 280,
                "toLine": 280,
                "oldContent": "        if (figMessages.isEmpty()) {",
                "newContent": ""
            },
            {
                "fromLine": 281,
                "toLine": 281,
                "oldContent": "            return false;",
                "newContent": ""
            },
            {
                "fromLine": 282,
                "toLine": 282,
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": 283,
                "toLine": 283,
                "oldContent": "        FigMessage figMessage = figMessages.get(0);",
                "newContent": ""
            },
            {
                "fromLine": 284,
                "toLine": 284,
                "oldContent": "        if (cr.equals(figMessage.getDestFigNode())",
                "newContent": ""
            },
            {
                "fromLine": 285,
                "toLine": 285,
                "oldContent": "                && !cr.equals(figMessage.getSourceFigNode())",
                "newContent": ""
            },
            {
                "fromLine": 286,
                "toLine": 286,
                "oldContent": "                && figMessage.isSynchCallMessage()) {",
                "newContent": ""
            },
            {
                "fromLine": 287,
                "toLine": 287,
                "oldContent": "            return true;",
                "newContent": ""
            },
            {
                "fromLine": 288,
                "toLine": 288,
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": 289,
                "toLine": 289,
                "oldContent": "        return false;",
                "newContent": ""
            },
            {
                "fromLine": 290,
                "toLine": 290,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 292,
                "toLine": 292,
               
{
    "refactorings": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 292,
                "toLine": 292,
                "oldContent": "    private void clearActivations() {",
                "newContent": ""
            },
            {
                "fromLine": 293,
                "toLine": 293,
                "oldContent": "        for (FigActivation oldActivation : activations) {",
                "newContent": ""
            },
            {
                "fromLine": 294,
                "toLine": 294,
                "oldContent": "            removeFig(oldActivation);    ",
                "newContent": ""
            },
            {
                "fromLine": 295,
                "toLine": 295,
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": 296,
                "toLine": 296,
                "oldContent": "        for (FigActivation oldActivation : stackedActivations) {",
                "newContent": ""
            },
            {
                "fromLine": 297,
                "toLine": 297,
                "oldContent": "            removeFig(oldActivation);    ",
                "newContent": ""
            },
            {
                "fromLine": 298,
                "toLine": 298,
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": 299,
                "toLine": 299,
                "oldContent": "        activations.clear();",
                "newContent": ""
            },
            {
                "fromLine": 300,
                "toLine": 300,
                "oldContent": "        stackedActivations.clear();",
                "newContent": ""
            },
            {
                "fromLine": 301,
                "toLine": 301,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 303,
                "toLine": 303,
                "oldContent": "    @Override",
                "newContent": ""
            },
            {
                "fromLine": 304,
                "toLine": 304,
                "oldContent": "    public void setFilled(boolean filled) {",
                "newContent": ""
            },
            {
                "fromLine": 305,
                "toLine": 305,
                "oldContent": "        // we do nothing. No call to the parent",
                "newContent": ""
            },
            {
                "fromLine": 306,
                "toLine": 306,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 308,
                "toLine": 308,
                "oldContent": "    @Override",
                "newContent": ""
            },
            {
                "fromLine": 309,
                "toLine": 309,
                "oldContent": "    // TODO: synchronized is required here as there can be some ",
                "newContent": ""
            },
            {
                "fromLine": 310,
                "toLine": 310,
                "oldContent": "    // concurrent modification problems when drawing a call message and",
                "newContent": ""
            },
            {
                "fromLine": 311,
                "toLine": 311,
                "oldContent": "    // having that automatically draw the reply. Maybe fixing the TODO",
                "newContent": ""
            },
            {
                "fromLine": 312,
                "toLine": 312,
                "oldContent": "    // below will resolve this and the synch can go.",
                "newContent": ""
            },
            {
                "fromLine": 313,
                "toLine": 313,
                "oldContent": "    protected synchronized void setBoundsImpl(int x, int y, int w, int h) {",
                "newContent": "    protected void setBoundsImpl(int x, int y, int w, int h) {"
            },
            {
                "fromLine": 314,
                "toLine": 314,
                "oldContent": "        final Rectangle oldBounds = getBounds();",
                "newContent": ""
            },
            {
                "fromLine": 315,
                "toLine": 315,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 316,
                "toLine": 316,
                "oldContent": "        rectFig.setBounds(x, y, w, h);",
                "newContent": "        lifeLineFigures.getRectFig().setBounds(x, y, w, h);"
            },
            {
                "fromLine": 317,
                "toLine": 317,
                "oldContent": "        lineFig.setBounds(x + w / 2, y, w, h);",
                "newContent": "        lifeLineFigures.getLineFig().setBounds(x + w / 2, y, w, h);"
            },
            {
                "fromLine": 318,
                "toLine": 318,
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": 319,
                "toLine": 319,
                "oldContent": "        final int yDiff = oldBounds.y - y;",
                "newContent": ""
            },
            {
                "fromLine": 320,
                "toLine": 320,
                "oldContent": "    ",
                "newContent": ""
            },
            {
                "fromLine": 321,
                "toLine": 321,
                "oldContent": "        // we don't recalculate activations, just move them",
                "newContent": ""
            },
            {
                "fromLine": 322,
                "toLine": 322,
                "oldContent": "        for (FigActivation act : activations) {",
                "newContent": ""
            },
            {
                "fromLine": 323,
                "toLine": 323,
                "oldContent": "            // TODO: why do we need to remove then add the Fig?",
                "newContent": ""
            },
            {
                "fromLine": 324,
                "toLine": 324,
                "oldContent": "            removeFig(act);",
                "newContent": ""
            },
            {
                "fromLine": 325,
                "toLine": 325,
                "oldContent": "            act.setLocation(",
                "newContent": ""
            },
            {
                "fromLine": 326,
                "toLine": 326,
                "oldContent": "                    lineFig.getX() - FigActivation.DEFAULT_WIDTH / 2,",
                "newContent": ""
            },
            {
                "fromLine": 327,
                "toLine": 327,
                "oldContent": "                    act.getY() - yDiff);",
                "newContent": ""
            },
            {
                "fromLine": 328,
                "toLine": 328,
                "oldContent": "            if (activations.size() == 1 ",
                "newContent": ""
            },
            {
                "fromLine": 329,
                "toLine": 329,
                "oldContent": "                    && act.getHeight() == oldBounds.height) {",
                "newContent": ""
            },
            {
                "fromLine": 330,
                "toLine": 330,
                "oldContent": "                act.setHeight(getHeight());",
                "newContent": ""
            },
            {
                "fromLine": 331,
                "toLine": 331,
                "oldContent": "            }",
                "newContent": ""
            },
            {
                "fromLine": 332,
                "toLine": 332,
                "oldContent": "            addFig(act);",
                "newContent": ""
            },
            {
                "fromLine": 333,
                "toLine": 333,
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": 334,
                "toLine": 334,
                "oldContent": "        damage();",
                "newContent": ""
            },
            {
                "fromLine": 335,
                "toLine": 335,
                "oldContent": "        _x = x;",
                "newContent": ""
            },
            {
                "fromLine": 336,
                "toLine": 336,
                "oldContent": "        _y = y;",
                "newContent": ""
            },
            {
                "fromLine": 337,
                "toLine": 337,
                "oldContent": "        _w = w;",
                "newContent": ""
            },
            {
                "fromLine": 338,
                "toLine": 338,
                "oldContent": "        _h = h;",
                "newContent": ""
            },
            {
                "fromLine": 339,
                "toLine": 339,
                "oldContent": "        firePropChange(\"bounds\", oldBounds, getBounds());",
                "newContent": ""
            },
            {
                "fromLine": 340,
                "toLine": 340,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 342,
                "toLine": 342,
                "oldContent": "    public void setLineWidth(int w) {",
                "newContent": ""
            },
            {
                "fromLine": 343,
                "toLine": 343,
                "oldContent": "        lineFig.setLineWidth(w);",
                "newContent": "        lifeLineFigures.getLineFig().setLineWidth(w);"
            },
            {
                "fromLine": 344,
                "toLine": 344,
                "oldContent": "    }",
                "newContent": ""
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColors.java": "public class ThemeColors {\n\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n    private final ColorUIResource secondary1;\n    private final ColorUIResource secondary2;\n    private final ColorUIResource secondary3;\n\n    public ThemeColors(int p1r, int p1g, int p1b, int p2r, int p2g, int p2b, int p3r, int p3g, int p3b) {\n        primary1 = new ColorUIResource(p1r, p1g, p1b);\n        primary2 = new ColorUIResource(p2r, p2g, p2b);\n        primary3 = new ColorUIResource(p3r, p3g, p3b);\n        secondary1 = new ColorUIResource(p1r, p1g, p1b);\n        secondary2 = new ColorUIResource(p2r, p2g, p2b);\n        secondary3 = new ColorUIResource(p3r, p3g, p3b);\n    }\n\n    public ColorUIResource getPrimary1() { return primary1; }\n\n    public ColorUIResource getPrimary2() { return primary2; }\n\n    public ColorUIResource getPrimary3() { return primary3; }\n\n    public ColorUIResource getSecondary1() { return secondary1; }\n\n    public ColorUIResource getSecondary2() { return secondary2; }\n\n    public ColorUIResource getSecondary3() { return secondary3; }\n}",
        "src/argouml-app/src/org/argouml/ui/ThemeFonts.java": "public class ThemeFonts {\n\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(String controlFontFamily, String systemFontFamily, int plainStyle, int boldStyle, int largeSize, int smallSize) {\n        controlFont = new FontUIResource(controlFontFamily, plainStyle, largeSize);\n        systemFont = new FontUIResource(systemFontFamily, plainStyle, largeSize);\n        windowTitleFont = new FontUIResource(controlFontFamily, boldStyle, largeSize);\n        userFont = new FontUIResource(controlFontFamily, plainStyle, largeSize);\n        smallFont = new FontUIResource(systemFontFamily, plainStyle, smallSize);\n    }\n\n    public FontUIResource getControlFont() { return controlFont; }\n\n    public FontUIResource getSystemFont() { return systemFont; }\n\n    public FontUIResource getWindowTitleFont() { return windowTitleFont; }\n\n    public FontUIResource getUserFont() { return userFont; }\n\n    public FontUIResource getSmallFont() { return smallFont; }\n}"
    }
}"