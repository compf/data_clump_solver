refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		54",
		toLine:"		54",
		oldContent:"
		    private final ThemeColors themeColors = new ThemeColors(102, 102, 102, 153, 153, 153, 204, 204, 204);		
",
		newContent:"
		    private final ThemeColors themeColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);		
",
,
		fromLine:"		82",
		toLine:"		122",
		oldContent:"
		    protected ColorUIResource getSecondary1() { return secondary1; }
		    protected ColorUIResource getSecondary2() { return secondary2; }
		    protected ColorUIResource getSecondary3() { return secondary3; }
		    public FontUIResource getControlTextFont() { return controlFont; }
		    public FontUIResource getSystemTextFont() { return systemFont; }
		    public FontUIResource getUserTextFont() { return userFont; }
		    public FontUIResource getMenuTextFont() { return controlFont; }
		    public FontUIResource getSubTextFont() { return smallFont; }
		    public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		    protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }
		    protected ColorUIResource getSecondary2() { return themeColors.getSecondary2(); }
		    protected ColorUIResource getSecondary3() { return themeColors.getSecondary3(); }
		    public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }
		    public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }
		    public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }
		    public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }
		    public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }
		    public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		54",
		toLine:"		54",
		oldContent:"
		    private final ThemeColors themeColors = new ThemeColors(102, 102, 102, 153, 153, 153, 204, 204, 204);		
",
		newContent:"
		    private final ThemeColors themeColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);		
",
,
		fromLine:"		83",
		toLine:"		123",
		oldContent:"
		    protected ColorUIResource getSecondary1() { return secondary1; }
		    protected ColorUIResource getSecondary2() { return secondary2; }
		    protected ColorUIResource getSecondary3() { return secondary3; }
		    public FontUIResource getControlTextFont() { return controlFont; }
		    public FontUIResource getSystemTextFont() { return systemFont; }
		    public FontUIResource getUserTextFont() { return userFont; }
		    public FontUIResource getMenuTextFont() { return controlFont; }
		    public FontUIResource getSubTextFont() { return smallFont; }
		    public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		    protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }
		    protected ColorUIResource getSecondary2() { return themeColors.getSecondary2(); }
		    protected ColorUIResource getSecondary3() { return themeColors.getSecondary3(); }
		    public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }
		    public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }
		    public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }
		    public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }
		    public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }
		    public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],

}
extractedClasses:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	    private final ColorUIResource primary1;
	    private final ColorUIResource primary2;
	    private final ColorUIResource primary3;
	    private final ColorUIResource secondary1 = new ColorUIResource(102, 102, 102);
	    private final ColorUIResource secondary2 = new ColorUIResource(153, 153, 153);
	    private final ColorUIResource secondary3 = new ColorUIResource(204, 204, 204);
	
	    public ThemeColors(int r1, int g1, int b1, int r2, int g2, int b2, int r3, int g3, int b3) {
	        this.primary1 = new ColorUIResource(r1, g1, b1);
	        this.primary2 = new ColorUIResource(r2, g2, b2);
	        this.primary3 = new ColorUIResource(r3, g3, b3);
	    }
	
	    // Getters for the colors
	    public ColorUIResource getPrimary1() { return primary1; }
	    public ColorUIResource getPrimary2() { return primary2; }
	    public ColorUIResource getPrimary3() { return primary3; }
	    public ColorUIResource getSecondary1() { return secondary1; }
	    public ColorUIResource getSecondary2() { return secondary2; }
	    public ColorUIResource getSecondary3() { return secondary3; }
	}	
",
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/ThemeFonts.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFonts {
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    public ThemeFonts(String fontNameControl, int fontStyleControl, int fontSizeControl, String fontNameSystem, int fontStyleSystem, int fontSizeSystem, String fontNameWindow, int fontStyleWindow, int fontSizeWindow, String fontNameUser, int fontStyleUser, int fontSizeUser, String fontNameSmall, int fontStyleSmall, int fontSizeSmall) {
	        this.controlFont = new FontUIResource(fontNameControl, fontStyleControl, fontSizeControl);
	        this.systemFont = new FontUIResource(fontNameSystem, fontStyleSystem, fontSizeSystem);
	        this.windowTitleFont = new FontUIResource(fontNameWindow, fontStyleWindow, fontSizeWindow);
	        this.userFont = new FontUIResource(fontNameUser, fontStyleUser, fontSizeUser);
	        this.smallFont = new FontUIResource(fontNameSmall, fontStyleSmall, fontSizeSmall);
	    }
	
	    // Getters for the fonts
	    public FontUIResource getControlFont() { return controlFont; }
	    public FontUIResource getSystemFont() { return systemFont; }
	    public FontUIResource getWindowTitleFont() { return windowTitleFont; }
	    public FontUIResource getUserFont() { return userFont; }
	    public FontUIResource getSmallFont() { return smallFont; }
	}	
",

}
