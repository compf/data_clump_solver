"{
    "refactorings": {
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/NodeFigParts.java": [
            {
                "fromLine": "1",
                "toLine": "1",
                "oldContent": "public class NodeFigParts {",
                "newContent": "package org.argouml.activity2.diagram;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigBasePresentation;\nimport org.argouml.uml.diagram.ui.DiagramElement;\n\npublic class NodeFigParts {"
            }
        ],
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": "30",
                "toLine": "34",
                "oldContent": "private NodeFigParts nodeFigParts;\n    \n    \n    \n",
                "newContent": ""
            },
            {
                "fromLine": "36",
                "toLine": "40",
                "oldContent": "FigBaseNode(final Object owner, final Rectangle bounds,\n            final DiagramSettings settings) {\n        super(owner);\n        setBounds(bounds);\n        this.settings = settings;\n    }",
                "newContent": "FigBaseNode(final Object owner, final Rectangle bounds,\n            final DiagramSettings settings) {\n        super(owner);\n        setBounds(bounds);\n        nodeFigParts = new NodeFigParts(new FigBasePresentation(owner, settings), settings, null);\n    }"
            },
            {
                "fromLine": "42",
                "toLine": "46",
                "oldContent": "void setDisplayState(FigBasePresentation displayState) {\n        this.displayState = displayState;\n        displayState.setOwner(getOwner());\n        addFig(displayState);\n    }",
                "newContent": "void setDisplayState(FigBasePresentation displayState) {\n        nodeFigParts.setDisplayState(displayState);\n        displayState.setOwner(getOwner());\n        addFig(displayState);\n    }"
            },
            {
                "fromLine": "58",
                "toLine": "62",
                "oldContent": "public Dimension getMinimumSize() {\n        return displayState.getMinimumSize();\n    }",
                "newContent": "public Dimension getMinimumSize() {\n        return nodeFigParts.getDisplayState().getMinimumSize();\n    }"
            },
            {
                "fromLine": "64",
                "toLine": "64",
                "oldContent": "public void setNameDiagramElement(DiagramElement name) {",
                "newContent": "public void setNameDiagramElement(DiagramElement nameDiagramElement) {\n        nodeFigParts.setNameDiagramElement(nameDiagramElement);\n    }"
            },
            {
                "fromLine": "68",
                "toLine": "74",
                "oldContent": "protected void positionChildren() {\n        Rectangle myBounds = getBounds();\n        if (displayState != null) {\n            displayState.setBounds(myBounds);\n        }\n//      calcBounds();\n        updateEdges();\n    }",
                "newContent": "protected void positionChildren() {\n        Rectangle myBounds = getBounds();\n        FigBasePresentation displayState = nodeFigParts.getDisplayState();\n        if (displayState != null) {\n            displayState.setBounds(myBounds);\n        }\n        updateEdges();\n    }"
            },
            {
                "fromLine": "78",
                "toLine": "82",
                "oldContent": "protected void setBoundsImpl(\n            final int x,\n            final int y,\n            final int w,\n            final int h) {",
                "newContent": "protected void setBoundsImpl(\n            final int x,\n            final int y,\n            final int w,\n            final int h) {\n        Rectangle bounds = new Rectangle(x, y, w, h);\n        nodeFigParts.setBounds(bounds);\n        _x = x;\n        _y = y;\n        _w = w;\n        _h = h;\n        positionChildren();\n    }"
            },
            {
                "fromLine": "85",
                "toLine": "93",
                "oldContent": "public void calcBounds() {\n        if (getGroup() != null) {\n            ((FigGroup) getGroup()).calcBounds();\n        } else {\n            final Dimension min = getMinimumSize();\n            int maxw = Math.max(getWidth(), min.width);\n            int maxh = Math.max(getHeight(), min.height);\n            setBounds(_x, _y, maxw, maxh);\n        }\n    }",
                "newContent": "public void calcBounds() {\n        Rectangle bounds = nodeFigParts.getBoundsAfterCalculation();\n        if (bounds != null) {\n            setBounds(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    }"
            }
        ]
    }
}"