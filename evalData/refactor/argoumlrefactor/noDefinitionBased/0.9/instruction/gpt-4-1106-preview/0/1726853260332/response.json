{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": "32",
                "toLine": "52",
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private ThemeColors themeColors = new ThemeColors();"
            },
            {
                "fromLine": "55",
                "toLine": "69",
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getPrimary2()\n     */\n    protected ColorUIResource getPrimary2() { return primary2; }\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getPrimary3()\n     */\n    protected ColorUIResource getPrimary3() { return primary3; }\n\n    // these are gray in Metal Default Theme\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getSecondary1()\n     */\n    protected ColorUIResource getSecondary1() { return secondary1; }\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getSecondary2()\n     */\n    protected ColorUIResource getSecondary2() { return secondary2; }\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getSecondary3()\n     */\n    protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getPrimary1() { return themeColors.getPrimary1(); }\n\n    protected ColorUIResource getPrimary2() { return themeColors.getPrimary2(); }\n\n    protected ColorUIResource getPrimary3() { return themeColors.getPrimary3(); }\n\n    protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }\n\n    protected ColorUIResource getSecondary2() { return themeColors.getSecondary2(); }\n\n    protected ColorUIResource getSecondary3() { return themeColors.getSecondary3(); }"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": "32",
                "toLine": "52",
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private ThemeColors themeColors = new ThemeColors();"
            },
            {
                "fromLine": "55",
                "toLine": "69",
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getPrimary2()\n     */\n    protected ColorUIResource getPrimary2() { return primary2; }\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getPrimary3()\n     */\n    protected ColorUIResource getPrimary3() { return primary3; }\n\n    // these are gray in Metal Default Theme\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getSecondary1()\n     */\n    protected ColorUIResource getSecondary1() { return secondary1; }\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getSecondary2()\n     */\n    protected ColorUIResource getSecondary2() { return secondary2; }\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getSecondary3()\n     */\n    protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getPrimary1() { return themeColors.getPrimary1(); }\n\n    protected ColorUIResource getPrimary2() { return themeColors.getPrimary2(); }\n\n    protected ColorUIResource getPrimary3() { return themeColors.getPrimary3(); }\n\n    protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }\n\n    protected ColorUIResource getSecondary2() { return themeColors.getSecondary2(); }\n\n    protected ColorUIResource getSecondary3() { return themeColors.getSecondary3(); }"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": "49",
                "toLine": "51",
                "oldContent": "private FigLine lineFig;\n    private FigRect rectFig;",
                "newContent": "private LineRectPair lineRectPair;"
            },
            {
                "fromLine": "73",
                "toLine": "76",
                "oldContent": "initialize(bounds.x, bounds.y);",
                "newContent": "initialize(bounds);"
            },
            {
                "fromLine": "78",
                "toLine": "87",
                "oldContent": "private void initialize(int x, int y) {\n        activations = new LinkedList<FigActivation>();\n        stackedActivations = new LinkedList<FigActivation>();\n        \n        rectFig = new FigRect(x, y, WIDTH, HEIGHT); \n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        lineFig = new FigLine(x + WIDTH / 2, y, \n                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);",
                "newContent": "private void initialize(Rectangle bounds) {\n        activations = new LinkedList<FigActivation>();\n        stackedActivations = new LinkedList<FigActivation>();\n        \n        lineRectPair = new LineRectPair(bounds, LINE_COLOR, WIDTH, HEIGHT);"
            },
            {
                "fromLine": "90",
                "toLine": "94",
                "oldContent": "lineFig.setDashed(true);\n        lineFig.setLineWidth(LINE_WIDTH);\n        \n        addFig(rectFig);\n        addFig(lineFig);",
                "newContent": "lineRectPair.getLineFig().setDashed(true);\n        lineRectPair.getLineFig().setLineWidth(LINE_WIDTH);\n        \n        addFig(lineRectPair.getRectFig());\n        addFig(lineRectPair.getLineFig());"
            },
            {
                "fromLine": "116",
                "toLine": "118",
                "oldContent": "currentActivation = createActivationFig(\n                    getOwner(),\n                    lineFig.getX(),",
                "newContent": "currentActivation = createActivationFig(\n                    getOwner(),\n                    lineRectPair.getLineFig().getX(),"
            },
            {
                "fromLine": "128",
                "toLine": "130",
                "oldContent": "ySender = figMessage.getFinalY();\n                        currentActivation = createActivationFig(\n                                getOwner(),",
                "newContent": "ySender = figMessage.getFinalY();\n                        currentActivation = createActivationFig(\n                                getOwner(),"
            },
            {
                "fromLine": "132",
                "toLine": "134",
                "oldContent": "lineFig.getX(),\n                                ySender, \n                                0, ",
                "newContent": "lineRectPair.getLineFig().getX(),\n                                ySender, \n                                0, "
            },
            {
                "fromLine": "144",
                "toLine": "146",
                "oldContent": "lineFig.getX(),\n                                    lineFig.getY(),",
                "newContent": "lineRectPair.getLineFig().getX(),\n                                    lineRectPair.getLineFig().getY(),"
            },
            {
                "fromLine": "152",
                "toLine": "154",
                "oldContent": "lineFig.getX(),\n                                    lineFig.getY(),",
                "newContent": "lineRectPair.getLineFig().getX(),\n                                    lineRectPair.getLineFig().getY(),"
            },
            {
                "fromLine": "160",
                "toLine": "162",
                "oldContent": "lineFig.getX(),\n                                    lineFig.getY(),",
                "newContent": "lineRectPair.getLineFig().getX(),\n                                    lineRectPair.getLineFig().getY(),"
            },
            {
                "fromLine": "218",
                "toLine": "218",
                "oldContent": "lineFig.setHeight(ySender - getY());",
                "newContent": "lineRectPair.getLineFig().setHeight(ySender - getY());"
            },
            {
                "fromLine": "244",
                "toLine": "244",
                "oldContent": "lineFig.getX() - FigActivation.DEFAULT_WIDTH / 2,",
                "newContent": "lineRectPair.getLineFig().getX() - FigActivation.DEFAULT_WIDTH / 2,"
            },
            {
                "fromLine": "250",
                "toLine": "250",
                "oldContent": "getHeight() - (currentActivation.getY() - getY()));",
                "newContent": "lineRectPair.getLineRect().height - (currentActivation.getY() - getY()));"
            },
            {
                "fromLine": "284",
                "toLine": "284",
                "oldContent": "lineRectPair.getLineFig().setLineWidth(w);",
                "newContent": "lineFig.setLineWidth(w);"
            },
            {
                "fromLine": "289",
                "toLine": "295",
                "oldContent": "rectFig.setBounds(x, y, w, h);\n        lineFig.setBounds(x + w / 2, y, w, h);",
                "newContent": "lineRectPair.setBounds(x, y, w, h);"
            },
            {
                "fromLine": "300",
                "toLine": "300",
                "oldContent": "lineFig.getHeight() == oldBounds.height) {",
                "newContent": "lineRectPair.getLineFig().getHeight() == oldBounds.height) {"
            },
            {
                "fromLine": "306",
                "toLine": "306",
                "oldContent": "lineFig.getX() - FigActivation.DEFAULT_WIDTH / 2,",
                "newContent": "lineRectPair.getLineFig().getX() - FigActivation.DEFAULT_WIDTH / 2,"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColors {\n\n    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 = new ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 = new ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 = new ColorUIResource(204, 204, 204);\n\n    public ColorUIResource getPrimary1() { return primary1; }\n\n    public ColorUIResource getPrimary2() { return primary2; }\n\n    public ColorUIResource getPrimary3() { return primary3; }\n\n    public ColorUIResource getSecondary1() { return secondary1; }\n\n    public ColorUIResource getSecondary2() { return secondary2; }\n\n    public ColorUIResource getSecondary3() { return secondary3; }\n}\n",
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/LineRectPair.java": "package org.argouml.sequence2.diagram;\n\nimport java.awt.Color;\nimport java.awt.Rectangle;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\npublic class LineRectPair {\n\n    private FigLine lineFig;\n    private FigRect rectFig;\n\n    public LineRectPair(Rectangle bounds, Color lineColor, int width, int height) {\n        rectFig = new FigRect(bounds.x, bounds.y, width, height);\n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        lineFig = new FigLine(bounds.x + width / 2, bounds.y,\n                bounds.x + width / 2, bounds.y + height, lineColor);\n    }\n\n    public void setBounds(int x, int y, int w, int h) {\n        rectFig.setBounds(x, y, w, h);\n        lineFig.setBounds(x + w / 2, y, w, h);\n    }\n\n    public FigLine getLineFig() {\n        return lineFig;\n    }\n\n    public FigRect getRectFig() {\n        return rectFig;\n    }\n\n    public Rectangle getLineRect() {\n        return new Rectangle(lineFig.getX(), lineFig.getY(), lineFig.getWidth(), lineFig.getHeight());\n    }\n}\n"
    }
}