"
{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 58,
                "toLine": 64,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColor primary = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": 66,
                "toLine": 72,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColor secondary = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": 74,
                "toLine": 82,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final ThemeFont themeFont = new ThemeFont(\"SansSerif\", \"Dialog\", 14, 12);"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 58,
                "toLine": 64,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColor primary = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": 66,
                "toLine": 72,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColor secondary = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": 74,
                "toLine": 82,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final ThemeFont themeFont = new ThemeFont(\"SansSerif\", \"Dialog\", 16, 14);"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 122,
                "toLine": 126,
                "oldContent": "FigLifeLine(Object owner, Rectangle bounds, DiagramSettings settings) {\n        super(owner, settings);\n        initialize(bounds.x, bounds.y);\n    }",
                "newContent": "FigLifeLine(Object owner, LifeLineProperties properties, DiagramSettings settings) {\n        super(owner, settings);\n        initialize(properties.getX(), properties.getY());\n    }"
            },
            {
                "fromLine": 128,
                "toLine": 136,
                "oldContent": "private void initialize(int x, int y) {\n        activations = new LinkedList<FigActivation>();\n        stackedActivations = new LinkedList<FigActivation>();\n        \n        rectFig = new FigRect(x, y, WIDTH, HEIGHT); \n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        lineFig = new FigLine(x + WIDTH / 2, y, \n                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);",
                "newContent": "private void initialize(int x, int y) {\n        LifeLineProperties properties = new LifeLineProperties(x, y, WIDTH, HEIGHT, LINE_COLOR, LINE_WIDTH);\n        activations = new LinkedList<FigActivation>();\n        stackedActivations = new LinkedList<FigActivation>();\n        \n        rectFig = properties.createFigRect();\n        lineFig = properties.createFigLine();"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColor.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColor {\n    private final ColorUIResource color1;\n    private final ColorUIResource color2;\n    private final ColorUIResource color3;\n\n    public ThemeColor(int colorBase, int colorMedium, int colorLight) {\n        this.color1 = new ColorUIResource(colorBase, colorBase, colorBase + 51);\n        this.color2 = new ColorUIResource(colorMedium, colorMedium, colorMedium + 51);\n        this.color3 = new ColorUIResource(colorLight, colorLight, colorLight + 51);\n    }\n\n    public ColorUIResource getColor1() {\n        return color1;\n    }\n\n    public ColorUIResource getColor2() {\n        return color2;\n    }\n\n    public ColorUIResource getColor3() {\n        return color3;\n    }\n}",
        "src/argouml-app/src/org/argouml/ui/ThemeFont.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFont {\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFont(String controlAndWindowFontFamily, String systemAndSmallFontFamily, int controlAndWindowFontSize, int smallFontSize) {\n        this.controlFont = new FontUIResource(controlAndWindowFontFamily, Font.PLAIN, controlAndWindowFontSize);\n        this.systemFont = new FontUIResource(systemAndSmallFontFamily, Font.PLAIN, controlAndWindowFontSize);\n        this.windowTitleFont = new FontUIResource(controlAndWindowFontFamily, Font.BOLD, controlAndWindowFontSize);\n        this.userFont = new FontUIResource(controlAndWindowFontFamily, Font.PLAIN, controlAndWindowFontSize);\n        this.smallFont = new FontUIResource(systemAndSmallFontFamily, Font.PLAIN, smallFontSize);\n    }\n\n    public FontUIResource getControlFont() {\n        return controlFont;\n    }\n\n    public FontUIResource getSystemFont() {\n        return systemFont;\n    }\n\n    public FontUIResource getWindowTitleFont() {\n        return windowTitleFont;\n    }\n\n    public FontUIResource getUserFont() {\n        return userFont;\n    }\n\n    public FontUIResource getSmallFont() {\n        return smallFont;\n    }\n}",
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/LifeLineProperties.java": "package org.argouml.sequence2.diagram;\n\nimport java.awt.Rectangle;\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\npublic class LifeLineProperties {\n    private final int x;\n    private final int y;\n    private final int width;\n    private final int height;\n    private final DiagramSettings settings;\n    private final java.awt.Color lineColor;\n    private final int lineWidth;\n\n    public LifeLineProperties(int x, int y, int width, int height, java.awt.Color lineColor, int lineWidth) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.settings = settings;\n        this.lineColor = lineColor;\n        this.lineWidth = lineWidth;\n    }\n\n    public int getX() {\n        return x;\n    }\n\n    public int getY() {\n        return y;\n    }\n\n    public FigRect createFigRect() {\n        FigRect rectFig = new FigRect(x, y, width, height);\n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        return rectFig;\n    }\n\n    public FigLine createFigLine() {\n        FigLine lineFig = new FigLine(x + width / 2, y, x + width / 2, y + height, lineColor);\n        lineFig.setDashed(true);\n        lineFig.setLineWidth(lineWidth);\n        return lineFig;\n    }\n}"   
    }
}"