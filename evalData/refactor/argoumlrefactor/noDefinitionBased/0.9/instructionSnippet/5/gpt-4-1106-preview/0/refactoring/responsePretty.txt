refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		38",
		toLine:"		75",
		oldContent:"
		public class JasonsBigTheme extends MetalTheme {
		
		    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);
		
		    private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 14);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 12);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */		
",
		newContent:"
		public class JasonsBigTheme extends MetalTheme {
		
		    private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);
		    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);
		
		    private final ThemeFonts themeFonts = new ThemeFonts(new Font("SansSerif", Font.PLAIN, 14), new Font("Dialog", Font.PLAIN, 14), new Font("SansSerif", Font.BOLD, 14), new Font("SansSerif", Font.PLAIN, 14), new Font("Dialog", Font.PLAIN, 12));
		
		    /*		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		38",
		toLine:"		75",
		oldContent:"
		public class JasonsHugeTheme extends MetalTheme {
		
		    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);
		
		    private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 16);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 16);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */		
",
		newContent:"
		public class JasonsHugeTheme extends MetalTheme {
		
		    private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);
		    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);
		
		    private final ThemeFonts themeFonts = new ThemeFonts(new Font("SansSerif", Font.BOLD, 16), new Font("Dialog", Font.PLAIN, 16), new Font("SansSerif", Font.BOLD, 16), new Font("SansSerif", Font.PLAIN, 16), new Font("Dialog", Font.PLAIN, 14));
		
		    /*		
",
,

	],
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:"		40",
		toLine:"		53",
		oldContent:"
		import org.tigris.gef.presentation.FigLine;
		import org.tigris.gef.presentation.FigRect;		
",
		newContent:"
		import org.tigris.gef.presentation.FigLine;
		import org.tigris.gef.presentation.FigRect; 
		import org.argouml.sequence2.diagram.FigBounds;		
",
,
		fromLine:"		249",
		toLine:"		262",
		oldContent:"
		private FigActivation createActivationFig(
		            final Object owner, 
		            final int x, 
		            final int y, 
		            final int w, 
		            final int h,
		            final DiagramSettings settings,
		            final FigMessage messageFig) {
		        return new FigActivation(
		                owner,
		                new Rectangle(x, y, w, h),		
",
		newContent:"
		private FigActivation createActivationFig(
		            final Object owner,
		            final FigBounds bounds,
		            final DiagramSettings settings,
		            final FigMessage messageFig) {
		        return new FigActivation(
		                owner,
		                bounds.toRectangle(),		
",
,

	],
	src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java:
	[
		fromLine:"		13",
		toLine:"		22",
		oldContent:"
		import org.tigris.gef.presentation.FigGroup;
		import org.tigris.gef.presentation.FigNode;		
",
		newContent:"
		import org.tigris.gef.presentation.FigGroup;
		import org.tigris.gef.presentation.FigNode;
		import org.argouml.activity2.diagram.FigBounds;		
",
,
		fromLine:"		74",
		toLine:"		87",
		oldContent:"
		protected void setBoundsImpl(
		            final int x,
		            final int y,
		            final int w,
		            final int h) {
		
		        _x = x;
		        _y = y;
		        _w = w;
		        _h = h;		
",
		newContent:"
		protected void setBoundsImpl(FigBounds bounds) {
		        _x = bounds.getX();
		        _y = bounds.getY();
		        _w = bounds.getWidth();
		        _h = bounds.getHeight();		
",
,

	],

}
extractedClasses:
{
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigBounds.java:"
	package org.argouml.sequence2.diagram;
	
	import java.awt.Rectangle;
	
	public class FigBounds {
	
	    private int x;
	    private int y;
	    private int width;
	    private int height;
	
	    public FigBounds(int x, int y, int width, int height) {
	        this.x = x;
	        this.y = y;
	        this.width = width;
	        this.height = height;
	    }
	
	    public Rectangle toRectangle() {
	        return new Rectangle(x, y, width, height);
	    }
	
	    // Getters and setters
	    public int getX() { return x; }
	    public int getY() { return y; }
	    public int getWidth() { return width; }
	    public int getHeight() { return height; }
	
	    // Other methods depending on the requirements
	}
		
",
	src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBounds.java:"
	package org.argouml.activity2.diagram;
	
	public class FigBounds {
	
	    private int x;
	    private int y;
	    private int width;
	    private int height;
	
	    public FigBounds(int x, int y, int width, int height) {
	        this.x = x;
	        this.y = y;
	        this.width = width;
	        this.height = height;
	    }
	
	    // Getters and setters
	    public int getX() { return x; }
	    public int getY() { return y; }
	    public int getWidth() { return width; }
	    public int getHeight() { return height; }
	
	    // Other methods depending on the requirements
	}
		
",
	src/argouml-app/src/org/argouml/ui/ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	
	    private ColorUIResource primary;
	    private ColorUIResource secondary;
	    private ColorUIResource tertiary;
	
	    public ThemeColors(int r, int g, int b) {
	        this.primary = new ColorUIResource(r, g, b);
	        this.secondary = new ColorUIResource(r + 51, g + 51, b + 51);
	        this.tertiary = new ColorUIResource(r + 102, g + 102, b + 102);
	    }
	    // Methods for primary, secondary, tertiary colors
	}
		
",
	src/argouml-app/src/org/argouml/ui/ThemeFonts.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFonts {
	
	    private FontUIResource controlFont;
	    private FontUIResource systemFont;
	    private FontUIResource windowTitleFont;
	    private FontUIResource userFont;
	    private FontUIResource smallFont;
	
	    public ThemeFonts(Font control, Font system, Font windowTitle, Font user, Font small) {
	        this.controlFont = new FontUIResource(control);
	        this.systemFont = new FontUIResource(system);
	        this.windowTitleFont = new FontUIResource(windowTitle);
	        this.userFont = new FontUIResource(user);
	        this.smallFont = new FontUIResource(small);
	    }
	    // Methods for accessing font resources
	}
		
",

}
