{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 38,
                "toLine": 75,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);\n\n    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 153);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);\n\n    private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 12, 14);"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 38,
                "toLine": 75,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);\n\n    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 153);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);\n\n    private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 14, 16);"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 40,
                "toLine": 53,
                "oldContent": "import java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.argouml.uml.diagram.ui.ArgoFigGroup;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;",
                "newContent": "import java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.argouml.uml.diagram.ui.ArgoFigGroup;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\nimport org.argouml.sequence2.diagram.FigSize;"
            },
            {
                "fromLine": 249,
                "toLine": 262,
                "oldContent": "return new FigActivation(\n                owner,\n                new Rectangle(x, y, w, h),",
                "newContent": "return new FigActivation(owner, new FigSize(x, y, w, h),"
            }
        ],
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": 13,
                "toLine": 22,
                "oldContent": "import java.awt.Dimension;\nimport java.awt.Rectangle;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;",
                "newContent": "import java.awt.Dimension;\nimport java.awt.Rectangle;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;\nimport org.argouml.activity2.diagram.FigBounds;"
            },
            {
                "fromLine": 74,
                "toLine": 87,
                "oldContent": "_x = x;\n        _y = y;\n        _w = w;\n        _h = h;",
                "newContent": "FigBounds bounds = new FigBounds(x, y, w, h);\n        _x = bounds.getX();\n        _y = bounds.getY();\n        _w = bounds.getWidth();\n        _h = bounds.getHeight();"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigSize.java": "package org.argouml.sequence2.diagram;\n\npublic final class FigSize {\n    private final int x;\n    private final int y;\n    private final int w;\n    private final int h;\n\n    public FigSize(int x, int y, int w, int h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n\n    public int getX() {\n        return x;\n    }\n\n    public int getY() {\n        return y;\n    }\n\n    public int getWidth() {\n        return w;\n    }\n\n    public int getHeight() {\n        return h;\n    }\n}",
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBounds.java": "package org.argouml.activity2.diagram;\n\npublic final class FigBounds {\n    private final int x;\n    private final int y;\n    private final int width;\n    private final int height;\n\n    public FigBounds(int x, int y, int width, int height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    public int getX() {\n        return x;\n    }\n\n    public int getY() {\n        return y;\n    }\n\n    public int getWidth() {\n        return width;\n    }\n\n    public int getHeight() {\n        return height;\n    }\n}",
        "src/argouml-app/src/org/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic final class ThemeColors {\n    private final ColorUIResource color1;\n    private final ColorUIResource color2;\n    private final ColorUIResource color3;\n\n    public ThemeColors(int base, int offset) {\n        this.color1 = new ColorUIResource(base, base, base + offset);\n        this.color2 = new ColorUIResource(base + offset, base + offset, base + 2 * offset);\n        this.color3 = new ColorUIResource(base + 2 * offset, base + 2 * offset, base + 3 * offset);\n    }\n\n    // Getter methods for colors can be added here\n}",
        "src/argouml-app/src/org/argouml/ui/ThemeFonts.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic final class ThemeFonts {\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(String controlFontFamily, String systemFontFamily, int smallFontSize, int regularFontSize) {\n        this.controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, regularFontSize);\n        this.systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, regularFontSize);\n        this.windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, regularFontSize);\n        this.userFont = new FontUIResource(controlFontFamily, Font.PLAIN, regularFontSize);\n        this.smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallFontSize);\n    }\n\n    // Getter methods for fonts can be added here\n}"
    }
}