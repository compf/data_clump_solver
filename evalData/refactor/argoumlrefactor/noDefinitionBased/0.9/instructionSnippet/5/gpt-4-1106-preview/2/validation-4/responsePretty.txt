"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 48,
                "toLine": 50,
                "oldContent": "    private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);\n    \n    private final ThemeColors secondaryColors = new ThemeColors(102, 102, 102, 153, 153, 153, 204, 204, 204);\n",
                "newContent": "    private final ThemeColor primaryColors;\n    private final ThemeColor secondaryColors;\n\n    public JasonsHugeTheme() {\n        primaryColors = new ThemeColor(102, 102, 153);\n        secondaryColors = new ThemeColor(102, 102, 102);\n    }\n"
            },
            {
                "fromLine": 52,
                "toLine": 55,
                "oldContent": "    public String getName() { return \"Very Large Fonts\"; }\n    private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 16, 14);\n    protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }\n",
                "newContent": "    public String getName() { return \"Very Large Fonts\"; }\n    private final ThemeFonts themeFonts;\n\n    public JasonsHugeTheme() {\n        themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 16, 12);\n    }\n    protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 48,
                "toLine": 50,
                "oldContent": "    private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);\n    \n    private final ThemeColors secondaryColors = new ThemeColors(102, 102, 102, 153, 153, 153, 204, 204, 204);\n",
                "newContent": "    private final ThemeColor primaryColors;\n    private final ThemeColor secondaryColors;\n\n    public JasonsBigTheme() {\n        primaryColors = new ThemeColor(102, 102, 153);\n        secondaryColors = new ThemeColor(102, 102, 102);\n    }\n"
            },
            {
                "fromLine": 52,
                "toLine": 55,
                "oldContent": "    public String getName() { return \"Large Fonts\"; }\n    private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 14, 12);\n    protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }\n",
                "newContent": "    public String getName() { return \"Large Fonts\"; }\n    private final ThemeFonts themeFonts;\n\n    public JasonsBigTheme() {\n        themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 14, 10);\n    }\n    protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }\n"
            }
        ]
    },
    "extractedClasses": {
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/org/argouml/ui/ThemeColor.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColor {\n\n    private ColorUIResource primary, secondary, tertiary;\n\n    public ThemeColor(int red, int green, int blue) {\n        this.primary = new ColorUIResource(red, green, blue);\n        this.secondary = new ColorUIResource(red * 2 / 3, green * 2 / 3, blue * 2 / 3);\n        this.tertiary = new ColorUIResource(red * 1 / 3, green * 1 / 3, blue * 1 / 3);\n    }\n\n    public ColorUIResource getPrimary() {\n        return primary;\n    }\n\n    public ColorUIResource getSecondary() {\n        return secondary;\n    }\n\n    public ColorUIResource getTertiary() {\n        return tertiary;\n    }\n}\n",
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/org/argouml/ui/ThemeFonts.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFonts {\n\n    private FontUIResource controlFont, systemFont, userFont, smallFont, windowTitleFont;\n\n    public ThemeFonts(String controlFontFamily, String systemFontFamily, int largeSize, int smallSize) {\n        this.controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, largeSize);\n        this.systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, largeSize);\n        this.userFont = new FontUIResource(controlFontFamily, Font.PLAIN, largeSize);\n        this.smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallSize);\n        this.windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, largeSize + 2);\n    }\n\n    public FontUIResource getControlFont() {\n        return controlFont;\n    }\n\n    public FontUIResource getSystemFont() {\n        return systemFont;\n    }\n\n    public FontUIResource getUserFont() {\n        return userFont;\n    }\n\n    public FontUIResource getSmallFont() {\n        return smallFont;\n    }\n\n    public FontUIResource getWindowTitleFont() {\n        return windowTitleFont;\n    }\n}\n"
    }
}"