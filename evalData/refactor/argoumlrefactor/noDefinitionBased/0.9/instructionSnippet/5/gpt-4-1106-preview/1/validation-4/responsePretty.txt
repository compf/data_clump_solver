refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:"		40",
		toLine:"		52",
		oldContent:"
		
		package org.argouml.sequence2.diagram;
		
		import java.util.Collections;
		import java.util.LinkedList;
		import java.util.List;
		
		import org.argouml.uml.diagram.DiagramSettings;
		import org.argouml.uml.diagram.ui.ArgoFigGroup;
		import org.tigris.gef.presentation.FigLine;
		import org.tigris.gef.presentation.FigRect;
		
				
",
		newContent:"
		
		package org.argouml.sequence2.diagram;
		
		import java.awt.Rectangle;
		import java.util.Collections;
		import java.util.LinkedList;
		import java.util.List;
		
		import org.argouml.uml.diagram.DiagramSettings;
		import org.argouml.uml.diagram.ui.ArgoFigGroup;
		import org.tigris.gef.presentation.FigLine;
		import org.tigris.gef.presentation.FigRect;
		
				
",
,
		fromLine:"		124",
		toLine:"		134",
		oldContent:"
		        
		        // Check here if there are no incoming call actions
		        // if not then create an activation at the top of the lifeline
		        FigActivation currentActivation = null;
		        if (!hasIncomingCallActionFirst(figMessages)) {
		            currentActivation = createActivationFig(
		                    getOwner(),
		                    lineFig.getX(),
		                    lineFig.getY(), 
		                    lineFig.getWidth(), 
		                    lineFig.getHeight(),		
",
		newContent:"
		        
		        // Check here if there are no incoming call actions
		        // if not then create an activation at the top of the lifeline
		        FigActivation currentActivation = null;
		        if (!hasIncomingCallActionFirst(figMessages)) {
		            currentActivation = createActivationFig(
		                    getOwner(),
		                    new Rectangle(lineFig.getX(), lineFig.getY(), lineFig.getWidth(), lineFig.getHeight()),		
",
,
		fromLine:"		151",
		toLine:"		161",
		oldContent:"
		                    if (currentActivation == null) {
		                        if (figMessage.isSynchCallMessage()) {
		                            // if we are the dest and is a call action, create the 
		                            // activation, but don't add it until the height is set.
		                            ySender = figMessage.getFinalY();
		                            currentActivation = createActivationFig(
		                                    getOwner(), 
		                                    lineFig.getX(), 
		                                    ySender, 
		                                    0, 
		                                    0,		
",
		newContent:"
		if (currentActivation == null) {
		                        if (figMessage.isSynchCallMessage()) {
		                            // if we are the dest and is a call action, create the 
		                            // activation, but don't add it until the height is set.
		                            ySender = figMessage.getFinalY();
		                            currentActivation = createActivationFig(
		                                    getOwner(), 
		                                    new Rectangle(lineFig.getX(), ySender, 0, 0),		
",
,
		fromLine:"		163",
		toLine:"		173",
		oldContent:"
		                                    figMessage);
		                            activationsCount++;
		                        } else if (figMessage.isCreateMessage()) {
		                            // if we are the destination of a create action,
		                            // create the entire activation
		                            currentActivation = createActivationFig(
		                                    getOwner(),
		                                    lineFig.getX(),
		                                    lineFig.getY(),
		                                    0,
		                                    0,		
",
		newContent:"
		                                    figMessage);
		                            activationsCount++;
		                        } else if (figMessage.isCreateMessage()) {
		                            // if we are the destination of a create action,
		                            // create the entire activation
		                            currentActivation = createActivationFig(
		                                    getOwner(),
		                                    new Rectangle(lineFig.getX(), lineFig.getY(), 0, 0),		
",
,
		fromLine:"		274",
		toLine:"		284",
		oldContent:"
		            // activation, but don't add it until the height is set.
		            if (figMessage.isSelfMessage()) {
		                if (figMessage.isSynchCallMessage()) {
		                    ySender = figMessage.getFinalY();
		                    currentAct = new FigActivation(figMessage.getOwner(),
		                            new Rectangle(lineFig.getX()
		                                    + FigActivation.DEFAULT_WIDTH / 2, ySender,
		                                    0, 0), getSettings(), figMessage, false);
		                } else if (currentAct != null
		                        && figMessage.isReplyMessage()) {
		                    ySender = figMessage.getStartY();		
",
		newContent:"
		            // activation, but don't add it until the height is set.
		            if (figMessage.isSelfMessage()) {
		                if (figMessage.isSynchCallMessage()) {
		                    ySender = figMessage.getFinalY();
		                    currentAct = createActivationFig(figMessage.getOwner(),
		                            new Rectangle(lineFig.getX() + FigActivation.DEFAULT_WIDTH / 2, ySender, 0, 0),
		                            getSettings(), figMessage);
		                } else if (currentAct != null && figMessage.isReplyMessage()) {
		                    ySender = figMessage.getStartY();		
",
,
		fromLine:"		328",
		toLine:"		338",
		oldContent:"
		    // TODO: synchronized is required here as there can be some 
		    // concurrent modification problems when drawing a call message and
		    // having that automatically draw the reply. Maybe fixing the TODO
		    // below will resolve this and the synch can go.
		    protected synchronized void setBoundsImpl(int x, int y, int w, int h) {
		        final Rectangle oldBounds = getBounds();
		        
		        rectFig.setBounds(x, y, w, h);
		        lineFig.setBounds(x + w / 2, y, w, h);
		        
		        final int yDiff = oldBounds.y - y;		
",
		newContent:"
		// TODO: synchronized is required here as there can be some 
		    // concurrent modification problems when drawing a call message and
		    // having that automatically draw the reply. Maybe fixing the TODO
		    // below will resolve this and the synch can go.
		    protected synchronized void setBoundsImpl(int x, int y, int w, int h) {
		        Rectangle oldBounds = getBounds();
		        
		        rectFig.setBounds(x, y, w, h);
		        lineFig.setBounds(x + w / 2, y, 0, h);
		        
		        int yDiff = oldBounds.y - y;		
",
,

	],

}
