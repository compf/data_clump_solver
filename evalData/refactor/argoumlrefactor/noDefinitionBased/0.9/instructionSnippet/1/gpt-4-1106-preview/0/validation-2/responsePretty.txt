refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/ThemeFonts.java:
	[
		fromLine:"		7",
		toLine:"		8",
		oldContent:"
		    public FontUIResource getControlFont() { /* implementation */ }
				
",
		newContent:"
		    public FontUIResource getControlFont() { return controlFont; }
				
",
,
		fromLine:"		8",
		toLine:"		9",
		oldContent:"
		    public FontUIResource getSystemFont() { /* implementation */ }
				
",
		newContent:"
		    public FontUIResource getSystemFont() { return systemFont; }
				
",
,
		fromLine:"		9",
		toLine:"		10",
		oldContent:"
		    public FontUIResource getUserFont() { /* implementation */ }
				
",
		newContent:"
		    public FontUIResource getUserFont() { return userFont; }
				
",
,
		fromLine:"		10",
		toLine:"		11",
		oldContent:"
		    public FontUIResource getSmallFont() { /* implementation */ }
				
",
		newContent:"
		    public FontUIResource getSmallFont() { return smallFont; }
				
",
,
		fromLine:"		11",
		toLine:"		12",
		oldContent:"
		    public FontUIResource getWindowTitleFont() { /* implementation */ }
				
",
		newContent:"
		    public FontUIResource getWindowTitleFont() { return windowTitleFont; }
				
",
,

	],
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		48",
		toLine:"		55",
		oldContent:"
		    private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);
		    private final ThemeColors secondaryColors = new ThemeColors(102, 102, 102, 153, 153, 153, 204, 204, 204);
		
		    private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 16, 14);
				
",
		newContent:"
		    private final ThemeColors primaryColors = new ThemeColors();
		    private final ThemeColors secondaryColors = new ThemeColors();
		
		    private final ThemeFonts themeFonts = new ThemeFonts();
				
",
,

	],
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		48",
		toLine:"		55",
		oldContent:"
		    private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);
		    private final ThemeColors secondaryColors = new ThemeColors(102, 102, 102, 153, 153, 153, 204, 204, 204);
		
		    private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 14, 12);
				
",
		newContent:"
		    private final ThemeColors primaryColors = new ThemeColors();
		    private final ThemeColors secondaryColors = new ThemeColors();
		
		    private final ThemeFonts themeFonts = new ThemeFonts();
				
",
,

	],

}
extractedClasses:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	    //... existing content ...
	
	    // Constructors should have an empty body or valid implementation
	    public ThemeColors() {
	        // Implement constructor logic if necessary
	    }
	
	    // Methods should return actual values
	    public ColorUIResource getPrimary1() { /* complete this implementation */ }
	    public ColorUIResource getPrimary2() { /* complete this implementation */ }
	    public ColorUIResource getPrimary3() { /* complete this implementation */ }
	    public ColorUIResource getSecondary1() { /* complete this implementation */ }
	    public ColorUIResource getSecondary2() { /* complete this implementation */ }
	    public ColorUIResource getSecondary3() { /* complete this implementation */ }
	}	
",
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/ThemeFonts.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFonts {
	    //... existing content ...
	
	    // Fields for font values
	    private FontUIResource controlFont = new FontUIResource("SansSerif", Font.PLAIN, 12);
	    private FontUIResource systemFont = new FontUIResource("Dialog", Font.PLAIN, 12);
	    private FontUIResource userFont = new FontUIResource("SansSerif", Font.PLAIN, 12);
	    private FontUIResource smallFont = new FontUIResource("Dialog", Font.PLAIN, 10);
	    private FontUIResource windowTitleFont = new FontUIResource("SansSerif", Font.BOLD, 12);
	
	    // Constructors should have an empty body or valid implementation
	    public ThemeFonts() {
	        // Implement constructor logic if necessary
	    }
	
	    // Getters should return actual fields
	    public FontUIResource getControlFont() { return controlFont; }
	    public FontUIResource getSystemFont() { return systemFont; }
	    public FontUIResource getUserFont() { return userFont; }
	    public FontUIResource getSmallFont() { return smallFont; }
	    public FontUIResource getWindowTitleFont() { return windowTitleFont; }
	}	
",

}
