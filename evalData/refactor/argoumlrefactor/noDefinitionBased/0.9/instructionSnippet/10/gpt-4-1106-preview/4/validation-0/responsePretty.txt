refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		48",
		toLine:"		68",
		oldContent:"
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsBigTheme extends MetalTheme {
		
		    private final FontTheme fontTheme = new FontTheme(Font.PLAIN, 14, Font.BOLD, 12);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */
		    public String getName() { return "Large Fonts"; }
		     */
		    protected ColorUIResource getPrimary1() { return primary1; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary2()
		     */
		    protected ColorUIResource getPrimary2() { return primary2; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary3()
		     */		
",
		newContent:"
		
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsBigTheme extends MetalTheme {
		
		    private final FontTheme fontTheme = new FontTheme(Font.PLAIN, 14, Font.BOLD, 12);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */
		    public String getName() { return "Large Fonts"; }
		
		    // Primary colors
		    protected ColorUIResource getPrimary1() { return fontTheme.getPrimary1(); }
		    protected ColorUIResource getPrimary2() { return fontTheme.getPrimary2(); }
		    protected ColorUIResource getPrimary3() { return fontTheme.getPrimary3(); }
		}		
",
,

	],
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		48",
		toLine:"		68",
		oldContent:"
		
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsHugeTheme extends MetalTheme {
		
		    private final FontTheme fontTheme = new FontTheme(Font.BOLD, 16, Font.PLAIN, 14);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */
		    public String getName() { return "Very Large Fonts"; }
		     */
		    protected ColorUIResource getPrimary1() { return primary1; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary2()
		     */
		    protected ColorUIResource getPrimary2() { return primary2; }
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary3()
		     */
		    protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsHugeTheme extends MetalTheme {
		
		    private final FontTheme fontTheme = new FontTheme(Font.BOLD, 16, Font.PLAIN, 14);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */
		    public String getName() { return "Very Large Fonts"; }
		
		    // Primary colors
		    protected ColorUIResource getPrimary1() { return fontTheme.getPrimary1(); }
		    protected ColorUIResource getPrimary2() { return fontTheme.getPrimary2(); }
		    protected ColorUIResource getPrimary3() { return fontTheme.getPrimary3(); }
		}		
",
,

	],

}
extractedClasses:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/theme/FontTheme.java:"
	package org.argouml.ui.theme;
	
	import java.awt.Font;
	import javax.swing.plaf.ColorUIResource;
	import javax.swing.plaf.FontUIResource;
	
	public class FontTheme {
	
	    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
	    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
	    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    public FontTheme(int controlFontStyle, int controlFontSize, int windowTitleFontStyle, int smallFontSize) {
	        controlFont = new FontUIResource("SansSerif", controlFontStyle, controlFontSize);
	        systemFont = new FontUIResource("Dialog", Font.PLAIN, controlFontSize);
	        windowTitleFont = new FontUIResource("SansSerif", windowTitleFontStyle, controlFontSize);
	        userFont = new FontUIResource("SansSerif", Font.PLAIN, controlFontSize);
	        smallFont = new FontUIResource("Dialog", Font.PLAIN, smallFontSize);
	    }
	
	    public ColorUIResource getPrimary1() { return primary1; }
	    public ColorUIResource getPrimary2() { return primary2; }
	    public ColorUIResource getPrimary3() { return primary3; }
	
	    // Additional methods like getters can be added here if needed
	}	
",

}
