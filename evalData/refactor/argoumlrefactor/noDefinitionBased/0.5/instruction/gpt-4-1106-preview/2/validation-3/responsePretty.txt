refactorings:
{
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		addActivations(activations);		
",
		newContent:"
		addActivations(lifeLineFigures.getActivations());		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		addActivations(stackedActivations);		
",
		newContent:"
		addActivations(lifeLineFigures.getStackedActivations());		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		currentActivation = createActivationFig(		
",
		newContent:"
		// currentActivation = createActivationFig(		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		if (lifeLineFigures.getActivations().size() == 1 		
",
		newContent:"
		if (lifeLineFigures.getActivations().size() == 1 		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		&& act.getHeight() == oldBounds.height) {		
",
		newContent:"
		&& act.getHeight() == oldBounds.height) {		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		for (FigActivation act : new ArrayList<>(lifeLineFigures.getActivations())) {		
",
		newContent:"
		for (FigActivation act : new LinkedList<>(lifeLineFigures.getActivations())) {		
",
,

	],

}
extractedClasses:
{
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/LifeLineFigures.java:"
	package org.argouml.sequence2.diagram;
	
	import org.tigris.gef.presentation.FigLine;
	import org.tigris.gef.presentation.FigRect;
	
	import java.util.LinkedList;
	import java.util.List;
	
	public class LifeLineFigures {
	    private FigLine lineFig;
	    private FigRect rectFig;
	    private List<FigActivation> activations;
	    private List<FigActivation> stackedActivations;
	    public static final int WIDTH = 150;
	    public static final int HEIGHT = 500;
	
	    public LifeLineFigures() {
	        activations = new LinkedList<>();
	        stackedActivations = new LinkedList<>();
	    }
	
	    public void setActivations(List<FigActivation> acts) { this.activations = acts; }
	    public List<FigActivation> getActivations() { return activations; }
	    public void setStackedActivations(List<FigActivation> acts) { this.stackedActivations = acts; }
	    public List<FigActivation> getStackedActivations() { return stackedActivations; }
	    public void clearActivations() { this.activations.clear(); }
	    public void clearStackedActivations() { this.stackedActivations.clear(); }
	
	    public void setLineFig(FigLine fig) { this.lineFig = fig; }
	    public FigLine getLineFig() { return lineFig; }
	    public void setRectFig(FigRect fig) { this.rectFig = fig; }
	    public FigRect getRectFig() { return rectFig; }
	}	
",

}
