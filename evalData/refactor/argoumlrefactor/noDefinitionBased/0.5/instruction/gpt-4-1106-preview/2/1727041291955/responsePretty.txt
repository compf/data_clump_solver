refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);		
",
		newContent:"
		private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
		private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 14);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 12);		
",
		newContent:"
		private final ThemeFont themeFonts = new ThemeFont("SansSerif", "Dialog", 14, 12);		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);		
",
		newContent:"
		private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
		private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 16);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 16);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);		
",
		newContent:"
		private final ThemeFont themeFonts = new ThemeFont("SansSerif", "Dialog", 16, 14);		
",
,

	],
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private FigLine lineFig;
		    private FigRect rectFig;
		    
		    private List<FigActivation> activations;
		    private List<FigActivation> stackedActivations;
		    
		    static final int WIDTH = 150;
		    static final int HEIGHT = 500;		
",
		newContent:"
		private LifeLineFigures lifeLineFigures = new LifeLineFigures();		
",
,

	],

}
extractedClasses:
{
	src/argouml-app/src/org/argouml/ui/ThemeColor.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColor {
	
	    private final ColorUIResource primary1;
	    private final ColorUIResource primary2;
	    private final ColorUIResource primary3;
	
	    public ThemeColor(int primary, int secondary, int tertiary) {
	        primary1 = new ColorUIResource(primary, primary, primary + 51);
	        primary2 = new ColorUIResource(secondary, secondary, secondary + 51);
	        primary3 = new ColorUIResource(tertiary, tertiary, tertiary + 51);
	    }
	
	    public ColorUIResource getPrimary1() { return primary1; }
	    public ColorUIResource getPrimary2() { return primary2; }
	    public ColorUIResource getPrimary3() { return primary3; }
	}	
",
	src/argouml-app/src/org/argouml/ui/ThemeFont.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFont {
	
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    public ThemeFont(String controlAndUserFontFamily, String systemAndSmallFontFamily, int regularSize, int smallSize) {
	        controlFont = new FontUIResource(controlAndUserFontFamily, Font.PLAIN, regularSize);
	        systemFont = new FontUIResource(systemAndSmallFontFamily, Font.PLAIN, regularSize);
	        windowTitleFont = new FontUIResource(controlAndUserFontFamily, Font.BOLD, regularSize);
	        userFont = new FontUIResource(controlAndUserFontFamily, Font.PLAIN, regularSize);
	        smallFont = new FontUIResource(systemAndSmallFontFamily, Font.PLAIN, smallSize);
	    }
	
	    public FontUIResource getControlFont() { return controlFont; }
	    public FontUIResource getSystemFont() { return systemFont; }
	    public FontUIResource getWindowTitleFont() { return windowTitleFont; }
	    public FontUIResource getUserFont() { return userFont; }
	    public FontUIResource getSmallFont() { return smallFont; }
	}	
",
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/LifeLineFigures.java:"
	package org.argouml.sequence2.diagram;
	
	import org.tigris.gef.presentation.FigLine;
	import org.tigris.gef.presentation.FigRect;
	
	import java.util.LinkedList;
	import java.util.List;
	
	public class LifeLineFigures {
	    private FigLine lineFig;
	    private FigRect rectFig;
	    private List<FigActivation> activations;
	    private List<FigActivation> stackedActivations;
	
	    public LifeLineFigures() {
	        activations = new LinkedList<FigActivation>();
	        stackedActivations = new LinkedList<FigActivation>();
	    }
	
	    // Accessor methods for lineFig, rectFig, activations, and stackedActivations
	    // Additional methods to manipulate the activations and stackedActivations
	}	
",

}
