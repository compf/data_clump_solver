refactorings:
{
	src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java:
	[
		fromLine:"		32",
		toLine:"		34",
		oldContent:"
		FigBaseNode(final Object owner, final Rectangle bounds,
		            final DiagramSettings settings) {
		        super(owner);		
",
		newContent:"
		FigBaseNode(final Object owner, final Rectangle bounds,
		            final DiagramSettings settings) {
		        super(owner);
		        presentationElements = new NodePresentationElements();
		        presentationElements.setSettings(settings);		
",
,
		fromLine:"		48",
		toLine:"		48",
		oldContent:"
		presentationElements.setDisplayState(displayState);		
",
		newContent:"
		presentationElements.setDisplayState(displayState, getOwner());		
",
,
		fromLine:"		60",
		toLine:"		60",
		oldContent:"
		return presentationElements.getDisplayState().getMinimumSize();		
",
		newContent:"
		return presentationElements.getMinimumSize();		
",
,
		fromLine:"		69",
		toLine:"		70",
		oldContent:"
		if (presentationElements.getDisplayState() != null) {
		            presentationElements.getDisplayState().setBounds(myBounds);		
",
		newContent:"
		if (presentationElements.hasDisplayState()) {
		            presentationElements.setBounds(myBounds);		
",
,

	],

}
extractedClasses:
{
	src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/NodePresentationElements.java:"
	package org.argouml.activity2.diagram;
	
	import java.awt.Dimension;
	import java.awt.Rectangle;
	import org.argouml.uml.diagram.DiagramSettings;
	
	public class NodePresentationElements {
	
	    private FigBasePresentation displayState;
	    private DiagramSettings settings;
	    private DiagramElement nameDiagramElement;
	
	    public NodePresentationElements() {}
	
	    public void setSettings(DiagramSettings settings) {
	        this.settings = settings;
	    }
	
	    public void setDisplayState(FigBasePresentation displayState, Object owner) {
	        this.displayState = displayState;
	        displayState.setOwner(owner);
	    }
	
	    public Dimension getMinimumSize() {
	        return displayState.getMinimumSize();
	    }
	
	    public boolean hasDisplayState() {
	        return displayState != null;
	    }
	
	    public void setBounds(Rectangle bounds) {
	        displayState.setBounds(bounds);
	    }
	
	    // Additional methods
	}
		
",

}
