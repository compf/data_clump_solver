refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);		
",
		newContent:"
		private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
		private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);		
",
		newContent:"
		private final ThemeFont themeFonts = new ThemeFont("SansSerif", "Dialog", 14);		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 14);		
",
		newContent:"
				
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);		
",
		newContent:"
				
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 12);		
",
		newContent:"
				
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return primaryColors.getColor1(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getPrimary2() { return primary2; }		
",
		newContent:"
		protected ColorUIResource getPrimary2() { return primaryColors.getColor2(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary3() { return primaryColors.getColor3(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getUserTextFont() { return userFont; }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getMenuTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);		
",
		newContent:"
		private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
		private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 16);		
",
		newContent:"
		private final ThemeFont themeFonts = new ThemeFont("SansSerif", "Dialog", 16);		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);		
",
		newContent:"
				
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 16);		
",
		newContent:"
				
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);		
",
		newContent:"
				
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return primaryColors.getColor1(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getPrimary2() { return primary2; }		
",
		newContent:"
		protected ColorUIResource getPrimary2() { return primaryColors.getColor2(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary3() { return primaryColors.getColor3(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getUserTextFont() { return userFont; }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getMenuTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }		
",
,
		fromLine:
{
				
}
		toLine:
{
				
}
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],

}
extractedClasses:
{
	org/argouml/ui/ThemeColor.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColor {
	
	    private final ColorUIResource color1;
	    private final ColorUIResource color2;
	    private final ColorUIResource color3;
	
	    public ThemeColor(int c1, int c2, int c3) {
	        color1 = new ColorUIResource(c1, c1, c1 + 51);
	        color2 = new ColorUIResource(c2, c2, c2 + 51);
	        color3 = new ColorUIResource(c3, c3, c3 + 51);
	    }
	
	    public ColorUIResource getColor1() {
	        return color1;
	    }
	
	    public ColorUIResource getColor2() {
	        return color2;
	    }
	
	    public ColorUIResource getColor3() {
	        return color3;
	    }
	}	
",
	org/argouml/ui/ThemeFont.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFont {
	
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	    private final FontUIResource windowTitleFont;
	
	    public ThemeFont(String controlFontName, String systemFontName, int fontSize) {
	        controlFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);
	        systemFont = new FontUIResource(systemFontName, Font.PLAIN, fontSize);
	        userFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);
	        smallFont = new FontUIResource(systemFontName, Font.PLAIN, fontSize - 2);
	        windowTitleFont = new FontUIResource(controlFontName, Font.BOLD, fontSize);
	    }
	
	    public FontUIResource getControlFont() {
	        return controlFont;
	    }
	
	    public FontUIResource getSystemFont() {
	        return systemFont;
	    }
	
	    public FontUIResource getUserFont() {
	        return userFont;
	    }
	
	    public FontUIResource getSmallFont() {
	        return smallFont;
	    }
	
	    public FontUIResource getWindowTitleFont() {
	        return windowTitleFont;
	    }
	}	
",

}
