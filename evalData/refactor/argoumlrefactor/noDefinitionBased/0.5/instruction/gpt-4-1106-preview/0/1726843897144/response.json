{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 31,
                "toLine": 39,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 41,
                "toLine": 49,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(new Font(\"SansSerif\", Font.PLAIN, 14), new Font(\"Dialog\", Font.PLAIN, 14), new Font(\"SansSerif\", Font.BOLD, 14), new Font(\"SansSerif\", Font.PLAIN, 14), new Font(\"Dialog\", Font.PLAIN, 12));"
            },
            {
                "fromLine": 84,
                "toLine": 84,
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return primaryColors.getColor1(); }"
            },
            {
                "fromLine": 88,
                "toLine": 88,
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return primaryColors.getColor2(); }"
            },
            {
                "fromLine": 92,
                "toLine": 92,
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return primaryColors.getColor3(); }"
            },
            {
                "fromLine": 97,
                "toLine": 97,
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }"
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }"
            },
            {
                "fromLine": 109,
                "toLine": 109,
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 113,
                "toLine": 113,
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }"
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }"
            },
            {
                "fromLine": 121,
                "toLine": 121,
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 125,
                "toLine": 125,
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }"
            },
            {
                "fromLine": 129,
                "toLine": 129,
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 31,
                "toLine": 39,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 41,
                "toLine": 49,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);"
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(new Font(\"SansSerif\", Font.BOLD, 16), new Font(\"Dialog\", Font.PLAIN, 16), new Font(\"SansSerif\", Font.BOLD, 16), new Font(\"SansSerif\", Font.PLAIN, 16), new Font(\"Dialog\", Font.PLAIN, 14));"
            },
            {
                "fromLine": 84,
                "toLine": 84,
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return primaryColors.getColor1(); }"
            },
            {
                "fromLine": 88,
                "toLine": 88,
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return primaryColors.getColor2(); }"
            },
            {
                "fromLine": 92,
                "toLine": 92,
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return primaryColors.getColor3(); }"
            },
            {
                "fromLine": 97,
                "toLine": 97,
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }"
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }"
            },
            {
                "fromLine": 109,
                "toLine": 109,
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 113,
                "toLine": 113,
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }"
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }"
            },
            {
                "fromLine": 121,
                "toLine": 121,
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": 125,
                "toLine": 125,
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }"
            },
            {
                "fromLine": 129,
                "toLine": 129,
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 65,
                "toLine": 65,
                "oldContent": "private FigLine lineFig;",
                "newContent": ""
            },
            {
                "fromLine": 66,
                "toLine": 66,
                "oldContent": "private FigRect rectFig;",
                "newContent": ""
            },
            {
                "fromLine": 68,
                "toLine": 68,
                "oldContent": "private List<FigActivation> activations;",
                "newContent": ""
            },
            {
                "fromLine": 69,
                "toLine": 69,
                "oldContent": "private List<FigActivation> stackedActivations;",
                "newContent": ""
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "    static final int WIDTH = 150;",
                "newContent": ""
            },
            {
                "fromLine": 74,
                "toLine": 74,
                "oldContent": "    static final int HEIGHT = 500;",
                "newContent": ""
            },
            {
                "fromLine": 76,
                "toLine": 76,
                "oldContent": "    FigLifeLine(Object owner, Rectangle bounds, DiagramSettings settings) {",
                "newContent": "    private final LifeLineProperties lifeLineProps;\n\n    FigLifeLine(Object owner, Rectangle bounds, DiagramSettings settings) {"
            },
            {
                "fromLine": 78,
                "toLine": 78,
                "oldContent": "        initialize(bounds.x, bounds.y);",
                "newContent": "        lifeLineProps = new LifeLineProperties(bounds.x, bounds.y, WIDTH, HEIGHT, LINE_COLOR, LINE_WIDTH);\n        initialize();"
            },
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "    private void initialize(int x, int y) {",
                "newContent": "    private void initialize() {"
            },
            {
                "fromLine": 81,
                "toLine": 81,
                "oldContent": "        activations = new LinkedList<FigActivation>();",
                "newContent": "        lifeLineProps.setActivations(new LinkedList<FigActivation>());"
            },
            {
                "fromLine": 82,
                "toLine": 82,
                "oldContent": "        stackedActivations = new LinkedList<FigActivation>();",
                "newContent": "        lifeLineProps.setStackedActivations(new LinkedList<FigActivation>());"
            },
            {
                "fromLine": 84,
                "toLine": 86,
                "oldContent": "        rectFig = new FigRect(x, y, WIDTH, HEIGHT); \n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);",
                "newContent": "        lifeLineProps.createFigRect();"
            },
            {
                "fromLine": 87,
                "toLine": 89,
                "oldContent": "        lineFig = new FigLine(x + WIDTH / 2, y, \n                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);\n        lineFig.setDashed(true);",
                "newContent": "        lifeLineProps.createFigLine();"
            },
            {
                "fromLine": 90,
                "toLine": 90,
                "oldContent": "        lineFig.setLineWidth(LINE_WIDTH);",
                "newContent": "        lifeLineProps.getLineFig().setLineWidth(LINE_WIDTH);"
            },
            {
                "fromLine": 92,
                "toLine": 92,
                "oldContent": "        addFig(rectFig);",
                "newContent": "        addFig(lifeLineProps.getRectFig());"
            },
            {
                "fromLine": 93,
                "toLine": 93,
                "oldContent": "        addFig(lineFig);",
                "newContent": "        addFig(lifeLineProps.getLineFig());"
            },
            {
                "fromLine": 95,
                "toLine": 95,
                "oldContent": "    synchronized void createActivations(final List<FigMessage> messages) {",
                "newContent": "    synchronized void createActivations(final List<FigMessage> messages) {"
            },
            {
                "fromLine": 96,
                "toLine": 96,
                "oldContent": "        clearActivations();",
                "newContent": "        lifeLineProps.clearActivations();"
            },
            {
                "fromLine": 97,
                "toLine": 97,
                "oldContent": "        Collections.sort(messages, new FigMessageComparator());",
                "newContent": "        Collections.sort(messages, new FigMessageComparator());"
            },
            {
                "fromLine": 99,
                "toLine": 99,
                "oldContent": "        activations = createStandardActivations(messages);",
                "newContent": "        lifeLineProps.setActivations(createStandardActivations(messages));"
            },
            {
                "fromLine": 100,
                "toLine": 100,
                "oldContent": "        stackedActivations = createStackedActivations(messages);",
                "newContent": "        lifeLineProps.setStackedActivations(createStackedActivations(messages));"
            },
            {
                "fromLine": 102,
                "toLine": 102,
                "oldContent": "        addActivations(activations);",
                "newContent": "        addActivations(lifeLineProps.getActivations());"
            },
            {
                "fromLine": 103,
                "toLine": 103,
                "oldContent": "        addActivations(stackedActivations);",
                "newContent": "        addActivations(lifeLineProps.getStackedActivations());"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "        calcBounds();",
                "newContent": "        calcBounds();"
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "    private void addActivations(",
                "newContent": "    private void addActivations("
            },
            {
                "fromLine": 108,
                "toLine": 108,
                "oldContent": "            final List<FigActivation> activationFigs) {",
                "newContent": "            final List<FigActivation> activationFigs) {"
            },
            {
                "fromLine": 109,
                "toLine": 109,
                "oldContent": "        for (final FigActivation figAct : activationFigs) {",
                "newContent": "        for (final FigActivation figAct : activationF
{
    "refactorings": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 110,
                "toLine": 110,
                "oldContent": "            figAct.setFillColor(getFillColor());",
                "newContent": "            figAct.setFillColor(getFillColor());"
            },
            {
                "fromLine": 111,
                "toLine": 111,
                "oldContent": "            addFig(figAct);",
                "newContent": "            addFig(figAct);"
            },
            {
                "fromLine": 113,
                "toLine": 113,
                "oldContent": "    private List<FigActivation> createStandardActivations(",
                "newContent": "    private List<FigActivation> createStandardActivations("
            },
            {
                "fromLine": 114,
                "toLine": 114,
                "oldContent": "                final List<FigMessage> figMessages) {        ",
                "newContent": "                final List<FigMessage> figMessages) {        "
            },
            {
                "fromLine": 116,
                "toLine": 116,
                "oldContent": "        final List<FigActivation> newActivations =",
                "newContent": "        final List<FigActivation> newActivations ="
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "            new LinkedList<FigActivation>();",
                "newContent": "            new LinkedList<FigActivation>();"
            },
            {
                "fromLine": 119,
                "toLine": 119,
                "oldContent": "        FigActivation currentActivation = null;",
                "newContent": "        FigActivation currentActivation = null;"
            },
            {
                "fromLine": 120,
                "toLine": 120,
                "oldContent": "        if (!hasIncomingCallActionFirst(figMessages)) {",
                "newContent": "        if (!hasIncomingCallActionFirst(figMessages)) {"
            },
            {
                "fromLine": 121,
                "toLine": 121,
                "oldContent": "            currentActivation = createActivationFig(",
                "newContent": "            currentActivation = lifeLineProps.createActivationFig("
            },
            {
                "fromLine": 122,
                "toLine": 122,
                "oldContent": "                    getOwner(),",
                "newContent": "                    getOwner(),"
            },
            {
                "fromLine": 123,
                "toLine": 123,
                "oldContent": "                    lifeLineProps.getLineFig().getX(),",
                "newContent": "                    lifeLineProps.getLineFig().getX(),"
            },
            {
                "fromLine": 124,
                "toLine": 124,
                "oldContent": "                    lifeLineProps.getLineFig().getY(), ",
                "newContent": "                    lifeLineProps.getLineFig().getY(), "
            },
            {
                "fromLine": 125,
                "toLine": 125,
                "oldContent": "                    0, ",
                "newContent": "                    0, "
            },
            {
                "fromLine": 126,
                "toLine": 126,
                "oldContent": "                    0,",
                "newContent": "                    0,"
            },
            {
                "fromLine": 127,
                "toLine": 127,
                "oldContent": "                    getSettings(),",
                "newContent": "                    getSettings(),"
            },
            {
                "fromLine": 128,
                "toLine": 128,
                "oldContent": "                    null);",
                "newContent": "                    null);"
            },
            {
                "fromLine": 130,
                "toLine": 130,
                "oldContent": "        int activationsCount = 0;",
                "newContent": "        int activationsCount = 0;"
            },
            {
                "fromLine": 132,
                "toLine": 132,
                "oldContent": "        for (FigMessage figMessage : figMessages) {",
                "newContent": "        for (FigMessage figMessage : figMessages) {"
            },
            {
                "fromLine": 133,
                "toLine": 133,
                "oldContent": "            int ySender = 0;",
                "newContent": "            int ySender = 0;"
            },
            {
                "fromLine": 135,
                "toLine": 135,
                "oldContent": "            if (!figMessage.isSelfMessage()) {",
                "newContent": "            if (!figMessage.isSelfMessage()) {"
            },
            {
                "fromLine": 136,
                "toLine": 136,
                "oldContent": "                if (isIncoming(figMessage)) {",
                "newContent": "                if (lifeLineProps.isIncoming(figMessage)) {"
            },
            {
                "fromLine": 137,
                "toLine": 137,
                "oldContent": "                    if (currentActivation == null) {",
                "newContent": "                    if (currentActivation == null) {"
            },
            {
                "fromLine": 138,
                "toLine": 138,
                "oldContent": "                        if (figMessage.isSynchCallMessage()) {",
                "newContent": "                        if (figMessage.isSynchCallMessage()) {"
            },
            {
                "fromLine": 139,
                "toLine": 139,
                "oldContent": "                            ySender = figMessage.getFinalY();",
                "newContent": "                            ySender = figMessage.getFinalY();"
            },
            {
                "fromLine": 140,
                "toLine": 140,
                "oldContent": "                            currentActivation = createActivationFig(",
                "newContent": "                            currentActivation = lifeLineProps.createActivationFig("
            },
            {
                "fromLine": 141,
                "toLine": 141,
                "oldContent": "                                    getOwner(), ",
                "newContent": "                                    getOwner(), "
            },
            {
                "fromLine": 142,
                "toLine": 142,
                "oldContent": "                                    lifeLineProps.getLineFig().getX(), ",
                "newContent": "                                    lifeLineProps.getLineFig().getX(), "
            },
            {
                "fromLine": 143,
                "toLine": 143,
                "oldContent": "                                    ySender, ",
                "newContent": "                                    ySender, "
            },
            {
                "fromLine": 144,
                "toLine": 144,
                "oldContent": "                                    0, ",
                "newContent": "                                    0, "
            },
            {
                "fromLine": 145,
                "toLine": 145,
                "oldContent": "                                    0,",
                "newContent": "                                    0,"
            },
            {
                "fromLine": 146,
                "toLine": 146,
                "oldContent": "                                    getSettings(),",
                "newContent": "                                    getSettings(),"
            },
            {
                "fromLine": 147,
                "toLine": 147,
                "oldContent": "                                    figMessage);",
                "newContent": "                                    figMessage);"
            },
            {
                "fromLine": 148,
                "toLine": 148,
                "oldContent": "                            activationsCount++;",
                "newContent": "                            activationsCount++;"
            },
            {
                "fromLine": 149,
                "toLine": 149,
                "oldContent": "                        } else if (figMessage.isCreateMessage()) {",
                "newContent": "                        } else if (figMessage.isCreateMessage()) {"
            },
            {
                "fromLine": 150,
                "toLine": 150,
                "oldContent": "                            currentActivation = createActivationFig(",
                "newContent": "                            currentActivation = lifeLineProps.createActivationFig("
            },
            {
                "fromLine": 151,
                "toLine": 151,
                "oldContent": "                                    getOwner(),",
                "newContent": "                                    getOwner(),"
            },
            {
                "fromLine": 152,
                "toLine": 152,
                "oldContent": "                                    lifeLineProps.getLineFig().getX(),",
                "newContent": "                                    lifeLineProps.getLineFig().getX(),"
            },
            {
                "fromLine": 153,
                "toLine": 153,
                "oldContent": "                                    lifeLineProps.getLineFig().getY(),",
                "newContent": "                                    lifeLineProps.getLineFig().getY(),"
            },
            {
                "fromLine": 154,
                "toLine": 154,
                "oldContent": "                                    0,",
                "newContent": "                                    0,"
            },
            {
                "fromLine": 155,
                "toLine": 155,
                "oldContent": "                                    0,",
                "newContent": "                                    0,"
            },
            {
                "fromLine": 156,
                "toLine": 156,
                "oldContent": "                                    getSettings(),",
                "newContent": "                                    getSettings(),"
            },
            {
                "fromLine": 157,
                "toLine": 157,
                "oldContent": "                                    figMessage);",
                "newContent": "                                    figMessage);"
            },
            {
                "fromLine": 158,
                "toLine": 158,
                "oldContent": "                            activationsCount++;",
                "newContent": "                            activationsCount++;"
            },
            {
                "fromLine": 159,
                "toLine": 159,
                "oldContent": "                        }",
                "newContent": "                        }"
            },
            {
                "fromLine": 160,
                "toLine": 160,
                "oldContent": "                    } else {",
                "newContent": "                    } else {"
            },
            {
                "fromLine": 161,
                "toLine": 161,
                "oldContent": "                        if (figMessage.isSynchCallMessage()",
                "newContent": "                        if (figMessage.isSynchCallMessage()"
            },
            {
                "fromLine": 162,
                "toLine": 162,
                "oldContent": "                                && isSameClassifierRoles(",
                "newContent": "                                && lifeLineProps.isSameClassifierRoles("
            },
            {
                "fromLine": 163,
                "toLine": 163,
                "oldContent": "                                        currentActivation.getActivatingMessage(),",
                "newContent": "                                        currentActivation.getActivatingMessage(),"
            },
            {
                "fromLine": 164,
                "toLine": 164,
                "oldContent": "                                        figMessage)) {",
                "newContent": "                                        figMessage)) {"
            },
            {
                "fromLine": 165,
                "toLine": 165,
                "oldContent": "                            activationsCount++;",
                "newContent": "                            activationsCount++;"
            },
            {
                "fromLine": 166,
                "toLine": 166,
                "oldContent": "                        } else if (figMessage.isDeleteMessage()) {",
                "newContent": "                        } else if (figMessage.isDeleteMessage()) {"
            },
            {
                "fromLine": 167,
                "toLine": 167,
                "oldContent": "                            ySender = figMessage.getFinalY();",
                "newContent": "                            ySender = figMessage.getFinalY();"
            },
            {
                "fromLine": 168,
                "toLine": 168,
                "oldContent": "                            currentActivation.setHeight(",
                "newContent": "                            currentActivation.setHeight("
            },
            {
                "fromLine": 169,
                "toLine": 169,
                "oldContent": "                                    ySender - currentActivation.getY());",
                "newContent": "                                    ySender - currentActivation.getY());"
            },
            {
                "fromLine": 170,
                "toLine": 170,
                "oldContent": "                            currentActivation.setDestroy(true);",
                "newContent": "                            currentActivation.setDestroy(true);"
            },
            {
                "fromLine": 171,
                "toLine": 171,
                "oldContent": "                            lifeLineProps.getLineFig().setHeight(ySender - getY());",
                "newContent": "                            lifeLineProps.getLineFig().setHeight(ySender - getY());"
            },
            {
                "fromLine": 172,
                "toLine": 172,
                "oldContent": "                            newActivations.add(currentActivation);",
                "newContent": "                            newActivations.add(currentActivation);"
            },
            {
                "fromLine": 173,
                "toLine": 173,
                "oldContent": "                            currentActivation = null;",
                "newContent": "                            currentActivation = null;"
            },
            {
                "fromLine": 174,
                "toLine": 174,
                "oldContent": "                        }",
                "newContent": "                        }"
            },
            {
                "fromLine": 175,
                "toLine": 175,
                "oldContent": "                    }",
                "newContent": "                    }"
            },
            {
                "fromLine": 177,
                "toLine": 177,
                "oldContent": "                    if (isOutgoing(figMessage) && currentActivation != null",
                "newContent": "                    if (lifeLineProps.isOutgoing(figMessage) && currentActivation != null"
            },
            {
                "fromLine": 178,
                "toLine": 178,
                "oldContent": "                        && currentActivation.isActivatorEnd(figMessage)",
                "newContent": "                        && currentActivation.isActivatorEnd(figMessage)"
            },
            {
                "fromLine": 179,
                "toLine": 179,
                "oldContent": "                                && --activationsCount == 0) {",
                "newContent": "                                && --activationsCount == 0) {"
            },
            {
                "fromLine": 180,
                "toLine": 180,
                "oldContent": "                            ySender = figMessage.getStartY();",
                "newContent": "                            ySender = figMessage.getStartY();"
            },
            {
                "fromLine": 181,
                "toLine": 181,
                "oldContent": "                            currentActivation.setHeight(",
                "newContent": "                            currentActivation.setHeight("
            },
            {
                "fromLine": 182,
                "toLine": 182,
                "oldContent": "                                    ySender - currentActivation.getY());",
                "newContent": "                                    ySender - currentActivation.getY());"
            },
            {
                "fromLine": 183,
                "toLine": 183,
                "oldContent": "                            newActivations.add(currentActivation);",
                "newContent": "                            newActivations.add(currentActivation);"
            },
            {
                "fromLine": 184,
                "toLine": 184,
                "oldContent": "                            currentActivation = null;",
                "newContent": "                            currentActivation = null;"
            },
            {
                "fromLine": 185,
                "toLine": 185,
                "oldContent": "                    }",
                "newContent": "                    }"
            },
            {
                "fromLine": 186,
                "toLine": 186,
                "oldContent": "                }",
                "newContent": "                }"
            },
            {
                "fromLine": 187,
                "toLine": 187,
                "oldContent": "            }",
                "newContent": "            }"
            },
            {
                "fromLine": 189,
                "toLine": 189,
                "oldContent": "        if (currentActivation != null) {",
                "newContent": "        if (currentActivation != null) {"
            },
            {
                "fromLine": 190,
                "toLine": 190,
                "oldContent": "            currentActivation.setHeight(",
                "newContent": "            currentActivation.setHeight("
            },
            {
                "fromLine": 191,
                "toLine": 191,
                "oldContent": "                    getHeight() - (currentActivation.getY() - getY()));",
                "newContent": "                    getHeight() - (currentActivation.getY() - getY()));"
            },
            {
                "fromLine": 192,
                "toLine": 192,
                "oldContent": "            newActivations.add(currentActivation);",
                "newContent": "            newActivations.add(currentActivation);"
            },
            {
                "fromLine": 193,
                "toLine": 193,
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": 195,
                "toLine": 195,
                "oldContent": "        return newActivations;",
                "newContent": "        return newActivations;"
            },
            {
                "fromLine": 197,
                "toLine": 197,
                "oldContent": "    private boolean isSameClassifierRoles(",
                "newContent": "    private boolean isSameClassifierRoles("
            },
            {
                "fromLine": 198,
                "toLine": 198,
                "oldContent": "            final FigMessage mess1,",
                "newContent": "            final FigMessage mess1,"
            },
            {
                "fromLine": 199,
                "toLine": 199,
                "oldContent": "            final FigMessage mess2) {",
                "newContent": "            final FigMessage mess2) {"
            },
            {
                "fromLine": 200,
                "toLine": 200,
                "oldContent": "        return mess1 != null",
                "newContent": "        return mess1 != null"
            },
            {
                "fromLine": 201,
                "toLine": 201,
                "oldContent": "                && mess1.getDestFigNode() == mess2.getDestFigNode()",
                "newContent": "                && mess1.getDestFigNode() == mess2.getDestFigNode()"
            },
            {
                "fromLine": 202,
                "toLine": 202,
                "oldContent": "                && mess1.getSourceFigNode() == mess2.getSourceFigNode();",
                "newContent": "                && mess1.getSourceFigNode() == mess2.getSourceFigNode();"
            },
            {
                "fromLine": 204,
                "toLine": 204,
                "oldContent": "    private boolean isIncoming(FigMessage messageFig) {",
                "newContent":
{
    "refactorings": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 205,
                "toLine": 205,
                "oldContent": "        return (messageFig.getDestFigNode().getOwner() == getOwner());",
                "newContent": "        return (messageFig.getDestFigNode().getOwner() == getOwner());"
            },
            {
                "fromLine": 207,
                "toLine": 207,
                "oldContent": "    private boolean isOutgoing(FigMessage messageFig) {",
                "newContent": "    private boolean isOutgoing(FigMessage messageFig) {"
            },
            {
                "fromLine": 208,
                "toLine": 208,
                "oldContent": "        return (messageFig.getSourceFigNode().getOwner() == getOwner());",
                "newContent": "        return (messageFig.getSourceFigNode().getOwner() == getOwner());"
            },
            {
                "fromLine": 210,
                "toLine": 210,
                "oldContent": "    private FigActivation createActivationFig(",
                "newContent": "    private FigActivation createActivationFig("
            },
            {
                "fromLine": 211,
                "toLine": 211,
                "oldContent": "            final Object owner, ",
                "newContent": "            final Object owner, "
            },
            {
                "fromLine": 212,
                "toLine": 212,
                "oldContent": "            final int x, ",
                "newContent": "            final int x, "
            },
            {
                "fromLine": 213,
                "toLine": 213,
                "oldContent": "            final int y, ",
                "newContent": "            final int y, "
            },
            {
                "fromLine": 214,
                "toLine": 214,
                "oldContent": "            final int w, ",
                "newContent": "            final int w, "
            },
            {
                "fromLine": 215,
                "toLine": 215,
                "oldContent": "            final int h,",
                "newContent": "            final int h,"
            },
            {
                "fromLine": 216,
                "toLine": 216,
                "oldContent": "            final DiagramSettings settings,",
                "newContent": "            final DiagramSettings settings,"
            },
            {
                "fromLine": 217,
                "toLine": 217,
                "oldContent": "            final FigMessage messageFig) {",
                "newContent": "            final FigMessage messageFig) {"
            },
            {
                "fromLine": 218,
                "toLine": 218,
                "oldContent": "        return new FigActivation(",
                "newContent": "        return new FigActivation("
            },
            {
                "fromLine": 219,
                "toLine": 219,
                "oldContent": "                owner,",
                "newContent": "                owner,"
            },
            {
                "fromLine": 220,
                "toLine": 220,
                "oldContent": "                new Rectangle(x, y, w, h),",
                "newContent": "                new Rectangle(x, y, w, h),"
            },
            {
                "fromLine": 221,
                "toLine": 221,
                "oldContent": "                settings,",
                "newContent": "                settings,"
            },
            {
                "fromLine": 222,
                "toLine": 222,
                "oldContent": "                messageFig);",
                "newContent": "                messageFig);"
            },
            {
                "fromLine": 224,
                "toLine": 224,
                "oldContent": "    private List<FigActivation> createStackedActivations(",
                "newContent": "    private List<FigActivation> createStackedActivations("
            },
            {
                "fromLine": 225,
                "toLine": 225,
                "oldContent": "            final List<FigMessage> figMessages) {",
                "newContent": "            final List<FigMessage> figMessages) {"
            },
            {
                "fromLine": 227,
                "toLine": 227,
                "oldContent": "        final List<FigActivation> newActivations =",
                "newContent": "        final List<FigActivation> newActivations ="
            },
            {
                "fromLine": 228,
                "toLine": 228,
                "oldContent": "            new LinkedList<FigActivation>();",
                "newContent": "            new LinkedList<FigActivation>();"
            },
            {
                "fromLine": 230,
                "toLine": 230,
                "oldContent": "        FigActivation currentAct = null;",
                "newContent": "        FigActivation currentAct = null;"
            },
            {
                "fromLine": 232,
                "toLine": 232,
                "oldContent": "        for (FigMessage figMessage : figMessages) {",
                "newContent": "        for (FigMessage figMessage : figMessages) {"
            },
            {
                "fromLine": 233,
                "toLine": 233,
                "oldContent": "            int ySender = 0;",
                "newContent": "            int ySender = 0;"
            },
            {
                "fromLine": 235,
                "toLine": 235,
                "oldContent": "            if (figMessage.isSelfMessage()) {",
                "newContent": "            if (figMessage.isSelfMessage()) {"
            },
            {
                "fromLine": 236,
                "toLine": 236,
                "oldContent": "                if (figMessage.isSynchCallMessage()) {",
                "newContent": "                if (figMessage.isSynchCallMessage()) {"
            },
            {
                "fromLine": 237,
                "toLine": 237,
                "oldContent": "                    ySender = figMessage.getFinalY();",
                "newContent": "                    ySender = figMessage.getFinalY();"
            },
            {
                "fromLine": 238,
                "toLine": 238,
                "oldContent": "                    currentAct = new FigActivation(figMessage.getOwner(),",
                "newContent": "                    currentAct = new FigActivation(figMessage.getOwner(),"
            },
            {
                "fromLine": 239,
                "toLine": 239,
                "oldContent": "                            new Rectangle(lifeLineProps.getLineFig().getX()",
                "newContent": "                            new Rectangle(lifeLineProps.getLineFig().getX()"
            },
            {
                "fromLine": 240,
                "toLine": 240,
                "oldContent": "                                    + FigActivation.DEFAULT_WIDTH / 2, ySender,",
                "newContent": "                                    + FigActivation.DEFAULT_WIDTH / 2, ySender,"
            },
            {
                "fromLine": 241,
                "toLine": 241,
                "oldContent": "                                    0, 0), getSettings(), figMessage, false);",
                "newContent": "                                    0, 0), getSettings(), figMessage, false);"
            },
            {
                "fromLine": 242,
                "toLine": 242,
                "oldContent": "                } else if (currentAct != null",
                "newContent": "                } else if (currentAct != null"
            },
            {
                "fromLine": 243,
                "toLine": 243,
                "oldContent": "                        && figMessage.isReplyMessage()) {",
                "newContent": "                        && figMessage.isReplyMessage()) {"
            },
            {
                "fromLine": 244,
                "toLine": 244,
                "oldContent": "                    ySender = figMessage.getStartY();",
                "newContent": "                    ySender = figMessage.getStartY();"
            },
            {
                "fromLine": 245,
                "toLine": 245,
                "oldContent": "                    currentAct.setHeight(ySender - currentAct.getY());",
                "newContent": "                    currentAct.setHeight(ySender - currentAct.getY());"
            },
            {
                "fromLine": 246,
                "toLine": 246,
                "oldContent": "                    newActivations.add(currentAct);",
                "newContent": "                    newActivations.add(currentAct);"
            },
            {
                "fromLine": 247,
                "toLine": 247,
                "oldContent": "                    currentAct = null;",
                "newContent": "                    currentAct = null;"
            },
            {
                "fromLine": 248,
                "toLine": 248,
                "oldContent": "                }",
                "newContent": "                }"
            },
            {
                "fromLine": 249,
                "toLine": 249,
                "oldContent": "            }",
                "newContent": "            }"
            },
            {
                "fromLine": 251,
                "toLine": 251,
                "oldContent": "        return newActivations;",
                "newContent": "        return newActivations;"
            },
            {
                "fromLine": 253,
                "toLine": 253,
                "oldContent": "    private boolean hasIncomingCallActionFirst(",
                "newContent": "    private boolean hasIncomingCallActionFirst("
            },
            {
                "fromLine": 254,
                "toLine": 254,
                "oldContent": "                final List<FigMessage> figMessages) {",
                "newContent": "                final List<FigMessage> figMessages) {"
            },
            {
                "fromLine": 255,
                "toLine": 255,
                "oldContent": "        final FigClassifierRole cr =",
                "newContent": "        final FigClassifierRole cr ="
            },
            {
                "fromLine": 256,
                "toLine": 256,
                "oldContent": "            (FigClassifierRole) getGroup();",
                "newContent": "            (FigClassifierRole) getGroup();"
            },
            {
                "fromLine": 257,
                "toLine": 257,
                "oldContent": "        if (figMessages.isEmpty()) {",
                "newContent": "        if (figMessages.isEmpty()) {"
            },
            {
                "fromLine": 258,
                "toLine": 258,
                "oldContent": "            return false;",
                "newContent": "            return false;"
            },
            {
                "fromLine": 259,
                "toLine": 259,
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": 260,
                "toLine": 260,
                "oldContent": "        FigMessage figMessage = figMessages.get(0);",
                "newContent": "        FigMessage figMessage = figMessages.get(0);"
            },
            {
                "fromLine": 261,
                "toLine": 261,
                "oldContent": "        if (cr.equals(figMessage.getDestFigNode())",
                "newContent": "        if (cr.equals(figMessage.getDestFigNode())"
            },
            {
                "fromLine": 262,
                "toLine": 262,
                "oldContent": "                && !cr.equals(figMessage.getSourceFigNode())",
                "newContent": "                && !cr.equals(figMessage.getSourceFigNode())"
            },
            {
                "fromLine": 263,
                "toLine": 263,
                "oldContent": "                && figMessage.isSynchCallMessage()) {",
                "newContent": "                && figMessage.isSynchCallMessage()) {"
            },
            {
                "fromLine": 264,
                "toLine": 264,
                "oldContent": "            return true;",
                "newContent": "            return true;"
            },
            {
                "fromLine": 265,
                "toLine": 265,
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": 266,
                "toLine": 266,
                "oldContent": "        return false;",
                "newContent": "        return false;"
            },
            {
                "fromLine": 268,
                "toLine": 268,
                "oldContent": "    private void clearActivations() {",
                "newContent": "    private void clearActivations() {"
            },
            {
                "fromLine": 269,
                "toLine": 269,
                "oldContent": "        for (FigActivation oldActivation : activations) {",
                "newContent": "        for (FigActivation oldActivation : lifeLineProps.getActivations()) {"
            },
            {
                "fromLine": 270,
                "toLine": 270,
                "oldContent": "            removeFig(oldActivation);    ",
                "newContent": "            removeFig(oldActivation);    "
            },
            {
                "fromLine": 271,
                "toLine": 271,
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": 272,
                "toLine": 272,
                "oldContent": "        for (FigActivation oldActivation : stackedActivations) {",
                "newContent": "        for (FigActivation oldActivation : lifeLineProps.getStackedActivations()) {"
            },
            {
                "fromLine": 273,
                "toLine": 273,
                "oldContent": "            removeFig(oldActivation);    ",
                "newContent": "            removeFig(oldActivation);    "
            },
            {
                "fromLine": 274,
                "toLine": 274,
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": 275,
                "toLine": 275,
                "oldContent": "        activations.clear();",
                "newContent": "        lifeLineProps.getActivations().clear();"
            },
            {
                "fromLine": 276,
                "toLine": 276,
                "oldContent": "        stackedActivations.clear();",
                "newContent": "        lifeLineProps.getStackedActivations().clear();"
            },
            {
                "fromLine": 278,
                "toLine": 278,
                "oldContent": "    }",
                "newContent": "    }"
            },
            {
                "fromLine": 280,
                "toLine": 280,
                "oldContent": "    @Override",
                "newContent": "    @Override"
            },
            {
                "fromLine": 281,
                "toLine": 281,
                "oldContent": "    public void setFilled(boolean filled) {",
                "newContent": "    public void setFilled(boolean filled) {"
            },
            {
                "fromLine": 282,
                "toLine": 282,
                "oldContent": "        // we do nothing. No call to the parent",
                "newContent": "        // we do nothing. No call to the parent"
            },
            {
                "fromLine": 284,
                "toLine": 284,
                "oldContent": "    @Override",
                "newContent": "    @Override"
            },
            {
                "fromLine": 285,
                "toLine": 285,
                "oldContent": "    protected synchronized void setBoundsImpl(int x, int y, int w, int h) {",
                "newContent": "    protected synchronized void setBoundsImpl(int x, int y, int w, int h) {"
            },
            {
                "fromLine": 286,
                "toLine": 286,
                "oldContent": "        final Rectangle oldBounds = getBounds();",
                "newContent": "        final Rectangle oldBounds = getBounds();"
            },
            {
                "fromLine": 288,
                "toLine": 288,
                "oldContent": "        rectFig.setBounds(x, y, w, h);",
                "newContent": "        lifeLineProps.getRectFig().setBounds(x, y, w, h);"
            },
            {
                "fromLine": 289,
                "toLine": 289,
                "oldContent": "        lineFig.setBounds(x + w / 2, y, w, h);",
                "newContent": "        lifeLineProps.getLineFig().setBounds(x + w / 2, y, w, h);"
            },
            {
                "fromLine": 291,
                "toLine": 291,
                "oldContent": "        final int yDiff = oldBounds.y - y;",
                "newContent": "        final int yDiff = oldBounds.y - y;"
            },
            {
                "fromLine": 293,
                "toLine": 293,
                "oldContent": "        for (FigActivation act : activations) {",
                "newContent": "        for (FigActivation act : lifeLineProps.getActivations()) {"
            },
            {
                "fromLine": 294,
                "toLine": 294,
                "oldContent": "            removeFig(act);",
                "newContent": "            removeFig(act);"
            },
            {
                "fromLine": 295,
                "toLine": 295,
                "oldContent": "            act.setLocation(",
                "newContent": "            act.setLocation("
            },
            {
                "fromLine": 296,
                "toLine": 296,
                "oldContent": "                    lifeLineProps.getLineFig().getX() - FigActivation.DEFAULT_WIDTH / 2,",
                "newContent": "                    lifeLineProps.getLineFig().getX() - FigActivation.DEFAULT_WIDTH / 2,"
            },
            {
                "fromLine": 297,
                "toLine": 297,
                "oldContent": "                    act.getY() - yDiff);",
                "newContent": "                    act.getY() - yDiff);"
            },
            {
                "fromLine": 298,
                "toLine": 298,
                "oldContent": "            if (activations.size() == 1 ",
                "newContent": "            if (lifeLineProps.getActivations().size() == 1 "
            },
            {
                "fromLine": 299,
                "toLine": 299,
                "oldContent": "                    && act.getHeight() == oldBounds.height) {",
                "newContent": "                    && act.getHeight() == oldBounds.height) {"
            },
            {
                "fromLine": 300,
                "toLine": 300,
                "oldContent":
{
    "refactorings": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 300,
                "toLine": 300,
                "oldContent": "                act.setHeight(getHeight());",
                "newContent": "                act.setHeight(getHeight());"
            },
            {
                "fromLine": 301,
                "toLine": 301,
                "oldContent": "            }",
                "newContent": "            }"
            },
            {
                "fromLine": 302,
                "toLine": 302,
                "oldContent": "            addFig(act);",
                "newContent": "            addFig(act);"
            },
            {
                "fromLine": 304,
                "toLine": 304,
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": 305,
                "toLine": 305,
                "oldContent": "        damage();",
                "newContent": "        damage();"
            },
            {
                "fromLine": 306,
                "toLine": 306,
                "oldContent": "        _x = x;",
                "newContent": "        _x = x;"
            },
            {
                "fromLine": 307,
                "toLine": 307,
                "oldContent": "        _y = y;",
                "newContent": "        _y = y;"
            },
            {
                "fromLine": 308,
                "toLine": 308,
                "oldContent": "        _w = w;",
                "newContent": "        _w = w;"
            },
            {
                "fromLine": 309,
                "toLine": 309,
                "oldContent": "        _h = h;",
                "newContent": "        _h = h;"
            },
            {
                "fromLine": 311,
                "toLine": 311,
                "oldContent": "        firePropChange(\"bounds\", oldBounds, getBounds());",
                "newContent": "        firePropChange(\"bounds\", oldBounds, getBounds());"
            },
            {
                "fromLine": 313,
                "toLine": 313,
                "oldContent": "    public void setLineWidth(int w) {",
                "newContent": "    public void setLineWidth(int w) {"
            },
            {
                "fromLine": 314,
                "toLine": 314,
                "oldContent": "        lineFig.setLineWidth(w);",
                "newContent": "        lifeLineProps.getLineFig().setLineWidth(w);"
            },
            {
                "fromLine": 315,
                "toLine": 315,
                "oldContent": "    }",
                "newContent": "    }"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColors {\n\n    private final ColorUIResource color1;\n    private final ColorUIResource color2;\n    private final ColorUIResource color3;\n\n    public ThemeColors(int colorValue1, int colorValue2, int colorValue3) {\n        this.color1 = new ColorUIResource(colorValue1, colorValue1, colorValue1);\n        this.color2 = new ColorUIResource(colorValue2, colorValue2, colorValue2);\n        this.color3 = new ColorUIResource(colorValue3, colorValue3, colorValue3);\n    }\n\n    public ColorUIResource getColor1() {\n        return color1;\n    }\n\n    public ColorUIResource getColor2() {\n        return color2;\n    }\n\n    public ColorUIResource getColor3() {\n        return color3;\n    }\n}",
        "src/argouml-app/src/org/argouml/ui/ThemeFonts.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFonts {\n\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(Font control, Font system, Font windowTitle, Font user, Font small) {\n        this.controlFont = new FontUIResource(control);\n        this.systemFont = new FontUIResource(system);\n        this.windowTitleFont = new FontUIResource(windowTitle);\n        this.userFont = new FontUIResource(user);\n        this.smallFont = new FontUIResource(small);\n    }\n\n    public FontUIResource getControlFont() {\n        return controlFont;\n    }\n\n    public FontUIResource getSystemFont() {\n        return systemFont;\n    }\n\n    public FontUIResource getWindowTitleFont() {\n        return windowTitleFont;\n    }\n\n    public FontUIResource getUserFont() {\n        return userFont;\n    }\n\n    public FontUIResource getSmallFont() {\n        return smallFont;\n    }\n}"
    }
}