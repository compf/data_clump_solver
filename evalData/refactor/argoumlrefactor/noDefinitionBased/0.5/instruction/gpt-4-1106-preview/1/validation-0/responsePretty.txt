refactorings:
{
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:"		47",
		toLine:"		47",
		oldContent:"
		        dimensions = new LifeLineDimensions(bounds, WIDTH, HEIGHT);		
",
		newContent:"
		        dimensions = new LifeLineDimensions(bounds, LifeLineDimensions.DEFAULT_WIDTH, LifeLineDimensions.DEFAULT_HEIGHT);		
",
,
		fromLine:"		53",
		toLine:"		53",
		oldContent:"
		        rectFig = dimensions.getRectFig();		
",
		newContent:"
		        FigRect rectFig = dimensions.getRectFig();		
",
,
		fromLine:"		54",
		toLine:"		54",
		oldContent:"
		        lineFig = dimensions.getLineFig();		
",
		newContent:"
		        FigLine lineFig = dimensions.getLineFig();		
",
,
		fromLine:"		80",
		toLine:"		80",
		oldContent:"
		        lineFig.setLineWidth(LINE_WIDTH);		
",
		newContent:"
		        lineFig.setLineWidth(LifeLineDimensions.DEFAULT_LINE_WIDTH);		
",
,
		fromLine:"		362",
		toLine:"		362",
		oldContent:"
		        lineFig.setLineWidth(w);		
",
		newContent:"
		        dimensions.getLineFig().setLineWidth(w);		
",
,

	],

}
extractedClasses:
{
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/LifeLineDimensions.java:"
	package org.argouml.sequence2.diagram;
	
	import java.awt.Rectangle;
	import org.tigris.gef.presentation.FigLine;
	import org.tigris.gef.presentation.FigRect;
	
	/**
	 * This class encapsulates the dimensions and figures for a lifeline.
	 */
	class LifeLineDimensions {
	
	    static final int DEFAULT_WIDTH = 150;
	    static final int DEFAULT_HEIGHT = 500;
	    static final int DEFAULT_LINE_WIDTH = 1;
	
	    private FigLine lineFig;
	    private FigRect rectFig;
	    private int x, y, width, height;
	
	    LifeLineDimensions(Rectangle bounds, int width, int height) {
	        this.x = bounds.x;
	        this.y = bounds.y;
	        this.width = width;
	        this.height = height;
	    }
	
	    void createFigures() {
	        rectFig = new FigRect(x, y, width, height);
	        lineFig = new FigLine(x + width / 2, y, x + width / 2, y + height, FigLifeLine.LINE_COLOR);
	        lineFig.setDashed(true);
	        lineFig.setLineWidth(DEFAULT_LINE_WIDTH);
	    }
	
	    FigRect getRectFig() {
	        return rectFig;
	    }
	
	    FigLine getLineFig() {
	        return lineFig;
	    }
	
	    int getLineX() {
	        return lineFig.getX();
	    }
	
	    int getLineY() {
	        return lineFig.getY();
	    }
	
	    int getLineWidth() {
	        return lineFig.getWidth();
	    }
	
	    int getLineHeight() {
	        return lineFig.getHeight();
	    }
	
	    int getInitialActivationWidth() {
	        return 0;
	    }
	
	    int getInitialActivationHeight() {
	        return 0;
	    }
	
	    void setLineHeight(int newHeight) {
	        lineFig.setHeight(newHeight);
	    }
	
	    void setBounds(int x, int y, int w, int h) {
	        rectFig.setBounds(x, y, w, h);
	        updateLineFig();
	    }
	
	    void updateLineFig() {
	        lineFig.setBounds(x + width / 2, y, width, height);
	    }
	}
		
",

}
