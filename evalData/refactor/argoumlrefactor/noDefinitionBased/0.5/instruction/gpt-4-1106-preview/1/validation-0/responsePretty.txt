"{
    "refactorings": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 47,
                "toLine": 47,
                "oldContent": "        dimensions = new LifeLineDimensions(bounds, WIDTH, HEIGHT);",
                "newContent": "        dimensions = new LifeLineDimensions(bounds, LifeLineDimensions.DEFAULT_WIDTH, LifeLineDimensions.DEFAULT_HEIGHT);"
            },
            {
                "fromLine": 53,
                "toLine": 53,
                "oldContent": "        rectFig = dimensions.getRectFig();",
                "newContent": "        FigRect rectFig = dimensions.getRectFig();"
            },
            {
                "fromLine": 54,
                "toLine": 54,
                "oldContent": "        lineFig = dimensions.getLineFig();",
                "newContent": "        FigLine lineFig = dimensions.getLineFig();"
            },
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "        lineFig.setLineWidth(LINE_WIDTH);",
                "newContent": "        lineFig.setLineWidth(LifeLineDimensions.DEFAULT_LINE_WIDTH);"
            },
            {
                "fromLine": 362,
                "toLine": 362,
                "oldContent": "        lineFig.setLineWidth(w);",
                "newContent": "        dimensions.getLineFig().setLineWidth(w);"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/LifeLineDimensions.java": "package org.argouml.sequence2.diagram;\n\nimport java.awt.Rectangle;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\n/**\n * This class encapsulates the dimensions and figures for a lifeline.\n */\nclass LifeLineDimensions {\n\n    static final int DEFAULT_WIDTH = 150;\n    static final int DEFAULT_HEIGHT = 500;\n    static final int DEFAULT_LINE_WIDTH = 1;\n\n    private FigLine lineFig;\n    private FigRect rectFig;\n    private int x, y, width, height;\n\n    LifeLineDimensions(Rectangle bounds, int width, int height) {\n        this.x = bounds.x;\n        this.y = bounds.y;\n        this.width = width;\n        this.height = height;\n    }\n\n    void createFigures() {\n        rectFig = new FigRect(x, y, width, height);\n        lineFig = new FigLine(x + width / 2, y, x + width / 2, y + height, FigLifeLine.LINE_COLOR);\n        lineFig.setDashed(true);\n        lineFig.setLineWidth(DEFAULT_LINE_WIDTH);\n    }\n\n    FigRect getRectFig() {\n        return rectFig;\n    }\n\n    FigLine getLineFig() {\n        return lineFig;\n    }\n\n    int getLineX() {\n        return lineFig.getX();\n    }\n\n    int getLineY() {\n        return lineFig.getY();\n    }\n\n    int getLineWidth() {\n        return lineFig.getWidth();\n    }\n\n    int getLineHeight() {\n        return lineFig.getHeight();\n    }\n\n    int getInitialActivationWidth() {\n        return 0;\n    }\n\n    int getInitialActivationHeight() {\n        return 0;\n    }\n\n    void setLineHeight(int newHeight) {\n        lineFig.setHeight(newHeight);\n    }\n\n    void setBounds(int x, int y, int w, int h) {\n        rectFig.setBounds(x, y, w, h);\n        updateLineFig();\n    }\n\n    void updateLineFig() {\n        lineFig.setBounds(x + width / 2, y, width, height);\n    }\n}\n"
    }
}"