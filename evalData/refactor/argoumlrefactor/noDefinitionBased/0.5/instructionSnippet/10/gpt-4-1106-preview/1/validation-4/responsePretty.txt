refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		53",
		toLine:"		53",
		oldContent:"
		private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 16, 14);		
",
		newContent:"
		private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 16, 16, 16, 14, 16);		
",
,
		fromLine:"		49",
		toLine:"		49",
		oldContent:"
		public class JasonsHugeTheme extends MetalTheme {		
",
		newContent:"
		public class JasonsHugeTheme extends MetalTheme {
		
		    @Override
		    protected ColorUIResource getPrimary1() { return primaryColors.getColor1(); }
		
		    @Override
		    protected ColorUIResource getPrimary2() { return primaryColors.getColor2(); }
		
		    @Override
		    protected ColorUIResource getPrimary3() { return primaryColors.getColor3(); }
		
		    @Override
		    protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }
		
		    @Override
		    protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }
		
		    @Override
		    protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }
		
		    @Override
		    public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }
		
		    @Override
		    public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }
		
		    @Override
		    public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }
		
		    @Override
		    public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }
		
		    @Override
		    public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }
		
		    @Override
		    public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		53",
		toLine:"		53",
		oldContent:"
		private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 14, 12);		
",
		newContent:"
		private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 14, 14, 14, 12, 14);		
",
,
		fromLine:"		49",
		toLine:"		49",
		oldContent:"
		public class JasonsBigTheme extends MetalTheme {		
",
		newContent:"
		public class JasonsBigTheme extends MetalTheme {
		
		    @Override
		    protected ColorUIResource getPrimary1() { return primaryColors.getColor1(); }
		
		    @Override
		    protected ColorUIResource getPrimary2() { return primaryColors.getColor2(); }
		
		    @Override
		    protected ColorUIResource getPrimary3() { return primaryColors.getColor3(); }
		
		    @Override
		    protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }
		
		    @Override
		    protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }
		
		    @Override
		    protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }
		
		    @Override
		    public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }
		
		    @Override
		    public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }
		
		    @Override
		    public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }
		
		    @Override
		    public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }
		
		    @Override
		    public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }
		
		    @Override
		    public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],

}
extractedClasses:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/ThemeFonts.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFonts {
	
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	    private final FontUIResource windowTitleFont;
	
	    public ThemeFonts(String controlFontName, String systemFontName, int controlFontSize, int systemFontSize, int userFontSize, int smallFontSize, int windowTitleFontSize) {
	        this.controlFont = new FontUIResource(controlFontName, Font.PLAIN, controlFontSize);
	        this.systemFont = new FontUIResource(systemFontName, Font.PLAIN, systemFontSize);
	        this.userFont = new FontUIResource(controlFontName, Font.PLAIN, userFontSize);
	        this.smallFont = new FontUIResource(systemFontName, Font.PLAIN, smallFontSize);
	        this.windowTitleFont = new FontUIResource(controlFontName, Font.BOLD, windowTitleFontSize);
	    }
	
	    public FontUIResource getControlFont() {
	        return controlFont;
	    }
	
	    public FontUIResource getSystemFont() {
	        return systemFont;
	    }
	
	    public FontUIResource getUserFont() {
	        return userFont;
	    }
	
	    public FontUIResource getSmallFont() {
	        return smallFont;
	    }
	
	    public FontUIResource getWindowTitleFont() {
	        return windowTitleFont;
	    }
	}
		
",

}
