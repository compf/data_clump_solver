"
{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": "27",
                "toLine": "33",
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": "35",
                "toLine": "41",
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": "43",
                "toLine": "53",
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final ThemeFont themeFonts = new ThemeFont(\"SansSerif\", \"Dialog\", 14, 12);"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": "27",
                "toLine": "33",
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": "35",
                "toLine": "41",
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": "43",
                "toLine": "53",
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final ThemeFont themeFonts = new ThemeFont(\"SansSerif\", \"Dialog\", 16, 14);"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": "33",
                "toLine": "33",
                "oldContent": "    private FigLine lineFig;",
                "newContent": "    private FigLineWithColor lineFig;"
            },
            {
                "fromLine": "35",
                "toLine": "35",
                "oldContent": "    private List<FigActivation> activations;",
                "newContent": "    private ActivationList activations;"
            },
            {
                "fromLine": "36",
                "toLine": "36",
                "oldContent": "    private List<FigActivation> stackedActivations;",
                "newContent": "    private ActivationList stackedActivations;"
            },
            {
                "fromLine": "59",
                "toLine": "59",
                "oldContent": "        activations = new LinkedList<FigActivation>();",
                "newContent": "        activations = new ActivationList();"
            },
            {
                "fromLine": "60",
                "toLine": "60",
                "oldContent": "        stackedActivations = new LinkedList<FigActivation>();",
                "newContent": "        stackedActivations = new ActivationList();"
            },
            {
                "fromLine": "62",
                "toLine": "63",
                "oldContent": "        lineFig = new FigLine(x + WIDTH / 2, y, \n                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);",
                "newContent": "        lineFig = new FigLineWithColor(x + WIDTH / 2, y, x + WIDTH / 2, y + HEIGHT, LINE_COLOR, LINE_WIDTH);"
            },
            {
                "fromLine": "62",
                "toLine": "63",
                "oldContent": "        lineFig.setDashed(true);\n        lineFig.setLineWidth(LINE_WIDTH);",
                "newContent": ""
            },
            {
                "fromLine": "73",
                "toLine": "73",
                "oldContent": "        clearActivations();",
                "newContent": "        activations.clear();\n        stackedActivations.clear();"
            },
            {
                "fromLine": "75",
                "toLine": "75",
                "oldContent": "        activations = createStandardActivations(messages);",
                "newContent": "        activations.addAll(createStandardActivations(messages));"
            },
            {
                "fromLine": "76",
                "toLine": "76",
                "oldContent": "        stackedActivations = createStackedActivations(messages);",
                "newContent": "        stackedActivations.addAll(createStackedActivations(messages));"
            },
            {
                "fromLine": "78",
                "toLine": "78",
                "oldContent": "        addActivations(activations);",
                "newContent": "        activations.addToFig(this);"
            },
            {
                "fromLine": "79",
                "toLine": "79",
                "oldContent": "        addActivations(stackedActivations);",
                "newContent": "        stackedActivations.addToFig(this);"
            },
            {
                "fromLine": "82",
                "toLine": "82",
                "oldContent": "        calcBounds();",
                "newContent": ""
            },
            {
                "fromLine": "85",
                "toLine": "85",
                "oldContent": "    private void addActivations(",
                "newContent": "    // This method is no longer needed and has been removed."
            },
            {
                "fromLine": "86",
                "toLine": "102",
                "oldContent": "            final List<FigActivation> activationFigs) {\n        for (final FigActivation figAct : activationFigs) {\n            figAct.setFillColor(getFillColor());\n            addFig(figAct);\n        }\n    }\n    \n    private List<FigActivation> createStandardActivations(\n                final List<FigMessage> figMessages) {        \n        \n        final List<FigActivation> newActivations =\n            new LinkedList<FigActivation>();\n        \n        // Check here if there are no incoming call actions\n        // if not then create an activation at the top of the lifeline\n        FigActivation currentActivation = null;\n        if (!hasIncomingCallActionFirst(figMessages)) {\n            currentActivation = createActivationFig(",
                "newContent": ""
            },
            {
                "fromLine": "103",
                "toLine": "103",
                "oldContent": "                    getOwner(),",
                "newContent": ""
            },
            {
                "fromLine": "104",
                "toLine": "104",
                "oldContent": "                    lineFig.getX(),",
                "newContent": ""
            },
            {
                "fromLine": "105",
                "toLine": "105",
                "oldContent": "                    lineFig.getY(), ",
                "newContent": ""
            },
            {
                "fromLine": "106",
                "toLine": "106",
                "oldContent": "                    lineFig.getWidth(), ",
                "newContent": ""
            },
            {
                "fromLine": "107",
                "toLine": "107",
                "oldContent": "                    lineFig.getHeight(),",
                "newContent": ""
            },
            {
                "fromLine": "108",
                "toLine": "108",
                "oldContent": "                    getSettings(),",
                "newContent": ""
            },
            {
                "fromLine": "109",
                "toLine": "109",
                "oldContent": "                    null);",
                "newContent": ""
            },
            {
                "fromLine": "110",
                "toLine": "110",
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": "111",
                "toLine": "111",
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": "112",
                "toLine": "112",
                "oldContent": "        // This counts the number of repeated call/returns that take place",
                "newContent": ""
            },
            {
                "fromLine": "113",
                "toLine": "113",
                "oldContent": "        // after the first activation. This shouldn't be required once",
                "newContent": ""
            },
            {
                "fromLine": "114",
                "toLine": "114",
                "oldContent": "        // we handle stacked activations better and once issue 5692 and 5693",
                "newContent": ""
            },
            {
                "fromLine": "115",
                "toLine": "115",
                "oldContent": "        // are sorted.",
                "newContent": ""
            },
            {
                "fromLine": "116",
                "toLine": "116",
                "oldContent": "        int activationsCount = 0;",
                "newContent": ""
            },
            {
                "fromLine": "117",
                "toLine": "117",
                "oldContent": "        //",
                "newContent": ""
            },
            {
                "fromLine": "118",
                "toLine": "118",
                "oldContent": "        ",
                "newContent": ""
            },
            {
                "fromLine": "119",
                "toLine": "119",
                "oldContent": "        for (FigMessage figMessage : figMessages) {",
                "newContent": ""
            },
            {
                "fromLine": "120",
                "toLine": "120",
                "oldContent": "            int ySender = 0;",
                "newContent": ""
            },
            {
                "fromLine": "121",
                "toLine": "121",
                "oldContent": "            ",
                "newContent": ""
            },
            {
                "fromLine": "122",
                "toLine": "122",
                "oldContent": "            if (!figMessage.isSelfMessage()) {",
                "newContent": ""
            },
            {
                "fromLine": "123",
                "toLine": "123",
                "oldContent": "                if (isIncoming(figMessage)) {",
                "newContent": ""
            },
            {
                "fromLine": "124",
                "toLine": "124",
                "oldContent": "                    if (currentActivation == null) {",
                "newContent": ""
            },
            {
                "fromLine": "125",
                "toLine": "125",
                "oldContent": "                        if (figMessage.isSynchCallMessage()) {",
                "newContent": ""
            },
            {
                "fromLine": "126",
                "toLine": "126",
                "oldContent": "                            // if we are the dest and is a call action, create the ",
                "newContent": ""
            },
            {
                "fromLine": "127",
                "toLine": "127",
                "oldContent": "                            // activation, but don't add it until the height is set.",
                "newContent": ""
            },
            {
                "fromLine": "128",
                "toLine": "128",
                "oldContent": "                            ySender = figMessage.getFinalY();",
                "newContent": ""
            },
            {
                "fromLine": "129",
                "toLine": "129",
                "oldContent": "                            currentActivation = createActivationFig(",
                "newContent": ""
            },
            {
                "fromLine": "130",
                "toLine": "130",
                "oldContent": "                                    getOwner(), ",
                "newContent": ""
            },
            {
                "fromLine": "131",
                "toLine": "131",
                "oldContent": "                                    lineFig.getX(), ",
                "newContent": ""
            },
            {
                "fromLine": "132",
                "toLine": "132",
                "oldContent": "                                    ySender, ",
                "newContent": ""
            },
            {
                "fromLine": "133",
                "toLine": "133",
                "oldContent": "                                    0, ",
                "newContent": ""
            },
            {
                "fromLine": "134",
                "toLine": "134",
                "oldContent": "                                    0,",
                "newContent": ""
            },
            {
                "fromLine": "135",
                "toLine": "135",
                "oldContent": "                                    getSettings(),",
                "newContent": ""
            },
            {
                "fromLine": "136",
                "toLine": "136",
                "oldContent": "                                    figMessage);",
                "newContent": ""
            },
            {
                "fromLine": "137",
                "toLine": "137",
                "oldContent": "                            activationsCount++;",
                "newContent": ""
            },
            {
                "fromLine": "138",
                "toLine": "138",
                "oldContent": "                        } else if (figMessage.isCreateMessage()) {",
                "newContent": ""
            },
            {
                "fromLine": "139",
                "toLine": "139",
                "oldContent": "                            // if we are the destination of a create action,",
                "newContent": ""
            },
            {
                "fromLine": "140",
                "toLine": "140",
                "oldContent": "                            // create the entire activation",
                "newContent": ""
            },
            {
                "fromLine": "141",
                "toLine": "141",
                "oldContent": "                            currentActivation = createActivationFig(",
                "newContent": ""
            },
            {
                "fromLine": "142",
                "toLine": "142",
                "oldContent": "                                    getOwner(),",
                "newContent": ""
            },
            {
                "fromLine": "143",
                "toLine": "143",
                "oldContent": "                                    lineFig.getX(),",
                "newContent": ""
            },
            {
                "fromLine": "144",
                "toLine": "144",
                "oldContent": "                                    lineFig.getY(),",
                "newContent": ""
            },
            {
                "fromLine": "145",
                "toLine": "145",
                "oldContent": "                                    0,",
                "newContent": ""
            },
            {
                "fromLine": "146",
                "toLine": "146",
                "oldContent": "                                    0,",
                "newContent": ""
            },
            {
                "fromLine": "147",
                "toLine": "147",
                "oldContent": "                                    getSettings(),",
                "newContent": ""
            },
            {
                "fromLine": "148",
                "toLine": "148",
                "oldContent": "                                    figMessage);",
                "newContent": ""
            },
            {
                "fromLine": "149",
                "toLine": "149",
                "oldContent": "                            activationsCount++;",
                "newContent": ""
            },
            {
                "fromLine": "150",
                "toLine": "150",
                "oldContent": "                        }",
                "newContent": ""
            },
            {
                "fromLine": "151",
                "toLine": "151",
                "oldContent": "                    } else {",
                "newContent": ""
            },
            {
                "fromLine": "152",
                "toLine": "152",
                "oldContent": "                        if (figMessage.isSynchCallMessage()",
                "newContent": ""
            },
            {
                "fromLine": "153",
                "toLine": "153",
                "oldContent": "                                && isSameClassifierRoles(",
                "newContent": ""
            },
            {
                "fromLine": "154",
                "toLine": "154",
                "oldContent": "                                        currentActivation.getActivatingMessage(),",
                "newContent": ""
            },
            {
                "fromLine": "155",
                "toLine": "155",
                "oldContent": "                                        figMessage)) {",
                "newContent": ""
            },
            {
                "fromLine": "156",
                "toLine": "156",
                "oldContent": "                            activationsCount++;",
                "newContent": ""
            },
            {
                "fromLine": "157",
                "toLine": "157",
                "oldContent": "                        } else if (figMessage.isDeleteMessage()) {",
                "newContent":
{
                "fromLine": "158",
                "toLine": "158",
                "oldContent": "                            // if we are the target of a destroy action",
                "newContent": ""
            }
       																																																																																																																																																											
           																																																																																																															
           																																		
           																			
           										
           						
           				
           				
           				
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		
           		"