{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 39,
                "toLine": 43,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final PrimaryColorTheme primaryColors = new PrimaryColorTheme(102, 153, 204);"
            },
            {
                "fromLine": 45,
                "toLine": 49,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final SecondaryColorTheme secondaryColors = new SecondaryColorTheme(102, 153, 204);"
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final FontTheme fonts = new FontTheme(\"SansSerif\", \"Dialog\", 14, 12);"
            },
            {
                "fromLine": 67,
                "toLine": 67,
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }"
            },
            {
                "fromLine": 71,
                "toLine": 71,
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return primaryColors.getPrimary2(); }"
            },
            {
                "fromLine": 75,
                "toLine": 75,
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return primaryColors.getPrimary3(); }"
            },
            {
                "fromLine": 79,
                "toLine": 79,
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return secondaryColors.getSecondary1(); }"
            },
            {
                "fromLine": 83,
                "toLine": 83,
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return secondaryColors.getSecondary2(); }"
            },
            {
                "fromLine": 87,
                "toLine": 87,
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return secondaryColors.getSecondary3(); }"
            },
            {
                "fromLine": 91,
                "toLine": 91,
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return fonts.getControlFont(); }"
            },
            {
                "fromLine": 95,
                "toLine": 95,
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return fonts.getSystemFont(); }"
            },
            {
                "fromLine": 99,
                "toLine": 99,
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return fonts.getUserFont(); }"
            },
            {
                "fromLine": 103,
                "toLine": 103,
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return fonts.getControlFont(); }"
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return fonts.getSmallFont(); }"
            },
            {
                "fromLine": 111,
                "toLine": 111,
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return fonts.getWindowTitleFont(); }"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 39,
                "toLine": 43,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final PrimaryColorTheme primaryColors = new PrimaryColorTheme(102, 153, 204);"
            },
            {
                "fromLine": 45,
                "toLine": 49,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final SecondaryColorTheme secondaryColors = new SecondaryColorTheme(102, 153, 204);"
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final FontTheme fonts = new FontTheme(\"SansSerif\", \"Dialog\", 16, 14);"
            },
            {
                "fromLine": 67,
                "toLine": 67,
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }"
            },
            {
                "fromLine": 71,
                "toLine": 71,
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return primaryColors.getPrimary2(); }"
            },
            {
                "fromLine": 75,
                "toLine": 75,
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return primaryColors.getPrimary3(); }"
            },
            {
                "fromLine": 79,
                "toLine": 79,
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return secondaryColors.getSecondary1(); }"
            },
            {
                "fromLine": 83,
                "toLine": 83,
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return secondaryColors.getSecondary2(); }"
            },
            {
                "fromLine": 87,
                "toLine": 87,
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return secondaryColors.getSecondary3(); }"
            },
            {
                "fromLine": 91,
                "toLine": 91,
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return fonts.getControlFont(); }"
            },
            {
                "fromLine": 95,
                "toLine": 95,
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return fonts.getSystemFont(); }"
            },
            {
                "fromLine": 99,
                "toLine": 99,
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return fonts.getUserFont(); }"
            },
            {
                "fromLine": 103,
                "toLine": 103,
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return fonts.getControlFont(); }"
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return fonts.getSmallFont(); }"
            },
            {
                "fromLine": 111,
                "toLine": 111,
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return fonts.getWindowTitleFont(); }"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 39,
                "toLine": 43,
                "oldContent": "private FigLine lineFig;\n    private FigRect rectFig;\n    \n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;",
                "newContent": "private LifeLineFigures lifeLineFigures;"
            },
            {
                "fromLine": 49,
                "toLine": 49,
                "oldContent": "initialize(bounds.x, bounds.y);",
                "newContent": "lifeLineFigures = new LifeLineFigures(bounds.x, bounds.y, WIDTH, HEIGHT, LINE_COLOR, LINE_WIDTH);"
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private void initialize(int x, int y) {\n        activations = new LinkedList<FigActivation>();\n        stackedActivations = new LinkedList<FigActivation>();\n        \n        rectFig = new FigRect(x, y, WIDTH, HEIGHT); \n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        lineFig = new FigLine(x + WIDTH / 2, y, \n                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);\n        lineFig.setDashed(true);\n        lineFig.setLineWidth(LINE_WIDTH);\n        \n        addFig(rectFig);\n        addFig(lineFig);\n    }",
                "newContent": "// Initialization moved to LifeLineFigures class"
            },
            {
                "fromLine": 63,
                "toLine": 63,
                "oldContent": "clearActivations();",
                "newContent": "lifeLineFigures.clearActivations();"
            },
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "Collections.sort(messages, new FigMessageComparator());",
                "newContent": "// Sorting moved to LifeLineFigures class"
            },
            {
                "fromLine": 66,
                "toLine": 66,
                "oldContent": "activations = createStandardActivations(messages);",
                "newContent": "lifeLineFigures.createStandardActivations(messages);"
            },
            {
                "fromLine": 67,
                "toLine": 67,
                "oldContent": "stackedActivations = createStackedActivations(messages);",
                "newContent": "lifeLineFigures.createStackedActivations(messages);"
            },
            {
                "fromLine": 69,
                "toLine": 69,
                "oldContent": "addActivations(activations);",
                "newContent": "// Adding activations moved to LifeLineFigures class"
            },
            {
                "fromLine": 70,
                "toLine": 70,
                "oldContent": "addActivations(stackedActivations);",
                "newContent": "// Adding activations moved to LifeLineFigures class"
            },
            {
                "fromLine": 72,
                "toLine": 72,
                "oldContent": "calcBounds();",
                "newContent": "// Bounds calculation moved to LifeLineFigures class"
            },
            {
                "fromLine": 74,
                "toLine": 74,
                "oldContent": "private void addActivations(",
                "newContent": "// Method addActivations moved to LifeLineFigures class"
            },
            {
                "fromLine": 89,
                "toLine": 89,
                "oldContent": "private List<FigActivation> createStandardActivations(",
                "newContent": "// Method createStandardActivations moved to LifeLineFigures class"
            },
            {
                "fromLine": 153,
                "toLine": 153,
                "oldContent": "private FigActivation createActivationFig(",
                "newContent": "// Method createActivationFig moved to LifeLineFigures class"
            },
            {
                "fromLine": 167,
                "toLine": 167,
                "oldContent": "private List<FigActivation> createStackedActivations(",
                "newContent": "// Method createStackedActivations moved to LifeLineFigures class"
            },
            {
                "fromLine": 191,
                "toLine": 191,
                "oldContent": "private boolean hasIncomingCallActionFirst(",
                "newContent": "// Method hasIncomingCallActionFirst moved to LifeLineFigures class"
            },
            {
                "fromLine": 204,
                "toLine": 204,
                "oldContent": "private void clearActivations() {",
                "newContent": "// Method clearActivations moved to LifeLineFigures class"
            },
            {
                "fromLine": 214,
                "toLine": 214,
                "oldContent": "public void setFilled(boolean filled) {",
                "newContent": "// Method setFilled moved to LifeLineFigures class"
            },
            {
                "fromLine": 218,
                "toLine": 218,
                "oldContent": "protected synchronized void setBoundsImpl(int x, int y, int w, int h) {",
                "newContent": "// Method setBoundsImpl moved to LifeLineFigures class"
            },
            {
                "fromLine": 242,
                "toLine": 242,
                "oldContent": "public void setLineWidth(int w) {",
                "newContent": "// Method setLineWidth moved to LifeLineFigures class"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/PrimaryColorTheme.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class PrimaryColorTheme {\n\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n\n    public PrimaryColorTheme(int colorValue1, int colorValue2, int colorValue3) {\n        primary1 = new ColorUIResource(colorValue1, colorValue1, colorValue1 + 51);\n        primary2 = new ColorUIResource(colorValue2, colorValue2, colorValue2 + 51);\n        primary3 = new ColorUIResource(colorValue3, colorValue3, colorValue3 + 51);\n    }\n\n    public ColorUIResource getPrimary1() {\n        return primary1;\n    }\n\n    public ColorUIResource getPrimary2() {\n        return primary2;\n    }\n\n    public ColorUIResource getPrimary3() {\n        return primary3;\n    }\n}\n",
        "src/argouml-app/src/org/argouml/ui/SecondaryColorTheme.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class SecondaryColorTheme {\n\n    private final ColorUIResource secondary1;\n    private final ColorUIResource secondary2;\n    private final ColorUIResource secondary3;\n\n    public SecondaryColorTheme(int colorValue1, int colorValue2, int colorValue3) {\n        secondary1 = new ColorUIResource(colorValue1, colorValue1, color
{
    "refactorings": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 39,
                "toLine": 43,
                "oldContent": "private FigLine lineFig;\n    private FigRect rectFig;\n    \n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;",
                "newContent": "private LifeLineFigures lifeLineFigures;"
            },
            {
                "fromLine": 49,
                "toLine": 49,
                "oldContent": "initialize(bounds.x, bounds.y);",
                "newContent": "lifeLineFigures = new LifeLineFigures(bounds.x, bounds.y, WIDTH, HEIGHT, LINE_COLOR, LINE_WIDTH);"
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private void initialize(int x, int y) {\n        activations = new LinkedList<FigActivation>();\n        stackedActivations = new LinkedList<FigActivation>();\n        \n        rectFig = new FigRect(x, y, WIDTH, HEIGHT); \n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        lineFig = new FigLine(x + WIDTH / 2, y, \n                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);\n        lineFig.setDashed(true);\n        lineFig.setLineWidth(LINE_WIDTH);\n        \n        addFig(rectFig);\n        addFig(lineFig);\n    }",
                "newContent": "// Initialization moved to LifeLineFigures class"
            },
            {
                "fromLine": 63,
                "toLine": 63,
                "oldContent": "clearActivations();",
                "newContent": "lifeLineFigures.clearActivations();"
            },
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "Collections.sort(messages, new FigMessageComparator());",
                "newContent": "// Sorting moved to LifeLineFigures class"
            },
            {
                "fromLine": 66,
                "toLine": 66,
                "oldContent": "activations = createStandardActivations(messages);",
                "newContent": "lifeLineFigures.createStandardActivations(messages);"
            },
            {
                "fromLine": 67,
                "toLine": 67,
                "oldContent": "stackedActivations = createStackedActivations(messages);",
                "newContent": "lifeLineFigures.createStackedActivations(messages);"
            },
            {
                "fromLine": 69,
                "toLine": 69,
                "oldContent": "addActivations(activations);",
                "newContent": "// Adding activations moved to LifeLineFigures class"
            },
            {
                "fromLine": 70,
                "toLine": 70,
                "oldContent": "addActivations(stackedActivations);",
                "newContent": "// Adding activations moved to LifeLineFigures class"
            },
            {
                "fromLine": 72,
                "toLine": 72,
                "oldContent": "calcBounds();",
                "newContent": "// Bounds calculation moved to LifeLineFigures class"
            },
            {
                "fromLine": 74,
                "toLine": 74,
                "oldContent": "private void addActivations(",
                "newContent": "// Method addActivations moved to LifeLineFigures class"
            },
            {
                "fromLine": 89,
                "toLine": 89,
                "oldContent": "private List<FigActivation> createStandardActivations(",
                "newContent": "// Method createStandardActivations moved to LifeLineFigures class"
            },
            {
                "fromLine": 153,
                "toLine": 153,
                "oldContent": "private FigActivation createActivationFig(",
                "newContent": "// Method createActivationFig moved to LifeLineFigures class"
            },
            {
                "fromLine": 167,
                "toLine": 167,
                "oldContent": "private List<FigActivation> createStackedActivations(",
                "newContent": "// Method createStackedActivations moved to LifeLineFigures class"
            },
            {
                "fromLine": 191,
                "toLine": 191,
                "oldContent": "private boolean hasIncomingCallActionFirst(",
                "newContent": "// Method hasIncomingCallActionFirst moved to LifeLineFigures class"
            },
            {
                "fromLine": 204,
                "toLine": 204,
                "oldContent": "private void clearActivations() {",
                "newContent": "// Method clearActivations moved to LifeLineFigures class"
            },
            {
                "fromLine": 214,
                "toLine": 214,
                "oldContent": "public void setFilled(boolean filled) {",
                "newContent": "// Method setFilled moved to LifeLineFigures class"
            },
            {
                "fromLine": 218,
                "toLine": 218,
                "oldContent": "protected synchronized void setBoundsImpl(int x, int y, int w, int h) {",
                "newContent": "// Method setBoundsImpl moved to LifeLineFigures class"
            },
            {
                "fromLine": 242,
                "toLine": 242,
                "oldContent": "public void setLineWidth(int w) {",
                "newContent": "// Method setLineWidth moved to LifeLineFigures class"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/LifeLineFigures.java": "package org.argouml.sequence2.diagram;\n\nimport java.awt.Rectangle;\nimport java.util.LinkedList;\nimport java.util.List;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\npublic class LifeLineFigures {\n\n    private FigLine lineFig;\n    private FigRect rectFig;\n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;\n\n    public LifeLineFigures(int x, int y, int width, int height, Color lineColor, int lineWidth) {\n        activations = new LinkedList<FigActivation>();\n        stackedActivations = new LinkedList<FigActivation>();\n\n        rectFig = new FigRect(x, y, width, height);\n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        lineFig = new FigLine(x + width / 2, y, x + width / 2, y + height, lineColor);\n        lineFig.setDashed(true);\n        lineFig.setLineWidth(lineWidth);\n    }\n\n    // Additional methods for managing activations, setting bounds, etc.\n}\n"
    }
}