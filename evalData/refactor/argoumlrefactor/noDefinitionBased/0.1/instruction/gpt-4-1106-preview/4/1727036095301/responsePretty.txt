"
{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": "29",
                "toLine": "37",
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);"
            },
            {
                "fromLine": "39",
                "toLine": "47",
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": ""
            },
            {
                "fromLine": "49",
                "toLine": "57",
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", Font.PLAIN, Font.BOLD, 14, 12);"
            },
            {
                "fromLine": "61",
                "toLine": "61",
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }"
            },
            {
                "fromLine": "65",
                "toLine": "65",
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return primaryColors.getPrimary2(); }"
            },
            {
                "fromLine": "69",
                "toLine": "69",
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return primaryColors.getPrimary3(); }"
            },
            {
                "fromLine": "73",
                "toLine": "73",
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return primaryColors.getSecondary1(); }"
            },
            {
                "fromLine": "77",
                "toLine": "77",
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return primaryColors.getSecondary2(); }"
            },
            {
                "fromLine": "81",
                "toLine": "81",
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return primaryColors.getSecondary3(); }"
            },
            {
                "fromLine": "85",
                "toLine": "85",
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": "89",
                "toLine": "89",
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }"
            },
            {
                "fromLine": "93",
                "toLine": "93",
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }"
            },
            {
                "fromLine": "97",
                "toLine": "97",
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": "101",
                "toLine": "101",
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }"
            },
            {
                "fromLine": "105",
                "toLine": "105",
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": "29",
                "toLine": "37",
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);"
            },
            {
                "fromLine": "39",
                "toLine": "47",
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": ""
            },
            {
                "fromLine": "49",
                "toLine": "57",
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", Font.PLAIN, Font.BOLD, 16, 14);"
            },
            {
                "fromLine": "61",
                "toLine": "61",
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }"
            },
            {
                "fromLine": "65",
                "toLine": "65",
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return primaryColors.getPrimary2(); }"
            },
            {
                "fromLine": "69",
                "toLine": "69",
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return primaryColors.getPrimary3(); }"
            },
            {
                "fromLine": "73",
                "toLine": "73",
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return primaryColors.getSecondary1(); }"
            },
            {
                "fromLine": "77",
                "toLine": "77",
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return primaryColors.getSecondary2(); }"
            },
            {
                "fromLine": "81",
                "toLine": "81",
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return primaryColors.getSecondary3(); }"
            },
            {
                "fromLine": "85",
                "toLine": "85",
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": "89",
                "toLine": "89",
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }"
            },
            {
                "fromLine": "93",
                "toLine": "93",
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }"
            },
            {
                "fromLine": "97",
                "toLine": "97",
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }"
            },
            {
                "fromLine": "101",
                "toLine": "101",
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }"
            },
            {
                "fromLine": "105",
                "toLine": "105",
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": "37",
                "toLine": "37",
                "oldContent": "    private FigLine lineFig;",
                "newContent": ""
            },
            {
                "fromLine": "38",
                "toLine": "38",
                "oldContent": "    private FigRect rectFig;",
                "newContent": ""
            },
            {
                "fromLine": "40",
                "toLine": "40",
                "oldContent": "    private List<FigActivation> activations;",
                "newContent": ""
            },
            {
                "fromLine": "41",
                "toLine": "41",
                "oldContent": "    private List<FigActivation> stackedActivations;",
                "newContent": ""
            },
            {
                "fromLine": "43",
                "toLine": "43",
                "oldContent": "    static final int WIDTH = 150;",
                "newContent": ""
            },
            {
                "fromLine": "44",
                "toLine": "44",
                "oldContent": "    static final int HEIGHT = 500;",
                "newContent": ""
            },
            {
                "fromLine": "46",
                "toLine": "50",
                "oldContent": "    FigLifeLine(Object owner, Rectangle bounds, DiagramSettings settings) {\n        super(owner, settings);\n        initialize(bounds.x, bounds.y);\n    }",
                "newContent": "    FigLifeLine(Object owner, Rectangle bounds, DiagramSettings settings) {\n        super(owner, settings);\n        lifeLineFig = new LifeLineFig(bounds.x, bounds.y, WIDTH, HEIGHT);\n        addFig(lifeLineFig.getRectFig());\n        addFig(lifeLineFig.getLineFig());\n    }"
            },
            {
                "fromLine": "52",
                "toLine": "58",
                "oldContent": "    private void initialize(int x, int y) {\n        activations = new LinkedList<FigActivation>();\n        stackedActivations = new LinkedList<FigActivation>();\n        \n        rectFig = new FigRect(x, y, WIDTH, HEIGHT); \n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);",
                "newContent": ""
            },
            {
                "fromLine": "59",
                "toLine": "62",
                "oldContent": "        lineFig = new FigLine(x + WIDTH / 2, y, \n                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);\n        lineFig.setDashed(true);\n        lineFig.setLineWidth(LINE_WIDTH);",
                "newContent": ""
            },
            {
                "fromLine": "64",
                "toLine": "66",
                "oldContent": "        addFig(rectFig);\n        addFig(lineFig);\n    }",
                "newContent": ""
            },
            {
                "fromLine": "68",
                "toLine": "68",
                "oldContent": "    synchronized void createActivations(final List<FigMessage> messages) {",
                "newContent": "    synchronized void createActivations(final List<FigMessage> messages) {\n        lifeLineFig.clearActivations();"
            },
            {
                "fromLine": "70",
                "toLine": "70",
                "oldContent": "        clearActivations();",
                "newContent": ""
            },
            {
                "fromLine": "72",
                "toLine": "72",
                "oldContent": "        activations = createStandardActivations(messages);",
                "newContent": "        lifeLineFig.setActivations(createStandardActivations(messages));"
            },
            {
                "fromLine": "73",
                "toLine": "73",
                "oldContent": "        stackedActivations = createStackedActivations(messages);",
                "newContent": "        lifeLineFig.setStackedActivations(createStackedActivations(messages));"
            },
            {
                "fromLine": "75",
                "toLine": "75",
                "oldContent": "        addActivations(activations);",
                "newContent": "        lifeLineFig.addActivations();"
            },
            {
                "fromLine": "76",
                "toLine": "76",
                "oldContent": "        addActivations(stackedActivations);",
                "newContent": ""
            },
            {
                "fromLine": "78",
                "toLine": "78",
                "oldContent": "        calcBounds();",
                "newContent": "        lifeLineFig.calcBounds();"
            },
            {
                "fromLine": "80",
                "toLine": "80",
                "oldContent": "    }",
                "newContent": "    }"
            },
            {
                "fromLine": "82",
                "toLine": "82",
                "oldContent": "    private void addActivations(",
                "newContent": "    private void addActivations() { lifeLineFig.addActivations(); }"
            },
            {
                "fromLine": "84",
                "toLine": "84",
                "oldContent": "        for (final FigActivation figAct : activationFigs) {",
                "newContent": ""
            },
            {
                "fromLine": "85",
                "toLine": "85",
                "oldContent": "            figAct.setFillColor(getFillColor());",
                "newContent": ""
            },
            {
                "fromLine": "86",
                "toLine": "86",
                "oldContent": "            addFig(figAct);",
                "newContent": ""
            },
            {
                "fromLine": "87",
                "toLine": "87",
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": "88",
                "toLine": "88",
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": "90",
                "toLine": "90",
                "oldContent": "    private List<FigActivation> createStandardActivations(",
                "newContent": "    private List<FigActivation> createStandardActivations("
            },
            {
                "fromLine": "92",
                "toLine": "92",
                "oldContent": "        final List<FigActivation> newActivations =",
                "newContent": "        final List<FigActivation> newActivations ="
            },
            {
                "fromLine": "94",
                "toLine": "94",
                "oldContent": "        FigActivation currentActivation = null;",
                "newContent": "        FigActivation currentActivation = null;"
            },
            {
                "fromLine": "95",
                "toLine": "95",
                "oldContent": "        if (!hasIncomingCallActionFirst(figMessages)) {",
                "newContent": "        if (!hasIncomingCallActionFirst(figMessages)) {"
            },
            {
                "fromLine": "96",
                "toLine": "96",
                "oldContent": "            currentActivation = createActivationFig(",
                "newContent": "            currentActivation = life
{
    "refactorings": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": "97",
                "toLine": "97",
                "oldContent": "                    getOwner(),\n                    lineFig.getX(),\n                    lineFig.getY(), \n                    lineFig.getWidth(), \n                    lineFig.getHeight(),\n                    getSettings(),\n                    null);",
                "newContent": "                    getOwner(),\n                    lifeLineFig.getLineFig().getX(),\n                    lifeLineFig.getLineFig().getY(), \n                    lifeLineFig.getLineFig().getWidth(), \n                    lifeLineFig.getLineFig().getHeight(),\n                    getSettings(),\n                    null);"
            },
            {
                "fromLine": "99",
                "toLine": "99",
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": "100",
                "toLine": "100",
                "oldContent": "        ",
                "newContent": "        "
            },
            {
                "fromLine": "101",
                "toLine": "101",
                "oldContent": "        int activationsCount = 0;",
                "newContent": "        int activationsCount = 0;"
            },
            {
                "fromLine": "102",
                "toLine": "102",
                "oldContent": "        ",
                "newContent": "        "
            },
            {
                "fromLine": "103",
                "toLine": "103",
                "oldContent": "        for (FigMessage figMessage : figMessages) {",
                "newContent": "        for (FigMessage figMessage : figMessages) {"
            },
            {
                "fromLine": "104",
                "toLine": "104",
                "oldContent": "            int ySender = 0;",
                "newContent": "            int ySender = 0;"
            },
            {
                "fromLine": "105",
                "toLine": "105",
                "oldContent": "            ",
                "newContent": "            "
            },
            {
                "fromLine": "106",
                "toLine": "106",
                "oldContent": "            if (!figMessage.isSelfMessage()) {",
                "newContent": "            if (!figMessage.isSelfMessage()) {"
            },
            {
                "fromLine": "107",
                "toLine": "107",
                "oldContent": "                if (isIncoming(figMessage)) {",
                "newContent": "                if (isIncoming(figMessage)) {"
            },
            {
                "fromLine": "108",
                "toLine": "108",
                "oldContent": "                    if (currentActivation == null) {",
                "newContent": "                    if (currentActivation == null) {"
            },
            {
                "fromLine": "109",
                "toLine": "109",
                "oldContent": "                        if (figMessage.isSynchCallMessage()) {",
                "newContent": "                        if (figMessage.isSynchCallMessage()) {"
            },
            {
                "fromLine": "110",
                "toLine": "110",
                "oldContent": "                            ySender = figMessage.getFinalY();",
                "newContent": "                            ySender = figMessage.getFinalY();"
            },
            {
                "fromLine": "111",
                "toLine": "111",
                "oldContent": "                            currentActivation = createActivationFig(",
                "newContent": "                            currentActivation = lifeLineFig.createActivationFig("
            },
            {
                "fromLine": "112",
                "toLine": "112",
                "oldContent": "                                    getOwner(), ",
                "newContent": "                                    getOwner(), "
            },
            {
                "fromLine": "113",
                "toLine": "113",
                "oldContent": "                                    lineFig.getX(), ",
                "newContent": "                                    lifeLineFig.getLineFig().getX(), "
            },
            {
                "fromLine": "114",
                "toLine": "114",
                "oldContent": "                                    ySender, ",
                "newContent": "                                    ySender, "
            },
            {
                "fromLine": "115",
                "toLine": "115",
                "oldContent": "                                    0, ",
                "newContent": "                                    0, "
            },
            {
                "fromLine": "116",
                "toLine": "116",
                "oldContent": "                                    0,",
                "newContent": "                                    0,"
            },
            {
                "fromLine": "117",
                "toLine": "117",
                "oldContent": "                                    getSettings(),",
                "newContent": "                                    getSettings(),"
            },
            {
                "fromLine": "118",
                "toLine": "118",
                "oldContent": "                                    figMessage);",
                "newContent": "                                    figMessage);"
            },
            {
                "fromLine": "119",
                "toLine": "119",
                "oldContent": "                            activationsCount++;",
                "newContent": "                            activationsCount++;"
            },
            {
                "fromLine": "120",
                "toLine": "120",
                "oldContent": "                        } else if (figMessage.isCreateMessage()) {",
                "newContent": "                        } else if (figMessage.isCreateMessage()) {"
            },
            {
                "fromLine": "121",
                "toLine": "121",
                "oldContent": "                            currentActivation = createActivationFig(",
                "newContent": "                            currentActivation = lifeLineFig.createActivationFig("
            },
            {
                "fromLine": "122",
                "toLine": "122",
                "oldContent": "                                    getOwner(),",
                "newContent": "                                    getOwner(),"
            },
            {
                "fromLine": "123",
                "toLine": "123",
                "oldContent": "                                    lineFig.getX(),",
                "newContent": "                                    lifeLineFig.getLineFig().getX(),"
            },
            {
                "fromLine": "124",
                "toLine": "124",
                "oldContent": "                                    lineFig.getY(),",
                "newContent": "                                    lifeLineFig.getLineFig().getY(),"
            },
            {
                "fromLine": "125",
                "toLine": "125",
                "oldContent": "                                    0,",
                "newContent": "                                    0,"
            },
            {
                "fromLine": "126",
                "toLine": "126",
                "oldContent": "                                    0,",
                "newContent": "                                    0,"
            },
            {
                "fromLine": "127",
                "toLine": "127",
                "oldContent": "                                    getSettings(),",
                "newContent": "                                    getSettings(),"
            },
            {
                "fromLine": "128",
                "toLine": "128",
                "oldContent": "                                    figMessage);",
                "newContent": "                                    figMessage);"
            },
            {
                "fromLine": "129",
                "toLine": "129",
                "oldContent": "                            activationsCount++;",
                "newContent": "                            activationsCount++;"
            },
            {
                "fromLine": "130",
                "toLine": "130",
                "oldContent": "                        }",
                "newContent": "                        }"
            },
            {
                "fromLine": "131",
                "toLine": "131",
                "oldContent": "                    } else {",
                "newContent": "                    } else {"
            },
            {
                "fromLine": "132",
                "toLine": "132",
                "oldContent": "                        if (figMessage.isSynchCallMessage()",
                "newContent": "                        if (figMessage.isSynchCallMessage()"
            },
            {
                "fromLine": "133",
                "toLine": "133",
                "oldContent": "                                && isSameClassifierRoles(",
                "newContent": "                                && isSameClassifierRoles("
            },
            {
                "fromLine": "134",
                "toLine": "134",
                "oldContent": "                                        currentActivation.getActivatingMessage(),",
                "newContent": "                                        currentActivation.getActivatingMessage(),"
            },
            {
                "fromLine": "135",
                "toLine": "135",
                "oldContent": "                                        figMessage)) {",
                "newContent": "                                        figMessage)) {"
            },
            {
                "fromLine": "136",
                "toLine": "136",
                "oldContent": "                            activationsCount++;",
                "newContent": "                            activationsCount++;"
            },
            {
                "fromLine": "137",
                "toLine": "137",
                "oldContent": "                        } else if (figMessage.isDeleteMessage()) {",
                "newContent": "                        } else if (figMessage.isDeleteMessage()) {"
            },
            {
                "fromLine": "138",
                "toLine": "138",
                "oldContent": "                            ySender = figMessage.getFinalY();",
                "newContent": "                            ySender = figMessage.getFinalY();"
            },
            {
                "fromLine": "139",
                "toLine": "139",
                "oldContent": "                            currentActivation.setHeight(",
                "newContent": "                            currentActivation.setHeight("
            },
            {
                "fromLine": "140",
                "toLine": "140",
                "oldContent": "                                    ySender - currentActivation.getY());",
                "newContent": "                                    ySender - currentActivation.getY());"
            },
            {
                "fromLine": "141",
                "toLine": "141",
                "oldContent": "                            currentActivation.setDestroy(true);",
                "newContent": "                            currentActivation.setDestroy(true);"
            },
            {
                "fromLine": "142",
                "toLine": "142",
                "oldContent": "                            lineFig.setHeight(ySender - getY());",
                "newContent": "                            lifeLineFig.getLineFig().setHeight(ySender - getY());"
            },
            {
                "fromLine": "143",
                "toLine": "143",
                "oldContent": "                            newActivations.add(currentActivation);",
                "newContent": "                            newActivations.add(currentActivation);"
            },
            {
                "fromLine": "144",
                "toLine": "144",
                "oldContent": "                            currentActivation = null;",
                "newContent": "                            currentActivation = null;"
            },
            {
                "fromLine": "145",
                "toLine": "145",
                "oldContent": "                        }",
                "newContent": "                        }"
            },
            {
                "fromLine": "146",
                "toLine": "146",
                "oldContent": "                    }",
                "newContent": "                    }"
            },
            {
                "fromLine": "147",
                "toLine": "147",
                "oldContent": "                }",
                "newContent": "                }"
            },
            {
                "fromLine": "148",
                "toLine": "148",
                "oldContent": "                ",
                "newContent": "                "
            },
            {
                "fromLine": "149",
                "toLine": "149",
                "oldContent": "                if (isOutgoing(figMessage) && currentActivation != null",
                "newContent": "                if (isOutgoing(figMessage) && currentActivation != null"
            },
            {
                "fromLine": "150",
                "toLine": "150",
                "oldContent": "                    && currentActivation.isActivatorEnd(figMessage)",
                "newContent": "                    && currentActivation.isActivatorEnd(figMessage)"
            },
            {
                "fromLine": "151",
                "toLine": "151",
                "oldContent": "                            && --activationsCount == 0) {",
                "newContent": "                            && --activationsCount == 0) {"
            },
            {
                "fromLine": "152",
                "toLine": "152",
                "oldContent": "                        ySender = figMessage.getStartY();",
                "newContent": "                        ySender = figMessage.getStartY();"
            },
            {
                "fromLine": "153",
                "toLine": "153",
                "oldContent": "                        currentActivation.setHeight(",
                "newContent": "                        currentActivation.setHeight("
            },
            {
                "fromLine": "154",
                "toLine": "154",
                "oldContent": "                                ySender - currentActivation.getY());",
                "newContent": "                                ySender - currentActivation.getY());"
            },
            {
                "fromLine": "155",
                "toLine": "155",
                "oldContent": "                        newActivations.add(currentActivation);",
                "newContent": "                        newActivations.add(currentActivation);"
            },
            {
                "fromLine": "156",
                "toLine": "156",
                "oldContent": "                        currentActivation = null;",
                "newContent": "                        currentActivation = null;"
            },
            {
                "fromLine": "157",
                "toLine": "157",
                "oldContent": "                }",
                "newContent": "                }"
            },
            {
                "fromLine": "158",
                "toLine": "158",
                "oldContent": "            }",
                "newContent": "            }"
            },
            {
                "fromLine": "159",
                "toLine": "159",
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": "160",
                "toLine": "160",
                "oldContent": "        ",
                "newContent": "        "
            },
            {
                "fromLine": "161",
                "toLine": "161",
                "oldContent": "        if (currentActivation != null) {",
                "newContent": "        if (currentActivation != null) {"
            },
            {
                "fromLine": "162",
                "toLine": "162",
                "oldContent": "            currentActivation.setHeight(",
                "newContent": "            currentActivation.setHeight("
            },
            {
                "fromLine": "163",
                "toLine": "163",
                "oldContent": "                    getHeight() - (currentActivation.getY() - getY()));",
                "newContent": "                    getHeight() - (currentActivation.getY() - getY()));"
            },
            {
                "fromLine": "164",
                "toLine": "164",
                "oldContent": "            newActivations.add(currentActivation);",
                "newContent": "            newActivations.add(currentActivation);"
            },
            {
                "fromLine": "165",
                "toLine": "165",
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": "166",
                "toLine": "166",
                "oldContent": "        ",
                "newContent": "        "
            },
            {
                "fromLine": "167",
                "toLine": "167",
                "oldContent": "        return newActivations;",
                "newContent": "        return newActivations;"
            },
            {
                "fromLine": "168",
                "toLine": "168",
                "oldContent": "    }",
                "newContent": "    }"
            },
            {
                "fromLine": "170",
                "toLine": "170",
                "oldContent": "    private boolean isSameClassifierRoles(",
                "newContent": "    private boolean isSameClassifierRoles("
            },
            {
                "fromLine": "172",
                "toLine": "172",
                "oldContent": "        return mess1 != null",
                "newContent": "        return mess1 != null"
            },
            {
                "fromLine": "174",
                "toLine": "174",
                "oldContent": "                && mess1.getDestFigNode() == mess2.getDestFigNode()",
                "newContent": "                && mess1.getDestFigNode() == mess2.getDestFigNode()"
            },
            {
                "fromLine": "176",
                "toLine": "176",
                "oldContent": "                && mess1.getSourceFigNode() == mess2.getSourceFigNode();",
                "newContent": "                && mess1.getSourceFigNode() == mess2.getSourceFigNode();"
            },
            {
                "fromLine": "177",
                "toLine": "177",
                "oldContent": "    }",
                "newContent": "    }"
            },
            {
                "fromLine": "179",
                "toLine": "179",
                "oldContent": "    private boolean isIncoming(FigMessage messageFig) {",
                "newContent": "    private boolean isIncoming(FigMessage messageFig) {"
            },
            {
                "fromLine": "181",
                "toLine": "181",
                "oldContent": "        return (messageFig.getDestFigNode().getOwner() == getOwner());",
                "newContent": "        return (messageFig.getDestFigNode().getOwner() == getOwner());"
            },
            {
                "fromLine": "182",
                "toLine": "182",
                "oldContent": "    }",
                "newContent": "    }"
            },
            {
                "fromLine": "184",
                "toLine": "184",
                "oldContent": "    private boolean isOutgoing(FigMessage messageFig) {",
                "newContent": "    private boolean isOutgoing(FigMessage messageFig) {"
            },
            {
                "fromLine": "186",
                "toLine": "186",
                "oldContent": "        return (messageFig.getSourceFigNode().getOwner() == getOwner());",
                "newContent": "        return (messageFig.getSourceFigNode().getOwner() == getOwner());"
            },
            {
                "fromLine": "187",
                "toLine": "187",
                "oldContent": "    }",
                "newContent": "    }"
            },
            {
                "fromLine": "189",
                "toLine": "189",
                "oldContent": "    private FigActivation createActivationFig(",
                "newContent": "    private FigActivation createActivationFig("
            },
            {
                "fromLine": "191",
                "toLine": "191",
                "oldContent": "        return new FigActivation(",
                "newContent": "        return new FigActivation("
            },
            {
                "fromLine": "193",
                "toLine": "193",
                "oldContent":
{
    "refactorings": {
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": "194",
                "toLine": "194",
                "oldContent": "                new Rectangle(x, y, w, h),",
                "newContent": "                new Rectangle(x, y, w, h),"
            },
            {
                "fromLine": "195",
                "toLine": "195",
                "oldContent": "                settings,",
                "newContent": "                settings,"
            },
            {
                "fromLine": "196",
                "toLine": "196",
                "oldContent": "                messageFig);",
                "newContent": "                messageFig);"
            },
            {
                "fromLine": "197",
                "toLine": "197",
                "oldContent": "    }",
                "newContent": "    }"
            },
            {
                "fromLine": "199",
                "toLine": "199",
                "oldContent": "    private List<FigActivation> createStackedActivations(",
                "newContent": "    private List<FigActivation> createStackedActivations("
            },
            {
                "fromLine": "201",
                "toLine": "201",
                "oldContent": "        final List<FigActivation> newActivations =",
                "newContent": "        final List<FigActivation> newActivations ="
            },
            {
                "fromLine": "203",
                "toLine": "203",
                "oldContent": "        FigActivation currentAct = null;",
                "newContent": "        FigActivation currentAct = null;"
            },
            {
                "fromLine": "204",
                "toLine": "204",
                "oldContent": "        ",
                "newContent": "        "
            },
            {
                "fromLine": "205",
                "toLine": "205",
                "oldContent": "        for (FigMessage figMessage : figMessages) {",
                "newContent": "        for (FigMessage figMessage : figMessages) {"
            },
            {
                "fromLine": "206",
                "toLine": "206",
                "oldContent": "            int ySender = 0;",
                "newContent": "            int ySender = 0;"
            },
            {
                "fromLine": "207",
                "toLine": "207",
                "oldContent": "            if (figMessage.isSelfMessage()) {",
                "newContent": "            if (figMessage.isSelfMessage()) {"
            },
            {
                "fromLine": "208",
                "toLine": "208",
                "oldContent": "                if (figMessage.isSynchCallMessage()) {",
                "newContent": "                if (figMessage.isSynchCallMessage()) {"
            },
            {
                "fromLine": "209",
                "toLine": "209",
                "oldContent": "                    ySender = figMessage.getFinalY();",
                "newContent": "                    ySender = figMessage.getFinalY();"
            },
            {
                "fromLine": "210",
                "toLine": "210",
                "oldContent": "                    currentAct = new FigActivation(figMessage.getOwner(),",
                "newContent": "                    currentAct = lifeLineFig.createActivationFig(figMessage.getOwner(),"
            },
            {
                "fromLine": "211",
                "toLine": "211",
                "oldContent": "                            new Rectangle(lineFig.getX()",
                "newContent": "                            new Rectangle(lifeLineFig.getLineFig().getX()"
            },
            {
                "fromLine": "212",
                "toLine": "212",
                "oldContent": "                                    + FigActivation.DEFAULT_WIDTH / 2, ySender,",
                "newContent": "                                    + FigActivation.DEFAULT_WIDTH / 2, ySender,"
            },
            {
                "fromLine": "213",
                "toLine": "213",
                "oldContent": "                                    0, 0), getSettings(), figMessage, false);",
                "newContent": "                                    0, 0), getSettings(), figMessage, false);"
            },
            {
                "fromLine": "214",
                "toLine": "214",
                "oldContent": "                } else if (currentAct != null",
                "newContent": "                } else if (currentAct != null"
            },
            {
                "fromLine": "215",
                "toLine": "215",
                "oldContent": "                        && figMessage.isReplyMessage()) {",
                "newContent": "                        && figMessage.isReplyMessage()) {"
            },
            {
                "fromLine": "216",
                "toLine": "216",
                "oldContent": "                    ySender = figMessage.getStartY();",
                "newContent": "                    ySender = figMessage.getStartY();"
            },
            {
                "fromLine": "217",
                "toLine": "217",
                "oldContent": "                    currentAct.setHeight(ySender - currentAct.getY());",
                "newContent": "                    currentAct.setHeight(ySender - currentAct.getY());"
            },
            {
                "fromLine": "218",
                "toLine": "218",
                "oldContent": "                    newActivations.add(currentAct);",
                "newContent": "                    newActivations.add(currentAct);"
            },
            {
                "fromLine": "219",
                "toLine": "219",
                "oldContent": "                    currentAct = null;",
                "newContent": "                    currentAct = null;"
            },
            {
                "fromLine": "220",
                "toLine": "220",
                "oldContent": "                }",
                "newContent": "                }"
            },
            {
                "fromLine": "221",
                "toLine": "221",
                "oldContent": "            }",
                "newContent": "            }"
            },
            {
                "fromLine": "222",
                "toLine": "222",
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": "223",
                "toLine": "223",
                "oldContent": "        return newActivations;",
                "newContent": "        return newActivations;"
            },
            {
                "fromLine": "224",
                "toLine": "224",
                "oldContent": "    }",
                "newContent": "    }"
            },
            {
                "fromLine": "226",
                "toLine": "226",
                "oldContent": "    private boolean hasIncomingCallActionFirst(",
                "newContent": "    private boolean hasIncomingCallActionFirst("
            },
            {
                "fromLine": "228",
                "toLine": "228",
                "oldContent": "        final FigClassifierRole cr =",
                "newContent": "        final FigClassifierRole cr ="
            },
            {
                "fromLine": "230",
                "toLine": "230",
                "oldContent": "        if (figMessages.isEmpty()) {",
                "newContent": "        if (figMessages.isEmpty()) {"
            },
            {
                "fromLine": "231",
                "toLine": "231",
                "oldContent": "            return false;",
                "newContent": "            return false;"
            },
            {
                "fromLine": "232",
                "toLine": "232",
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": "233",
                "toLine": "233",
                "oldContent": "        FigMessage figMessage = figMessages.get(0);",
                "newContent": "        FigMessage figMessage = figMessages.get(0);"
            },
            {
                "fromLine": "234",
                "toLine": "234",
                "oldContent": "        if (cr.equals(figMessage.getDestFigNode())",
                "newContent": "        if (cr.equals(figMessage.getDestFigNode())"
            },
            {
                "fromLine": "235",
                "toLine": "235",
                "oldContent": "                && !cr.equals(figMessage.getSourceFigNode())",
                "newContent": "                && !cr.equals(figMessage.getSourceFigNode())"
            },
            {
                "fromLine": "236",
                "toLine": "236",
                "oldContent": "                && figMessage.isSynchCallMessage()) {",
                "newContent": "                && figMessage.isSynchCallMessage()) {"
            },
            {
                "fromLine": "237",
                "toLine": "237",
                "oldContent": "            return true;",
                "newContent": "            return true;"
            },
            {
                "fromLine": "238",
                "toLine": "238",
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": "239",
                "toLine": "239",
                "oldContent": "        return false;",
                "newContent": "        return false;"
            },
            {
                "fromLine": "240",
                "toLine": "240",
                "oldContent": "    }",
                "newContent": "    }"
            },
            {
                "fromLine": "242",
                "toLine": "242",
                "oldContent": "    private void clearActivations() {",
                "newContent": "    private void clearActivations() { lifeLineFig.clearActivations(); }"
            },
            {
                "fromLine": "244",
                "toLine": "244",
                "oldContent": "        for (FigActivation oldActivation : activations) {",
                "newContent": ""
            },
            {
                "fromLine": "245",
                "toLine": "245",
                "oldContent": "            removeFig(oldActivation);    ",
                "newContent": ""
            },
            {
                "fromLine": "246",
                "toLine": "246",
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": "247",
                "toLine": "247",
                "oldContent": "        for (FigActivation oldActivation : stackedActivations) {",
                "newContent": ""
            },
            {
                "fromLine": "248",
                "toLine": "248",
                "oldContent": "            removeFig(oldActivation);    ",
                "newContent": ""
            },
            {
                "fromLine": "249",
                "toLine": "249",
                "oldContent": "        }",
                "newContent": ""
            },
            {
                "fromLine": "250",
                "toLine": "250",
                "oldContent": "        activations.clear();",
                "newContent": ""
            },
            {
                "fromLine": "251",
                "toLine": "251",
                "oldContent": "        stackedActivations.clear();",
                "newContent": ""
            },
            {
                "fromLine": "252",
                "toLine": "252",
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": "254",
                "toLine": "254",
                "oldContent": "    @Override",
                "newContent": "    @Override"
            },
            {
                "fromLine": "256",
                "toLine": "256",
                "oldContent": "    public void setFilled(boolean filled) {",
                "newContent": "    public void setFilled(boolean filled) {"
            },
            {
                "fromLine": "258",
                "toLine": "258",
                "oldContent": "    }",
                "newContent": "    }"
            },
            {
                "fromLine": "260",
                "toLine": "260",
                "oldContent": "    @Override",
                "newContent": "    @Override"
            },
            {
                "fromLine": "262",
                "toLine": "262",
                "oldContent": "    protected synchronized void setBoundsImpl(int x, int y, int w, int h) {",
                "newContent": "    protected synchronized void setBoundsImpl(int x, int y, int w, int h) {"
            },
            {
                "fromLine": "264",
                "toLine": "264",
                "oldContent": "        final Rectangle oldBounds = getBounds();",
                "newContent": "        final Rectangle oldBounds = getBounds();"
            },
            {
                "fromLine": "266",
                "toLine": "266",
                "oldContent": "        rectFig.setBounds(x, y, w, h);",
                "newContent": "        lifeLineFig.getRectFig().setBounds(x, y, w, h);"
            },
            {
                "fromLine": "267",
                "toLine": "267",
                "oldContent": "        lineFig.setBounds(x + w / 2, y, w, h);",
                "newContent": "        lifeLineFig.getLineFig().setBounds(x + w / 2, y, w, h);"
            },
            {
                "fromLine": "269",
                "toLine": "269",
                "oldContent": "        final int yDiff = oldBounds.y - y;",
                "newContent": "        final int yDiff = oldBounds.y - y;"
            },
            {
                "fromLine": "271",
                "toLine": "271",
                "oldContent": "        for (FigActivation act : activations) {",
                "newContent": "        for (FigActivation act : lifeLineFig.getActivations()) {"
            },
            {
                "fromLine": "273",
                "toLine": "273",
                "oldContent": "            removeFig(act);",
                "newContent": ""
            },
            {
                "fromLine": "274",
                "toLine": "274",
                "oldContent": "            act.setLocation(",
                "newContent": "            act.setLocation("
            },
            {
                "fromLine": "275",
                "toLine": "275",
                "oldContent": "                    lineFig.getX() - FigActivation.DEFAULT_WIDTH / 2,",
                "newContent": "                    lifeLineFig.getLineFig().getX() - FigActivation.DEFAULT_WIDTH / 2,"
            },
            {
                "fromLine": "276",
                "toLine": "276",
                "oldContent": "                    act.getY() - yDiff);",
                "newContent": "                    act.getY() - yDiff);"
            },
            {
                "fromLine": "277",
                "toLine": "277",
                "oldContent": "            if (activations.size() == 1 ",
                "newContent": "            if (lifeLineFig.getActivations().size() == 1 "
            },
            {
                "fromLine": "278",
                "toLine": "278",
                "oldContent": "                    && act.getHeight() == oldBounds.height) {",
                "newContent": "                    && act.getHeight() == oldBounds.height) {"
            },
            {
                "fromLine": "279",
                "toLine": "279",
                "oldContent": "                act.setHeight(getHeight());",
                "newContent": "                act.setHeight(getHeight());"
            },
            {
                "fromLine": "280",
                "toLine": "280",
                "oldContent": "            }",
                "newContent": "            }"
            },
            {
                "fromLine": "281",
                "toLine": "281",
                "oldContent": "            addFig(act);",
                "newContent": ""
            },
            {
                "fromLine": "282",
                "toLine": "282",
                "oldContent": "        }",
                "newContent": "        }"
            },
            {
                "fromLine": "283",
                "toLine": "283",
                "oldContent": "        damage();",
                "newContent": "        damage();"
            },
            {
                "fromLine": "284",
                "toLine": "284",
                "oldContent": "        _x = x;",
                "newContent": "        _x = x;"
            },
            {
                "fromLine": "285",
                "toLine": "285",
                "oldContent": "        _y = y;",
                "newContent": "        _y = y;"
            },
            {
                "fromLine": "286",
                "toLine": "286",
                "oldContent": "        _w = w;",
                "newContent": "        _w = w;"
            },
            {
                "fromLine": "287",
                "toLine": "287",
                "oldContent": "        _h = h;",
                "newContent": "        _h = h;"
            },
            {
                "fromLine": "289",
                "toLine": "289",
                "oldContent": "        firePropChange(\"bounds\", oldBounds, getBounds());",
                "newContent": "        firePropChange(\"bounds\", oldBounds, getBounds());"
            },
            {
                "fromLine": "290",
                "toLine": "290",
                "oldContent": "    }",
                "newContent": "    }"
            },
            {
                "fromLine": "292",
                "toLine": "292",
                "oldContent": "    public void setLineWidth(int w) {",
                "newContent": "    public void setLineWidth(int w) { lifeLineFig.getLineFig().setLineWidth(w); }"
            },
            {
                "fromLine": "294",
                "toLine": "294",
                "oldContent": "        lineFig.setLineWidth(w);",
                "newContent": ""
            },
            {
                "fromLine": "295",
                "toLine": "295",
                "oldContent": "    }",
                "newContent": ""
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\n/**\n * Represents theme colors for UI components.\n */\npublic class ThemeColors {\n\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n    private final ColorUIResource secondary1;\n    private final ColorUIResource secondary2;\n    private final ColorUIResource secondary3;\n\n    public ThemeColors(int p1r, int p1g, int p1b, int p2r, int p2g, int p2b, int p3r, int p3g, int p3b
{
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColors.java": {
            "content": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\n/**\n * Represents theme colors for UI components.\n */\npublic class ThemeColors {\n\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n    private final ColorUIResource secondary1;\n    private final ColorUIResource secondary2;\n    private final ColorUIResource secondary3;\n\n    public ThemeColors(int p1r, int p1g, int p1b, int p2r, int p2g, int p2b, int p3r, int p3g, int p3b) {\n        primary1 = new ColorUIResource(p1r, p1g, p1b);\n        primary2 = new ColorUIResource(p2r, p2g, p2b);\n        primary3 = new ColorUIResource(p3r, p3g, p3b);\n        secondary1 = new ColorUIResource(p1r, p1g, p1b);\n        secondary2 = new ColorUIResource(p2r, p2g, p2b);\n        secondary3 = new ColorUIResource(p3r, p3g, p3b);\n    }\n\n    public ColorUIResource getPrimary1() {\n        return primary1;\n    }\n\n    public ColorUIResource getPrimary2() {\n        return primary2;\n    }\n\n    public ColorUIResource getPrimary3() {\n        return primary3;\n    }\n\n    public ColorUIResource getSecondary1() {\n        return secondary1;\n    }\n\n    public ColorUIResource getSecondary2() {\n        return secondary2;\n    }\n\n    public ColorUIResource getSecondary3() {\n        return secondary3;\n    }\n}\n"
        },
        "src/argouml-app/src/org/argouml/ui/ThemeFonts.java": {
            "content": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\n/**\n * Represents theme fonts for UI components.\n */\npublic class ThemeFonts {\n\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(String controlFontFamily, String systemFontFamily, int plainStyle, int boldStyle, int largeSize, int smallSize) {\n        controlFont = new FontUIResource(controlFontFamily, plainStyle, largeSize);\n        systemFont = new FontUIResource(systemFontFamily, plainStyle, largeSize);\n        windowTitleFont = new FontUIResource(controlFontFamily, boldStyle, largeSize);\n        userFont = new FontUIResource(controlFontFamily, plainStyle, largeSize);\n        smallFont = new FontUIResource(systemFontFamily, plainStyle, smallSize);\n    }\n\n    public FontUIResource getControlFont() {\n        return controlFont;\n    }\n\n    public FontUIResource getSystemFont() {\n        return systemFont;\n    }\n\n    public FontUIResource getWindowTitleFont() {\n        return windowTitleFont;\n    }\n\n    public FontUIResource getUserFont() {\n        return userFont;\n    }\n\n    public FontUIResource getSmallFont() {\n        return smallFont;\n    }\n}\n"
        },
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/LifeLineFig.java": {
            "content": "package org.argouml.sequence2.diagram;\n\nimport java.awt.Rectangle;\nimport java.util.List;\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\n/**\n * Represents the visual figure for a lifeline in a sequence diagram.\n */\npublic class LifeLineFig {\n\n    private FigLine lineFig;\n    private FigRect rectFig;\n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;\n\n    public LifeLineFig(int x, int y, int width, int height) {\n        rectFig = new FigRect(x, y, width, height);\n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);\n        lineFig = new FigLine(x + width / 2, y, x + width / 2, y + height, LINE_COLOR);\n        lineFig.setDashed(true);\n        lineFig.setLineWidth(LINE_WIDTH);\n    }\n\n    // Additional methods for managing activations, etc.\n}\n"
        }
    }
}"