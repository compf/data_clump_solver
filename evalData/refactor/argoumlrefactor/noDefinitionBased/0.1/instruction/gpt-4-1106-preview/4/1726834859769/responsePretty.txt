"
{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": "29",
                "toLine": "37",
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);"
            },
            {
                "fromLine": "39",
                "toLine": "47",
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColors secondaryColors = new ThemeColors(102, 102, 102, 153, 153, 153, 204, 204, 204);"
            },
            {
                "fromLine": "49",
                "toLine": "57",
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", Font.PLAIN, Font.BOLD, 14, 12);"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": "29",
                "toLine": "37",
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);"
            },
            {
                "fromLine": "39",
                "toLine": "47",
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColors secondaryColors = new ThemeColors(102, 102, 102, 153, 153, 153, 204, 204, 204);"
            },
            {
                "fromLine": "49",
                "toLine": "57",
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", Font.PLAIN, Font.BOLD, 16, 14);"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": "37",
                "toLine": "40",
                "oldContent": "private FigLine lineFig;\n    private FigRect rectFig;",
                "newContent": "private LifeLineFigures lifeLineFigures;"
            },
            {
                "fromLine": "42",
                "toLine": "44",
                "oldContent": "private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;",
                "newContent": "private ActivationList activationList;"
            },
            {
                "fromLine": "46",
                "toLine": "47",
                "oldContent": "static final int WIDTH = 150;\n    static final int HEIGHT = 500;",
                "newContent": "private static final LifeLineDimensions DIMENSIONS = new LifeLineDimensions(150, 500);"
            },
            {
                "fromLine": "51",
                "toLine": "53",
                "oldContent": "        rectFig = new FigRect(x, y, WIDTH, HEIGHT); \n        rectFig.setFilled(false);\n        rectFig.setLineWidth(0);",
                "newContent": "        lifeLineFigures = new LifeLineFigures(x, y, DIMENSIONS.getWidth(), DIMENSIONS.getHeight());\n        rectFig = lifeLineFigures.getRectFig();"
            },
            {
                "fromLine": "54",
                "toLine": "56",
                "oldContent": "        lineFig = new FigLine(x + WIDTH / 2, y, \n                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);\n        lineFig.setDashed(true);",
                "newContent": "        lineFig = lifeLineFigures.getLineFig();"
            },
            {
                "fromLine": "58",
                "toLine": "58",
                "oldContent": "        lineFig.setLineWidth(LINE_WIDTH);",
                "newContent": ""
            },
            {
                "fromLine": "60",
                "toLine": "60",
                "oldContent": "        addFig(rectFig);",
                "newContent": "        addFig(lifeLineFigures.getRectFig());"
            },
            {
                "fromLine": "61",
                "toLine": "61",
                "oldContent": "        addFig(lineFig);",
                "newContent": "        addFig(lifeLineFigures.getLineFig());"
            },
            {
                "fromLine": "64",
                "toLine": "64",
                "oldContent": "        activations = new LinkedList<FigActivation>();",
                "newContent": "        activationList = new ActivationList();"
            },
            {
                "fromLine": "65",
                "toLine": "65",
                "oldContent": "        stackedActivations = new LinkedList<FigActivation>();",
                "newContent": ""
            },
            {
                "fromLine": "68",
                "toLine": "68",
                "oldContent": "        clearActivations();",
                "newContent": "        activationList.clearActivations(this);"
            },
            {
                "fromLine": "70",
                "toLine": "70",
                "oldContent": "        activations = createStandardActivations(messages);",
                "newContent": "        activationList.setActivations(createStandardActivations(messages));"
            },
            {
                "fromLine": "71",
                "toLine": "71",
                "oldContent": "        stackedActivations = createStackedActivations(messages);",
                "newContent": "        activationList.setStackedActivations(createStackedActivations(messages));"
            },
            {
                "fromLine": "73",
                "toLine": "73",
                "oldContent": "        addActivations(activations);",
                "newContent": "        addActivations(activationList.getActivations());"
            },
            {
                "fromLine": "74",
                "toLine": "74",
                "oldContent": "        addActivations(stackedActivations);",
                "newContent": "        addActivations(activationList.getStackedActivations());"
            },
            {
                "fromLine": "77",
                "toLine": "77",
                "oldContent": "        calcBounds();",
                "newContent": "        // TODO: Do we need this?\n        // calcBounds();"
            },
            {
                "fromLine": "80",
                "toLine": "80",
                "oldContent": "    private void addActivations(",
                "newContent": "    void addActivations("
            },
            {
                "fromLine": "98",
                "toLine": "98",
                "oldContent": "    private List<FigActivation> createStandardActivations(",
                "newContent": "    List<FigActivation> createStandardActivations("
            },
            {
                "fromLine": "99",
                "toLine": "99",
                "oldContent": "                final List<FigMessage> figMessages) {        ",
                "newContent": "            final List<FigMessage> figMessages) {"
            },
            {
                "fromLine": "101",
                "toLine": "101",
                "oldContent": "        final List<FigActivation> newActivations =",
                "newContent": "        List<FigActivation> newActivations ="
            },
            {
                "fromLine": "102",
                "toLine": "102",
                "oldContent": "            new LinkedList<FigActivation>();",
                "newContent": "            activationList.createNewActivations();"
            },
            {
                "fromLine": "104",
                "toLine": "104",
                "oldContent": "        FigActivation currentActivation = null;",
                "newContent": "        FigActivation currentActivation = activationList.getCurrentActivation();"
            },
            {
                "fromLine": "106",
                "toLine": "106",
                "oldContent": "        if (!hasIncomingCallActionFirst(figMessages)) {",
                "newContent": "        if (!activationList.hasIncomingCallActionFirst(figMessages, lineFig)) {"
            },
            {
                "fromLine": "107",
                "toLine": "107",
                "oldContent": "            currentActivation = createActivationFig(",
                "newContent": "            currentActivation = activationList.createActivationFig("
            },
            {
                "fromLine": "108",
                "toLine": "108",
                "oldContent": "                    getOwner(),",
                "newContent": "                    this,"
            },
            {
                "fromLine": "109",
                "toLine": "109",
                "oldContent": "                    lineFig.getX(),",
                "newContent": "                    lineFig,"
            },
            {
                "fromLine": "110",
                "toLine": "110",
                "oldContent": "                    lineFig.getY(), ",
                "newContent": ""
            },
            {
                "fromLine": "111",
                "toLine": "111",
                "oldContent": "                    lineFig.getWidth(), ",
                "newContent": ""
            },
            {
                "fromLine": "112",
                "toLine": "112",
                "oldContent": "                    lineFig.getHeight(),",
                "newContent": ""
            },
            {
                "fromLine": "113",
                "toLine": "113",
                "oldContent": "                    getSettings(),",
                "newContent": ""
            },
            {
                "fromLine": "114",
                "toLine": "114",
                "oldContent": "                    null);",
                "newContent": "                    null, DIMENSIONS);"
            },
            {
                "fromLine": "117",
                "toLine": "117",
                "oldContent": "        int activationsCount = 0;",
                "newContent": "        int activationsCount = activationList.getActivationsCount();"
            },
            {
                "fromLine": "119",
                "toLine": "119",
                "oldContent": "        for (FigMessage figMessage : figMessages) {",
                "newContent": "        for (FigMessage figMessage : activationList.getFigMessages()) {"
            },
            {
                "fromLine": "120",
                "toLine": "120",
                "oldContent": "            int ySender = 0;",
                "newContent": "            int ySender = activationList.getYSender();"
            },
            {
                "fromLine": "122",
                "toLine": "122",
                "oldContent": "            if (!figMessage.isSelfMessage()) {",
                "newContent": "            if (!activationList.isSelfMessage(figMessage)) {"
            },
            {
                "fromLine": "123",
                "toLine": "123",
                "oldContent": "                if (isIncoming(figMessage)) {",
                "newContent": "                if (activationList.isIncoming(figMessage, getOwner())) {"
            },
            {
                "fromLine": "124",
                "toLine": "124",
                "oldContent": "                    if (currentActivation == null) {",
                "newContent": "                    if (activationList.isCurrentActivationNull()) {"
            },
            {
                "fromLine": "125",
                "toLine": "125",
                "oldContent": "                        if (figMessage.isSynchCallMessage()) {",
                "newContent": "                        if (activationList.isSynchCallMessage(figMessage)) {"
            },
            {
                "fromLine": "126",
                "toLine": "126",
                "oldContent": "                            // if we are the dest and is a call action, create the ",
                "newContent": "                            // if we are the dest and is a call action, create the"
            },
            {
                "fromLine": "127",
                "toLine": "127",
                "oldContent": "                            // activation, but don't add it until the height is set.",
                "newContent": "                            // activation, but don't add it until the height is set."
            },
            {
                "fromLine": "128",
                "toLine": "128",
                "oldContent": "                            ySender = figMessage.getFinalY();",
                "newContent": "                            ySender = activationList.getFinalY(figMessage);"
            },
            {
                "fromLine": "129",
                "toLine": "129",
                "oldContent": "                            currentActivation = createActivationFig(",
                "newContent": "                            currentActivation = activationList.createActivationFig("
            },
            {
                "fromLine": "130",
                "toLine": "130",
                "oldContent": "                                    getOwner(), ",
                "newContent": "                                    this,"
            },
            {
                "fromLine": "131",
                "toLine": "131",
                "oldContent": "                                    lineFig.getX(), ",
                "newContent": "                                    lineFig,"
            },
            {
                "fromLine": "132",
                "toLine": "132",
                "oldContent": "                                    ySender, ",
                "newContent": ""
            },
            {
                "fromLine": "133",
                "toLine": "133",
                "oldContent": "                                    0, ",
                "newContent": ""
            },
            {
                "fromLine": "134",
                "toLine": "134",
                "oldContent": "                                    0,",
                "newContent": ""
            },
            {
                "fromLine": "135",
                "toLine": "135",
                "oldContent": "                                    getSettings(),",
                "newContent": ""
            },
            {
                "fromLine": "136",
                "toLine": "136",
                "oldContent": "                                    figMessage);",
                "newContent": "                                    figMessage, DIMENSIONS);"
            },
            {
                "fromLine": "137",
                "toLine": "137",
                "oldContent": "                            activationsCount++;",
                "newContent": "                            activationList.incrementActivationsCount();"
            },
            {
                "fromLine": "138",
                "toLine": "138",
                "oldContent": "                        } else if (figMessage.isCreateMessage()) {",
                "newContent": "                        } else if (activationList.isCreateMessage(figMessage)) {"
            },
            {
                "fromLine": "139",
                "toLine": "139",
                "oldContent": "                            // if we are the destination of a create action,",
                "newContent": "                            // if we are the destination of a create action,"
            },
            {
                "fromLine": "140",
                "toLine": "140",
                "oldContent": "                            // create the entire activation",
                "newContent": "                            // create the entire activation"
            },
            {
                "fromLine": "141",
                "toLine": "141",
                "oldContent": "                            currentActivation = createActivationFig(",
                "newContent": "                            currentActivation = activationList.createActivationFig("
            },
            {
                "fromLine": "142",
                "toLine": "142",
                "oldContent": "                                    getOwner(),",
                "newContent": "                                    this,"
            },
            {
                "fromLine": "143",
                "toLine": "143",
                "oldContent": "                                    lineFig.getX(),",
                "newContent": "                                    lineFig,"
            },
            {
                "fromLine": "144",
                "toLine": "144",
                "oldContent": "                                    lineFig.getY(),",
                "newContent": ""
            },
            {
                "fromLine": "145",
                "toLine": "145",
                "oldContent": "                                    0,",
                "newContent": ""
            },
            {
                "fromLine": "146",
                "toLine": "146",
                "oldContent": "                                    0,",
                "newContent": ""
            },
            {
                "fromLine": "147",
                "toLine": "147",
                "oldContent": "                                    getSettings(),",
                "newContent": ""
            },
            {

            {
                "fromLine": "148",
                "toLine": "148",
                "oldContent": "                                    figMessage);",
                "newContent": "                                    figMessage, DIMENSIONS);"
            }
       																																																																																																																																													
           																																						
           																				
           														
           																
           									
           						
           				
           																						
           										
           									
           																																																	
           																									
           							
           					
           			
           						
           						
           					
           			
           			
           			
           						
           					
           				
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           			
           		"