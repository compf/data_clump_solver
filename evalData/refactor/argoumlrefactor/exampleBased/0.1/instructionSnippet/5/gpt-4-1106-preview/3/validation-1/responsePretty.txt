"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": 13,
                "toLine": 21,
                "oldContent": "\npackage org.argouml.activity2.diagram;\n\nimport java.awt.Dimension;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;\n",
                "newContent": "\npackage org.argouml.activity2.diagram;\n\nimport java.awt.Dimension;\nimport java.awt.Rectangle;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;\n"
            },
            {
                "fromLine": 35,
                "toLine": 45,
                "oldContent": "     * \n     * @param owner the owning UML element\n     * @param bounds rectangle describing bounds\n     * @param settings rendering settings\n     */\n    FigBaseNode(final Object owner, final Rectangle bounds,\n            final DiagramSettings settings) {\n        super(owner);\n        setBounds(bounds);\n        this.settings = settings;\n    }",
                "newContent": "     * \n     * @param owner the owning UML element\n     * @param bounds rectangle describing bounds\n     * @param settings rendering settings\n     */\n    FigBaseNode(final Object owner, final Rectangle bounds,\n            final DiagramSettings settings) {\n        super(owner, bounds, settings);\n        this.settings = settings;\n    }"
            },
            {
                "fromLine": 63,
                "toLine": 83,
                "oldContent": "    public void setNameDiagramElement(DiagramElement name) {\n    }\n\n    // TODO: Move an empty implementation to FigGroup in GEF\n    protected void positionChildren() {\n        Rectangle myBounds = getBounds();\n        if (displayState != null) {\n            displayState.setBounds(myBounds);\n        }\n//      calcBounds();\n        updateEdges();\n    }\n    \n    @Override\n    protected void setBoundsImpl(\n            final Rectangle bounds) {\n            \n            _x = bounds.x;\n            _y = bounds.y;\n        _w = bounds.width;\n        _h = bounds.height;",
                "newContent": "    public void setNameDiagramElement(DiagramElement name) {\n    }\n\n    // TODO: Move an empty implementation to FigGroup in GEF\n    protected void positionChildren() {\n        Rectangle myBounds = getBounds();\n        if (displayState != null) {\n            displayState.setBounds(myBounds);\n        }\n//      calcBounds();\n        updateEdges();\n    }\n    \n    @Override\n    public void setBounds(final Rectangle bounds) {\n            \n            _x = bounds.x;\n            _y = bounds.y;\n        _w = bounds.width;\n        _h = bounds.height;"
            }
        ]
    }
}"