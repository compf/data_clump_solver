refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java:
	[
		fromLine:"		67",
		toLine:"		87",
		oldContent:"
		    // TODO: Move an empty implementation to FigGroup in GEF
		    protected void positionChildren() {
		        if (displayState != null) {
		            displayState.setBounds(getBounds());
		        }
		//      calcBounds();
		        updateEdges();
		    }
		    
		    @Override
		    public void setBounds(int x, int y, int w, int h) {
		        super.setBounds(x, y, w, h);
		        positionChildren();
		    }
		
		    /**
		     * This is called to rearrange the contents of the Fig when a childs
		     * minimum size means it will no longer fit. If this group also has
		     * a parent and it will no longer fit that parent then control is
		     * delegated to that parent.
		     */		
",
		newContent:"
		    // TODO: Move an empty implementation to FigGroup in GEF
		    protected void positionChildren() {
		        if (displayState != null) {
		            displayState.setBounds(getBounds());
		        }
		//      calcBounds();
		        updateEdges();
		    }
		    
		    @Override
		    protected void setBoundsImpl(int x, int y, int w, int h) {
		        _x = x;
		        _y = y;
		        _w = w;
		        _h = h;
		        positionChildren();
		    }
		
		    /**
		     * This is called to rearrange the contents of the Fig when a childs
		     * minimum size means it will no longer fit. If this group also has
		     * a parent and it will no longer fit that parent then control is
		     * delegated to that parent.
		     */		
",
,

	],

}
extractedClasses:
{

}
