refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		29",
		toLine:"		29",
		oldContent:"
		import javax.swing.plaf.FontUIResource;		
",
		newContent:"
		import javax.swing.plaf.FontUIResource;
		import org.argouml.ui.ThemeColor;
		import org.argouml.ui.ThemeFont;		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		29",
		toLine:"		29",
		oldContent:"
		import javax.swing.plaf.FontUIResource;		
",
		newContent:"
		import javax.swing.plaf.FontUIResource;
		import org.argouml.ui.ThemeColor;
		import org.argouml.ui.ThemeFont;		
",
,

	],

}
extractedClasses:
{
	src/argouml-app/src/org/argouml/ui/ThemeColor.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	class ThemeColor {
	    private ColorUIResource primary1;
	    private ColorUIResource primary2;
	    private ColorUIResource primary3;
	    private ColorUIResource secondary1;
	    private ColorUIResource secondary2;
	    private ColorUIResource secondary3;
	
	    ThemeColor(int p1r, int p1g, int p1b, int p2r, int p2g, int p2b, int p3r, int p3g, int p3b) {
	        this.primary1 = new ColorUIResource(p1r, p1g, p1b);
	        this.primary2 = new ColorUIResource(p2r, p2g, p2b);
	        this.primary3 = new ColorUIResource(p3r, p3g, p3b);
	        this.secondary1 = new ColorUIResource(p1r, p1g, p1b);
	        this.secondary2 = new ColorUIResource(p2r, p2g, p2b);
	        this.secondary3 = new ColorUIResource(p3r, p3g, p3b);
	    }
	
	    ColorUIResource getPrimary1() { return primary1; }
	    ColorUIResource getPrimary2() { return primary2; }
	    ColorUIResource getPrimary3() { return primary3; }
	    ColorUIResource getSecondary1() { return secondary1; }
	    ColorUIResource getSecondary2() { return secondary2; }
	    ColorUIResource getSecondary3() { return secondary3; }
	}	
",
	src/argouml-app/src/org/argouml/ui/ThemeFont.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	class ThemeFont {
	    private FontUIResource controlFont;
	    private FontUIResource systemFont;
	    private FontUIResource windowTitleFont;
	    private FontUIResource userFont;
	    private FontUIResource smallFont;
	
	    ThemeFont(String controlFontFamily, String systemFontFamily, int fontSize, int smallFontSize) {
	        this.controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
	        this.systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, fontSize);
	        this.windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, fontSize);
	        this.userFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
	        this.smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallFontSize);
	    }
	
	    FontUIResource getControlFont() { return controlFont; }
	    FontUIResource getSystemFont() { return systemFont; }
	    FontUIResource getWindowTitleFont() { return windowTitleFont; }
	    FontUIResource getUserFont() { return userFont; }
	    FontUIResource getSmallFont() { return smallFont; }
	}	
",

}
