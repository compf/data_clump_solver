refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		29",
		toLine:"		33",
		oldContent:"
		private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);		
",
		newContent:"
		private final ThemeColor primaryColors = new ThemeColor(102, 102, 153, 153, 153, 204, 204, 204, 255);		
",
,
		fromLine:"		35",
		toLine:"		39",
		oldContent:"
		private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
				
",
,
		fromLine:"		41",
		toLine:"		49",
		oldContent:"
		private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 14);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 12);		
",
		newContent:"
		private final ThemeFont themeFonts = new ThemeFont("SansSerif", "Dialog", 14, 12);		
",
,
		fromLine:"		61",
		toLine:"		61",
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }		
",
,
		fromLine:"		65",
		toLine:"		65",
		oldContent:"
		protected ColorUIResource getPrimary2() { return primary2; }		
",
		newContent:"
		protected ColorUIResource getPrimary2() { return primaryColors.getPrimary2(); }		
",
,
		fromLine:"		69",
		toLine:"		69",
		oldContent:"
		protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary3() { return primaryColors.getPrimary3(); }		
",
,
		fromLine:"		73",
		toLine:"		73",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return primaryColors.getSecondary1(); }		
",
,
		fromLine:"		77",
		toLine:"		77",
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return primaryColors.getSecondary2(); }		
",
,
		fromLine:"		81",
		toLine:"		81",
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return primaryColors.getSecondary3(); }		
",
,
		fromLine:"		85",
		toLine:"		85",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		89",
		toLine:"		89",
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }		
",
,
		fromLine:"		93",
		toLine:"		93",
		oldContent:"
		public FontUIResource getUserTextFont() { return userFont; }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }		
",
,
		fromLine:"		97",
		toLine:"		97",
		oldContent:"
		public FontUIResource getMenuTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		101",
		toLine:"		101",
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }		
",
,
		fromLine:"		105",
		toLine:"		105",
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		29",
		toLine:"		33",
		oldContent:"
		private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);		
",
		newContent:"
		private final ThemeColor primaryColors = new ThemeColor(102, 102, 153, 153, 153, 204, 204, 204, 255);		
",
,
		fromLine:"		35",
		toLine:"		39",
		oldContent:"
		private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
				
",
,
		fromLine:"		41",
		toLine:"		49",
		oldContent:"
		private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 16);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 16);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);		
",
		newContent:"
		private final ThemeFont themeFonts = new ThemeFont("SansSerif", "Dialog", 16, 14);		
",
,
		fromLine:"		61",
		toLine:"		61",
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }		
",
,
		fromLine:"		65",
		toLine:"		65",
		oldContent:"
		protected ColorUIResource getPrimary2() { return primary2; }		
",
		newContent:"
		protected ColorUIResource getPrimary2() { return primaryColors.getPrimary2(); }		
",
,
		fromLine:"		69",
		toLine:"		69",
		oldContent:"
		protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary3() { return primaryColors.getPrimary3(); }		
",
,
		fromLine:"		73",
		toLine:"		73",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return primaryColors.getSecondary1(); }		
",
,
		fromLine:"		77",
		toLine:"		77",
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return primaryColors.getSecondary2(); }		
",
,
		fromLine:"		81",
		toLine:"		81",
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return primaryColors.getSecondary3(); }		
",
,
		fromLine:"		85",
		toLine:"		85",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		89",
		toLine:"		89",
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }		
",
,
		fromLine:"		93",
		toLine:"		93",
		oldContent:"
		public FontUIResource getUserTextFont() { return userFont; }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }		
",
,
		fromLine:"		97",
		toLine:"		97",
		oldContent:"
		public FontUIResource getMenuTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		101",
		toLine:"		101",
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }		
",
,
		fromLine:"		105",
		toLine:"		105",
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],

}
extractedClasses:
{
	ThemeColor.java:"
	class ThemeColor {
	    private ColorUIResource primary1;
	    private ColorUIResource primary2;
	    private ColorUIResource primary3;
	    private ColorUIResource secondary1;
	    private ColorUIResource secondary2;
	    private ColorUIResource secondary3;
	
	    ThemeColor(int p1r, int p1g, int p1b, int p2r, int p2g, int p2b, int p3r, int p3g, int p3b) {
	        this.primary1 = new ColorUIResource(p1r, p1g, p1b);
	        this.primary2 = new ColorUIResource(p2r, p2g, p2b);
	        this.primary3 = new ColorUIResource(p3r, p3g, p3b);
	        this.secondary1 = new ColorUIResource(p1r, p1g, p1b);
	        this.secondary2 = new ColorUIResource(p2r, p2g, p2b);
	        this.secondary3 = new ColorUIResource(p3r, p3g, p3b);
	    }
	
	    ColorUIResource getPrimary1() { return primary1; }
	    ColorUIResource getPrimary2() { return primary2; }
	    ColorUIResource getPrimary3() { return primary3; }
	    ColorUIResource getSecondary1() { return secondary1; }
	    ColorUIResource getSecondary2() { return secondary2; }
	    ColorUIResource getSecondary3() { return secondary3; }
	}	
",
	ThemeFont.java:"
	class ThemeFont {
	    private FontUIResource controlFont;
	    private FontUIResource systemFont;
	    private FontUIResource windowTitleFont;
	    private FontUIResource userFont;
	    private FontUIResource smallFont;
	
	    ThemeFont(String controlFontFamily, String systemFontFamily, int fontSize, int smallFontSize) {
	        this.controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
	        this.systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, fontSize);
	        this.windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, fontSize);
	        this.userFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
	        this.smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallFontSize);
	    }
	
	    FontUIResource getControlFont() { return controlFont; }
	    FontUIResource getSystemFont() { return systemFont; }
	    FontUIResource getWindowTitleFont() { return windowTitleFont; }
	    FontUIResource getUserFont() { return userFont; }
	    FontUIResource getSmallFont() { return smallFont; }
	}	
",

}
