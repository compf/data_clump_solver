{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 31,
                "toLine": 39,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": 41,
                "toLine": 49,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final ThemeFont themeFonts = new ThemeFont(\"SansSerif\", \"Dialog\", 14, 12);"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 31,
                "toLine": 39,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": 41,
                "toLine": 49,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);"
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final ThemeFont themeFonts = new ThemeFont(\"SansSerif\", \"Dialog\", 16, 14);"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 35,
                "toLine": 36,
                "oldContent": "private FigLine lineFig;\n    private FigRect rectFig;",
                "newContent": "private FigLineRect lineRect;"
            },
            {
                "fromLine": 38,
                "toLine": 39,
                "oldContent": "private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;",
                "newContent": "private ActivationList activationList;"
            }
        ],
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": 26,
                "toLine": 28,
                "oldContent": "private FigBasePresentation displayState;\n    private final DiagramSettings settings;\n    private DiagramElement nameDiagramElement;",
                "newContent": "private NodePresentation nodePresentation;"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColor.java": "public class ThemeColor {\n\n    private ColorUIResource color1;\n    private ColorUIResource color2;\n    private ColorUIResource color3;\n\n    public ThemeColor(int colorValue1, int colorValue2, int colorValue3) {\n        this.color1 = new ColorUIResource(colorValue1, colorValue1, colorValue1 + 51);\n        this.color2 = new ColorUIResource(colorValue2, colorValue2, colorValue2 + 51);\n        this.color3 = new ColorUIResource(colorValue3, colorValue3, colorValue3 + 51);\n    }\n\n    public ColorUIResource getColor1() {\n        return color1;\n    }\n\n    public ColorUIResource getColor2() {\n        return color2;\n    }\n\n    public ColorUIResource getColor3() {\n        return color3;\n    }\n}",
        "src/argouml-app/src/org/argouml/ui/ThemeFont.java": "public class ThemeFont {\n\n    private FontUIResource controlFont;\n    private FontUIResource systemFont;\n    private FontUIResource windowTitleFont;\n    private FontUIResource userFont;\n    private FontUIResource smallFont;\n\n    public ThemeFont(String controlFontName, String systemFontName, int fontSize, int smallFontSize) {\n        this.controlFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);\n        this.systemFont = new FontUIResource(systemFontName, Font.PLAIN, fontSize);\n        this.windowTitleFont = new FontUIResource(controlFontName, Font.BOLD, fontSize);\n        this.userFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);\n        this.smallFont = new FontUIResource(systemFontName, Font.PLAIN, smallFontSize);\n    }\n\n    // Getters for each font type\n}",
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLineRect.java": "public class FigLineRect {\n\n    private FigLine lineFig;\n    private FigRect rectFig;\n\n    public FigLineRect(int x, int y, int width, int height) {\n        rectFig = new FigRect(x, y, width, height);\n        lineFig = new FigLine(x + width / 2, y, x + width / 2, y + height, LINE_COLOR);\n    }\n\n    // Methods to manipulate line and rectangle\n}",
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/ActivationList.java": "public class ActivationList {\n\n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;\n\n    public ActivationList() {\n        activations = new LinkedList<FigActivation>();\n        stackedActivations = new LinkedList<FigActivation>();\n    }\n\n    // Methods to manage activations and stacked activations\n}",
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/NodePresentation.java": "public class NodePresentation {\n\n    private FigBasePresentation displayState;\n    private DiagramSettings settings;\n    private DiagramElement nameDiagramElement;\n\n    public NodePresentation(FigBasePresentation displayState, DiagramSettings settings) {\n        this.displayState = displayState;\n        this.settings = settings;\n        displayState.setOwner(getOwner());\n        addFig(displayState);\n    }\n\n    // Methods related to node presentation\n}"
    }
}