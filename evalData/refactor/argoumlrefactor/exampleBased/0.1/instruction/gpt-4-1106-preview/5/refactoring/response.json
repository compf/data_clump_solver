
{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 36,
                "toLine": 48,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 102, 102, 153, 153, 153, 204, 204, 204);"
            },
            {
                "fromLine": 50,
                "toLine": 54,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =",
                "newContent": "private final ThemeFonts fonts = new ThemeFonts(\"SansSerif\", Font.PLAIN, 14, \"Dialog\", Font.PLAIN, 14, \"SansSerif\", Font.BOLD, 14);"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 36,
                "toLine": 48,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 102, 102, 153, 153, 153, 204, 204, 204);"
            },
            {
                "fromLine": 50,
                "toLine": 54,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =",
                "newContent": "private final ThemeFonts fonts = new ThemeFonts(\"SansSerif\", Font.BOLD, 16, \"Dialog\", Font.PLAIN, 16, \"SansSerif\", Font.BOLD, 16);"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 36,
                "toLine": 38,
                "oldContent": "private FigLine lineFig;\n    private FigRect rectFig;",
                "newContent": "private LifeLineFigures lifeLineFigures;"
            },
            {
                "fromLine": 40,
                "toLine": 41,
                "oldContent": "private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;",
                "newContent": "private ActivationList activationList;"
            }
        ],
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": 29,
                "toLine": 31,
                "oldContent": "private FigBasePresentation displayState;\n    private final DiagramSettings settings;\n    private DiagramElement nameDiagramElement;",
                "newContent": "private NodeFigures nodeFigures;"
            }
        ]
    },
    "extractedClasses": {
        "ThemeColors.java": "class ThemeColors {\n    private ColorUIResource primary1;\n    private ColorUIResource primary2;\n    private ColorUIResource primary3;\n\n    private ColorUIResource secondary1;\n    private ColorUIResource secondary2;\n    private ColorUIResource secondary3;\n\n    ThemeColors(int p1r, int p1g, int p1b, int p2r, int p2g, int p2b, int p3r, int p3g, int p3b) {\n        this.primary1 = new ColorUIResource(p1r, p1g, p1b);\n        this.primary2 = new ColorUIResource(p2r, p2g, p2b);\n        this.primary3 = new ColorUIResource(p3r, p3g, p3b);\n    }\n\n    // Getters and other methods...\n}",
        "ThemeFonts.java": "class ThemeFonts {\n    private FontUIResource controlFont;\n    private FontUIResource systemFont;\n    private FontUIResource windowTitleFont;\n\n    ThemeFonts(String controlFontName, int controlFontStyle, int controlFontSize, String systemFontName, int systemFontStyle, int systemFontSize, String windowTitleFontName, int windowTitleFontStyle, int windowTitleFontSize) {\n        this.controlFont = new FontUIResource(controlFontName, controlFontStyle, controlFontSize);\n        this.systemFont = new FontUIResource(systemFontName, systemFontStyle, systemFontSize);\n        this.windowTitleFont = new FontUIResource(windowTitleFontName, windowTitleFontStyle, windowTitleFontSize);\n    }\n\n    // Getters and other methods...\n}",
        "LifeLineFigures.java": "class LifeLineFigures {\n    private FigLine lineFig;\n    private FigRect rectFig;\n\n    LifeLineFigures(int x, int y, int width, int height) {\n        this.rectFig = new FigRect(x, y, width, height);\n        this.lineFig = new FigLine(x + width / 2, y, x + width / 2, y + height);\n    }\n\n    // Getters, setters, and other methods...\n}",
        "ActivationList.java": "class ActivationList {\n    private List<FigActivation> activations;\n    private List<FigActivation> stackedActivations;\n\n    ActivationList() {\n        this.activations = new LinkedList<FigActivation>();\n        this.stackedActivations = new LinkedList<FigActivation>();\n    }\n\n    // Methods to manipulate activations...\n}",
        "NodeFigures.java": "class NodeFigures {\n    private FigBasePresentation displayState;\n    private DiagramSettings settings;\n    private DiagramElement nameDiagramElement;\n\n    NodeFigures(FigBasePresentation displayState, DiagramSettings settings) {\n        this.displayState = displayState;\n        this.settings = settings;\n    }\n\n    // Getters, setters, and other methods...\n}"
    }
}