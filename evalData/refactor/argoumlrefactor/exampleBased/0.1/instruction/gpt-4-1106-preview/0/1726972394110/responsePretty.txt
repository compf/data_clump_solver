refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		32",
		toLine:"		34",
		oldContent:"
		private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);		
",
		newContent:"
		private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:"		36",
		toLine:"		38",
		oldContent:"
		private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);		
",
		newContent:"
		private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:"		40",
		toLine:"		40",
		oldContent:"
		private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
				
",
,
		fromLine:"		42",
		toLine:"		46",
		oldContent:"
		private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
		    private final FontUIResource windowTitleFont =		
",
		newContent:"
		private final ThemeFont themeFonts = new ThemeFont("SansSerif", "Dialog", 14);		
",
,
		fromLine:"		47",
		toLine:"		49",
		oldContent:"
			new FontUIResource("SansSerif", Font.BOLD, 14);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);		
",
		newContent:"
				
",
,
		fromLine:"		50",
		toLine:"		50",
		oldContent:"
		private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 12);		
",
		newContent:"
				
",
,
		fromLine:"		53",
		toLine:"		53",
		oldContent:"
		public String getName() { return "Large Fonts"; }		
",
		newContent:"
		public String getName() { return themeFonts.getThemeName(); }		
",
,
		fromLine:"		58",
		toLine:"		58",
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }		
",
,
		fromLine:"		62",
		toLine:"		62",
		oldContent:"
		protected ColorUIResource getPrimary2() { return primary2; }		
",
		newContent:"
		protected ColorUIResource getPrimary2() { return primaryColors.getPrimary2(); }		
",
,
		fromLine:"		66",
		toLine:"		66",
		oldContent:"
		protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary3() { return primaryColors.getPrimary3(); }		
",
,
		fromLine:"		70",
		toLine:"		70",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return secondaryColors.getSecondary1(); }		
",
,
		fromLine:"		74",
		toLine:"		74",
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return secondaryColors.getSecondary2(); }		
",
,
		fromLine:"		78",
		toLine:"		78",
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return secondaryColors.getSecondary3(); }		
",
,
		fromLine:"		82",
		toLine:"		82",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		86",
		toLine:"		86",
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }		
",
,
		fromLine:"		90",
		toLine:"		90",
		oldContent:"
		public FontUIResource getUserTextFont() { return userFont; }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }		
",
,
		fromLine:"		94",
		toLine:"		94",
		oldContent:"
		public FontUIResource getMenuTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		98",
		toLine:"		98",
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }		
",
,
		fromLine:"		102",
		toLine:"		102",
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		32",
		toLine:"		34",
		oldContent:"
		private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);		
",
		newContent:"
		private final ThemeColor primaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:"		36",
		toLine:"		38",
		oldContent:"
		private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);		
",
		newContent:"
		private final ThemeColor secondaryColors = new ThemeColor(102, 153, 204);		
",
,
		fromLine:"		40",
		toLine:"		40",
		oldContent:"
		private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);		
",
		newContent:"
				
",
,
		fromLine:"		42",
		toLine:"		46",
		oldContent:"
		private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 16);
		    private final FontUIResource windowTitleFont =		
",
		newContent:"
		private final ThemeFont themeFonts = new ThemeFont("SansSerif", "Dialog", 16);		
",
,
		fromLine:"		47",
		toLine:"		49",
		oldContent:"
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 16);		
",
		newContent:"
				
",
,
		fromLine:"		50",
		toLine:"		50",
		oldContent:"
		private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);		
",
		newContent:"
				
",
,
		fromLine:"		53",
		toLine:"		53",
		oldContent:"
		public String getName() { return "Very Large Fonts"; }		
",
		newContent:"
		public String getName() { return themeFonts.getThemeName(); }		
",
,
		fromLine:"		58",
		toLine:"		58",
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return primaryColors.getPrimary1(); }		
",
,
		fromLine:"		62",
		toLine:"		62",
		oldContent:"
		protected ColorUIResource getPrimary2() { return primary2; }		
",
		newContent:"
		protected ColorUIResource getPrimary2() { return primaryColors.getPrimary2(); }		
",
,
		fromLine:"		66",
		toLine:"		66",
		oldContent:"
		protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary3() { return primaryColors.getPrimary3(); }		
",
,
		fromLine:"		70",
		toLine:"		70",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return secondaryColors.getSecondary1(); }		
",
,
		fromLine:"		74",
		toLine:"		74",
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return secondaryColors.getSecondary2(); }		
",
,
		fromLine:"		78",
		toLine:"		78",
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return secondaryColors.getSecondary3(); }		
",
,
		fromLine:"		82",
		toLine:"		82",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		86",
		toLine:"		86",
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }		
",
,
		fromLine:"		90",
		toLine:"		90",
		oldContent:"
		public FontUIResource getUserTextFont() { return userFont; }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }		
",
,
		fromLine:"		94",
		toLine:"		94",
		oldContent:"
		public FontUIResource getMenuTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		98",
		toLine:"		98",
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }		
",
,
		fromLine:"		102",
		toLine:"		102",
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],

}
extractedClasses:
{
	ThemeColor.java:"
	class ThemeColor {
	    private ColorUIResource primary1;
	    private ColorUIResource primary2;
	    private ColorUIResource primary3;
	
	    ThemeColor(int shade1, int shade2, int shade3) {
	        this.primary1 = new ColorUIResource(shade1, shade1, shade1 + 51);
	        this.primary2 = new ColorUIResource(shade2, shade2, shade2 + 51);
	        this.primary3 = new ColorUIResource(shade3, shade3, shade3 + 51);
	    }
	
	    public ColorUIResource getPrimary1() { return primary1; }
	    public ColorUIResource getPrimary2() { return primary2; }
	    public ColorUIResource getPrimary3() { return primary3; }
	}	
",
	ThemeFont.java:"
	class ThemeFont {
	    private FontUIResource controlFont;
	    private FontUIResource systemFont;
	    private FontUIResource windowTitleFont;
	    private FontUIResource userFont;
	    private FontUIResource smallFont;
	
	    ThemeFont(String controlFontName, String systemFontName, int fontSize) {
	        this.controlFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);
	        this.systemFont = new FontUIResource(systemFontName, Font.PLAIN, fontSize);
	        this.windowTitleFont = new FontUIResource(controlFontName, Font.BOLD, fontSize);
	        this.userFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);
	        this.smallFont = new FontUIResource(systemFontName, Font.PLAIN, fontSize - 2);
	    }
	
	    public FontUIResource getControlFont() { return controlFont; }
	    public FontUIResource getSystemFont() { return systemFont; }
	    public FontUIResource getWindowTitleFont() { return windowTitleFont; }
	    public FontUIResource getUserFont() { return userFont; }
	    public FontUIResource getSmallFont() { return smallFont; }
	    public String getThemeName() { return controlFont.getSize() > 14 ? "Very Large Fonts" : "Large Fonts"; }
	}	
",

}
