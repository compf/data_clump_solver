refactorings:
{
	src/argouml-app/src/org/argouml/ui/ThemeColors.java:
	[
		fromLine:"		1",
		toLine:"		16",
		oldContent:"
		import javax.swing.plaf.ColorUIResource;
		
		public class ThemeColors {
		
		    private final ColorUIResource primary1;
		    private final ColorUIResource primary2;
		    private final ColorUIResource primary3;
		    private final ColorUIResource secondary1;
		    private final ColorUIResource secondary2;
		    private final ColorUIResource secondary3;
		
		    public ThemeColors(int primary, int secondary, int tertiary) {
		        this.primary1 = new ColorUIResource(primary, primary, tertiary);
		        this.primary2 = new ColorUIResource(secondary, secondary, tertiary + 51);
		        this.primary3 = new ColorUIResource(tertiary, tertiary, tertiary + 102);
		        this.secondary1 = new ColorUIResource(primary, primary, primary);
		        this.secondary2 = new ColorUIResource(secondary, secondary, secondary);
		        this.secondary3 = new ColorUIResource(tertiary, tertiary, tertiary);
		    }
		
		    // Getters for all colors
		}		
",
		newContent:"
		package org.argouml.ui;
		
		import javax.swing.plaf.ColorUIResource;
		
		public class ThemeColors {
		
		    private final ColorUIResource primary1;
		    private final ColorUIResource primary2;
		    private final ColorUIResource primary3;
		    private final ColorUIResource secondary1;
		    private final ColorUIResource secondary2;
		    private final ColorUIResource secondary3;
		
		    public ThemeColors(int primary, int secondary, int tertiary) {
		        this.primary1 = new ColorUIResource(primary, primary, tertiary);
		        this.primary2 = new ColorUIResource(secondary, secondary, tertiary + 51);
		        this.primary3 = new ColorUIResource(tertiary, tertiary, tertiary + 102);
		        this.secondary1 = new ColorUIResource(primary, primary, primary);
		        this.secondary2 = new ColorUIResource(secondary, secondary, secondary);
		        this.secondary3 = new ColorUIResource(tertiary, tertiary, tertiary);
		    }
		
		    // Getters for all colors
		}		
",
,

	],
	src/argouml-app/src/org/argouml/ui/ThemeFonts.java:
	[
		fromLine:"		1",
		toLine:"		14",
		oldContent:"
		import javax.swing.plaf.FontUIResource;
		import java.awt.Font;
		
		public class ThemeFonts {
		
		    private final FontUIResource controlFont;
		    private final FontUIResource systemFont;
		    private final FontUIResource windowTitleFont;
		    private final FontUIResource userFont;
		    private final FontUIResource smallFont;
		
		    public ThemeFonts(String controlFontFamily, String systemFontFamily, int fontSize, int smallFontSize) {
		        this.controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
		        this.systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, fontSize);
		        this.windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, fontSize);
		        this.userFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
		        this.smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallFontSize);
		    }
		
		    // Getters for all fonts
		}		
",
		newContent:"
		package org.argouml.ui;
		
		import javax.swing.plaf.FontUIResource;
		import java.awt.Font;
		
		public class ThemeFonts {
		
		    private final FontUIResource controlFont;
		    private final FontUIResource systemFont;
		    private final FontUIResource windowTitleFont;
		    private final FontUIResource userFont;
		    private final FontUIResource smallFont;
		
		    public ThemeFonts(String controlFontFamily, String systemFontFamily, int fontSize, int smallFontSize) {
		        this.controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
		        this.systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, fontSize);
		        this.windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, fontSize);
		        this.userFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
		        this.smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallFontSize);
		    }
		
		    // Getters for all fonts
		}		
",
,

	],

}
extractedClasses:
{
	src/argouml-app/src/org/argouml/ui/ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	
	    private final ColorUIResource primary1;
	    private final ColorUIResource primary2;
	    private final ColorUIResource primary3;
	    private final ColorUIResource secondary1;
	    private final ColorUIResource secondary2;
	    private final ColorUIResource secondary3;
	
	    public ThemeColors(int primary, int secondary, int tertiary) {
	        this.primary1 = new ColorUIResource(primary, primary, tertiary);
	        this.primary2 = new ColorUIResource(secondary, secondary, tertiary + 51);
	        this.primary3 = new ColorUIResource(tertiary, tertiary, tertiary + 102);
	        this.secondary1 = new ColorUIResource(primary, primary, primary);
	        this.secondary2 = new ColorUIResource(secondary, secondary, secondary);
	        this.secondary3 = new ColorUIResource(tertiary, tertiary, tertiary);
	    }
	
	    // Getters for all colors
	}	
",
	src/argouml-app/src/org/argouml/ui/ThemeFonts.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.FontUIResource;
	import java.awt.Font;
	
	public class ThemeFonts {
	
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    public ThemeFonts(String controlFontFamily, String systemFontFamily, int fontSize, int smallFontSize) {
	        this.controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
	        this.systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, fontSize);
	        this.windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, fontSize);
	        this.userFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
	        this.smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallFontSize);
	    }
	
	    // Getters for all fonts
	}	
",

}
