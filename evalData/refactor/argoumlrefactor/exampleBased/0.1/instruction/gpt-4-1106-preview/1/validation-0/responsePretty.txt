refactorings:
{
	src/argouml-app/src/org/argouml/ui/ThemeFonts.java:
	[
		fromLine:"		1",
		toLine:"		14",
		oldContent:"
		public class ThemeFonts {
		
		    private final FontUIResource controlFont;
		    private final FontUIResource systemFont;
		    private final FontUIResource windowTitleFont;
		    private final FontUIResource userFont;
		    private final FontUIResource smallFont;
		
		    public ThemeFonts(String controlFontFamily, String systemFontFamily, int fontSize, int smallFontSize) {
		        this.controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
		        this.systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, fontSize);
		        this.windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, fontSize);
		        this.userFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
		        this.smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallFontSize);
		    }
		
		    // Getters for all fonts
		}		
",
		newContent:"
		import javax.swing.plaf.FontUIResource;
		import java.awt.Font;
		
		public class ThemeFonts {
		
		    private final FontUIResource controlFont;
		    private final FontUIResource systemFont;
		    private final FontUIResource windowTitleFont;
		    private final FontUIResource userFont;
		    private final FontUIResource smallFont;
		
		    public ThemeFonts(String controlFontFamily, String systemFontFamily, int fontSize, int smallFontSize) {
		        this.controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
		        this.systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, fontSize);
		        this.windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, fontSize);
		        this.userFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
		        this.smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallFontSize);
		    }
		
		    // Getters for all fonts
		}		
",
,

	],
	src/argouml-app/src/org/argouml/ui/ThemeColors.java:
	[
		fromLine:"		1",
		toLine:"		16",
		oldContent:"
		public class ThemeColors {
		
		    private final ColorUIResource primary1;
		    private final ColorUIResource primary2;
		    private final ColorUIResource primary3;
		    private final ColorUIResource secondary1;
		    private final ColorUIResource secondary2;
		    private final ColorUIResource secondary3;
		
		    public ThemeColors(int primary, int secondary, int tertiary) {
		        this.primary1 = new ColorUIResource(primary, primary, tertiary);
		        this.primary2 = new ColorUIResource(secondary, secondary, tertiary + 51);
		        this.primary3 = new ColorUIResource(tertiary, tertiary, tertiary + 102);
		        this.secondary1 = new ColorUIResource(primary, primary, primary);
		        this.secondary2 = new ColorUIResource(secondary, secondary, secondary);
		        this.secondary3 = new ColorUIResource(tertiary, tertiary, tertiary);
		    }
		
		    // Getters for all colors
		}		
",
		newContent:"
		import javax.swing.plaf.ColorUIResource;
		
		public class ThemeColors {
		
		    private final ColorUIResource primary1;
		    private final ColorUIResource primary2;
		    private final ColorUIResource primary3;
		    private final ColorUIResource secondary1;
		    private final ColorUIResource secondary2;
		    private final ColorUIResource secondary3;
		
		    public ThemeColors(int primary, int secondary, int tertiary) {
		        this.primary1 = new ColorUIResource(primary, primary, tertiary);
		        this.primary2 = new ColorUIResource(secondary, secondary, tertiary + 51);
		        this.primary3 = new ColorUIResource(tertiary, tertiary, tertiary + 102);
		        this.secondary1 = new ColorUIResource(primary, primary, primary);
		        this.secondary2 = new ColorUIResource(secondary, secondary, secondary);
		        this.secondary3 = new ColorUIResource(tertiary, tertiary, tertiary);
		    }
		
		    // Getters for all colors
		}		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		64",
		toLine:"		64",
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return themeColors.getPrimary1(); }		
",
,
		fromLine:"		69",
		toLine:"		69",
		oldContent:"
		protected ColorUIResource getPrimary2() { return primary2; }		
",
		newContent:"
		protected ColorUIResource getPrimary2() { return themeColors.getPrimary2(); }		
",
,
		fromLine:"		73",
		toLine:"		73",
		oldContent:"
		protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary3() { return themeColors.getPrimary3(); }		
",
,
		fromLine:"		79",
		toLine:"		79",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }		
",
,
		fromLine:"		84",
		toLine:"		84",
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return themeColors.getSecondary2(); }		
",
,
		fromLine:"		89",
		toLine:"		89",
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return themeColors.getSecondary3(); }		
",
,
		fromLine:"		94",
		toLine:"		94",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		99",
		toLine:"		99",
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }		
",
,
		fromLine:"		104",
		toLine:"		104",
		oldContent:"
		public FontUIResource getUserTextFont() { return userFont; }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }		
",
,
		fromLine:"		109",
		toLine:"		109",
		oldContent:"
		public FontUIResource getMenuTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		114",
		toLine:"		114",
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }		
",
,
		fromLine:"		119",
		toLine:"		119",
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		64",
		toLine:"		64",
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return themeColors.getPrimary1(); }		
",
,
		fromLine:"		69",
		toLine:"		69",
		oldContent:"
		protected ColorUIResource getPrimary2() { return primary2; }		
",
		newContent:"
		protected ColorUIResource getPrimary2() { return themeColors.getPrimary2(); }		
",
,
		fromLine:"		74",
		toLine:"		74",
		oldContent:"
		protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary3() { return themeColors.getPrimary3(); }		
",
,
		fromLine:"		80",
		toLine:"		80",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }		
",
,
		fromLine:"		85",
		toLine:"		85",
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return themeColors.getSecondary2(); }		
",
,
		fromLine:"		90",
		toLine:"		90",
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return themeColors.getSecondary3(); }		
",
,
		fromLine:"		95",
		toLine:"		95",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		100",
		toLine:"		100",
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return themeFonts.getSystemFont(); }		
",
,
		fromLine:"		105",
		toLine:"		105",
		oldContent:"
		public FontUIResource getUserTextFont() { return userFont; }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return themeFonts.getUserFont(); }		
",
,
		fromLine:"		110",
		toLine:"		110",
		oldContent:"
		public FontUIResource getMenuTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return themeFonts.getControlFont(); }		
",
,
		fromLine:"		115",
		toLine:"		115",
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return themeFonts.getSmallFont(); }		
",
,
		fromLine:"		120",
		toLine:"		120",
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],

}
extractedClasses:
{
	src/argouml-app/src/org/argouml/ui/ThemeFonts.java:"
	import javax.swing.plaf.FontUIResource;
	import java.awt.Font;
	
	public class ThemeFonts {
	
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    public ThemeFonts(String controlFontFamily, String systemFontFamily, int fontSize, int smallFontSize) {
	        this.controlFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
	        this.systemFont = new FontUIResource(systemFontFamily, Font.PLAIN, fontSize);
	        this.windowTitleFont = new FontUIResource(controlFontFamily, Font.BOLD, fontSize);
	        this.userFont = new FontUIResource(controlFontFamily, Font.PLAIN, fontSize);
	        this.smallFont = new FontUIResource(systemFontFamily, Font.PLAIN, smallFontSize);
	    }
	
	    // Getters for all fonts
	}	
",
	src/argouml-app/src/org/argouml/ui/ThemeColors.java:"
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	
	    private final ColorUIResource primary1;
	    private final ColorUIResource primary2;
	    private final ColorUIResource primary3;
	    private final ColorUIResource secondary1;
	    private final ColorUIResource secondary2;
	    private final ColorUIResource secondary3;
	
	    public ThemeColors(int primary, int secondary, int tertiary) {
	        this.primary1 = new ColorUIResource(primary, primary, tertiary);
	        this.primary2 = new ColorUIResource(secondary, secondary, tertiary + 51);
	        this.primary3 = new ColorUIResource(tertiary, tertiary, tertiary + 102);
	        this.secondary1 = new ColorUIResource(primary, primary, primary);
	        this.secondary2 = new ColorUIResource(secondary, secondary, secondary);
	        this.secondary3 = new ColorUIResource(tertiary, tertiary, tertiary);
	    }
	
	    // Getters for all colors
	}	
",

}
