{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 31,
                "toLine": 39,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColor primaryColors = new ThemeColor(new ColorUIResource(102, 102, 153), new ColorUIResource(153, 153, 204), new ColorUIResource(204, 204, 255));"
            },
            {
                "fromLine": 41,
                "toLine": 49,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColor secondaryColors = new ThemeColor(new ColorUIResource(102, 102, 102), new ColorUIResource(153, 153, 153), new ColorUIResource(204, 204, 204));"
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "private final ThemeFont themeFonts = new ThemeFont(new FontUIResource(\"SansSerif\", Font.PLAIN, 14), new FontUIResource(\"Dialog\", Font.PLAIN, 14), new FontUIResource(\"SansSerif\", Font.BOLD, 14), new FontUIResource(\"SansSerif\", Font.PLAIN, 14), new FontUIResource(\"Dialog\", Font.PLAIN, 12));"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 31,
                "toLine": 39,
                "oldContent": "private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "private final ThemeColor primaryColors = new ThemeColor(new ColorUIResource(102, 102, 153), new ColorUIResource(153, 153, 204), new ColorUIResource(204, 204, 255));"
            },
            {
                "fromLine": 41,
                "toLine": 49,
                "oldContent": "private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": "private final ThemeColor secondaryColors = new ThemeColor(new ColorUIResource(102, 102, 102), new ColorUIResource(153, 153, 153), new ColorUIResource(204, 204, 204));"
            },
            {
                "fromLine": 51,
                "toLine": 59,
                "oldContent": "private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "private final ThemeFont themeFonts = new ThemeFont(new FontUIResource(\"SansSerif\", Font.BOLD, 16), new FontUIResource(\"Dialog\", Font.PLAIN, 16), new FontUIResource(\"SansSerif\", Font.BOLD, 16), new FontUIResource(\"SansSerif\", Font.PLAIN, 16), new FontUIResource(\"Dialog\", Font.PLAIN, 14));"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 40,
                "toLine": 40,
                "oldContent": "private FigLine lineFig;",
                "newContent": "private LineFig lineFig;"
            },
            {
                "fromLine": 41,
                "toLine": 41,
                "oldContent": "private FigRect rectFig;",
                "newContent": "private RectFig rectFig;"
            },
            {
                "fromLine": 52,
                "toLine": 52,
                "oldContent": "        rectFig = new FigRect(x, y, WIDTH, HEIGHT); ",
                "newContent": "        rectFig = new RectFig(x, y, WIDTH, HEIGHT, LINE_COLOR, 0);"
            },
            {
                "fromLine": 53,
                "toLine": 53,
                "oldContent": "        rectFig.setFilled(false);",
                "newContent": ""
            },
            {
                "fromLine": 54,
                "toLine": 54,
                "oldContent": "        rectFig.setLineWidth(0);",
                "newContent": ""
            },
            {
                "fromLine": 55,
                "toLine": 55,
                "oldContent": "        lineFig = new FigLine(x + WIDTH / 2, y, ",
                "newContent": "        lineFig = new LineFig(x + WIDTH / 2, y, "
            },
            {
                "fromLine": 56,
                "toLine": 56,
                "oldContent": "                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);",
                "newContent": "                x + WIDTH / 2, y + HEIGHT, LINE_COLOR, LINE_WIDTH, true);"
            },
            {
                "fromLine": 57,
                "toLine": 57,
                "oldContent": "        lineFig.setDashed(true);",
                "newContent": ""
            },
            {
                "fromLine": 58,
                "toLine": 58,
                "oldContent": "        lineFig.setLineWidth(LINE_WIDTH);",
                "newContent": ""
            }
        ],
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": 23,
                "toLine": 23,
                "oldContent": "    private FigBasePresentation displayState;",
                "newContent": "    private PresentationFig displayState;"
            },
            {
                "fromLine": 36,
                "toLine": 36,
                "oldContent": "    void setDisplayState(FigBasePresentation displayState) {",
                "newContent": "    void setDisplayState(PresentationFig displayState) {"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColor.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColor {\n    private ColorUIResource primary1;\n    private ColorUIResource primary2;\n    private ColorUIResource primary3;\n\n    public ThemeColor(ColorUIResource p1, ColorUIResource p2, ColorUIResource p3) {\n        this.primary1 = p1;\n        this.primary2 = p2;\n        this.primary3 = p3;\n    }\n\n    public ColorUIResource getPrimary1() { return primary1; }\n\n    public ColorUIResource getPrimary2() { return primary2; }\n\n    public ColorUIResource getPrimary3() { return primary3; }\n}",
        "src/argouml-app/src/org/argouml/ui/ThemeFont.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFont {\n    private FontUIResource controlFont;\n    private FontUIResource systemFont;\n    private FontUIResource windowTitleFont;\n    private FontUIResource userFont;\n    private FontUIResource smallFont;\n\n    public ThemeFont(FontUIResource cf, FontUIResource sf, FontUIResource wtf, FontUIResource uf, FontUIResource smf) {\n        this.controlFont = cf;\n        this.systemFont = sf;\n        this.windowTitleFont = wtf;\n        this.userFont = uf;\n        this.smallFont = smf;\n    }\n\n    public FontUIResource getControlFont() { return controlFont; }\n\n    public FontUIResource getSystemFont() { return systemFont; }\n\n    public FontUIResource getWindowTitleFont() { return windowTitleFont; }\n\n    public FontUIResource getUserFont() { return userFont; }\n\n    public FontUIResource getSmallFont() { return smallFont; }\n}",
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/LineFig.java": "package org.argouml.sequence2.diagram;\n\nimport org.tigris.gef.presentation.FigLine;\n\npublic class LineFig extends FigLine {\n\n    public LineFig(int x1, int y1, int x2, int y2, Color lineColor, int lineWidth, boolean dashed) {\n        super(x1, y1, x2, y2, lineColor);\n        setLineWidth(lineWidth);\n        setDashed(dashed);\n    }\n}",
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/RectFig.java": "package org.argouml.sequence2.diagram;\n\nimport org.tigris.gef.presentation.FigRect;\n\npublic class RectFig extends FigRect {\n\n    public RectFig(int x, int y, int width, int height, Color lineColor, int lineWidth) {\n        super(x, y, width, height);\n        setLineColor(lineColor);\n        setLineWidth(lineWidth);\n        setFilled(false);\n    }\n}",
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/PresentationFig.java": "package org.argouml.activity2.diagram;\n\nimport org.tigris.gef.presentation.FigGroup;\n\npublic class PresentationFig extends FigGroup {\n\n    public PresentationFig(Object owner, Rectangle bounds, DiagramSettings settings) {\n        super(owner);\n        setBounds(bounds);\n        // additional initialization here if needed\n    }\n\n    // other methods specific to PresentationFig\n}"
    }
}