"{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 35,
                "toLine": 43,
                "oldContent": "    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "    private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);"
            },
            {
                "fromLine": 46,
                "toLine": 54,
                "oldContent": "    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": ""
            },
            {
                "fromLine": 56,
                "toLine": 64,
                "oldContent": "    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);",
                "newContent": "    private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", Font.PLAIN, Font.BOLD, 14, 12);"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 35,
                "toLine": 43,
                "oldContent": "    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);",
                "newContent": "    private final ThemeColors primaryColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);"
            },
            {
                "fromLine": 46,
                "toLine": 54,
                "oldContent": "    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);",
                "newContent": ""
            },
            {
                "fromLine": 56,
                "toLine": 64,
                "oldContent": "    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);",
                "newContent": "    private final ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", Font.PLAIN, Font.BOLD, 16, 14);"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 36,
                "toLine": 38,
                "oldContent": "    private FigLine lineFig;\n    private FigRect rectFig;",
                "newContent": "    private FigLineRect lineRect;"
            },
            {
                "fromLine": 58,
                "toLine": 60,
                "oldContent": "        rectFig = new FigRect(x, y, WIDTH, HEIGHT); \n        rectFig.setFilled(false);",
                "newContent": "        lineRect = new FigLineRect(x, y, WIDTH, HEIGHT, LINE_COLOR, LINE_WIDTH);"
            },
            {
                "fromLine": 61,
                "toLine": 63,
                "oldContent": "        lineFig = new FigLine(x + WIDTH / 2, y, \n                x + WIDTH / 2, y + HEIGHT, LINE_COLOR);",
                "newContent": ""
            },
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "        lineFig.setDashed(true);",
                "newContent": ""
            },
            {
                "fromLine": 65,
                "toLine": 65,
                "oldContent": "        lineFig.setLineWidth(LINE_WIDTH);",
                "newContent": ""
            },
            {
                "fromLine": 67,
                "toLine": 67,
                "oldContent": "        addFig(rectFig);",
                "newContent": "        addFig(lineRect);"
            },
            {
                "fromLine": 68,
                "toLine": 68,
                "oldContent": "        addFig(lineFig);",
                "newContent": ""
            }
        ],
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": 23,
                "toLine": 25,
                "oldContent": "    private FigBasePresentation displayState;\n    private final DiagramSettings settings;\n    private DiagramElement nameDiagramElement;",
                "newContent": "    private NodePresentation nodePresentation;"
            },
            {
                "fromLine": 33,
                "toLine": 33,
                "oldContent": "        this.settings = settings;",
                "newContent": ""
            },
            {
                "fromLine": 37,
                "toLine": 37,
                "oldContent": "        displayState.setOwner(getOwner());",
                "newContent": "        nodePresentation = new NodePresentation(displayState, getOwner());"
            },
            {
                "fromLine": 38,
                "toLine": 38,
                "oldContent": "        addFig(displayState);",
                "newContent": "        addFig(nodePresentation.getDisplayState());"
            },
            {
                "fromLine": 51,
                "toLine": 51,
                "oldContent": "        return displayState.getMinimumSize();",
                "newContent": "        return nodePresentation.getMinimumSize();"
            },
            {
                "fromLine": 53,
                "toLine": 53,
                "oldContent": "    public void setNameDiagramElement(DiagramElement name) {",
                "newContent": "    public void setNameDiagramElement(DiagramElement nameDiagramElement) {"
            },
            {
                "fromLine": 54,
                "toLine": 54,
                "oldContent": "    }",
                "newContent": "        nodePresentation.setNameDiagramElement(nameDiagramElement);\n    }"
            },
            {
                "fromLine": 57,
                "toLine": 60,
                "oldContent": "        Rectangle myBounds = getBounds();\n        if (displayState != null) {\n            displayState.setBounds(myBounds);\n        }",
                "newContent": "        nodePresentation.setBounds(getBounds());"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml-app/src/org/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColors {\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n    private final ColorUIResource secondary1;\n    private final ColorUIResource secondary2;\n    private final ColorUIResource secondary3;\n\n    public ThemeColors(int p1, int p2, int p3, int s1, int s2, int s3, int p4, int p5, int p6) {\n        primary1 = new ColorUIResource(p1, p2, p3);\n        primary2 = new ColorUIResource(s1, s2, s3);\n        primary3 = new ColorUIResource(p4, p5, p6);\n        secondary1 = new ColorUIResource(p1, p2, p2);\n        secondary2 = new ColorUIResource(s1, s2, s2);\n        secondary3 = new ColorUIResource(p4, p5, p5);\n    }\n\n    // Getters and potentially other methods\n}",
        "src/argouml-app/src/org/argouml/ui/ThemeFonts.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFonts {\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(String controlName, String systemName, int plainStyle, int boldStyle, int size, int smallSize) {\n        controlFont = new FontUIResource(controlName, boldStyle, size);\n        systemFont = new FontUIResource(systemName, plainStyle, size);\n        windowTitleFont = new FontUIResource(controlName, boldStyle, size);\n        userFont = new FontUIResource(controlName, plainStyle, size);\n        smallFont = new FontUIResource(systemName, plainStyle, smallSize);\n    }\n\n    // Getters and potentially other methods\n}",
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLineRect.java": "package org.argouml.sequence2.diagram;\n\nimport java.awt.Color;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\npublic class FigLineRect {\n    private FigLine line;\n    private FigRect rect;\n\n    public FigLineRect(int x, int y, int width, int height, Color lineColor, int lineWidth) {\n        rect = new FigRect(x, y, width, height);\n        rect.setFilled(false);\n        rect.setLineWidth(0);\n        line = new FigLine(x + width / 2, y, x + width / 2, y + height, lineColor);\n        line.setDashed(true);\n        line.setLineWidth(lineWidth);\n    }\n\n    // Getters and potentially other methods\n}",
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/NodePresentation.java": "package org.argouml.activity2.diagram;\n\nimport java.awt.Dimension;\nimport java.awt.Rectangle;\n\npublic class NodePresentation {\n    private FigBasePresentation displayState;\n    private DiagramElement nameDiagramElement;\n\n    public NodePresentation(FigBasePresentation displayState, Object owner) {\n        this.displayState = displayState;\n        displayState.setOwner(owner);\n    }\n\n    public void setNameDiagramElement(DiagramElement nameDiagramElement) {\n        this.nameDiagramElement = nameDiagramElement;\n    }\n\n    public FigBasePresentation getDisplayState() {\n        return displayState;\n    }\n\n    public Dimension getMinimumSize() {\n        return displayState.getMinimumSize();\n    }\n\n    public void setBounds(Rectangle bounds) {\n        if (displayState != null) {\n            displayState.setBounds(bounds);\n        }\n    }\n\n    // Potentially other methods\n}"
    }
}"