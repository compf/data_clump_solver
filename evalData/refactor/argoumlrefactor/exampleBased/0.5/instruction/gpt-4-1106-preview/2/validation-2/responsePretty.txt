refactorings:
{
	src/argouml-app/src/org/argouml/ui/ThemeColor.java:
	[
		fromLine:"		3",
		toLine:"		11",
		oldContent:"
		// Corrected the duplicate class issue by removing the duplicate ThemeColor class.
		
		    private ColorUIResource primary1, primary2, primary3;
		
		    public ThemeColor(int shade1, int shade2, int shade3) {
		        primary1 = new ColorUIResource(shade1, shade1, shade1 + 51);
		        primary2 = new ColorUIResource(shade2, shade2, shade2 + 51);
		        primary3 = new ColorUIResource(shade3, shade3, shade3 + 51);
		    }
		
		    public ColorUIResource getPrimary1() { return primary1; }
		    public ColorUIResource getPrimary2() { return primary2; }
		    public ColorUIResource getPrimary3() { return primary3; }
		}		
",
		newContent:"
		// Removed incorrect comment and restored the ThemeColor class definition.
		public class ThemeColor {
		
		    private ColorUIResource primary1, primary2, primary3;
		
		    public ThemeColor(int shade1, int shade2, int shade3) {
		        primary1 = new ColorUIResource(shade1, shade1, shade1 + 51);
		        primary2 = new ColorUIResource(shade2, shade2, shade2 + 51);
		        primary3 = new ColorUIResource(shade3, shade3, shade3 + 51);
		    }
		
		    public ColorUIResource getPrimary1() { return primary1; }
		    public ColorUIResource getPrimary2() { return primary2; }
		    public ColorUIResource getPrimary3() { return primary3; }
		}		
",
,

	],
	src/argouml-app/src/org/argouml/ui/ThemeFont.java:
	[
		fromLine:"		4",
		toLine:"		20",
		oldContent:"
		// Corrected the duplicate class issue by removing the duplicate ThemeFont class.
		
		    private FontUIResource controlFont, systemFont, windowTitleFont, userFont, smallFont;
		
		    public ThemeFont(String controlAndUserFontFamily, String systemAndSmallFontFamily, int normalSize, int smallSize) {
		        controlFont = new FontUIResource(controlAndUserFontFamily, Font.PLAIN, normalSize);
		        systemFont = new FontUIResource(systemAndSmallFontFamily, Font.PLAIN, normalSize);
		        windowTitleFont = new FontUIResource(controlAndUserFontFamily, Font.BOLD, normalSize);
		        userFont = new FontUIResource(controlAndUserFontFamily, Font.PLAIN, normalSize);
		        smallFont = new FontUIResource(systemAndSmallFontFamily, Font.PLAIN, smallSize);
		    }
		
		    public FontUIResource getControlFont() { return controlFont; }
		    public FontUIResource getSystemFont() { return systemFont; }
		    public FontUIResource getWindowTitleFont() { return windowTitleFont; }
		    public FontUIResource getUserFont() { return userFont; }
		    public FontUIResource getSmallFont() { return smallFont; }
		}		
",
		newContent:"
		// Removed incorrect comment and restored the ThemeFont class definition.
		public class ThemeFont {
		
		    private FontUIResource controlFont, systemFont, windowTitleFont, userFont, smallFont;
		
		    public ThemeFont(String controlAndUserFontFamily, String systemAndSmallFontFamily, int normalSize, int smallSize) {
		        controlFont = new FontUIResource(controlAndUserFontFamily, Font.PLAIN, normalSize);
		        systemFont = new FontUIResource(systemAndSmallFontFamily, Font.PLAIN, normalSize);
		        windowTitleFont = new FontUIResource(controlAndUserFontFamily, Font.BOLD, normalSize);
		        userFont = new FontUIResource(controlAndUserFontFamily, Font.PLAIN, normalSize);
		        smallFont = new FontUIResource(systemAndSmallFontFamily, Font.PLAIN, smallSize);
		    }
		
		    public FontUIResource getControlFont() { return controlFont; }
		    public FontUIResource getSystemFont() { return systemFont; }
		    public FontUIResource getWindowTitleFont() { return windowTitleFont; }
		    public FontUIResource getUserFont() { return userFont; }
		    public FontUIResource getSmallFont() { return smallFont; }
		}		
",
,

	],

}
