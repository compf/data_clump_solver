{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 36,
                "toLine": 125,
                "oldContent": "private ThemeColors themeColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);\nprivate ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 16, 14);",
                "newContent": "private ThemeColors themeColors;\nprivate ThemeFonts themeFonts;"
            },
            {
                "fromLine": 81,
                "toLine": 81,
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return themeColors.getPrimary1(); }"
            },
            {
                "fromLine": 85,
                "toLine": 85,
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return themeColors.getPrimary2(); }"
            },
            {
                "fromLine": 89,
                "toLine": 89,
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return themeColors.getPrimary3(); }"
            },
            {
                "fromLine": 93,
                "toLine": 93,
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }"
            },
            {
                "fromLine": 97,
                "toLine": 97,
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return themeColors.getSecondary2(); }"
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return themeColors.getSecondary3(); }"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return themeFonts.getControlTextFont(); }"
            },
            {
                "fromLine": 109,
                "toLine": 109,
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return themeFonts.getSystemTextFont(); }"
            },
            {
                "fromLine": 113,
                "toLine": 113,
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return themeFonts.getUserTextFont(); }"
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return themeFonts.getMenuTextFont(); }"
            },
            {
                "fromLine": 121,
                "toLine": 121,
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return themeFonts.getSubTextFont(); }"
            },
            {
                "fromLine": 125,
                "toLine": 125,
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }"
            }
        ],
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 50,
                "toLine": 126,
                "oldContent": "private ThemeColors themeColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);\nprivate ThemeFonts themeFonts = new ThemeFonts(\"SansSerif\", \"Dialog\", 14, 12);",
                "newContent": "private ThemeColors themeColors;\nprivate ThemeFonts themeFonts;"
            },
            {
                "fromLine": 56,
                "toLine": 56,
                "oldContent": "protected ColorUIResource getPrimary1() { return primary1; }",
                "newContent": "protected ColorUIResource getPrimary1() { return themeColors.getPrimary1(); }"
            },
            {
                "fromLine": 60,
                "toLine": 60,
                "oldContent": "protected ColorUIResource getPrimary2() { return primary2; }",
                "newContent": "protected ColorUIResource getPrimary2() { return themeColors.getPrimary2(); }"
            },
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "protected ColorUIResource getPrimary3() { return primary3; }",
                "newContent": "protected ColorUIResource getPrimary3() { return themeColors.getPrimary3(); }"
            },
            {
                "fromLine": 68,
                "toLine": 68,
                "oldContent": "protected ColorUIResource getSecondary1() { return secondary1; }",
                "newContent": "protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }"
            },
            {
                "fromLine": 72,
                "toLine": 72,
                "oldContent": "protected ColorUIResource getSecondary2() { return secondary2; }",
                "newContent": "protected ColorUIResource getSecondary2() { return themeColors.getSecondary2(); }"
            },
            {
                "fromLine": 76,
                "toLine": 76,
                "oldContent": "protected ColorUIResource getSecondary3() { return secondary3; }",
                "newContent": "protected ColorUIResource getSecondary3() { return themeColors.getSecondary3(); }"
            },
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "public FontUIResource getControlTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getControlTextFont() { return themeFonts.getControlTextFont(); }"
            },
            {
                "fromLine": 84,
                "toLine": 84,
                "oldContent": "public FontUIResource getSystemTextFont() { return systemFont; }",
                "newContent": "public FontUIResource getSystemTextFont() { return themeFonts.getSystemTextFont(); }"
            },
            {
                "fromLine": 88,
                "toLine": 88,
                "oldContent": "public FontUIResource getUserTextFont() { return userFont; }",
                "newContent": "public FontUIResource getUserTextFont() { return themeFonts.getUserTextFont(); }"
            },
            {
                "fromLine": 92,
                "toLine": 92,
                "oldContent": "public FontUIResource getMenuTextFont() { return controlFont; }",
                "newContent": "public FontUIResource getMenuTextFont() { return themeFonts.getMenuTextFont(); }"
            },
            {
                "fromLine": 96,
                "toLine": 96,
                "oldContent": "public FontUIResource getSubTextFont() { return smallFont; }",
                "newContent": "public FontUIResource getSubTextFont() { return themeFonts.getSubTextFont(); }"
            },
            {
                "fromLine": 100,
                "toLine": 100,
                "oldContent": "public FontUIResource getWindowTitleFont() { return windowTitleFont; }",
                "newContent": "public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }"
            }
        ]
    },
    "extractedClasses": {
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColors {\n\n    private final ColorUIResource primary1;\n    private final ColorUIResource primary2;\n    private final ColorUIResource primary3;\n\n    private final ColorUIResource secondary1;\n    private final ColorUIResource secondary2;\n    private final ColorUIResource secondary3;\n\n    public ThemeColors(int p1r, int p1g, int p1b, int p2r, int p2g, int p2b, int p3r, int p3g, int p3b) {\n        primary1 = new ColorUIResource(p1r, p1g, p1b);\n        primary2 = new ColorUIResource(p2r, p2g, p2b);\n        primary3 = new ColorUIResource(p3r, p3g, p3b);\n\n        secondary1 = new ColorUIResource(p1r, p1g, p1b);\n        secondary2 = new ColorUIResource(p2r, p2g, p2b);\n        secondary3 = new ColorUIResource(p3r, p3g, p3b);\n    }\n\n    // Getters for all colors\n}\n",
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/ThemeFonts.java": "package org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFonts {\n\n    private final FontUIResource controlFont;\n    private final FontUIResource systemFont;\n    private final FontUIResource windowTitleFont;\n    private final FontUIResource userFont;\n    private final FontUIResource smallFont;\n\n    public ThemeFonts(String controlFontName, String systemFontName, int fontSize, int smallFontSize) {\n        controlFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);\n        systemFont = new FontUIResource(systemFontName, Font.PLAIN, fontSize);\n        windowTitleFont = new FontUIResource(controlFontName, Font.BOLD, fontSize);\n        userFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);\n        smallFont = new FontUIResource(systemFontName, Font.PLAIN, smallFontSize);\n    }\n\n    // Getters for all fonts\n}\n"
    }
}