"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/UMLActivityDiagram.java": [
            {
                "fromLine": 68,
                "toLine": 88,
                "oldContent": "    \n    public DiagramElement createDiagramElement(\n            final Object modelElement,\n            final Rectangle bounds) {\n        \n        DiagramElement figNode = null;\n        \n        DiagramSettings settings = getDiagramSettings();\n        \n        if (Model.getFacade().isAActivityNode(modelElement)) {\n            figNode = new FigBaseNode(modelElement, bounds, settings);\n            final String style;\n            if (Model.getFacade().isAObjectNode(modelElement)) {\n                style = \"rect\";\n            } else if (Model.getFacade().isASendSignalAction(modelElement)) {\n                style = \"pentagon\";\n            } else if (Model.getFacade().isAAcceptEventAction(modelElement)) {\n                style = \"concave-pentagon\";\n            } else {\n                style = \"rrect\";\n            }",
                "newContent": "    \n    public DiagramElement createDiagramElement(\n            final Object modelElement,\n            final NodeBounds bounds) {\n        \n        DiagramElement figNode = null;\n        \n        DiagramSettings settings = getDiagramSettings();\n        \n        if (Model.getFacade().isAActivityNode(modelElement)) {\n            figNode = new FigBaseNode(modelElement, bounds.toRectangle(), settings);\n            final String style;\n            if (Model.getFacade().isAObjectNode(modelElement)) {\n                style = \"rect\";\n            } else if (Model.getFacade().isASendSignalAction(modelElement)) {\n                style = \"pentagon\";\n            } else if (Model.getFacade().isAAcceptEventAction(modelElement)) {\n                style = \"concave-pentagon\";\n            } else {\n                style = \"rrect\";\n            }"
            }
        ],
        "/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/ModePlaceDiagramElement.java": [
            {
                "fromLine": 84,
                "toLine": 104,
                "oldContent": "        //\n        start();\n        editor = Globals.curEditor();\n        Layer lay = editor.getLayerManager().getActiveLayer();\n        graphNode = createDiagramElement(lay, modelElement, diagram.getDiagramSettings());\n        mouseMoved(me);\n        me.consume();\n    }\n\n    private GraphNode createDiagramElement(Layer lay, Object owner, DiagramSettings settings) {\n        FigBaseNode fig = new FigBaseNode(owner, new Rectangle(0, 0, 0, 0), settings);\n        DiagramElementBuilder.buildDiagramElement(fig, style, owner, settings);\n        fig.setLayer(lay);\n        return fig;\n    }\n\n    public void mouseExited(MouseEvent me) {\n        editor.damageAll();\n        me.consume();\n    }\n",
                "newContent": "        //\n        start();\n        editor = Globals.curEditor();\n        Layer lay = editor.getLayerManager().getActiveLayer();\n        graphNode = createDiagramElement(lay, modelElement, diagram.getDiagramSettings());\n        mouseMoved(me);\n        me.consume();\n    }\n\n    private GraphNode createDiagramElement(Layer lay, Object owner, DiagramSettings settings) {\n        FigBaseNode fig = new FigBaseNode(owner, new NodeBounds(0, 0, 0, 0), settings);\n        DiagramElementBuilder.buildDiagramElement(fig, style, owner, settings);\n        fig.setLayer(lay);\n        return fig;\n    }\n\n    public void mouseExited(MouseEvent me) {\n        editor.damageAll();\n        me.consume();\n    }\n"
            }
        ]
    },
    "extractedClasses": {}
}"