refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		36",
		toLine:"		125",
		oldContent:"
		private ThemeColors themeColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);
		private ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 16, 14);		
",
		newContent:"
		private ThemeColors themeColors;
		private ThemeFonts themeFonts;		
",
,
		fromLine:"		81",
		toLine:"		81",
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return themeColors.getPrimary1(); }		
",
,
		fromLine:"		85",
		toLine:"		85",
		oldContent:"
		protected ColorUIResource getPrimary2() { return primary2; }		
",
		newContent:"
		protected ColorUIResource getPrimary2() { return themeColors.getPrimary2(); }		
",
,
		fromLine:"		89",
		toLine:"		89",
		oldContent:"
		protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary3() { return themeColors.getPrimary3(); }		
",
,
		fromLine:"		93",
		toLine:"		93",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }		
",
,
		fromLine:"		97",
		toLine:"		97",
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return themeColors.getSecondary2(); }		
",
,
		fromLine:"		101",
		toLine:"		101",
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return themeColors.getSecondary3(); }		
",
,
		fromLine:"		105",
		toLine:"		105",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return themeFonts.getControlTextFont(); }		
",
,
		fromLine:"		109",
		toLine:"		109",
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return themeFonts.getSystemTextFont(); }		
",
,
		fromLine:"		113",
		toLine:"		113",
		oldContent:"
		public FontUIResource getUserTextFont() { return userFont; }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return themeFonts.getUserTextFont(); }		
",
,
		fromLine:"		117",
		toLine:"		117",
		oldContent:"
		public FontUIResource getMenuTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return themeFonts.getMenuTextFont(); }		
",
,
		fromLine:"		121",
		toLine:"		121",
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return themeFonts.getSubTextFont(); }		
",
,
		fromLine:"		125",
		toLine:"		125",
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		50",
		toLine:"		126",
		oldContent:"
		private ThemeColors themeColors = new ThemeColors(102, 102, 153, 153, 153, 204, 204, 204, 255);
		private ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 14, 12);		
",
		newContent:"
		private ThemeColors themeColors;
		private ThemeFonts themeFonts;		
",
,
		fromLine:"		56",
		toLine:"		56",
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return themeColors.getPrimary1(); }		
",
,
		fromLine:"		60",
		toLine:"		60",
		oldContent:"
		protected ColorUIResource getPrimary2() { return primary2; }		
",
		newContent:"
		protected ColorUIResource getPrimary2() { return themeColors.getPrimary2(); }		
",
,
		fromLine:"		64",
		toLine:"		64",
		oldContent:"
		protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary3() { return themeColors.getPrimary3(); }		
",
,
		fromLine:"		68",
		toLine:"		68",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }		
",
,
		fromLine:"		72",
		toLine:"		72",
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return themeColors.getSecondary2(); }		
",
,
		fromLine:"		76",
		toLine:"		76",
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return themeColors.getSecondary3(); }		
",
,
		fromLine:"		80",
		toLine:"		80",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return themeFonts.getControlTextFont(); }		
",
,
		fromLine:"		84",
		toLine:"		84",
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return themeFonts.getSystemTextFont(); }		
",
,
		fromLine:"		88",
		toLine:"		88",
		oldContent:"
		public FontUIResource getUserTextFont() { return userFont; }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return themeFonts.getUserTextFont(); }		
",
,
		fromLine:"		92",
		toLine:"		92",
		oldContent:"
		public FontUIResource getMenuTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return themeFonts.getMenuTextFont(); }		
",
,
		fromLine:"		96",
		toLine:"		96",
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return themeFonts.getSubTextFont(); }		
",
,
		fromLine:"		100",
		toLine:"		100",
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }		
",
,

	],

}
extractedClasses:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	
	    private final ColorUIResource primary1;
	    private final ColorUIResource primary2;
	    private final ColorUIResource primary3;
	
	    private final ColorUIResource secondary1;
	    private final ColorUIResource secondary2;
	    private final ColorUIResource secondary3;
	
	    public ThemeColors(int p1r, int p1g, int p1b, int p2r, int p2g, int p2b, int p3r, int p3g, int p3b) {
	        primary1 = new ColorUIResource(p1r, p1g, p1b);
	        primary2 = new ColorUIResource(p2r, p2g, p2b);
	        primary3 = new ColorUIResource(p3r, p3g, p3b);
	
	        secondary1 = new ColorUIResource(p1r, p1g, p1b);
	        secondary2 = new ColorUIResource(p2r, p2g, p2b);
	        secondary3 = new ColorUIResource(p3r, p3g, p3b);
	    }
	
	    // Getters for all colors
	}
		
",
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/ThemeFonts.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFonts {
	
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    public ThemeFonts(String controlFontName, String systemFontName, int fontSize, int smallFontSize) {
	        controlFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);
	        systemFont = new FontUIResource(systemFontName, Font.PLAIN, fontSize);
	        windowTitleFont = new FontUIResource(controlFontName, Font.BOLD, fontSize);
	        userFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);
	        smallFont = new FontUIResource(systemFontName, Font.PLAIN, smallFontSize);
	    }
	
	    // Getters for all fonts
	}
		
",

}
