refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		64",
		toLine:"		74",
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary2()
		     */
		    protected ColorUIResource getPrimary2() { return primary2; }
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary3()
		     */
		    protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return primaryColors.getColor1(); }
		
		    protected ColorUIResource getPrimary2() { return primaryColors.getColor2(); }
		
		    protected ColorUIResource getPrimary3() { return primaryColors.getColor3(); }		
",
,
		fromLine:"		79",
		toLine:"		89",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSecondary2()
		     */
		    protected ColorUIResource getSecondary2() { return secondary2; }
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSecondary3()
		     */
		    protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }
		
		    protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }
		
		    protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }		
",
,
		fromLine:"		94",
		toLine:"		118",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }
		
		    public FontUIResource getSystemTextFont() { return systemFont; }
		
		    public FontUIResource getUserTextFont() { return userFont; }
		
		    public FontUIResource getMenuTextFont() { return controlFont; }
		
		    public FontUIResource getSubTextFont() { return smallFont; }
		
		    public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return fonts.getControlFont(); }
		
		    public FontUIResource getSystemTextFont() { return fonts.getSystemFont(); }
		
		    public FontUIResource getUserTextFont() { return fonts.getUserFont(); }
		
		    public FontUIResource getMenuTextFont() { return fonts.getControlFont(); }
		
		    public FontUIResource getSubTextFont() { return fonts.getSmallFont(); }
		
		    public FontUIResource getWindowTitleFont() { return fonts.getWindowTitleFont(); }		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		64",
		toLine:"		74",
		oldContent:"
		protected ColorUIResource getPrimary1() { return primary1; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary2()
		     */
		    protected ColorUIResource getPrimary2() { return primary2; }
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getPrimary3()
		     */
		    protected ColorUIResource getPrimary3() { return primary3; }		
",
		newContent:"
		protected ColorUIResource getPrimary1() { return primaryColors.getColor1(); }
		
		    protected ColorUIResource getPrimary2() { return primaryColors.getColor2(); }
		
		    protected ColorUIResource getPrimary3() { return primaryColors.getColor3(); }		
",
,
		fromLine:"		79",
		toLine:"		89",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSecondary2()
		     */
		    protected ColorUIResource getSecondary2() { return secondary2; }
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getSecondary3()
		     */
		    protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }
		
		    protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }
		
		    protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }		
",
,
		fromLine:"		94",
		toLine:"		118",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }
		
		    public FontUIResource getSystemTextFont() { return systemFont; }
		
		    public FontUIResource getUserTextFont() { return userFont; }
		
		    public FontUIResource getMenuTextFont() { return controlFont; }
		
		    public FontUIResource getSubTextFont() { return smallFont; }
		
		    public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return fonts.getControlFont(); }
		
		    public FontUIResource getSystemTextFont() { return fonts.getSystemFont(); }
		
		    public FontUIResource getUserTextFont() { return fonts.getUserFont(); }
		
		    public FontUIResource getMenuTextFont() { return fonts.getControlFont(); }
		
		    public FontUIResource getSubTextFont() { return fonts.getSmallFont(); }
		
		    public FontUIResource getWindowTitleFont() { return fonts.getWindowTitleFont(); }		
",
,

	],

}
extractedClasses:
{
	ThemeColors.java:"
	class ThemeColors {
	    private final ColorUIResource color1;
	    private final ColorUIResource color2;
	    private final ColorUIResource color3;
	
	    ThemeColors(int base, int increasedBy51, int increasedBy102) {
	        color1 = new ColorUIResource(base, base, increasedBy51);
	        color2 = new ColorUIResource(increasedBy51, increasedBy51, increasedBy102);
	        color3 = new ColorUIResource(increasedBy102, increasedBy102, base);
	    }
	
	    ColorUIResource getColor1() {
	        return color1;
	    }
	
	    ColorUIResource getColor2() {
	        return color2;
	    }
	
	    ColorUIResource getColor3() {
	        return color3;
	    }
	}	
",
	ThemeFonts.java:"
	class ThemeFonts {
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    ThemeFonts() {
	        this("SansSerif", "Dialog", Font.PLAIN, 14, 12);
	    }
	
	    ThemeFonts(String controlFontName, String systemFontName, int style, int largeSize, int smallSize) {
	        controlFont = new FontUIResource(controlFontName, style, largeSize);
	        systemFont = new FontUIResource(systemFontName, Font.PLAIN, largeSize);
	        windowTitleFont = new FontUIResource(controlFontName, style, largeSize);
	        userFont = new FontUIResource(controlFontName, Font.PLAIN, largeSize);
	        smallFont = new FontUIResource(systemFontName, Font.PLAIN, smallSize);
	    }
	
	    FontUIResource getControlFont() {
	        return controlFont;
	    }
	
	    FontUIResource getSystemFont() {
	        return systemFont;
	    }
	
	    FontUIResource getWindowTitleFont() {
	        return windowTitleFont;
	    }
	
	    FontUIResource getUserFont() {
	        return userFont;
	    }
	
	    FontUIResource getSmallFont() {
	        return smallFont;
	    }
	}	
",

}
