refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		81",
		toLine:"		81",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }		
",
,
		fromLine:"		86",
		toLine:"		86",
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }		
",
,
		fromLine:"		91",
		toLine:"		91",
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }		
",
,
		fromLine:"		96",
		toLine:"		96",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return fonts.getControlFont(); }		
",
,
		fromLine:"		101",
		toLine:"		101",
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return fonts.getSystemFont(); }		
",
,
		fromLine:"		106",
		toLine:"		106",
		oldContent:"
		public FontUIResource getUserTextFont() { return fonts.getUserFont(); }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return fonts.getUserFont(); }		
",
,
		fromLine:"		111",
		toLine:"		111",
		oldContent:"
		public FontUIResource getMenuTextFont() { return fonts.getControlFont(); }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return fonts.getControlFont(); }		
",
,
		fromLine:"		116",
		toLine:"		116",
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return fonts.getSmallFont(); }		
",
,
		fromLine:"		121",
		toLine:"		121",
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return fonts.getWindowTitleFont(); }		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		78",
		toLine:"		78",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return secondaryColors.getColor1(); }		
",
,
		fromLine:"		83",
		toLine:"		83",
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondary2; }		
",
		newContent:"
		protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }		
",
,
		fromLine:"		87",
		toLine:"		87",
		oldContent:"
		protected ColorUIResource getSecondary2() { return secondaryColors.getColor2(); }		
",
		newContent:"
		// Deleted incorrect duplicate method		
",
,
		fromLine:"		88",
		toLine:"		88",
		oldContent:"
		protected ColorUIResource getSecondary3() { return secondary3; }		
",
		newContent:"
		protected ColorUIResource getSecondary3() { return secondaryColors.getColor3(); }		
",
,
		fromLine:"		93",
		toLine:"		93",
		oldContent:"
		public FontUIResource getControlTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getControlTextFont() { return fonts.getControlFont(); }		
",
,
		fromLine:"		98",
		toLine:"		98",
		oldContent:"
		public FontUIResource getSystemTextFont() { return systemFont; }		
",
		newContent:"
		public FontUIResource getSystemTextFont() { return fonts.getSystemFont(); }		
",
,
		fromLine:"		103",
		toLine:"		103",
		oldContent:"
		public FontUIResource getUserTextFont() { return userFont; }		
",
		newContent:"
		public FontUIResource getUserTextFont() { return fonts.getUserFont(); }		
",
,
		fromLine:"		108",
		toLine:"		108",
		oldContent:"
		public FontUIResource getMenuTextFont() { return controlFont; }		
",
		newContent:"
		public FontUIResource getMenuTextFont() { return fonts.getControlFont(); }		
",
,
		fromLine:"		113",
		toLine:"		113",
		oldContent:"
		public FontUIResource getSubTextFont() { return smallFont; }		
",
		newContent:"
		public FontUIResource getSubTextFont() { return fonts.getSmallFont(); }		
",
,
		fromLine:"		118",
		toLine:"		118",
		oldContent:"
		public FontUIResource getWindowTitleFont() { return windowTitleFont; }		
",
		newContent:"
		public FontUIResource getWindowTitleFont() { return fonts.getWindowTitleFont(); }		
",
,

	],

}
extractedClasses:
{
	ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	class ThemeColors {
	    private final ColorUIResource color1;
	    private final ColorUIResource color2;
	    private final ColorUIResource color3;
	
	    ThemeColors(int colorValue) {
	        color1 = new ColorUIResource(colorValue, colorValue, colorValue + 51);
	        color2 = new ColorUIResource(colorValue + 51, colorValue + 51, colorValue + 102);
	        color3 = new ColorUIResource(colorValue + 102, colorValue + 102, colorValue + 153);
	    }
	
	    ColorUIResource getColor1() {
	        return color1;
	    }
	
	    ColorUIResource getColor2() {
	        return color2;
	    }
	
	    ColorUIResource getColor3() {
	        return color3;
	    }
	}	
",
	ThemeFonts.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	class ThemeFonts {
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    ThemeFonts() {
	        this("SansSerif", "Dialog", Font.PLAIN, 14, 12);
	    }
	
	    ThemeFonts(String controlFontName, String systemFontName, int style, int largeSize, int smallSize) {
	        controlFont = new FontUIResource(controlFontName, style, largeSize);
	        systemFont = new FontUIResource(systemFontName, Font.PLAIN, largeSize);
	        windowTitleFont = new FontUIResource(controlFontName, style, largeSize);
	        userFont = new FontUIResource(controlFontName, Font.PLAIN, largeSize);
	        smallFont = new FontUIResource(systemFontName, Font.PLAIN, smallSize);
	    }
	
	    FontUIResource getControlFont() {
	        return controlFont;
	    }
	
	    FontUIResource getSystemFont() {
	        return systemFont;
	    }
	
	    FontUIResource getWindowTitleFont() {
	        return windowTitleFont;
	    }
	
	    FontUIResource getUserFont() {
	        return userFont;
	    }
	
	    FontUIResource getSmallFont() {
	        return smallFont;
	    }
	}	
",

}
