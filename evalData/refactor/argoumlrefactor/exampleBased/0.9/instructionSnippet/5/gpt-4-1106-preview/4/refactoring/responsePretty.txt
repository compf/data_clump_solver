refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		38",
		toLine:"		75",
		oldContent:"
		
		package org.argouml.ui;
		
		import java.awt.Font;
		import javax.swing.plaf.ColorUIResource;
		import javax.swing.plaf.FontUIResource;
		import javax.swing.plaf.metal.MetalTheme;
		
		/**
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsBigTheme extends MetalTheme {
		
		    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);
		
		    private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 14);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 12);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */		
",
		newContent:"
		private ThemeColorResource primaryColors;
		    private ThemeColorResource secondaryColors;
		    private ThemeFontResource themeFonts;
		
		    // Constructor
		    public JasonsBigTheme() {
		        primaryColors = new ThemeColorResource(102, 102, 153, 153, 153, 204, 204, 204, 255);
		        secondaryColors = new ThemeColorResource(102, 102, 102, 153, 153, 153, 204, 204, 204);
		        themeFonts = new ThemeFontResource("SansSerif", "Dialog", 14, 12);
		    }		
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		38",
		toLine:"		75",
		oldContent:"
		
		package org.argouml.ui;
		
		import java.awt.Font;
		import javax.swing.plaf.ColorUIResource;
		import javax.swing.plaf.FontUIResource;
		import javax.swing.plaf.metal.MetalTheme;
		
		/**
		 * This class defines a variation on the default Metal Theme.
		 */
		public class JasonsHugeTheme extends MetalTheme {
		
		    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);
		
		    private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 16);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 16);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
		
		    /*
		     * @see javax.swing.plaf.metal.MetalTheme#getName()
		     */		
",
		newContent:"
		private ThemeColorResource primaryColors;
		    private ThemeColorResource secondaryColors;
		    private ThemeFontResource themeFonts;
		
		    // Constructor
		    public JasonsHugeTheme() {
		        primaryColors = new ThemeColorResource(102, 102, 153, 153, 153, 204, 204, 204, 255);
		        secondaryColors = new ThemeColorResource(102, 102, 102, 153, 153, 153, 204, 204, 204);
		        themeFonts = new ThemeFontResource("SansSerif", "Dialog", 16, 14);
		    }		
",
,

	],
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:"		40",
		toLine:"		53",
		oldContent:"
		
		package org.argouml.sequence2.diagram;
		
		import java.awt.Rectangle;
		import java.util.Collections;
		import java.util.LinkedList;
		import java.util.List;
		
		import org.argouml.uml.diagram.DiagramSettings;
		import org.argouml.uml.diagram.ui.ArgoFigGroup;
		import org.tigris.gef.presentation.FigLine;
		import org.tigris.gef.presentation.FigRect;
		
				
",
		newContent:"
		
		package org.argouml.sequence2.diagram;
		
		import org.argouml.uml.diagram.DiagramSettings;
		import org.argouml.uml.diagram.ui.ArgoFigGroup;
		import org.tigris.gef.presentation.FigLine;
		import org.tigris.gef.presentation.FigRect;
		
				
",
,
		fromLine:"		249",
		toLine:"		262",
		oldContent:"
		        return (messageFig.getSourceFigNode().getOwner() == getOwner());
		    }
		    
		    private FigActivation createActivationFig(
		            final Object owner, 
		            final int x, 
		            final int y, 
		            final int w, 
		            final int h,
		            final DiagramSettings settings,
		            final FigMessage messageFig) {
		        return new FigActivation(
		                owner,
		                new Rectangle(x, y, w, h),		
",
		newContent:"
		        return (messageFig.getSourceFigNode().getOwner() == getOwner());
		    }
		    
		    private FigActivation createActivationFig(
		            final Object owner, 
		            final FigDimensions dimensions,
		            final DiagramSettings settings,
		            final FigMessage messageFig) {
		        return new FigActivation(
		                owner,
		                dimensions.toRectangle(),		
",
,

	],
	src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java:
	[
		fromLine:"		13",
		toLine:"		22",
		oldContent:"
		
		package org.argouml.activity2.diagram;
		
		import java.awt.Dimension;
		import java.awt.Rectangle;
		
		import org.argouml.uml.diagram.DiagramSettings;
		import org.tigris.gef.presentation.FigGroup;
		import org.tigris.gef.presentation.FigNode;
				
",
		newContent:"
		
		package org.argouml.activity2.diagram;
		
		import org.argouml.uml.diagram.DiagramSettings;
		import org.tigris.gef.presentation.FigGroup;
		import org.tigris.gef.presentation.FigNode;
				
",
,
		fromLine:"		74",
		toLine:"		87",
		oldContent:"
		        updateEdges();
		    }
		    
		    @Override
		    protected void setBoundsImpl(
		            final int x,
		            final int y,
		            final int w,
		            final int h) {
		
		        _x = x;
		        _y = y;
		        _w = w;
		        _h = h;		
",
		newContent:"
		        updateEdges();
		    }
		    
		    @Override
		    protected void setBoundsImpl(final FigDimensions dimensions) {
		
		        _x = dimensions.getX();
		        _y = dimensions.getY();
		        _w = dimensions.getWidth();
		        _h = dimensions.getHeight();		
",
,

	],

}
extractedClasses:
{
	src/argouml-app/src/org/argouml/ui/ThemeColorResource.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColorResource {
	    private final ColorUIResource primary1;
	    private final ColorUIResource primary2;
	    private final ColorUIResource primary3;
	
	    private final ColorUIResource secondary1;
	    private final ColorUIResource secondary2;
	    private final ColorUIResource secondary3;
	
	    public ThemeColorResource(int red1, int green1, int blue1, int red2, int green2, int blue2, int red3, int green3, int blue3) {
	        this.primary1 = new ColorUIResource(red1, green1, blue1);
	        this.primary2 = new ColorUIResource(red2, green2, blue2);
	        this.primary3 = new ColorUIResource(red3, green3, blue3);
	        this.secondary1 = new ColorUIResource(red1, green1, blue1);
	        this.secondary2 = new ColorUIResource(red2, green2, blue2);
	        this.secondary3 = new ColorUIResource(red3, green3, blue3);
	    }
	
	    // Getters for the color resources...
	}	
",
	src/argouml-app/src/org/argouml/ui/ThemeFontResource.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFontResource {
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    public ThemeFontResource(String controlFontName, String systemFontName, int mainFontSize, int smallFontSize) {
	        this.controlFont = new FontUIResource(controlFontName, Font.PLAIN, mainFontSize);
	        this.systemFont = new FontUIResource(systemFontName, Font.PLAIN, mainFontSize);
	        this.windowTitleFont = new FontUIResource(controlFontName, Font.BOLD, mainFontSize);
	        this.userFont = new FontUIResource(controlFontName, Font.PLAIN, mainFontSize);
	        this.smallFont = new FontUIResource(systemFontName, Font.PLAIN, smallFontSize);
	    }
	
	    // Getters for the font resources...
	}	
",
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigDimensions.java:"
	package org.argouml.sequence2.diagram;
	
	import java.awt.Rectangle;
	
	public class FigDimensions {
	
	    private final int x;
	    private final int y;
	    private final int width;
	    private final int height;
	
	    public FigDimensions(final int x, final int y, final int width, final int height) {
	        this.x = x;
	        this.y = y;
	        this.width = width;
	        this.height = height;
	    }
	
	    public Rectangle toRectangle() {
	        return new Rectangle(x, y, width, height);
	    }
	
	    // Getters for x, y, width, height...
	}	
",
	src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigDimensions.java:"
	package org.argouml.activity2.diagram;
	
	public class FigDimensions {
	
	    private final int x;
	    private final int y;
	    private final int width;
	    private final int height;
	
	    public FigDimensions(final int x, final int y, final int width, final int height) {
	        this.x = x;
	        this.y = y;
	        this.width = width;
	        this.height = height;
	    }
	
	    // Getters for x, y, width, height...
	}	
",

}
