refactorings:
{
	src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		49",
		toLine:"		72",
		oldContent:"
		public class JasonsBigTheme extends MetalTheme {
		
		    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);
		
		    private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 14);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 14);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 12);
				
",
		newContent:"
		public class JasonsBigTheme extends MetalTheme {
		
		    private ThemeColors primaryColors = new ThemeColors(102, 153, 204);
		    private ThemeColors secondaryColors = new ThemeColors(102, 153, 204);
		    private ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 14, 12);
				
",
,

	],
	src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		49",
		toLine:"		72",
		oldContent:"
		public class JasonsHugeTheme extends MetalTheme {
		
		    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);
		    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);
		    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);
		
		    private final ColorUIResource secondary1 =
			new ColorUIResource(102, 102, 102);
		    private final ColorUIResource secondary2 =
			new ColorUIResource(153, 153, 153);
		    private final ColorUIResource secondary3 =
			new ColorUIResource(204, 204, 204);
		
		    private final FontUIResource controlFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource systemFont =
			new FontUIResource("Dialog", Font.PLAIN, 16);
		    private final FontUIResource windowTitleFont =
			new FontUIResource("SansSerif", Font.BOLD, 16);
		    private final FontUIResource userFont =
			new FontUIResource("SansSerif", Font.PLAIN, 16);
		    private final FontUIResource smallFont =
			new FontUIResource("Dialog", Font.PLAIN, 14);
				
",
		newContent:"
		public class JasonsHugeTheme extends MetalTheme {
		
		    private ThemeColors primaryColors = new ThemeColors(102, 153, 204);
		    private ThemeColors secondaryColors = new ThemeColors(102, 153, 204);
		    private ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 16, 14);
				
",
,

	],
	src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java:
	[
		fromLine:"		252",
		toLine:"		259",
		oldContent:"
		private FigActivation createActivationFig(
		            final Object owner, 
		            final int x, 
		            final int y, 
		            final int w, 
		            final int h,
		            final DiagramSettings settings,
		            final FigMessage messageFig) {		
",
		newContent:"
		private FigActivation createActivationFig(
		            final Object owner,
		            final Rectangle bounds,
		            final DiagramSettings settings,
		            final FigMessage messageFig) {		
",
,

	],
	src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java:
	[
		fromLine:"		77",
		toLine:"		84",
		oldContent:"
		@Override
		    protected void setBoundsImpl(
		            final int x,
		            final int y,
		            final int w,
		            final int h) {
		
		        _x = x;		
",
		newContent:"
		@Override
		    protected void setBoundsImpl(final Rectangle bounds) {
		
		        _x = bounds.x;		
",
,

	],

}
extractedClasses:
{
	src/argouml-app/src/org/argouml/ui/ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	    private final ColorUIResource color1;
	    private final ColorUIResource color2;
	    private final ColorUIResource color3;
	
	    public ThemeColors(int colorValue1, int colorValue2, int colorValue3) {
	        this.color1 = new ColorUIResource(colorValue1, colorValue1, colorValue1 + 51);
	        this.color2 = new ColorUIResource(colorValue2, colorValue2, colorValue2 + 51);
	        this.color3 = new ColorUIResource(colorValue3, colorValue3, colorValue3 + 51);
	    }
	
	    public ColorUIResource getColor1() { return color1; }
	    public ColorUIResource getColor2() { return color2; }
	    public ColorUIResource getColor3() { return color3; }
	}	
",
	src/argouml-app/src/org/argouml/ui/ThemeFonts.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.FontUIResource;
	import java.awt.Font;
	
	public class ThemeFonts {
	    private final FontUIResource controlFont;
	    private final FontUIResource systemFont;
	    private final FontUIResource windowTitleFont;
	    private final FontUIResource userFont;
	    private final FontUIResource smallFont;
	
	    public ThemeFonts(String controlFontName, String systemFontName, int mainFontSize, int smallFontSize) {
	        this.controlFont = new FontUIResource(controlFontName, Font.PLAIN, mainFontSize);
	        this.systemFont = new FontUIResource(systemFontName, Font.PLAIN, mainFontSize);
	        this.windowTitleFont = new FontUIResource(controlFontName, Font.BOLD, mainFontSize);
	        this.userFont = new FontUIResource(controlFontName, Font.PLAIN, mainFontSize);
	        this.smallFont = new FontUIResource(systemFontName, Font.PLAIN, smallFontSize);
	    }
	
	    public FontUIResource getControlFont() { return controlFont; }
	    public FontUIResource getSystemFont() { return systemFont; }
	    public FontUIResource getWindowTitleFont() { return windowTitleFont; }
	    public FontUIResource getUserFont() { return userFont; }
	    public FontUIResource getSmallFont() { return smallFont; }
	}	
",

}
