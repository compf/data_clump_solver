refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java:
	[
		fromLine:"		13",
		toLine:"		21",
		oldContent:"
		
		package org.argouml.activity2.diagram;
		
		import org.argouml.diagram.ShapeDimensions;
		
		import org.argouml.uml.diagram.DiagramSettings;
		import org.tigris.gef.presentation.FigGroup;
		import org.tigris.gef.presentation.FigNode;
				
",
		newContent:"
		
		package org.argouml.activity2.diagram;
		
		import java.awt.Dimension;
		import java.awt.Rectangle;
		
		import org.argouml.uml.diagram.DiagramSettings;
		import org.tigris.gef.presentation.FigGroup;
		import org.tigris.gef.presentation.FigNode;
				
",
,
		fromLine:"		39",
		toLine:"		41",
		oldContent:"
		     */
		    FigBaseNode(final Object owner, final Rectangle bounds,
		            final DiagramSettings settings) {		
",
		newContent:"
		     */
		    FigBaseNode(final Object owner, final Rectangle bounds,
		            final DiagramSettings settings) {		
",
,
		fromLine:"		58",
		toLine:"		60",
		oldContent:"
		    @Override
		    public Dimension getMinimumSize() {
		        return displayState.getMinimumSize();		
",
		newContent:"
		    @Override
		    public Dimension getMinimumSize() {
		        // Implementation goes here
		    }		
",
,
		fromLine:"		67",
		toLine:"		69",
		oldContent:"
		    protected void positionChildren() {
		        Rectangle myBounds = getBounds();
		        if (displayState != null) {		
",
		newContent:"
		    protected void positionChildren() {
		        // Implementation goes here
		    }		
",
,
		fromLine:"		75",
		toLine:"		84",
		oldContent:"
		    
		    @Override
		    protected void setBoundsImpl(
		            final ShapeDimensions dimensions) {
		
		        _x = x;
		        _y = y;
		        _w = w;
		        _h = h;
		        		
",
		newContent:"
		    
		    @Override
		    protected void setBoundsImpl(
		            int x, int y, int w, int h) {
		
		        _x = x;
		        _y = y;
		        _w = w;
		        _h = h;
		        		
",
,
		fromLine:"		97",
		toLine:"		99",
		oldContent:"
		        } else {
		            final Dimension min = getMinimumSize();
		            int maxw = Math.max(getWidth(), min.width);		
",
		newContent:"
		        // Additional implementation if required
		    }		
",
,

	],

}
