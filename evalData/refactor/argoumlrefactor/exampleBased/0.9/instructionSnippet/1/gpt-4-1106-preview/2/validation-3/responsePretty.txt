refactorings:
{
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java:
	[
		fromLine:"		50",
		toLine:"		53",
		oldContent:"
			private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);
			private final ThemeFonts fonts = new ThemeFonts("SansSerif", "Dialog", 16, 14);
				
",
		newContent:"
			private final ThemeColors themeColors = new ThemeColors(102, 153, 204);
			private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 16, 14);
				
",
,
		fromLine:"		77",
		toLine:"		119",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }
			...
			public FontUIResource getWindowTitleFont() { return windowTitleFont; }
		}		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }
			...
			public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }
		}		
",
,

	],
	/root/data_clump_solver/cloned_projects/argoumlrefactor/src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java:
	[
		fromLine:"		50",
		toLine:"		53",
		oldContent:"
			private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);
			private final ThemeFonts fonts = new ThemeFonts("SansSerif", "Dialog", 14, 12);
				
",
		newContent:"
			private final ThemeColors themeColors = new ThemeColors(102, 153, 204);
			private final ThemeFonts themeFonts = new ThemeFonts("SansSerif", "Dialog", 14, 12);
				
",
,
		fromLine:"		78",
		toLine:"		120",
		oldContent:"
		protected ColorUIResource getSecondary1() { return secondary1; }
			...
			public FontUIResource getWindowTitleFont() { return windowTitleFont; }
		}		
",
		newContent:"
		protected ColorUIResource getSecondary1() { return themeColors.getSecondary1(); }
			...
			public FontUIResource getWindowTitleFont() { return themeFonts.getWindowTitleFont(); }
		}		
",
,

	],

}
extractedClasses:
{
	org/argouml/ui/ThemeColors.java:"
	package org.argouml.ui;
	
	import javax.swing.plaf.ColorUIResource;
	
	public class ThemeColors {
	
		private final ColorUIResource primary1;
		private final ColorUIResource primary2;
		private final ColorUIResource primary3;
	
		private final ColorUIResource secondary1;
		private final ColorUIResource secondary2;
		private final ColorUIResource secondary3;
	
		public ThemeColors(int primary, int secondary, int tertiary) {
			this.primary1 = new ColorUIResource(primary, primary, primary);
			this.primary2 = new ColorUIResource(secondary, secondary, secondary);
			this.primary3 = new ColorUIResource(tertiary, tertiary, tertiary);
	
			this.secondary1 = new ColorUIResource(primary, primary, primary);
			this.secondary2 = new ColorUIResource(secondary, secondary, secondary);
			this.secondary3 = new ColorUIResource(tertiary, tertiary, tertiary);
		}
	
		public ColorUIResource getPrimary1() {
			return primary1;
		}
	
		public ColorUIResource getPrimary2() {
			return primary2;
		}
	
		public ColorUIResource getPrimary3() {
			return primary3;
		}
	
		public ColorUIResource getSecondary1() {
			return secondary1;
		}
	
		public ColorUIResource getSecondary2() {
			return secondary2;
		}
	
		public ColorUIResource getSecondary3() {
			return secondary3;
		}
	}
		
",
	org/argouml/ui/ThemeFonts.java:"
	package org.argouml.ui;
	
	import java.awt.Font;
	import javax.swing.plaf.FontUIResource;
	
	public class ThemeFonts {
	
		private final FontUIResource controlFont;
		private final FontUIResource systemFont;
		private final FontUIResource windowTitleFont;
		private final FontUIResource userFont;
		private final FontUIResource smallFont;
	
		public ThemeFonts(String controlFontName, String systemFontName, int fontSize, int smallFontSize) {
			this.controlFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);
			this.systemFont = new FontUIResource(systemFontName, Font.PLAIN, fontSize);
			this.windowTitleFont = new FontUIResource(controlFontName, Font.BOLD, fontSize);
			this.userFont = new FontUIResource(controlFontName, Font.PLAIN, fontSize);
			this.smallFont = new FontUIResource(systemFontName, Font.PLAIN, smallFontSize);
		}
	
		public FontUIResource getControlFont() {
			return controlFont;
		}
	
		public FontUIResource getSystemFont() {
			return systemFont;
		}
	
		public FontUIResource getWindowTitleFont() {
			return windowTitleFont;
		}
	
		public FontUIResource getUserFont() {
			return userFont;
		}
	
		public FontUIResource getSmallFont() {
			return smallFont;
		}
	}
		
",

}
