"{
    "refactorings": {
        "src/argouml-app/src/org/argouml/ui/JasonsBigTheme.java": [
            {
                "fromLine": 38,
                "toLine": 80,
                "oldContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsBigTheme extends MetalTheme {\n\n    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);\n\n    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 14);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 12);\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getName()\n     */\n    public String getName() { return \"Large Fonts\"; }\n\n    // these are blue in Metal Default Theme\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getPrimary1()",
                "newContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsBigTheme extends MetalTheme {\n\n    private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);\n\n    private final ThemeFonts themeFonts = new ThemeFonts(new FontUIResource[]{\n    \tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14),\n    \tnew FontUIResource(\"Dialog\", Font.PLAIN, 14),\n    \tnew FontUIResource(\"SansSerif\", Font.BOLD, 14),\n    \tnew FontUIResource(\"SansSerif\", Font.PLAIN, 14),\n    \tnew FontUIResource(\"Dialog\", Font.PLAIN, 12)\n    });\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getName()\n     */\n    public String getName() { return \"Large Fonts\"; }\n\n    // these are blue in Metal Default Theme\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getPrimary1()"
            }
        ],
        "src/argouml-app/src/org/argouml/ui/JasonsHugeTheme.java": [
            {
                "fromLine": 38,
                "toLine": 80,
                "oldContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsHugeTheme extends MetalTheme {\n\n    private final ColorUIResource primary1 = new ColorUIResource(102, 102, 153);\n    private final ColorUIResource primary2 = new ColorUIResource(153, 153, 204);\n    private final ColorUIResource primary3 = new ColorUIResource(204, 204, 255);\n\n    private final ColorUIResource secondary1 =\n\tnew ColorUIResource(102, 102, 102);\n    private final ColorUIResource secondary2 =\n\tnew ColorUIResource(153, 153, 153);\n    private final ColorUIResource secondary3 =\n\tnew ColorUIResource(204, 204, 204);\n\n    private final FontUIResource controlFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource systemFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 16);\n    private final FontUIResource windowTitleFont =\n\tnew FontUIResource(\"SansSerif\", Font.BOLD, 16);\n    private final FontUIResource userFont =\n\tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16);\n    private final FontUIResource smallFont =\n\tnew FontUIResource(\"Dialog\", Font.PLAIN, 14);\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getName()\n     */\n    public String getName() { return \"Very Large Fonts\"; }\n\n    // these are blue in Metal Default Theme\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getPrimary1()",
                "newContent": "\npackage org.argouml.ui;\n\nimport java.awt.Font;\nimport javax.swing.plaf.ColorUIResource;\nimport javax.swing.plaf.FontUIResource;\nimport javax.swing.plaf.metal.MetalTheme;\n\n/**\n * This class defines a variation on the default Metal Theme.\n */\npublic class JasonsHugeTheme extends MetalTheme {\n\n    private final ThemeColors primaryColors = new ThemeColors(102, 153, 204);\n    private final ThemeColors secondaryColors = new ThemeColors(102, 153, 204);\n\n    private final ThemeFonts themeFonts = new ThemeFonts(new FontUIResource[]{\n    \tnew FontUIResource(\"SansSerif\", Font.BOLD, 16),\n    \tnew FontUIResource(\"Dialog\", Font.PLAIN, 16),\n    \tnew FontUIResource(\"SansSerif\", Font.BOLD, 16),\n    \tnew FontUIResource(\"SansSerif\", Font.PLAIN, 16),\n    \tnew FontUIResource(\"Dialog\", Font.PLAIN, 14)\n    });\n\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getName()\n     */\n    public String getName() { return \"Very Large Fonts\"; }\n\n    // these are blue in Metal Default Theme\n    /*\n     * @see javax.swing.plaf.metal.MetalTheme#getPrimary1()"
            }
        ],
        "src/argouml-core-diagrams-sequence2/src/org/argouml/sequence2/diagram/FigLifeLine.java": [
            {
                "fromLine": 40,
                "toLine": 53,
                "oldContent": "\npackage org.argouml.sequence2.diagram;\n\nimport java.awt.Rectangle;\nimport java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.argouml.uml.diagram.ui.ArgoFigGroup;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\n\n",
                "newContent": "\npackage org.argouml.sequence2.diagram;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.argouml.uml.diagram.ui.ArgoFigGroup;\nimport org.tigris.gef.presentation.FigLine;\nimport org.tigris.gef.presentation.FigRect;\nimport org.argouml.sequence2.diagram.FigActivationData;\n\n"
            },
            {
                "fromLine": 244,
                "toLine": 267,
                "oldContent": "     * Return true if the given message fig is pointing out from this lifeline.\n     * @param messageFig\n     * @return true if the message is outgoing\n     */\n    private boolean isOutgoing(FigMessage messageFig) {\n        return (messageFig.getSourceFigNode().getOwner() == getOwner());\n    }\n    \n    private FigActivation createActivationFig(\n            final Object owner, \n            final int x, \n            final int y, \n            final int w, \n            final int h,\n            final DiagramSettings settings,\n            final FigMessage messageFig) {\n        return new FigActivation(\n                owner,\n                new Rectangle(x, y, w, h),\n                settings,\n                messageFig);\n    }\n    \n    private List<FigActivation> createStackedActivations(",
                "newContent": "     * Return true if the given message fig is pointing out from this lifeline.\n     * @param messageFig\n     * @return true if the message is outgoing\n     */\n    private boolean isOutgoing(FigMessage messageFig) {\n        return (messageFig.getSourceFigNode().getOwner() == getOwner());\n    }\n    \n    private FigActivation createActivationFig(final FigActivationData data) {\n        return new FigActivation(\n                data.getOwner(),\n                data.getRectangle(),\n                data.getSettings(),\n                data.getMessageFig());\n    }\n    \n    private List<FigActivation> createStackedActivations("
            }
        ],
        "src/argouml-core-diagrams-activity2/src/org/argouml/activity2/diagram/FigBaseNode.java": [
            {
                "fromLine": 13,
                "toLine": 22,
                "oldContent": "\npackage org.argouml.activity2.diagram;\n\nimport java.awt.Dimension;\nimport java.awt.Rectangle;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;\n",
                "newContent": "\npackage org.argouml.activity2.diagram;\n\nimport org.argouml.uml.diagram.DiagramSettings;\nimport org.tigris.gef.presentation.FigGroup;\nimport org.tigris.gef.presentation.FigNode;\nimport org.argouml.activity2.diagram.NodeBounds;\n"
            },
            {
                "fromLine": 69,
                "toLine": 92,
                "oldContent": "        Rectangle myBounds = getBounds();\n        if (displayState != null) {\n            displayState.setBounds(myBounds);\n        }\n//      calcBounds();\n        updateEdges();\n    }\n    \n    @Override\n    protected void setBoundsImpl(\n            final int x,\n            final int y,\n            final int w,\n            final int h) {\n\n        _x = x;\n        _y = y;\n        _w = w;\n        _h = h;\n        \n        positionChildren();\n    }\n\n    /**",
                "newContent": "        NodeBounds nodeBounds = getNodeBounds();\n        Rectangle myBounds = nodeBounds.getBounds();\n        if (displayState != null) {\n            displayState.setBounds(myBounds);\n        }\n//      calcBounds();\n        updateEdges();\n        nodeBounds.updateChildren();\n    }\n    \n    // The rest of the code remains the same.\n\n    /**"
            }
        ]
    },
    "extractedClasses": {
        "src/argouml/ui/ThemeColors.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.ColorUIResource;\n\npublic class ThemeColors {\n\n    private final ColorUIResource primary;\n    private final ColorUIResource secondary;\n    private final ColorUIResource tertiary;\n\n    public ThemeColors(int r, int g, int b) {\n        primary = new ColorUIResource(r, g, b);\n        secondary = new ColorUIResource(r + 50, g + 50, b + 50);\n        tertiary = new ColorUIResource(r + 100, g + 100, b + 100);\n    }\n\n    // Add getters and potentially other methods here.\n\n}\n",
        "src/argouml/ui/ThemeFonts.java": "package org.argouml.ui;\n\nimport javax.swing.plaf.FontUIResource;\n\npublic class ThemeFonts {\n\n    private final FontUIResource[] fonts;\n\n    public ThemeFonts(FontUIResource[] fonts) {\n        this.fonts = fonts;\n    }\n\n    // Add getters and potentially other methods here.\n\n}\n",
        "src/argouml/sequence2/diagram/FigActivationData.java": "package org.argouml.sequence2.diagram;\n\nimport java.awt.Rectangle;\nimport org.argouml.uml.diagram.DiagramSettings;\n\npublic class FigActivationData {\n\n    private final Object owner;\n    private final Rectangle rectangle;\n    private final DiagramSettings settings;\n    private final FigMessage messageFig;\n\n    public FigActivationData(final Object owner, final int x, final int y, final int w, final int h, final DiagramSettings settings, final FigMessage messageFig) {\n        this.owner = owner;\n        this.rectangle = new Rectangle(x, y, w, h);\n        this.settings = settings;\n        this.messageFig = messageFig;\n    }\n\n    public Object getOwner() {\n        return owner;\n    }\n\n    public Rectangle getRectangle() {\n        return rectangle;\n    }\n\n    public DiagramSettings getSettings() {\n        return settings;\n    }\n\n    public FigMessage getMessageFig() {\n        return messageFig;\n    }\n\n    // Additional functionality can be added here.\n\n}\n",
        "src/argouml/activity2/diagram/NodeBounds.java": "package org.argouml.activity2.diagram;\n\nimport java.awt.Rectangle;\n\npublic class NodeBounds {\n\n    private int x, y, w, h;\n\n    public NodeBounds(final int x, final int y, final int w, final int h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n\n    public Rectangle getBounds() {\n        return new Rectangle(x, y, w, h);\n    }\n\n    public void updateChildren() {\n        // Method to update position of children based on the bounds.\n    }\n\n    // Additional methods and functionality can be added here.\n\n}\n"
    }
}"