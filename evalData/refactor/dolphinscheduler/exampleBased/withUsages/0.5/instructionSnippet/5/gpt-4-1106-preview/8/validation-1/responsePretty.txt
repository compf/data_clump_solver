"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 85,
                "toLine": 104,
                "oldContent": "    @Operation(summary = \"createSchedule\", description = \"CREATE_SCHEDULE_NOTES\")\n    @PostMapping()\n    @ResponseStatus(HttpStatus.CREATED)\n    @ApiException(CREATE_SCHEDULE_ERROR)\n    @OperatorLog(auditType = AuditType.SCHEDULE_CREATE)\n    public Result createSchedule(@RequestBody ScheduleCreation scheduleCreation) {,\n            @Parameter(name = \"schedule\", description = \"SCHEDULE\", schema = @Schema(implementation = String.class, example = \"{'startTime':'2019-06-10 00:00:00','endTime':'2019-06-13 00:00:00','timezoneId':'America/Phoenix','crontab':'0 0 3/6 * * ? *'}\")),\n            @Parameter(name = \"warningType\", description = \"WARNING_TYPE\", schema = @Schema(implementation = WarningType.class)),\n            @Parameter(name = \"warningGroupId\", description = \"WARNING_GROUP_ID\", schema = @Schema(implementation = int.class, example = \"100\")),\n            @Parameter(name = \"failureStrategy\", description = \"FAILURE_STRATEGY\", schema = @Schema(implementation = FailureStrategy.class)),\n            @Parameter(name = \"workerGroup\", description = \"WORKER_GROUP\", schema = @Schema(implementation = String.class, example = \"default\")),\n            @Parameter(name = \"tenantCode\", description = \"TENANT_CODE\", schema = @Schema(implementation = String.class, example = \"default\")),\n            @Parameter(name = \"environmentCode\", description = \"ENVIRONMENT_CODE\", schema = @Schema(implementation = long.class)),\n            @Parameter(name = \"workflowInstancePriority\", description = \"WORKFLOW_INSTANCE_PRIORITY\", schema = @Schema(implementation = Priority.class)),\n    public Result createSchedule(@RequestBody ScheduleCreation scheduleCreation) {\n        Map<String, Object> result = schedulerService.insertSchedule(scheduleCreation);\n        return returnDataList(result);\n    }\n\n    /**",
                "newContent": "    @Operation(summary = \"createSchedule\", description = \"CREATE_SCHEDULE_NOTES\")\n    @PostMapping()\n    @ResponseStatus(HttpStatus.CREATED)\n    @ApiException(CREATE_SCHEDULE_ERROR)\n    @OperatorLog(auditType = AuditType.SCHEDULE_CREATE)\n    public Result createSchedule(@RequestBody ScheduleCreation scheduleCreation) {\n        Map<String, Object> result = schedulerService.insertSchedule(scheduleCreation);\n        return returnDataList(result);\n    }\n\n    /**"
            },
            {
                "fromLine": 279,
                "toLine": 298,
                "oldContent": "    @Operation(summary = \"updateScheduleByWorkflowDefinitionCode\", description = \"UPDATE_SCHEDULE_BY_WORKFLOW_DEFINITION_CODE_NOTES\")\n    @PutMapping(\"/update/{code}\")\n    @ResponseStatus(HttpStatus.OK)\n    @ApiException(UPDATE_SCHEDULE_ERROR)\n    @OperatorLog(auditType = AuditType.SCHEDULE_UPDATE)\n    public Result updateScheduleByWorkflowDefinitionCode(@RequestBody ScheduleUpdate scheduleUpdate) {,\n            @Parameter(name = \"schedule\", description = \"SCHEDULE\", schema = @Schema(implementation = String.class, example = \"{'startTime':'2019-06-10 00:00:00','endTime':'2019-06-13 00:00:00','crontab':'0 0 3/6 * * ? *'}\")),\n            @Parameter(name = \"warningType\", description = \"WARNING_TYPE\", schema = @Schema(implementation = WarningType.class)),\n            @Parameter(name = \"warningGroupId\", description = \"WARNING_GROUP_ID\", schema = @Schema(implementation = int.class, example = \"100\")),\n            @Parameter(name = \"failureStrategy\", description = \"FAILURE_STRATEGY\", schema = @Schema(implementation = FailureStrategy.class)),\n            @Parameter(name = \"workerGroup\", description = \"WORKER_GROUP\", schema = @Schema(implementation = String.class, example = \"default\")),\n            @Parameter(name = \"tenantCode\", description = \"TENANT_CODE\", schema = @Schema(implementation = String.class, example = \"default\")),\n            @Parameter(name = \"workflowInstancePriority\", description = \"WORKFLOW_INSTANCE_PRIORITY\", schema = @Schema(implementation = Priority.class)),\n            @Parameter(name = \"environmentCode\", description = \"ENVIRONMENT_CODE\", schema = @Schema(implementation = long.class)),\n    public Result updateScheduleByWorkflowDefinitionCode(@RequestBody ScheduleUpdate scheduleUpdate) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(scheduleUpdate);\n        return returnDataList(result);\n    }\n}\n",
                "newContent": "    @Operation(summary = \"updateScheduleByWorkflowDefinitionCode\", description = \"UPDATE_SCHEDULE_BY_WORKFLOW_DEFINITION_CODE_NOTES\")\n    @PutMapping(\"/update/{code}\")\n    @ResponseStatus(HttpStatus.OK)\n    @ApiException(UPDATE_SCHEDULE_ERROR)\n    @OperatorLog(auditType = AuditType.SCHEDULE_UPDATE)\n    public Result updateScheduleByWorkflowDefinitionCode(@RequestBody ScheduleUpdate scheduleUpdate) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(scheduleUpdate);\n        return returnDataList(result);\n    }\n}\n"
            }
        ]
    },
    "extractedClasses": {}
}"