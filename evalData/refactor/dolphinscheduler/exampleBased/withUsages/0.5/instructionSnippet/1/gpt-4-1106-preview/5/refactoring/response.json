{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 70,
                "toLine": 72,
                "oldContent": "public HttpResponse execute(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {",
                "newContent": "public HttpResponse execute(ExecutionParameters parameters) {"
            },
            {
                "fromLine": 84,
                "toLine": 86,
                "oldContent": "public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,",
                "newContent": "public HttpResponse executeTask(ExecutionParameters parameters, String startNodeList,"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 269,
                "toLine": 272,
                "oldContent": "     * @param page                  page\n     * @param workflowDefinitionCode workflowDefinitionCode\n     * @param name                  name\n     * @param host                  host",
                "newContent": "     * @param page                  page\n     * @param queryParameters       query parameters for workflow instance"
            },
            {
                "fromLine": 275,
                "toLine": 277,
                "oldContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,",
                "newContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page, WorkflowInstanceQueryParameters queryParameters"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 41,
                "toLine": 73,
                "oldContent": "    private Integer id;\n\n    private String name;\n\n    private String workflowInstanceName;\n\n    private Long projectCode;\n\n    private Date endTime;\n\n    private String host;",
                "newContent": "    private TaskInstanceDetails taskInstanceDetails;"
            },
            {
                "fromLine": 142,
                "toLine": 144,
                "oldContent": "\n    public void init(String host, Date startTime, String executePath) {\n        this.host = host;",
                "newContent": "\n    public void init(TaskInstanceInitialization initialization) {\n        this.taskInstanceDetails.setHost(initialization.getHost());"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 17,
                "toLine": 28,
                "oldContent": "public interface ProjectParameterService {\n\n    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);\n\n    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,",
                "newContent": "public interface ProjectParameterService {\n\n    Result createProjectParameter(ProjectParameterRequest request);\n\n    Result updateProjectParameter(ProjectParameterRequest request,"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 68,
                "toLine": 76,
                "oldContent": "public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser) {\n        ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 87,
                "toLine": 96,
                "oldContent": "public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser) {\n        ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.updateProjectParameter(request);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 49,
                "toLine": 53,
                "oldContent": "Mockito.when(projectParameterService.createProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.any(),\n                Mockito.any(), Mockito.any())).thenReturn(getSuccessResult());\n        Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",",
                "newContent": "Mockito.when(projectParameterService.createProjectParameter(Mockito.any(ProjectParameterRequest.class))).thenReturn(getSuccessResult());\n        ProjectParameterRequest request = new ProjectParameterRequest(loginUser, 1, \"key\", \"value\", DataType.VARCHAR);\n        Result result = projectParameterController.createProjectParameter(request);"
            },
            {
                "fromLine": 60,
                "toLine": 64,
                "oldContent": "Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.anyLong(),\n                Mockito.any(), Mockito.any(), Mockito.any())).thenReturn(getSuccessResult());\n        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",",
                "newContent": "Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(ProjectParameterRequest.class))).thenReturn(getSuccessResult());\n        ProjectParameterRequest request = new ProjectParameterRequest(loginUser, 1, 1L, \"key\", \"value\", DataType.VARCHAR);\n        Result result = projectParameterController.updateProjectParameter(request);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 78,
                "toLine": 80,
                "oldContent": "Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\", DataType.VARCHAR);\n        Result result = projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 91,
                "toLine": 93,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\", DataType.VARCHAR);\n            result = projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 99,
                "toLine": 101,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\", DataType.VARCHAR);\n        result = projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 106,
                "toLine": 108,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, \"key1\", \"value\", DataType.VARCHAR);\n        result = projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 112,
                "toLine": 114,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, \"key1\", \"value\", DataType.VARCHAR);\n        result = projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 124,
                "toLine": 126,
                "oldContent": "Result result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, 1, \"key\", \"value\", DataType.VARCHAR);\n        Result result = projectParameterService.updateProjectParameter(request);"
            },
            {
                "fromLine": 135,
                "toLine": 137,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, 1, \"key\", \"value\", DataType.VARCHAR);\n        result = projectParameterService.updateProjectParameter(request);"
            },
            {
                "fromLine": 142,
                "toLine": 144,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, 1, \"key\", \"value\", DataType.VARCHAR);\n        result = projectParameterService.updateProjectParameter(request);"
            },
            {
                "fromLine": 149,
                "toLine": 151,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, 1, \"key1\", \"value\", DataType.VARCHAR);\n        result = projectParameterService.updateProjectParameter(request);"
            },
            {
                "fromLine": 155,
                "toLine": 157,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, 1, \"key1\", \"value\", DataType.VARCHAR);\n        result = projectParameterService.updateProjectParameter(request);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 108,
                "toLine": 131,
                "oldContent": "public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @RequestParam(value = \"projectCode\") long projectCode,\n                                 @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_WARNING_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_STRATEGY) FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = DEFAULT_WORKER_GROUP) String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = DEFAULT_TENANT_CODE) String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.insertSchedule(",
                "newContent": "public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser) {\n        ScheduleRequest scheduleRequest = new ScheduleRequest(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        Map<String, Object> result = schedulerService.insertSchedule(scheduleRequest,"
            },
            {
                "fromLine": 334,
                "toLine": 349,
                "oldContent": "public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @RequestParam(value = \"projectCode\") long projectCode,\n                                                         @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_WARNING_GROUP_ID) int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_STRATEGY) FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = DEFAULT_WORKER_GROUP) String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = DEFAULT_TENANT_CODE) String tenantCode,\n                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(",
                "newContent": "public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser) {\n        ScheduleRequest scheduleRequest = new ScheduleRequest(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(scheduleRequest,"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 17,
                "toLine": 49,
                "oldContent": "public class TaskAlertInfo {\n\n    private String title;\n\n    private String content;\n\n    private Integer alertGroupId;\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public void setContent(String content) {\n        this.content = content;\n    }\n\n    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }\n\n    public void setAlertGroupId(Integer alertGroupId) {\n        this.alertGroupId = alertGroupId;",
                "newContent": "public class TaskAlertInfo {\n\n    private AlertInfo alertInfo;\n\n    public String getTitle() {\n        return alertInfo.getTitle();\n    }\n\n    public void setTitle(String title) {\n        alertInfo.setTitle(title);\n    }\n\n    public String getContent() {\n        return alertInfo.getContent();\n    }\n\n    public void setContent(String content) {\n        alertInfo.setContent(content);\n    }\n\n    public Integer getAlertGroupId() {\n        return alertInfo.getAlertGroupId();\n    }\n\n    public void setAlertGroupId(Integer alertGroupId) {\n        alertInfo.setAlertGroupId(alertGroupId);"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 50,
                "toLine": 67,
                "oldContent": "\n    @TableField(value = \"title\")\n    private String title;\n\n    @TableField(value = \"content\")\n    private String content;\n\n    @TableField(\"alertgroup_id\")\n    private Integer alertGroupId;",
                "newContent": "\n    @TableField(exist = false)\n    private AlertInfo alertInfo;"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ExecutionParameters {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private ExecuteType executeType;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceQueryParameters.java": "package org.apache.dolphinscheduler.dao.mapper;\n\npublic class WorkflowInstanceQueryParameters {\n    private long workflowDefinitionCode;\n    private String name;\n    private String host;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/dao/entity/TaskInstanceDetails.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport java.util.Date;\n\npublic class TaskInstanceDetails {\n    private Integer id;\n    private String name;\n    private String workflowInstanceName;\n    private Long projectCode;\n    private Date endTime;\n    private String host;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/dao/entity/TaskInstanceInitialization.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport java.util.Date;\n\npublic class TaskInstanceInitialization {\n    private String host;\n    private Date startTime;\n    private String executePath;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/api/service/ProjectParameterRequest.java": "package org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\nimport org.apache.dolphinscheduler.plugin.task.api.enums.DataType;\n\npublic class ProjectParameterRequest {\n    private User
{
    "refactorings": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 68,
                "toLine": 76,
                "oldContent": "public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "public Result createProjectParameter(ProjectParameterRequest request) {\n        return projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 87,
                "toLine": 96,
                "oldContent": "public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "public Result updateProjectParameter(ProjectParameterRequest request) {\n        return projectParameterService.updateProjectParameter(request);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 49,
                "toLine": 53,
                "oldContent": "Mockito.when(projectParameterService.createProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.any(),\n                Mockito.any(), Mockito.any())).thenReturn(getSuccessResult());\n        Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",",
                "newContent": "Mockito.when(projectParameterService.createProjectParameter(Mockito.any(ProjectParameterRequest.class))).thenReturn(getSuccessResult());\n        ProjectParameterRequest request = new ProjectParameterRequest(loginUser, 1, \"key\", \"value\", \"VARCHAR\");\n        Result result = projectParameterController.createProjectParameter(request);"
            },
            {
                "fromLine": 60,
                "toLine": 64,
                "oldContent": "Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.anyLong(),\n                Mockito.any(), Mockito.any(), Mockito.any())).thenReturn(getSuccessResult());\n        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",",
                "newContent": "Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(ProjectParameterRequest.class))).thenReturn(getSuccessResult());\n        ProjectParameterRequest request = new ProjectParameterRequest(loginUser, 1, 1L, \"key\", \"value\", \"VARCHAR\");\n        Result result = projectParameterController.updateProjectParameter(request);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 78,
                "toLine": 80,
                "oldContent": "Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\", \"VARCHAR\");\n        Result result = projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 91,
                "toLine": 93,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\", \"VARCHAR\");\n            result = projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 99,
                "toLine": 101,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\", \"VARCHAR\");\n        result = projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 106,
                "toLine": 108,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, \"key1\", \"value\", \"VARCHAR\");\n        result = projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 112,
                "toLine": 114,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, \"key1\", \"value\", \"VARCHAR\");\n        result = projectParameterService.createProjectParameter(request);"
            },
            {
                "fromLine": 124,
                "toLine": 126,
                "oldContent": "Result result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, 1, \"key\", \"value\", \"VARCHAR\");\n        Result result = projectParameterService.updateProjectParameter(request);"
            },
            {
                "fromLine": 135,
                "toLine": 137,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, 1, \"key\", \"value\", \"VARCHAR\");\n        result = projectParameterService.updateProjectParameter(request);"
            },
            {
                "fromLine": 142,
                "toLine": 144,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, 1, \"key\", \"value\", \"VARCHAR\");\n        result = projectParameterService.updateProjectParameter(request);"
            },
            {
                "fromLine": 149,
                "toLine": 151,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, 1, \"key1\", \"value\", \"VARCHAR\");\n        result = projectParameterService.updateProjectParameter(request);"
            },
            {
                "fromLine": 155,
                "toLine": 157,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "request = new ProjectParameterRequest(loginUser, projectCode, 1, \"key1\", \"value\", \"VARCHAR\");\n        result = projectParameterService.updateProjectParameter(request);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 108,
                "toLine": 131,
                "oldContent": "public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @RequestParam(value = \"projectCode\") long projectCode,\n                                 @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_WARNING_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_STRATEGY) FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = DEFAULT_WORKER_GROUP) String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = DEFAULT_TENANT_CODE) String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.insertSchedule(",
                "newContent": "public Result createSchedule(ScheduleRequest scheduleRequest) {\n        Map<String, Object> result = schedulerService.insertSchedule(scheduleRequest,"
            },
            {
                "fromLine": 334,
                "toLine": 349,
                "oldContent": "public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @RequestParam(value = \"projectCode\") long projectCode,\n                                                         @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_WARNING_GROUP_ID) int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_STRATEGY) FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = DEFAULT_WORKER_GROUP) String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = DEFAULT_TENANT_CODE) String tenantCode,\n                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode,\n                workflowDefinitionCode, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,",
                "newContent": "public Result updateScheduleByWorkflowDefinitionCode(ScheduleRequest scheduleRequest) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(scheduleRequest,"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 17,
                "toLine": 49,
                "oldContent": "public class TaskAlertInfo {\n\n    private String title;\n\n    private String content;\n\n    private Integer alertGroupId;\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public void setContent(String content) {\n        this.content = content;\n    }\n\n    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }\n\n    public void setAlertGroupId(Integer alertGroupId) {\n        this.alertGroupId = alertGroupId;",
                "newContent": "public class TaskAlertInfo {\n\n    private AlertInfo alertInfo;\n\n    public String getTitle() {\n        return alertInfo.getTitle();\n    }\n\n    public void setTitle(String title) {\n        alertInfo.setTitle(title);\n    }\n\n    public String getContent() {\n        return alertInfo.getContent();\n    }\n\n    public void setContent(String content) {\n        alertInfo.setContent(content);\n    }\n\n    public Integer getAlertGroupId() {\n        return alertInfo.getAlertGroupId();\n    }\n\n    public void setAlertGroupId(Integer alertGroupId) {\n        alertInfo.setAlertGroupId(alertGroupId);"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 50,
                "toLine": 67,
                "oldContent": "\n    @TableField(value = \"title\")\n    private String title;\n\n    @TableField(value = \"content\")\n    private String content;\n\n    @TableField(\"alertgroup_id\")\n    private Integer alertGroupId;",
                "newContent": "\n    @TableField(exist = false)\n    private AlertInfo alertInfo;"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ExecutionParameters {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private ExecuteType executeType;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceQueryParameters.java": "package org.apache.dolphinscheduler.dao.mapper;\n\npublic class WorkflowInstanceQueryParameters {\n    private long workflowDefinitionCode;\n    private String name;\n    private String host;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/dao/entity/TaskInstanceDetails.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport java.util.Date;\n\npublic class TaskInstanceDetails {\n    private Integer id;\n    private String name;\n    private String workflowInstanceName;\n    private Long projectCode;\n    private Date endTime;\n    private String host;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/dao/entity/TaskInstanceInitialization.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport java.util.Date;\n\npublic class TaskInstanceInitialization {\n    private String host;\n    private Date startTime;\n    private String executePath;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/api/service/ProjectParameterRequest.java": "package org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ProjectParameterRequest {\n    private User loginUser;\n    private long projectCode;\n    private long code;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    public ProjectParameterRequest(User loginUser, long projectCode, String projectParameterName, String projectParameterValue, String projectParameterDataType) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n        this.projectParameterName = projectParameterName;\n        this.projectParameterValue = projectParameterValue;\n        this.projectParameterDataType = projectParameterDataType;\n    }\n\n    public ProjectParameterRequest(User loginUser, long projectCode, long code, String projectParameterName, String projectParameterValue, String projectParameterDataType) {\n        this(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\n        this.code = code;\n    }\n\n    // Getters and setters\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ScheduleRequest {\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private String workerGroup;\n    private String tenantCode;\n    private long environmentCode;\n    private Priority workflowInstancePriority;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/plugin/task/api/model/AlertInfo.java": "package org.apache.dolphinscheduler.plugin.task.api.model;\n\npublic class AlertInfo {\n    private String title;\n    private String content;\n    private Integer alertGroupId;\n\n    // Constructor, getters, and setters\n}"
    }
}