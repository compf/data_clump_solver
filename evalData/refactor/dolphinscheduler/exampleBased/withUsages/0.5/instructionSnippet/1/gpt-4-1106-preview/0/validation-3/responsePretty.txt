"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 77,
                "toLine": 79,
                "oldContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\n                projectParameterValue, projectParameterDataType));\n    }",
                "newContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\n    }"
            },
            {
                "fromLine": 99,
                "toLine": 101,
                "oldContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);\n                projectParameterValue, projectParameterDataType));\n    }",
                "newContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);\n    }"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 125,
                "toLine": 127,
                "oldContent": "    }\n        return returnDataList(result);\n    }",
                "newContent": ""
            },
            {
                "fromLine": 159,
                "toLine": 171,
                "oldContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_UPDATE)\n    public Result updateSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @PathVariable(value = \"id\") Integer id,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {\n",
                "newContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_UPDATE)\n    public Result updateSchedule(\n        @Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n        @PathVariable(value = \"id\") Integer id,\n        @RequestParam(value = \"schedule\") String schedule,\n        @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n        @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n        @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n        @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n        @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n        @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n        @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority\n    ) {\n        Map<String, Object> result = schedulerService.updateSchedule(loginUser, projectCode, id, schedule, warningType, warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        return returnDataList(result);\n    }"
            },
            {
                "fromLine": 174,
                "toLine": 177,
                "oldContent": "                environmentCode);\n        return returnDataList(result);\n    }\n",
                "newContent": ""
            },
            {
                "fromLine": 184,
                "toLine": 191,
                "oldContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_ONLINE)\n    public Result<Boolean> publishScheduleOnline(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                 @PathVariable(\"id\") Integer id) {\n        schedulerService.onlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }\n",
                "newContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_ONLINE)\n    public Result<Boolean> publishScheduleOnline(\n        @Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n        @PathVariable(\"id\") Integer id\n    ) {\n        schedulerService.onlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }"
            },
            {
                "fromLine": 198,
                "toLine": 205,
                "oldContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_OFFLINE)\n    public Result<Boolean> offlineSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                           @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                           @PathVariable(\"id\") Integer id) {\n        schedulerService.offlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }\n",
                "newContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_OFFLINE)\n    public Result<Boolean> offlineSchedule(\n        @Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n        @PathVariable(\"id\") Integer id\n    ) {\n        schedulerService.offlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }"
            },
            {
                "fromLine": 225,
                "toLine": 238,
                "oldContent": "    @ApiException(QUERY_SCHEDULE_LIST_PAGING_ERROR)\n    public Result queryScheduleListPaging(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                          @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                          @RequestParam(value = \"workflowDefinitionCode\", required = false, defaultValue = \"0\") long workflowDefinitionCode,\n                                          @RequestParam(value = \"searchVal\", required = false) String searchVal,\n                                          @RequestParam(\"pageNo\") Integer pageNo,\n                                          @RequestParam(\"pageSize\") Integer pageSize) {\n        checkPageParams(pageNo, pageSize);\n        searchVal = ParameterUtils.handleEscapes(searchVal);\n        return schedulerService.querySchedule(loginUser, projectCode, workflowDefinitionCode, searchVal, pageNo,\n                pageSize);\n\n    }\n",
                "newContent": "    @ApiException(QUERY_SCHEDULE_LIST_PAGING_ERROR)\n    public Result queryScheduleListPaging(\n        @Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n        @RequestParam(value = \"workflowDefinitionCode\", required = false, defaultValue = \"0\") long workflowDefinitionCode,\n        @RequestParam(value = \"searchVal\", required = false) String searchVal,\n        @RequestParam(\"pageNo\") Integer pageNo,\n        @RequestParam(\"pageSize\") Integer pageSize\n    ) {\n        checkPageParams(pageNo, pageSize);\n        searchVal = ParameterUtils.handleEscapes(searchVal);\n        return schedulerService.querySchedule(loginUser, projectCode, workflowDefinitionCode, searchVal, pageNo, pageSize);\n    }"
            },
            {
                "fromLine": 254,
                "toLine": 261,
                "oldContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_DELETE)\n    public Result deleteScheduleById(@RequestAttribute(value = SESSION_USER) User loginUser,\n                                     @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                     @PathVariable(\"id\") Integer id) {\n        schedulerService.deleteSchedulesById(loginUser, id);\n        return new Result(Status.SUCCESS);\n    }\n",
                "newContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_DELETE)\n    public Result deleteScheduleById(\n        @RequestAttribute(value = SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n        @PathVariable(\"id\") Integer id\n    ) {\n        schedulerService.deleteSchedulesById(loginUser, id);\n        return new Result(Status.SUCCESS);\n    }"
            },
            {
                "fromLine": 271,
                "toLine": 277,
                "oldContent": "    @ApiException(QUERY_SCHEDULE_LIST_ERROR)\n    public Result queryScheduleList(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                    @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode) {\n        Map<String, Object> result = schedulerService.queryScheduleList(loginUser, projectCode);\n        return returnDataList(result);\n    }\n",
                "newContent": "    @ApiException(QUERY_SCHEDULE_LIST_ERROR)\n    public Result queryScheduleList(\n        @Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode\n    ) {\n        Map<String, Object> result = schedulerService.queryScheduleList(loginUser, projectCode);\n        return returnDataList(result);\n    }"
            },
            {
                "fromLine": 291,
                "toLine": 297,
                "oldContent": "    @ApiException(PREVIEW_SCHEDULE_ERROR)\n    public Result previewSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                  @RequestParam(value = \"schedule\") String schedule) {\n        Map<String, Object> result = schedulerService.previewSchedule(loginUser, schedule);\n        return returnDataList(result);\n    }\n",
                "newContent": "    @ApiException(PREVIEW_SCHEDULE_ERROR)\n    public Result previewSchedule(\n        @Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n        @RequestParam(value = \"schedule\") String schedule\n    ) {\n        Map<String, Object> result = schedulerService.previewSchedule(loginUser, schedule);\n        return returnDataList(result);\n    }"
            },
            {
                "fromLine": 327,
                "toLine": 344,
                "oldContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_UPDATE)\n    public Result updateScheduleByWorkflowDefinitionCode(\n        @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n        @PathVariable(value = \"code\") long workflowDefinitionCode,\n        @RequestParam(value = \"schedule\") String schedule,\n        @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n        @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n        @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n        @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n        @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n        @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n        @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority\n    ) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        return returnDataList(result);\n    }\n    }",
                "newContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_UPDATE)\n    public Result updateScheduleByWorkflowDefinitionCode(\n        @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n        @PathVariable(value = \"code\") long workflowDefinitionCode,\n        @RequestParam(value = \"schedule\") String schedule,\n        @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n        @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n        @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n        @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n        @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n        @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n        @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority\n    ) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        return returnDataList(result);\n    }"
            }
        ]
    },
    "extractedClasses": {}
}"