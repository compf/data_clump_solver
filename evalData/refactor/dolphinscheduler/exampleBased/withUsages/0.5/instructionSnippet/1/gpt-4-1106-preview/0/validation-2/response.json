{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 70,
                "toLine": 75,
                "oldContent": "    public Result createProjectParameter(ProjectParameterRequest projectParameterRequest)\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        return projectParameterService.createProjectParameter(new ProjectParameterRequest(loginUser, projectCode, projectParameterName,",
                "newContent": "    public Result createProjectParameter(\n        @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n        @RequestParam(\"projectParameterName\") String projectParameterName,\n        @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n        @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType\n    ) {\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);"
            },
            {
                "fromLine": 89,
                "toLine": 95,
                "oldContent": "    public Result updateProjectParameter(ProjectParameterUpdateRequest projectParameterUpdateRequest)\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @PathVariable(\"code\") Long code,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(new ProjectParameterUpdateRequest(loginUser, projectCode, code, projectParameterName,",
                "newContent": "    public Result updateProjectParameter(\n        @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n        @PathVariable(\"code\") Long code,\n        @RequestParam(\"projectParameterName\") String projectParameterName,\n        @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n        @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType\n    ) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 27,
                "toLine": 29,
                "oldContent": "    Result updateProjectParameter(ProjectParameterUpdateRequest projectParameterUpdateRequest);\n                                  String projectParameterValue, String projectParameterDataType);\n",
                "newContent": "    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName, String projectParameterValue, String projectParameterDataType);\n\n    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName, String projectParameterValue, String projectParameterDataType);\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 110,
                "toLine": 123,
                "oldContent": "    public Result createSchedule(ScheduleCreateRequest scheduleCreateRequest)\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_POLICY) FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.insertSchedule(scheduleCreateRequest\n                environmentCode);\n",
                "newContent": "    public Result createSchedule(\n        @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n        @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n        @RequestParam(value = \"schedule\") String schedule,\n        @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n        @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n        @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_POLICY) FailureStrategy failureStrategy,\n        @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n        @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n        @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n        @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority\n    ) {\n        Map<String, Object> result = schedulerService.insertSchedule(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        return returnDataList(result);\n    }"
            },
            {
                "fromLine": 326,
                "toLine": 339,
                "oldContent": "    public Result updateScheduleByWorkflowDefinitionCode(ScheduleUpdateRequest scheduleUpdateRequest)\n                                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                         @PathVariable(value = \"code\") long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(scheduleUpdateRequest\n                environmentCode);\n        return returnDataList(result);",
                "newContent": "    public Result updateScheduleByWorkflowDefinitionCode(\n        @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n        @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n        @PathVariable(value = \"code\") long workflowDefinitionCode,\n        @RequestParam(value = \"schedule\") String schedule,\n        @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n        @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n        @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n        @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n        @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n        @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n        @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority\n    ) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        return returnDataList(result);\n    }"
            }
        ]
    },
    "extractedClasses": {}
}