"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 70,
                "toLine": 72,
                "oldContent": "    public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         ProjectParameterCreationParameters creationParameters) {\n        return projectParameterService.createProjectParameter(creationParameters);",
                "newContent": "    public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @RequestParam(\"projectCode\") long projectCode,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(\"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(\"projectParameterDataType\") String projectParameterDataType) {\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);"
            },
            {
                "fromLine": 85,
                "toLine": 87,
                "oldContent": "    public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         ProjectParameterUpdateParameters updateParameters) {\n        return projectParameterService.updateProjectParameter(updateParameters);",
                "newContent": "    public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @PathVariable(\"projectCode\") long projectCode,\n                                         @PathVariable(\"code\") long code,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(\"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(\"projectParameterDataType\") String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 24,
                "toLine": 28,
                "oldContent": "\n    Result createProjectParameter(ProjectParameterCreationParameters creationParameters);\n\n    Result updateProjectParameter(ProjectParameterUpdateParameters updateParameters);\n",
                "newContent": "\n    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName, String projectParameterValue, String projectParameterDataType);\n\n    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName, String projectParameterValue, String projectParameterDataType);\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 110,
                "toLine": 112,
                "oldContent": "    public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 ScheduleCreationParameters creationParameters) {\n        Map<String, Object> result = schedulerService.insertSchedule(creationParameters);",
                "newContent": "    public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @PathVariable long projectCode,\n                                 @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = \"NONE\") WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = \"0\") int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"CONTINUE\") FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = \"MEDIUM\") Priority workflowInstancePriority,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode) {\n        Map<String, Object> result = schedulerService.insertSchedule(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, environmentCode);"
            },
            {
                "fromLine": 316,
                "toLine": 318,
                "oldContent": "    public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         ScheduleUpdateParameters updateParameters) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(updateParameters);",
                "newContent": "    public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @PathVariable long projectCode,\n                                                         @PathVariable long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = \"NONE\") WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false, defaultValue = \"0\") int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"CONTINUE\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = \"MEDIUM\") Priority workflowInstancePriority,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, environmentCode);"
            }
        ]
    },
    "extractedClasses": {}
}"