{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/utils/TaskInstanceUtils.java": [
            {
                "fromLine": 31,
                "toLine": 42,
                "oldContent": "    public static void copyTaskInstance(TaskInstance source, TaskInstance target) {\n        target.setId(source.getId());\n        target.setName(source.getName());\n        target.setTaskType(source.getTaskType());\n        target.setWorkflowInstanceId(source.getWorkflowInstanceId());\n        target.setWorkflowInstanceName(source.getWorkflowInstanceName());\n        target.setProjectCode(source.getProjectCode());\n        target.setTaskCode(source.getTaskCode());\n        target.setTaskDefinitionVersion(source.getTaskDefinitionVersion());\n        target.setWorkflowInstanceName(source.getWorkflowInstanceName());\n        target.setTaskGroupPriority(source.getTaskGroupPriority());\n        target.setState(source.getState());",
                "newContent": "    public static void copyTaskInstance(TaskInstance source, TaskInstance target) {\n        target.setId(source.getId());\n        target.setWorkflowInstanceId(source.getWorkflowInstanceId());\n        target.setTaskCode(source.getTaskCode());\n        target.setTaskDefinitionVersion(source.getTaskDefinitionVersion());\n        target.setTaskGroupPriority(source.getTaskGroupPriority());\n        target.setState(source.getState());"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/AlertDao.java": [
            {
                "fromLine": 90,
                "toLine": 94,
                "oldContent": "     */\n    public int addAlert(Alert alert) {\n        if (null == alert.getAlertGroupId() || NumberUtils.INTEGER_ZERO.equals(alert.getAlertGroupId())) {\n            log.warn(\"the value of alertGroupId is null or 0 \");\n            return 0;",
                "newContent": "     */\n    public int addAlert(Alert alert) {\n        if (null == alert.getAlertGroup() || NumberUtils.INTEGER_ZERO.equals(alert.getAlertGroup().getId())) {\n            log.warn(\"the value of alertGroupId is null or 0 \");\n            return 0;"
            },
            {
                "fromLine": 177,
                "toLine": 181,
                "oldContent": "        alert.setAlertStatus(AlertStatus.WAIT_EXECUTION);\n        alert.setContent(content);\n        alert.setAlertGroupId(ADMIN_ALERT_GROUP_ID);\n        alert.setCreateTime(new Date());\n        alert.setUpdateTime(new Date());",
                "newContent": "        alert.setAlertStatus(AlertStatus.WAIT_EXECUTION);\n        alert.setContent(content);\n        alert.setAlertGroup(new AlertGroup(ADMIN_ALERT_GROUP_ID, \"admin\"));\n        alert.setCreateTime(new Date());\n        alert.setUpdateTime(new Date());"
            },
            {
                "fromLine": 225,
                "toLine": 229,
                "oldContent": "\n    private void saveTaskTimeoutAlert(Alert alert, String content, int alertGroupId) {\n        alert.setAlertGroupId(alertGroupId);\n        alert.setWarningType(WarningType.FAILURE);\n        alert.setContent(content);",
                "newContent": "\n    private void saveTaskTimeoutAlert(Alert alert, String content, AlertGroup alertGroup) {\n        alert.setAlertGroup(alertGroup);\n        alert.setWarningType(WarningType.FAILURE);\n        alert.setContent(content);"
            },
            {
                "fromLine": 255,
                "toLine": 260,
                "oldContent": "                .workflowInstanceName(workflowInstance.getName())\n                .taskCode(taskInstance.getTaskCode())\n                .taskName(taskInstance.getName())\n                .taskType(taskInstance.getTaskType())\n                .taskStartTime(taskInstance.getStartTime())\n                .taskHost(taskInstance.getHost())",
                "newContent": "                .workflowInstanceName(workflowInstance.getName())\n                .taskCode(taskInstance.getTaskCode())\n                .taskStartTime(taskInstance.getStartTime())\n                .taskHost(taskInstance.getHost())"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/repository/impl/TaskInstanceDaoImpl.java": [
            {
                "fromLine": 58,
                "toLine": 62,
                "oldContent": "    @Override\n    public boolean upsertTaskInstance(TaskInstance taskInstance) {\n        if (taskInstance.getId() != null) {\n            return updateById(taskInstance);\n        } else {",
                "newContent": "    @Override\n    public boolean upsertTaskInstance(TaskInstance taskInstance) {\n        if (taskInstance.getId() != 0) {\n            return updateById(taskInstance);\n        } else {"
            }
        ]
    },
    "extractedClasses": {}
}