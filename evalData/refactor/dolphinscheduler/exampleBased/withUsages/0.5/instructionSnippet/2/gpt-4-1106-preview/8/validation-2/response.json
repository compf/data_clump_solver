{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/utils/TaskInstanceUtils.java": [
            {
                "fromLine": 32,
                "toLine": 39,
                "oldContent": "        target.setId(source.getId());\n        // Assuming 'taskIdentity' contains 'name' and 'taskType'\n        target.setTaskIdentity(source.getTaskIdentity());\n        target.setWorkflowInstanceId(source.getWorkflowInstanceId());\n        // Assuming 'taskWorkflowInstance' contains 'workflowInstanceName'\n        target.setTaskWorkflowInstance(source.getTaskWorkflowInstance());\n        target.setProjectCode(source.getProjectCode());\n        target.setTaskCode(source.getTaskCode());",
                "newContent": "        target.setId(source.getId());\n        target.setName(source.getName());\n        target.setTaskType(source.getTaskType());\n        target.setWorkflowInstanceId(source.getWorkflowInstanceId());\n        target.setWorkflowInstanceName(source.getWorkflowInstanceName());\n        target.setProjectCode(source.getProjectCode());\n        target.setTaskCode(source.getTaskCode());"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/AlertDao.java": [
            {
                "fromLine": 256,
                "toLine": 261,
                "oldContent": "                .taskCode(taskInstance.getTaskCode())\n                // Assuming 'taskIdentity' contains 'name' and 'taskType'\n                .taskName(taskInstance.getTaskIdentity().getName())\n                .taskType(taskInstance.getTaskIdentity().getTaskType())\n                .taskStartTime(taskInstance.getStartTime())\n                .taskHost(taskInstance.getHost())",
                "newContent": "                .taskCode(taskInstance.getTaskCode())\n                .taskName(taskInstance.getName())\n                .taskType(taskInstance.getTaskType())\n                .taskStartTime(taskInstance.getStartTime())\n                .taskHost(taskInstance.getHost())"
            }
        ]
    },
    "extractedClasses": {}
}