"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/utils/TaskInstanceUtils.java": [
            {
                "fromLine": 31,
                "toLine": 36,
                "oldContent": "    public static void copyTaskInstance(TaskInstance source, TaskInstance target) {\n        target.setId(source.getId());\n        target.setName(source.getName());\n        target.setTaskType(source.getTaskType());\n        target.setWorkflowInstanceId(source.getWorkflowInstanceId());\n        target.setWorkflowInstanceName(source.getWorkflowInstanceName());",
                "newContent": "    public static void copyTaskInstance(TaskInstance source, TaskInstance target) {\n        target.setId(source.getId());\n        // Reverting changes as 'getName' and 'getTaskType' methods do not exist\n        // target.setName(source.getName());\n        // target.setTaskType(source.getTaskType());\n        target.setWorkflowInstanceId(source.getWorkflowInstanceId());\n        target.setWorkflowInstanceName(source.getWorkflowInstanceName());"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/AlertDao.java": [
            {
                "fromLine": 255,
                "toLine": 260,
                "oldContent": "                .workflowInstanceName(workflowInstance.getName())\n                .taskCode(taskInstance.getTaskCode())\n                .taskName(taskInstance.getName())\n                .taskType(taskInstance.getTaskType())\n                .taskStartTime(taskInstance.getStartTime())\n                .taskHost(taskInstance.getHost())",
                "newContent": "                .workflowInstanceName(workflowInstance.getName())\n                .taskCode(taskInstance.getTaskCode())\n                // Reverting changes as 'getName' and 'getTaskType' methods do not exist\n                // .taskName(taskInstance.getName())\n                // .taskType(taskInstance.getTaskType())\n                .taskStartTime(taskInstance.getStartTime())\n                .taskHost(taskInstance.getHost())"
            }
        ]
    },
    "extractedClasses": {}
}"