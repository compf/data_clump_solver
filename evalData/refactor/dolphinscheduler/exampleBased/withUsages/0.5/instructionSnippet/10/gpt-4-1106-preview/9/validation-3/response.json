{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/utils/JdbcUrlParser.java": [
            {
                "fromLine": 122,
                "toLine": 142,
                "oldContent": "                others.put(kv[0], kv[1]);\n            }\n            jdbcInfo.setParams(others);\n        }\n\n        String address = \"jdbc:\" + driverName + \"://\" + host + COLON + port;\n        jdbcInfo.setAddress(address);\n        jdbcInfo.setJdbcUrl(address + SINGLE_SLASH + database);\n\n        return jdbcInfo;\n    }\n",
                "newContent": "                others.put(kv[0], kv[1]);\n            }\n            jdbcInfo.setParams(others);\n        }\n\n        String address = \"jdbc:\" + driverName + \"://\" + host + COLON + port;\n        jdbcInfo.setAddress(address);\n        jdbcInfo.setJdbcUrl(address + SINGLE_SLASH + database);\n\n        return jdbcInfo;\n    }\n}\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/utils/PropertyUtils.java": [
            {
                "fromLine": 47,
                "toLine": 67,
                "oldContent": "            try {\n                Map<String, String> startParamMap = JSONUtils.toMap(startParams);\n                startParamList = startParamMap.entrySet().stream()\n                        .map(entry -> new Property(entry.getKey(), Direct.IN, DataType.VARCHAR, entry.getValue()))\n                        .collect(Collectors.toList());\n            } catch (Exception ignore) {\n                startParamList = JSONUtils.toList(startParams, Property.class);\n            }\n        }\n        return startParamList;\n    }\n",
                "newContent": "            try {\n                Map<String, String> startParamMap = JSONUtils.toMap(startParams);\n                startParamList = startParamMap.entrySet().stream()\n                        .map(entry -> new Property(entry.getKey(), Direct.IN, DataType.VARCHAR, entry.getValue()))\n                        .collect(Collectors.toList());\n            } catch (Exception ignore) {\n                startParamList = JSONUtils.toList(startParams, Property.class);\n            }\n        }\n        return startParamList;\n    }\n}\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/parameters/AbstractParameters.java": [
            {
                "fromLine": 161,
                "toLine": 181,
                "oldContent": "        return allParams;\n    }\n\n    public ResourceParametersHelper getResources() {\n        return new ResourceParametersHelper();\n    }\n\n    public void addPropertyToValPool(Property property) {\n        varPool.removeIf(p -> p.getProp().equals(property.getProp()));\n        varPool.add(property);\n    }\n",
                "newContent": "        return allParams;\n    }\n\n    public ResourceParametersHelper getResources() {\n        return new ResourceParametersHelper();\n    }\n\n    public void addPropertyToValPool(Property property) {\n        varPool.removeIf(p -> p.getProp().equals(property.getProp()));\n        varPool.add(property);\n    }\n}\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/AbstractTask.java": [
            {
                "fromLine": 187,
                "toLine": 207,
                "oldContent": "\n            Property prop = paramsPropsMap.get(paramName);\n\n            if (prop == null) {\n            } else {\n                sqlParamsMap.put(index, prop);\n                index++;\n            }\n\n        }\n    }\n",
                "newContent": "\n            Property prop = paramsPropsMap.get(paramName);\n\n            if (prop != null) {\n                sqlParamsMap.put(index, prop);\n                index++;\n            }\n\n        }\n    }\n}\n"
            }
        ]
    }
}