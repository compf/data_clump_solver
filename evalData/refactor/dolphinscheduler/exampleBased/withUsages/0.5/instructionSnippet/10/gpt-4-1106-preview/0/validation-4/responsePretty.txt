"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/ProjectParameterServiceImpl.java": [
            {
                "fromLine": 75,
                "toLine": 110,
                "oldContent": ".eq(ProjectParameter::getParamName, projectParameterName));\n\n        if (projectParameter != null) {\n            log.warn(\"ProjectParameter {} already exists.\", projectParameter.getParamName());\n            putMsg(result, Status.PROJECT_PARAMETER_ALREADY_EXISTS, projectParameter.getParamName());\n            return result;\n        }\n\n        Date now = new Date();\n\n        try {\n            projectParameter = ProjectParameter\n                    .builder()\n                    .paramName(projectParameterName)\n                    .paramValue(projectParameterValue)\n                    .paramDataType(projectParameterDataType)\n                    .code(CodeGenerateUtils.genCode())\n                    .projectCode(projectCode)\n                    .userId(loginUser.getId())\n                    .createTime(now)\n                    .updateTime(now)\n                    .build();",
                "newContent": ".eq(ProjectParameter::getParamName, parameterRequest.getProjectParameterName()));\n\n        if (projectParameter != null) {\n            log.warn(\"ProjectParameter {} already exists.\", parameterRequest.getProjectParameterName());\n            putMsg(result, Status.PROJECT_PARAMETER_ALREADY_EXISTS, parameterRequest.getProjectParameterName());\n            return result;\n        }\n\n        Date now = new Date();\n\n        try {\n            projectParameter = ProjectParameter\n                    .builder()\n                    .paramName(parameterRequest.getProjectParameterName())\n                    .paramValue(parameterRequest.getProjectParameterValue())\n                    .paramDataType(parameterRequest.getProjectParameterDataType())\n                    .code(CodeGenerateUtils.genCode())\n                    .projectCode(projectCode)\n                    .userId(loginUser.getId())\n                    .createTime(now)\n                    .updateTime(now)\n                    .build();"
            },
            {
                "fromLine": 137,
                "toLine": 177,
                "oldContent": ".eq(ProjectParameter::getParamName, projectParameterName)\n                .ne(ProjectParameter::getCode, code));\n\n        if (tempProjectParameter != null) {\n            log.error(\"Project parameter name {} already exists\", projectParameterName);\n            putMsg(result, Status.PROJECT_PARAMETER_ALREADY_EXISTS, projectParameterName);\n            return result;\n        }\n\n        projectParameter.setParamName(projectParameterName);\n        projectParameter.setParamValue(projectParameterValue);\n        projectParameter.setParamDataType(projectParameterDataType);\n        projectParameter.setUpdateTime(new Date());\n        projectParameter.setOperator(loginUser.getId());\n\n        if (projectParameterMapper.updateById(projectParameter) > 0) {\n            log.info(\"Project parameter is updated and id is :{}\", projectParameter.getId());\n            result.setData(projectParameter);\n            putMsg(result, Status.SUCCESS);\n        } else {\n            log.error(\"Project parameter update error, {}.\", projectParameterName);\n            putMsg(result, Status.UPDATE_PROJECT_PARAMETER_ERROR);\n        }",
                "newContent": ".eq(ProjectParameter::getParamName, parameterRequest.getProjectParameterName())\n                .ne(ProjectParameter::getCode, code));\n\n        if (tempProjectParameter != null) {\n            log.error(\"Project parameter name {} already exists\", parameterRequest.getProjectParameterName());\n            putMsg(result, Status.PROJECT_PARAMETER_ALREADY_EXISTS, parameterRequest.getProjectParameterName());\n            return result;\n        }\n\n        projectParameter.setParamName(parameterRequest.getProjectParameterName());\n        projectParameter.setParamValue(parameterRequest.getProjectParameterValue());\n        projectParameter.setParamDataType(parameterRequest.getProjectParameterDataType());\n        projectParameter.setUpdateTime(new Date());\n        projectParameter.setOperator(loginUser.getId());\n\n        if (projectParameterMapper.updateById(projectParameter) > 0) {\n            log.info(\"Project parameter is updated and id is :{}\", projectParameter.getId());\n            result.setData(projectParameter);\n            putMsg(result, Status.SUCCESS);\n        } else {\n            log.error(\"Project parameter update error, {}.\", parameterRequest.getProjectParameterName());\n            putMsg(result, Status.UPDATE_PROJECT_PARAMETER_ERROR);\n        }"
            }
        ]
    }
}"