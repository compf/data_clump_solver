"{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 74,
                "toLine": 75,
                "oldContent": "                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,",
                "newContent": "                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        ProjectParameterInfo projectParameterInfo = new ProjectParameterInfo(projectParameterName, projectParameterValue, projectParameterDescription, projectParameterDataType);\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterInfo);"
            },
            {
                "fromLine": 94,
                "toLine": 95,
                "oldContent": "                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,",
                "newContent": "                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        ProjectParameterInfo projectParameterInfo = new ProjectParameterInfo(projectParameterName, projectParameterValue, projectParameterDescription, projectParameterDataType);\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterInfo);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 121,
                "toLine": 130,
                "oldContent": "        Map<String, Object> result = schedulerService.insertSchedule(\n                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,",
                "newContent": "        ScheduleInfo scheduleInfo = new ScheduleInfo(schedule, warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup);\n        Map<String, Object> result = schedulerService.insertSchedule(loginUser, projectCode, workflowDefinitionCode, scheduleInfo);"
            },
            {
                "fromLine": 346,
                "toLine": 348,
                "oldContent": "                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode,\n                workflowDefinitionCode, schedule,",
                "newContent": "                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {\n        ScheduleInfo scheduleInfo = new ScheduleInfo(schedule, warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup);\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode, workflowDefinitionCode, scheduleInfo);"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": []
    },
    "extractedClasses": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/utils/ProjectParameterInfo.java": "package org.apache.dolphinscheduler.api.utils;\n\npublic class ProjectParameterInfo {\n    private String name;\n    private String value;\n    private String description;\n    private String dataType;\n\n    public ProjectParameterInfo(String name, String value, String description, String dataType) {\n        this.name = name;\n        this.value = value;\n        this.description = description;\n        this.dataType = dataType;\n    }\n\n    // Getters and Setters\n}",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/utils/ScheduleInfo.java": "package org.apache.dolphinscheduler.api.utils;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\npublic class ScheduleInfo {\n    private String schedule;\n    private WarningType warningType;\n    private Integer warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workflowInstancePriority;\n    private String workerGroup;\n\n    public ScheduleInfo(String schedule, WarningType warningType, Integer warningGroupId, FailureStrategy failureStrategy, Priority workflowInstancePriority, String workerGroup) {\n        this.schedule = schedule;\n        this.warningType = warningType;\n        this.warningGroupId = warningGroupId;\n        this.failureStrategy = failureStrategy;\n        this.workflowInstancePriority = workflowInstancePriority;\n        this.workerGroup = workerGroup;\n    }\n\n    // Getters and Setters\n}"
    }
}"