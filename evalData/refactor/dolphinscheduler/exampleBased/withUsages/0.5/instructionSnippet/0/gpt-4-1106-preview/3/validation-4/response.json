{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/WorkflowTaskRelationLog.java": [
            {
                "fromLine": 39,
                "toLine": 51,
                "oldContent": "    public boolean equals(Object o) {\n    }\n\n    public int hashCode() {\n    }\n\n    public String toString() {\n    }",
                "newContent": ""
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 300,
                "toLine": 306,
                "oldContent": "    List<ExecuteStatusCount> countInstanceStateV2(\n                                                  @Param(\"startTime\") Date startTime,\n                                                  @Param(\"endTime\") Date endTime,\n                                                  @Param(\"projectCode\") Long projectCode,\n                                                  @Param(\"workflowCode\") Long workflowCode,\n                                                  @Param(\"model\") Integer model,\n                                                  @Param(\"projectIds\") Set<Integer> projectIds);",
                "newContent": ""
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskDefinitionLog.java": [
            {
                "fromLine": 42,
                "toLine": 75,
                "oldContent": "        this.memoryMax = taskDefinition.memoryMax;\n        this.taskExecuteType = taskDefinition.taskExecuteType;\n    public int getOperator() {\n    }\n\n    public void setOperator(int operator) {\n    }\n\n    public Date getOperateTime() {\n    }\n\n    public void setOperateTime(Date operateTime) {\n    }\n\n    public boolean equals(Object o) {\n    }\n\n    public int hashCode() {\n    }\n\n    public String toString() {\n    }",
                "newContent": ""
            }
        ]
    },
    "extractedClasses": {}
}