
{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 36,
                "toLine": 42,
                "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,\n                                              long projectCode,\n                                              long workflowDefinitionCode,\n                                              String scheduleTime,\n                                              FailureStrategy failureStrategy,\n                                              WarningType warningType) {",
                "newContent": "public HttpResponse startWorkflowInstance(User loginUser,\n                                              long projectCode,\n                                              WorkflowInstanceRequest workflowInstanceRequest) {"
            },
            {
                "fromLine": 44,
                "toLine": 50,
                "oldContent": "        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);\n        params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);",
                "newContent": "        params.put(\"workflowDefinitionCode\", workflowInstanceRequest.getWorkflowDefinitionCode());\n        params.put(\"scheduleTime\", workflowInstanceRequest.getScheduleTime());\n        params.put(\"failureStrategy\", workflowInstanceRequest.getFailureStrategy());\n        params.put(\"warningType\", workflowInstanceRequest.getWarningType());"
            },
            {
                "fromLine": 71,
                "toLine": 77,
                "oldContent": "public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,\n                                    TaskDependType taskDependType) {",
                "newContent": "public HttpResponse executeTask(User loginUser, long projectCode, TaskExecutionRequest taskExecutionRequest) {"
            },
            {
                "fromLine": 79,
                "toLine": 83,
                "oldContent": "        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);\n        params.put(\"taskDependType\", taskDependType);",
                "newContent": "        params.put(\"workflowInstanceId\", taskExecutionRequest.getWorkflowInstanceId());\n        params.put(\"startNodeList\", taskExecutionRequest.getStartNodeList());\n        params.put(\"taskDependType\", taskExecutionRequest.getTaskDependType());"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 88,
                "toLine": 102,
                "oldContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,\n                                                            @Param(\"projectCode\") Long projectCode,\n                                                            @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                            @Param(\"searchVal\") String searchVal,\n                                                            @Param(\"executorName\") String executorName,\n                                                            @Param(\"states\") int[] statusArray,\n                                                            @Param(\"host\") String host,\n                                                            @Param(\"startTime\") Date startTime,\n                                                            @Param(\"endTime\") Date endTime);",
                "newContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,\n                                                            @Param(\"projectCode\") Long projectCode,\n                                                            WorkflowInstanceQuery workflowInstanceQuery);"
            },
            {
                "fromLine": 104,
                "toLine": 105,
                "oldContent": "    int setFailoverByHostAndStateArray(@Param(\"host\") String host,\n                                       @Param(\"states\") int[] stateArray);",
                "newContent": "    int setFailoverByHostAndStateArray(FailoverStateQuery failoverStateQuery);"
            },
            {
                "fromLine": 107,
                "toLine": 108,
                "oldContent": "    int updateWorkflowInstanceState(\n                                    @Param(\"workflowInstanceId\") Integer workflowInstanceId,",
                "newContent": "    int updateWorkflowInstanceState(WorkflowInstanceUpdateState workflowInstanceUpdateState,"
            },
            {
                "fromLine": 110,
                "toLine": 110,
                "oldContent": "                                    @Param(\"originState\") WorkflowExecutionStatus originState,",
                "newContent": "                                    WorkflowExecutionStatus originState,"
            },
            {
                "fromLine": 111,
                "toLine": 111,
                "oldContent": "                                    @Param(\"targetState\") WorkflowExecutionStatus targetState);",
                "newContent": "                                    WorkflowExecutionStatus targetState);"
            },
            {
                "fromLine": 113,
                "toLine": 114,
                "oldContent": "    int updateWorkflowInstanceByTenantCode(@Param(\"originTenantCode\") String originTenantCode,\n                                           @Param(\"destTenantCode\") String destTenantCode);",
                "newContent": "    int updateWorkflowInstanceByTenantCode(TenantCodeUpdate tenantCodeUpdate);"
            },
            {
                "fromLine": 116,
                "toLine": 117,
                "oldContent": "    int updateWorkflowInstanceByWorkerGroupName(@Param(\"originWorkerGroupName\") String originWorkerGroupName,\n                                                @Param(\"destWorkerGroupName\") String destWorkerGroupName);",
                "newContent": "    int updateWorkflowInstanceByWorkerGroupName(WorkerGroupNameUpdate workerGroupNameUpdate);"
            },
            {
                "fromLine": 119,
                "toLine": 124,
                "oldContent": "    List<WorkflowInstanceStatusCountDto> countWorkflowInstanceStateByProjectCodes(\n                                                                                  @Param(\"startTime\") Date startTime,\n                                                                                  @Param(\"endTime\") Date endTime,\n                                                                                  @Param(\"projectCodes\") Collection<Long> projectCodes);",
                "newContent": "    List<WorkflowInstanceStatusCountDto> countWorkflowInstanceStateByProjectCodes(WorkflowInstanceCountQuery workflowInstanceCountQuery);"
            },
            {
                "fromLine": 126,
                "toLine": 127,
                "oldContent": "    WorkflowInstance queryLastSchedulerWorkflow(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,",
                "newContent": "    WorkflowInstance queryLastSchedulerWorkflow(WorkflowInstanceQuery workflowInstanceQuery,"
            },
            {
                "fromLine": 128,
                "toLine": 128,
                "oldContent": "                                                @Param(\"taskDefinitionCode\") Long taskDefinitionCode,",
                "newContent": "                                                Long taskDefinitionCode,"
            },
            {
                "fromLine": 129,
                "toLine": 129,
                "oldContent": "                                                @Param(\"startTime\") Date startTime,",
                "newContent": "                                                Date startTime,"
            },
            {
                "fromLine": 130,
                "toLine": 130,
                "oldContent": "                                                @Param(\"endTime\") Date endTime,",
                "newContent": "                                                Date endTime,"
            },
            {
                "fromLine": 131,
                "toLine": 131,
                "oldContent": "                                                @Param(\"testFlag\") int testFlag);",
                "newContent": "                                                int testFlag);"
            },
            {
                "fromLine": 133,
                "toLine": 134,
                "oldContent": "    WorkflowInstance queryLastManualWorkflow(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,",
                "newContent": "    WorkflowInstance queryLastManualWorkflow(WorkflowInstanceQuery workflowInstanceQuery,"
            },
            {
                "fromLine": 135,
                "toLine": 135,
                "oldContent": "                                             @Param(\"taskCode\") Long taskCode,",
                "newContent": "                                             Long taskCode,"
            },
            {
                "fromLine": 136,
                "toLine": 136,
                "oldContent": "                                             @Param(\"startTime\") Date startTime,",
                "newContent": "                                             Date startTime,"
            },
            {
                "fromLine": 137,
                "toLine": 137,
                "oldContent": "                                             @Param(\"endTime\") Date endTime,",
                "newContent": "                                             Date endTime,"
            },
            {
                "fromLine": 138,
                "toLine": 138,
                "oldContent": "                                             @Param(\"testFlag\") int testFlag);",
                "newContent": "                                             int testFlag);"
            },
            {
                "fromLine": 140,
                "toLine": 140,
                "oldContent": "    WorkflowInstance queryFirstScheduleWorkflowInstance(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode);",
                "newContent": "    WorkflowInstance queryFirstScheduleWorkflowInstance(Long workflowDefinitionCode);"
            },
            {
                "fromLine": 142,
                "toLine": 142,
                "oldContent": "    WorkflowInstance queryFirstStartWorkflowInstance(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode);",
                "newContent": "    WorkflowInstance queryFirstStartWorkflowInstance(Long workflowDefinitionCode);"
            },
            {
                "fromLine": 144,
                "toLine": 149,
                "oldContent": "    List<WorkflowInstance> queryTopNWorkflowInstance(@Param(\"size\") int size,\n                                                     @Param(\"startTime\") Date startTime,\n                                                     @Param(\"endTime\") Date endTime,\n                                                     @Param(\"status\") WorkflowExecutionStatus status,\n                                                     @Param(\"projectCode\") long projectCode);",
                "newContent": "    List<WorkflowInstance> queryTopNWorkflowInstance(WorkflowInstanceTopQuery workflowInstanceTopQuery);"
            },
            {
                "fromLine": 151,
                "toLine": 152,
                "oldContent": "    List<WorkflowInstance> queryByWorkflowDefinitionCodeAndStatus(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,",
                "newContent": "    List<WorkflowInstance> queryByWorkflowDefinitionCodeAndStatus(WorkflowInstanceQuery workflowInstanceQuery,"
            },
            {
                "fromLine": 153,
                "toLine": 153,
                "oldContent": "                                                                  @Param(\"states\") int[] states);",
                "newContent": "                                                                  int[] states);"
            },
            {
                "fromLine": 155,
                "toLine": 155,
                "oldContent": "    List<WorkflowInstance> queryByWorkflowCodeVersionStatus(@Param(\"workflowDefinitionCode\") long workflowDefinitionCode,",
                "newContent": "    List<WorkflowInstance> queryByWorkflowCodeVersionStatus(WorkflowInstanceQuery workflowInstanceQuery,"
            },
            {
                "fromLine": 156,
                "toLine": 156,
                "oldContent": "                                                            @Param(\"workflowDefinitionVersion\") int workflowDefinitionVersion,",
                "newContent": "                                                            int workflowDefinitionVersion,"
            },
            {
                "fromLine": 157,
                "toLine": 157,
                "oldContent": "                                                            @Param(\"states\") int[] states);",
                "newContent": "                                                            int[] states);"
            },
            {
                "fromLine": 159,
                "toLine": 164,
                "oldContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,\n                                                              @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                              @Param(\"name\") String name,\n                                                              @Param(\"startTime\") String startTime,\n                                                              @Param(\"endTime\") String endTime,",
                "newContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,\n                                                              WorkflowInstanceQuery workflowInstanceQuery,"
            },
            {
                "fromLine": 165,
                "toLine": 165,
                "oldContent": "                                                              @Param(\"state\") Integer state,",
                "newContent": "                                                              Integer state,"
            },
            {
                "fromLine": 166,
                "toLine": 166,
                "oldContent": "                                                              @Param(\"host\") String host);",
                "newContent": "                                                              String host);"
            },
            {
                "fromLine": 168,
                "toLine": 174,
                "oldContent": "    List<ExecuteStatusCount> countInstanceStateV2(\n                                                  @Param(\"startTime\") Date startTime,\n                                                  @Param(\"endTime\") Date endTime,\n                                                  @Param(\"projectCode\") Long projectCode,\n                                                  @Param(\"workflowCode\") Long workflowCode,\n                                                  @Param(\"model\") Integer model,\n                                                  @Param(\"projectIds\") Set<Integer> projectIds);",
                "newContent": "    List<ExecuteStatusCount> countInstanceStateV2(WorkflowInstanceCountQuery workflowInstanceCountQuery);"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 109,
                "toLine": 109,
                "oldContent": "    public void init(String host, Date startTime, String executePath) {",
                "newContent": "    public void init(TaskInstanceInit taskInstanceInit) {"
            },
            {
                "fromLine": 110,
                "toLine": 112,
                "oldContent": "        this.host = host;\n        this.startTime = startTime;\n        this.executePath = executePath;",
                "newContent": "        this.host = taskInstanceInit.getHost();\n        this.startTime = taskInstanceInit.getStartTime();\n        this.executePath = taskInstanceInit.getExecutePath();"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 24,
                "toLine": 24,
                "oldContent": "    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,",
                "newContent": "    Result createProjectParameter(User loginUser, long projectCode, ProjectParameterRequest projectParameterRequest);"
            },
            {
                "fromLine": 26,
                "toLine": 26,
                "oldContent": "                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": ""
            },
            {
                "fromLine": 28,
                "toLine": 28,
                "oldContent": "    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,",
                "newContent": "    Result updateProjectParameter(User loginUser, long projectCode, long code, ProjectParameterRequest projectParameterRequest);"
            },
            {
                "fromLine": 30,
                "toLine": 30,
                "oldContent": "                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": ""
            },
            {
                "fromLine": 32,
                "toLine": 32,
                "oldContent": "    Result queryProjectParameterListPaging(User loginUser, long projectCode, Integer pageSize, Integer pageNo,",
                "newContent": "    Result queryProjectParameterListPaging(User loginUser, long projectCode, ProjectParameterPagingRequest projectParameterPagingRequest);"
            },
            {
                "fromLine": 34,
                "toLine": 34,
                "oldContent": "                                           String searchVal, String projectParameterDataType);",
                "newContent": ""
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 74,
                "toLine": 80,
                "oldContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "        ProjectParameterRequest projectParameterRequest = new ProjectParameterRequest(projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterRequest);"
            },
            {
                "fromLine": 86,
                "toLine": 92,
                "oldContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "        ProjectParameterRequest projectParameterRequest = new ProjectParameterRequest(projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterRequest);"
            },
            {
                "fromLine": 130,
                "toLine": 136,
                "oldContent": "        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo,\n                searchVal, projectParameterDataType);",
                "newContent": "        ProjectParameterPagingRequest projectParameterPagingRequest = new ProjectParameterPagingRequest(pageSize, pageNo, searchVal, projectParameterDataType);\n        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, projectParameterPagingRequest);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 30,
                "toLine": 32,
                "oldContent": "        Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "        ProjectParameterRequest projectParameterRequest = new ProjectParameterRequest(\"key\", \"value\", DataType.VARCHAR.name());\n        Result result = projectParameterController.createProjectParameter(loginUser, 1, projectParameterRequest);"
            },
            {
                "fromLine": 38,
                "toLine": 40,
                "oldContent": "        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",\n                DataType.LONG.name());",
                "newContent": "        ProjectParameterRequest projectParameterRequest = new ProjectParameterRequest(\"key\", \"value\", DataType.LONG.name());\n        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, projectParameterRequest);"
            },
            {
                "fromLine": 66,
                "toLine": 68,
                "oldContent": "        Result result = projectParameterController.queryProjectParameterListPaging(loginUser, 1, \"1\",\n                DataType.VARCHAR.name(), 1, 10);",
                "newContent": "        ProjectParameterPagingRequest projectParameterPagingRequest = new ProjectParameterPagingRequest(10, 1, \"1\", DataType.VARCHAR.name());\n        Result result = projectParameterController.queryProjectParameterListPaging(loginUser, 1, projectParameterPagingRequest);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 28,
                "toLine": 30,
                "oldContent": "        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "        ProjectParameterRequest projectParameterRequest =

{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 36,
                "toLine": 42,
                "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,\n                                              long projectCode,\n                                              long workflowDefinitionCode,\n                                              String scheduleTime,\n                                              FailureStrategy failureStrategy,\n                                              WarningType warningType) {",
                "newContent": "public HttpResponse startWorkflowInstance(User loginUser,\n                                              long projectCode,\n                                              WorkflowInstanceRequest workflowInstanceRequest) {"
            },
            {
                "fromLine": 44,
                "toLine": 50,
                "oldContent": "        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);\n        params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);",
                "newContent": "        params.put(\"workflowDefinitionCode\", workflowInstanceRequest.getWorkflowDefinitionCode());\n        params.put(\"scheduleTime\", workflowInstanceRequest.getScheduleTime());\n        params.put(\"failureStrategy\", workflowInstanceRequest.getFailureStrategy());\n        params.put(\"warningType\", workflowInstanceRequest.getWarningType());"
            },
            {
                "fromLine": 71,
                "toLine": 77,
                "oldContent": "public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,\n                                    TaskDependType taskDependType) {",
                "newContent": "public HttpResponse executeTask(User loginUser, long projectCode, TaskExecutionRequest taskExecutionRequest) {"
            },
            {
                "fromLine": 79,
                "toLine": 83,
                "oldContent": "        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);\n        params.put(\"taskDependType\", taskDependType);",
                "newContent": "        params.put(\"workflowInstanceId\", taskExecutionRequest.getWorkflowInstanceId());\n        params.put(\"startNodeList\", taskExecutionRequest.getStartNodeList());\n        params.put(\"taskDependType\", taskExecutionRequest.getTaskDependType());"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 88,
                "toLine": 102,
                "oldContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,\n                                                            @Param(\"projectCode\") Long projectCode,\n                                                            @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                            @Param(\"searchVal\") String searchVal,\n                                                            @Param(\"executorName\") String executorName,\n                                                            @Param(\"states\") int[] statusArray,\n                                                            @Param(\"host\") String host,\n                                                            @Param(\"startTime\") Date startTime,\n                                                            @Param(\"endTime\") Date endTime);",
                "newContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,\n                                                            @Param(\"projectCode\") Long projectCode,\n                                                            WorkflowInstanceQuery workflowInstanceQuery);"
            },
            {
                "fromLine": 104,
                "toLine": 105,
                "oldContent": "    int setFailoverByHostAndStateArray(@Param(\"host\") String host,\n                                       @Param(\"states\") int[] stateArray);",
                "newContent": "    int setFailoverByHostAndStateArray(FailoverStateQuery failoverStateQuery);"
            },
            {
                "fromLine": 107,
                "toLine": 108,
                "oldContent": "    int updateWorkflowInstanceState(\n                                    @Param(\"workflowInstanceId\") Integer workflowInstanceId,",
                "newContent": "    int updateWorkflowInstanceState(WorkflowInstanceUpdateState workflowInstanceUpdateState,"
            },
            {
                "fromLine": 110,
                "toLine": 110,
                "oldContent": "                                    @Param(\"originState\") WorkflowExecutionStatus originState,",
                "newContent": "                                    WorkflowExecutionStatus originState,"
            },
            {
                "fromLine": 111,
                "toLine": 111,
                "oldContent": "                                    @Param(\"targetState\") WorkflowExecutionStatus targetState);",
                "newContent": "                                    WorkflowExecutionStatus targetState);"
            },
            {
                "fromLine": 113,
                "toLine": 114,
                "oldContent": "    int updateWorkflowInstanceByTenantCode(@Param(\"originTenantCode\") String originTenantCode,\n                                           @Param(\"destTenantCode\") String destTenantCode);",
                "newContent": "    int updateWorkflowInstanceByTenantCode(TenantCodeUpdate tenantCodeUpdate);"
            },
            {
                "fromLine": 116,
                "toLine": 117,
                "oldContent": "    int updateWorkflowInstanceByWorkerGroupName(@Param(\"originWorkerGroupName\") String originWorkerGroupName,\n                                                @Param(\"destWorkerGroupName\") String destWorkerGroupName);",
                "newContent": "    int updateWorkflowInstanceByWorkerGroupName(WorkerGroupNameUpdate workerGroupNameUpdate);"
            },
            {
                "fromLine": 119,
                "toLine": 124,
                "oldContent": "    List<WorkflowInstanceStatusCountDto> countWorkflowInstanceStateByProjectCodes(\n                                                                                  @Param(\"startTime\") Date startTime,\n                                                                                  @Param(\"endTime\") Date endTime,\n                                                                                  @Param(\"projectCodes\") Collection<Long> projectCodes);",
                "newContent": "    List<WorkflowInstanceStatusCountDto> countWorkflowInstanceStateByProjectCodes(WorkflowInstanceCountQuery workflowInstanceCountQuery);"
            },
            {
                "fromLine": 126,
                "toLine": 127,
                "oldContent": "    WorkflowInstance queryLastSchedulerWorkflow(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,",
                "newContent": "    WorkflowInstance queryLastSchedulerWorkflow(WorkflowInstanceQuery workflowInstanceQuery,"
            },
            {
                "fromLine": 128,
                "toLine": 128,
                "oldContent": "                                                @Param(\"taskDefinitionCode\") Long taskDefinitionCode,",
                "newContent": "                                                Long taskDefinitionCode,"
            },
            {
                "fromLine": 129,
                "toLine": 129,
                "oldContent": "                                                @Param(\"startTime\") Date startTime,",
                "newContent": "                                                Date startTime,"
            },
            {
                "fromLine": 130,
                "toLine": 130,
                "oldContent": "                                                @Param(\"endTime\") Date endTime,",
                "newContent": "                                                Date endTime,"
            },
            {
                "fromLine": 131,
                "toLine": 131,
                "oldContent": "                                                @Param(\"testFlag\") int testFlag);",
                "newContent": "                                                int testFlag);"
            },
            {
                "fromLine": 133,
                "toLine": 134,
                "oldContent": "    WorkflowInstance queryLastManualWorkflow(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,",
                "newContent": "    WorkflowInstance queryLastManualWorkflow(WorkflowInstanceQuery workflowInstanceQuery,"
            },
            {
                "fromLine": 135,
                "toLine": 135,
                "oldContent": "                                             @Param(\"taskCode\") Long taskCode,",
                "newContent": "                                             Long taskCode,"
            },
            {
                "fromLine": 136,
                "toLine": 136,
                "oldContent": "                                             @Param(\"startTime\") Date startTime,",
                "newContent": "                                             Date startTime,"
            },
            {
                "fromLine": 137,
                "toLine": 137,
                "oldContent": "                                             @Param(\"endTime\") Date endTime,",
                "newContent": "                                             Date endTime,"
            },
            {
                "fromLine": 138,
                "toLine": 138,
                "oldContent": "                                             @Param(\"testFlag\") int testFlag);",
                "newContent": "                                             int testFlag);"
            },
            {
                "fromLine": 140,
                "toLine": 140,
                "oldContent": "    WorkflowInstance queryFirstScheduleWorkflowInstance(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode);",
                "newContent": "    WorkflowInstance queryFirstScheduleWorkflowInstance(Long workflowDefinitionCode);"
            },
            {
                "fromLine": 142,
                "toLine": 142,
                "oldContent": "    WorkflowInstance queryFirstStartWorkflowInstance(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode);",
                "newContent": "    WorkflowInstance queryFirstStartWorkflowInstance(Long workflowDefinitionCode);"
            },
            {
                "fromLine": 144,
                "toLine": 149,
                "oldContent": "    List<WorkflowInstance> queryTopNWorkflowInstance(@Param(\"size\") int size,\n                                                     @Param(\"startTime\") Date startTime,\n                                                     @Param(\"endTime\") Date endTime,\n                                                     @Param(\"status\") WorkflowExecutionStatus status,\n                                                     @Param(\"projectCode\") long projectCode);",
                "newContent": "    List<WorkflowInstance> queryTopNWorkflowInstance(WorkflowInstanceTopQuery workflowInstanceTopQuery);"
            },
            {
                "fromLine": 151,
                "toLine": 152,
                "oldContent": "    List<WorkflowInstance> queryByWorkflowDefinitionCodeAndStatus(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,",
                "newContent": "    List<WorkflowInstance> queryByWorkflowDefinitionCodeAndStatus(WorkflowInstanceQuery workflowInstanceQuery,"
            },
            {
                "fromLine": 153,
                "toLine": 153,
                "oldContent": "                                                                  @Param(\"states\") int[] states);",
                "newContent": "                                                                  int[] states);"
            },
            {
                "fromLine": 155,
                "toLine": 155,
                "oldContent": "    List<WorkflowInstance> queryByWorkflowCodeVersionStatus(@Param(\"workflowDefinitionCode\") long workflowDefinitionCode,",
                "newContent": "    List<WorkflowInstance> queryByWorkflowCodeVersionStatus(WorkflowInstanceQuery workflowInstanceQuery,"
            },
            {
                "fromLine": 156,
                "toLine": 156,
                "oldContent": "                                                            @Param(\"workflowDefinitionVersion\") int workflowDefinitionVersion,",
                "newContent": "                                                            int workflowDefinitionVersion,"
            },
            {
                "fromLine": 157,
                "toLine": 157,
                "oldContent": "                                                            @Param(\"states\") int[] states);",
                "newContent": "                                                            int[] states);"
            },
            {
                "fromLine": 159,
                "toLine": 164,
                "oldContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,\n                                                              @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                              @Param(\"name\") String name,\n                                                              @Param(\"startTime\") String startTime,\n                                                              @Param(\"endTime\") String endTime,",
                "newContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,\n                                                              WorkflowInstanceQuery workflowInstanceQuery,"
            },
            {
                "fromLine": 165,
                "toLine": 165,
                "oldContent": "                                                              @Param(\"state\") Integer state,",
                "newContent": "                                                              Integer state,"
            },
            {
                "fromLine": 166,
                "toLine": 166,
                "oldContent": "                                                              @Param(\"host\") String host);",
                "newContent": "                                                              String host);"
            },
            {
                "fromLine": 168,
                "toLine": 174,
                "oldContent": "    List<ExecuteStatusCount> countInstanceStateV2(\n                                                  @Param(\"startTime\") Date startTime,\n                                                  @Param(\"endTime\") Date endTime,\n                                                  @Param(\"projectCode\") Long projectCode,\n                                                  @Param(\"workflowCode\") Long workflowCode,\n                                                  @Param(\"model\") Integer model,\n                                                  @Param(\"projectIds\") Set<Integer> projectIds);",
                "newContent": "    List<ExecuteStatusCount> countInstanceStateV2(WorkflowInstanceCountQuery workflowInstanceCountQuery);"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 109,
                "toLine": 109,
                "oldContent": "    public void init(String host, Date startTime, String executePath) {",
                "newContent": "    public void init(TaskInstanceInit taskInstanceInit) {"
            },
            {
                "fromLine": 110,
                "toLine": 112,
                "oldContent": "        this.host = host;\n        this.startTime = startTime;\n        this.executePath = executePath;",
                "newContent": "        this.host = taskInstanceInit.getHost();\n        this.startTime = taskInstanceInit.getStartTime();\n        this.executePath = taskInstanceInit.getExecutePath();"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 24,
                "toLine": 24,
                "oldContent": "    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,",
                "newContent": "    Result createProjectParameter(User loginUser, long projectCode, ProjectParameterRequest projectParameterRequest);"
            },
            {
                "fromLine": 26,
                "toLine": 26,
                "oldContent": "                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": ""
            },
            {
                "fromLine": 28,
                "toLine": 28,
                "oldContent": "    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,",
                "newContent": "    Result updateProjectParameter(User loginUser, long projectCode, long code, ProjectParameterRequest projectParameterRequest);"
            },
            {
                "fromLine": 30,
                "toLine": 30,
                "oldContent": "                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": ""
            },
            {
                "fromLine": 32,
                "toLine": 32,
                "oldContent": "    Result queryProjectParameterListPaging(User loginUser, long projectCode, Integer pageSize, Integer pageNo,",
                "newContent": "    Result queryProjectParameterListPaging(User loginUser, long projectCode, ProjectParameterPagingRequest projectParameterPagingRequest);"
            },
            {
                "fromLine": 34,
                "toLine": 34,
                "oldContent": "                                           String searchVal, String projectParameterDataType);",
                "newContent": ""
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 74,
                "toLine": 80,
                "oldContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "        ProjectParameterRequest projectParameterRequest = new ProjectParameterRequest(projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterRequest);"
            },
            {
                "fromLine": 86,
                "toLine": 92,
                "oldContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "        ProjectParameterRequest projectParameterRequest = new ProjectParameterRequest(projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterRequest);"
            },
            {
                "fromLine": 130,
                "toLine": 136,
                "oldContent": "        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo,\n                searchVal, projectParameterDataType);",
                "newContent": "        ProjectParameterPagingRequest projectParameterPagingRequest = new ProjectParameterPagingRequest(pageSize, pageNo, searchVal, projectParameterDataType);\n        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, projectParameterPagingRequest);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 30,
                "toLine": 32,
                "oldContent": "        Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "        ProjectParameterRequest projectParameterRequest = new ProjectParameterRequest(\"key\", \"value\", DataType.VARCHAR.name());\n        Result result = projectParameterController.createProjectParameter(loginUser, 1, projectParameterRequest);"
            },
            {
                "fromLine": 38,
                "toLine": 40,
                "oldContent": "        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",\n                DataType.LONG.name());",
                "newContent": "        ProjectParameterRequest projectParameterRequest = new ProjectParameterRequest(\"key\", \"value\", DataType.LONG.name());\n        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, projectParameterRequest);"
            },
            {
                "fromLine": 66,
                "toLine": 68,
                "oldContent": "        Result result = projectParameterController.queryProjectParameterListPaging(loginUser, 1, \"1\",\n                DataType.VARCHAR.name(), 1, 10);",
                "newContent": "        ProjectParameterPagingRequest projectParameterPagingRequest = new ProjectParameterPagingRequest(10, 1, \"1\", DataType.VARCHAR.name());\n        Result result = projectParameterController.queryProjectParameterListPaging(loginUser, 1, projectParameterPagingRequest);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 28,
                "toLine": 30,
                "oldContent": "        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "        ProjectParameterRequest projectParameterRequest =

        {
            "oldContent": "        ProjectParameterRequest projectParameterRequest = new ProjectParameterRequest(\"key\", \"value\", DataType.VARCHAR.name());\n        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterRequest);",
            "newContent": "        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, new ProjectParameterRequest(\"key\", \"value\", DataType.VARCHAR.name()));"
        }
    