"
{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 41,
                "toLine": 41,
                "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,",
                "newContent": "public HttpResponse startWorkflowInstance(ExecutorParameter executorParameter,"
            },
            {
                "fromLine": 42,
                "toLine": 47,
                "oldContent": "                                              long projectCode,\n                                              long workflowDefinitionCode,\n                                              String scheduleTime,\n                                              FailureStrategy failureStrategy,\n                                              WarningType warningType) {",
                "newContent": "                                              long projectCode) {"
            },
            {
                "fromLine": 49,
                "toLine": 54,
                "oldContent": "        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);\n        params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);",
                "newContent": "        params.putAll(executorParameter.toMap());"
            },
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "    public HttpResponse execute(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {",
                "newContent": "    public HttpResponse execute(ExecutorParameter executorParameter, long projectCode) {"
            },
            {
                "fromLine": 66,
                "toLine": 71,
                "oldContent": "        params.put(\"loginUser\", loginUser);\n        params.put(\"projectCode\", projectCode);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"executeType\", executeType);\n        Map<String, String> headers = new HashMap<>();",
                "newContent": "        params.putAll(executorParameter.toMap());\n        Map<String, String> headers = new HashMap<>();"
            },
            {
                "fromLine": 81,
                "toLine": 81,
                "oldContent": "    public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,",
                "newContent": "    public HttpResponse executeTask(ExecutorParameter executorParameter, long projectCode,"
            },
            {
                "fromLine": 82,
                "toLine": 84,
                "oldContent": "                                    TaskDependType taskDependType) {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);",
                "newContent": "                                    TaskDependType taskDependType) {\n        Map<String, Object> params = new HashMap<>();\n        params.putAll(executorParameter.toMap());"
            },
            {
                "fromLine": 85,
                "toLine": 86,
                "oldContent": "        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);",
                "newContent": "        params.put(\"startNodeList\", executorParameter.getStartNodeList());"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 174,
                "toLine": 174,
                "oldContent": "                                                            @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,",
                "newContent": "                                                            @Param(\"workflowDefinitionCode\") WorkflowDefinitionCode workflowDefinitionCode,"
            },
            {
                "fromLine": 175,
                "toLine": 177,
                "oldContent": "                                                            @Param(\"searchVal\") String searchVal,\n                                                            @Param(\"executorName\") String executorName,\n                                                            @Param(\"states\") int[] statusArray,",
                "newContent": "                                                            @Param(\"queryWorkflowInstanceListPagingParameter\") QueryWorkflowInstanceListPagingParameter queryWorkflowInstanceListPagingParameter,"
            },
            {
                "fromLine": 178,
                "toLine": 179,
                "oldContent": "                                                            @Param(\"host\") String host,\n                                                            @Param(\"startTime\") Date startTime,",
                "newContent": "                                                            @Param(\"queryWorkflowInstanceListPagingParameter\") QueryWorkflowInstanceListPagingParameter queryWorkflowInstanceListPagingParameter,"
            },
            {
                "fromLine": 180,
                "toLine": 180,
                "oldContent": "                                                            @Param(\"endTime\") Date endTime);",
                "newContent": "                                                            @Param(\"queryWorkflowInstanceListPagingParameter\") QueryWorkflowInstanceListPagingParameter queryWorkflowInstanceListPagingParameter);"
            },
            {
                "fromLine": 285,
                "toLine": 285,
                "oldContent": "                                                                                  @Param(\"startTime\") Date startTime,",
                "newContent": "                                                                                  @Param(\"workflowInstanceStatusCountDtoParameter\") WorkflowInstanceStatusCountDtoParameter workflowInstanceStatusCountDtoParameter,"
            },
            {
                "fromLine": 286,
                "toLine": 287,
                "oldContent": "                                                                                  @Param(\"endTime\") Date endTime,\n                                                                                  @Param(\"projectCodes\") Collection<Long> projectCodes);",
                "newContent": "                                                                                  @Param(\"workflowInstanceStatusCountDtoParameter\") WorkflowInstanceStatusCountDtoParameter workflowInstanceStatusCountDtoParameter,"
            },
            {
                "fromLine": 297,
                "toLine": 297,
                "oldContent": "                                                         @Param(\"size\") int size);",
                "newContent": "                                                         @Param(\"taskAlertInfo\") TaskAlertInfo taskAlertInfo);"
            },
            {
                "fromLine": 307,
                "toLine": 307,
                "oldContent": "                                                @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,",
                "newContent": "                                                @Param(\"workflowDefinitionCode\") WorkflowDefinitionCode workflowDefinitionCode,"
            },
            {
                "fromLine": 308,
                "toLine": 309,
                "oldContent": "                                                @Param(\"taskDefinitionCode\") Long taskDefinitionCode,\n                                                @Param(\"startTime\") Date startTime,",
                "newContent": "                                                @Param(\"queryLastSchedulerWorkflowParameter\") QueryLastSchedulerWorkflowParameter queryLastSchedulerWorkflowParameter,"
            },
            {
                "fromLine": 310,
                "toLine": 311,
                "oldContent": "                                                @Param(\"endTime\") Date endTime,\n                                                @Param(\"testFlag\") int testFlag);",
                "newContent": "                                                @Param(\"queryLastSchedulerWorkflowParameter\") QueryLastSchedulerWorkflowParameter queryLastSchedulerWorkflowParameter);"
            },
            {
                "fromLine": 321,
                "toLine": 321,
                "oldContent": "                                             @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,",
                "newContent": "                                             @Param(\"workflowDefinitionCode\") WorkflowDefinitionCode workflowDefinitionCode,"
            },
            {
                "fromLine": 322,
                "toLine": 323,
                "oldContent": "                                             @Param(\"taskCode\") Long taskCode,\n                                             @Param(\"startTime\") Date startTime,",
                "newContent": "                                             @Param(\"queryLastManualWorkflowParameter\") QueryLastManualWorkflowParameter queryLastManualWorkflowParameter,"
            },
            {
                "fromLine": 324,
                "toLine": 325,
                "oldContent": "                                             @Param(\"endTime\") Date endTime,\n                                             @Param(\"testFlag\") int testFlag);",
                "newContent": "                                             @Param(\"queryLastManualWorkflowParameter\") QueryLastManualWorkflowParameter queryLastManualWorkflowParameter);"
            },
            {
                "fromLine": 336,
                "toLine": 336,
                "oldContent": "                                                         @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode);",
                "newContent": "                                                         @Param(\"workflowDefinitionCode\") WorkflowDefinitionCode workflowDefinitionCode);"
            },
            {
                "fromLine": 346,
                "toLine": 346,
                "oldContent": "                                                         @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode);",
                "newContent": "                                                         @Param(\"workflowDefinitionCode\") WorkflowDefinitionCode workflowDefinitionCode);"
            },
            {
                "fromLine": 358,
                "toLine": 358,
                "oldContent": "                                                     @Param(\"size\") int size,",
                "newContent": "                                                     @Param(\"taskAlertInfo\") TaskAlertInfo taskAlertInfo,"
            },
            {
                "fromLine": 359,
                "toLine": 360,
                "oldContent": "                                                     @Param(\"startTime\") Date startTime,\n                                                     @Param(\"endTime\") Date endTime,",
                "newContent": "                                                     @Param(\"queryTopNWorkflowInstanceParameter\") QueryTopNWorkflowInstanceParameter queryTopNWorkflowInstanceParameter,"
            },
            {
                "fromLine": 361,
                "toLine": 361,
                "oldContent": "                                                     @Param(\"status\") WorkflowExecutionStatus status,",
                "newContent": "                                                     @Param(\"queryTopNWorkflowInstanceParameter\") QueryTopNWorkflowInstanceParameter queryTopNWorkflowInstanceParameter,"
            },
            {
                "fromLine": 362,
                "toLine": 362,
                "oldContent": "                                                     @Param(\"projectCode\") long projectCode);",
                "newContent": "                                                     @Param(\"queryTopNWorkflowInstanceParameter\") QueryTopNWorkflowInstanceParameter queryTopNWorkflowInstanceParameter);"
            },
            {
                "fromLine": 373,
                "toLine": 373,
                "oldContent": "                                                                  @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,",
                "newContent": "                                                                  @Param(\"workflowDefinitionCode\") WorkflowDefinitionCode workflowDefinitionCode,"
            },
            {
                "fromLine": 374,
                "toLine": 374,
                "oldContent": "                                                                  @Param(\"states\") int[] states);",
                "newContent": "                                                                  @Param(\"queryWorkflowInstanceListPagingParameter\") QueryWorkflowInstanceListPagingParameter queryWorkflowInstanceListPagingParameter);"
            },
            {
                "fromLine": 382,
                "toLine": 382,
                "oldContent": "                                                            @Param(\"workflowDefinitionCode\") long workflowDefinitionCode,",
                "newContent": "                                                            @Param(\"workflowDefinitionCode\") WorkflowDefinitionCode workflowDefinitionCode,"
            },
            {
                "fromLine": 383,
                "toLine": 383,
                "oldContent": "                                                            @Param(\"workflowDefinitionVersion\") int workflowDefinitionVersion,",
                "newContent": "                                                            @Param(\"queryWorkflowInstanceListPagingParameter\") QueryWorkflowInstanceListPagingParameter queryWorkflowInstanceListPagingParameter,"
            },
            {
                "fromLine": 384,
                "toLine": 384,
                "oldContent": "                                                            @Param(\"states\") int[] states);",
                "newContent": "                                                            @Param(\"queryWorkflowInstanceListPagingParameter\") QueryWorkflowInstanceListPagingParameter queryWorkflowInstanceListPagingParameter);"
            },
            {
                "fromLine": 395,
                "toLine": 395,
                "oldContent": "                                                              @Param(\"projectCode\") Long projectCode,",
                "newContent": "                                                              @Param(\"workflowDefinitionCode\") WorkflowDefinitionCode workflowDefinitionCode,"
            },
            {
                "fromLine": 396,
                "toLine": 397,
                "oldContent": "                                                              @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                              @Param(\"name\") String name,",
                "newContent": "                                                              @Param(\"queryWorkflowInstanceListPagingParameter\") QueryWorkflowInstanceListPagingParameter queryWorkflowInstanceListPagingParameter,"
            },
            {
                "fromLine": 398,
                "toLine": 399,
                "oldContent": "                                                              @Param(\"startTime\") String startTime,\n                                                              @Param(\"endTime\") String endTime,",
                "newContent": "                                                              @Param(\"queryWorkflowInstanceListPagingParameter\") QueryWorkflowInstanceListPagingParameter queryWorkflowInstanceListPagingParameter,"
            },
            {
                "fromLine": 400,
                "toLine": 400,
                "oldContent": "                                                              @Param(\"state\") Integer state,",
                "newContent": "                                                              @Param(\"queryWorkflowInstanceListPagingParameter\") QueryWorkflowInstanceListPagingParameter queryWorkflowInstanceListPagingParameter,"
            },
            {
                "fromLine": 401,
                "toLine": 401,
                "oldContent": "                                                              @Param(\"host\") String host);",
                "newContent": "                                                              @Param(\"queryWorkflowInstanceListPagingParameter\") QueryWorkflowInstanceListPagingParameter queryWorkflowInstanceListPagingParameter);"
            },
            {
                "fromLine": 410,
                "toLine": 410,
                "oldContent": "                                                  @Param(\"startTime\") Date startTime,",
                "newContent": "                                                  @Param(\"workflowInstanceStatusCountDtoParameter\") WorkflowInstanceStatusCountDtoParameter workflowInstanceStatusCountDtoParameter,"
            },
            {
                "fromLine": 411,
                "toLine": 412,
                "oldContent": "                                                  @Param(\"endTime\") Date endTime,\n                                                  @Param(\"projectCode\") Long projectCode,",
                "newContent": "                                                  @Param(\"workflowInstanceStatusCountDtoParameter\") WorkflowInstanceStatusCountDtoParameter workflowInstanceStatusCountDtoParameter,"
            },
            {
                "fromLine": 413,
                "toLine": 413,
                "oldContent": "                                                  @Param(\"workflowCode\") Long workflowCode,",
                "newContent": "                                                  @Param(\"workflowInstanceStatusCountDtoParameter\") WorkflowInstanceStatusCountDtoParameter workflowInstanceStatusCountDtoParameter,"
            },
            {
                "fromLine": 414,
                "toLine": 415,
                "oldContent": "                                                  @Param(\"model\") Integer model,\n                                                  @Param(\"projectIds\") Set<Integer> projectIds);",
                "newContent": "                                                  @Param(\"workflowInstanceStatusCountDtoParameter\") WorkflowInstanceStatusCountDtoParameter workflowInstanceStatusCountDtoParameter);"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 94,
                "toLine": 94,
                "oldContent": "    public void init(String host, Date startTime, String executePath) {",
                "newContent": "    public void init(TaskAlertInfo taskAlertInfo) {"
            },
            {
                "fromLine": 95,
                "toLine": 97,
                "oldContent": "        this.host = host;\n        this.startTime = startTime;\n        this.executePath = executePath;\n    }",
                "newContent": "        this.title = taskAlertInfo.getTitle();\n        this.content = taskAlertInfo.getContent();\n        this.alertGroupId = taskAlertInfo.getAlertGroupId();\n    }"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 26,
                "toLine": 26,
                "oldContent": "    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,",
                "newContent": "    Result createProjectParameter(ProjectParameterInfo projectParameterInfo, long projectCode,"
            },
            {
                "fromLine": 27,
                "toLine": 27,
                "oldContent": "                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "                                  String projectParameterValue);"
            },
            {
                "fromLine": 29,
                "toLine": 29,
                "oldContent": "    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,",
                "newContent": "    Result updateProjectParameter(ProjectParameterInfo projectParameterInfo, long projectCode, long code,"
            },
            {
                "fromLine": 30,
                "toLine": 30,
                "oldContent": "                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "                                  String projectParameterValue);"
            },
            {
                "fromLine": 32,
                "toLine": 32,
                "oldContent": "    Result deleteProjectParametersByCode(User loginUser, long projectCode, long code);",
                "newContent": "    Result deleteProjectParametersByCode(ProjectParameterInfo projectParameterInfo, long projectCode);"
            },
            {
                "fromLine": 34,
                "toLine": 34,
                "oldContent": "    Result batchDeleteProjectParametersByCodes(User loginUser, long projectCode, String codes);",
                "newContent": "    Result batchDeleteProjectParametersByCodes(ProjectParameterInfo projectParameterInfo, long projectCode);"
            },
            {
                "fromLine": 36,
                "toLine": 36,
                "oldContent": "    Result queryProjectParameterListPaging(User loginUser, long projectCode, Integer pageSize, Integer pageNo,",
                "newContent": "    Result queryProjectParameterListPaging(ProjectParameterInfo projectParameterInfo, long projectCode, Integer pageSize, Integer pageNo,"
            },
            {
                "fromLine": 37,
                "toLine": 37,
                "oldContent": "                                           String searchVal, String projectParameterDataType);",
                "newContent": "                                           String searchVal);"
            },
            {
                "fromLine": 39,
                "toLine": 39,
                "oldContent": "    Result queryProjectParameterByCode(User loginUser, long projectCode, long code);",
                "newContent": "    Result queryProjectParameterByCode(ProjectParameterInfo projectParameterInfo, long projectCode, long code);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 69,
                "toLine": 69,
                "oldContent": "    public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,",
                "newContent": "    public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) ProjectParameterInfo projectParameterInfo,"
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,",
                "newContent": "        return projectParameterService.createProjectParameter(projectParameterInfo, projectCode,"
            },
            {
                "fromLine": 87,
                "toLine": 87,
                "oldContent": "    public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,",
                "newContent": "    public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) ProjectParameterInfo project
{
    "refactorings": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 87,
                "toLine": 87,
                "oldContent": "    public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,",
                "newContent": "    public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) ProjectParameterInfo projectParameterInfo,"
            },
            {
                "fromLine": 91,
                "toLine": 91,
                "oldContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,",
                "newContent": "        return projectParameterService.updateProjectParameter(projectParameterInfo, projectCode, code,"
            },
            {
                "fromLine": 103,
                "toLine": 103,
                "oldContent": "    public Result deleteProjectParametersByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,",
                "newContent": "    public Result deleteProjectParametersByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) ProjectParameterInfo projectParameterInfo,"
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "        return projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, code);",
                "newContent": "        return projectParameterService.deleteProjectParametersByCode(projectParameterInfo, projectCode);"
            },
            {
                "fromLine": 119,
                "toLine": 119,
                "oldContent": "    public Result batchDeleteProjectParametersByCodes(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,",
                "newContent": "    public Result batchDeleteProjectParametersByCodes(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) ProjectParameterInfo projectParameterInfo,"
            },
            {
                "fromLine": 123,
                "toLine": 123,
                "oldContent": "        return projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, codes);",
                "newContent": "        return projectParameterService.batchDeleteProjectParametersByCodes(projectParameterInfo, projectCode);"
            },
            {
                "fromLine": 135,
                "toLine": 135,
                "oldContent": "                                                  @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,",
                "newContent": "                                                  @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) ProjectParameterInfo projectParameterInfo,"
            },
            {
                "fromLine": 139,
                "toLine": 139,
                "oldContent": "        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo,",
                "newContent": "        return projectParameterService.queryProjectParameterListPaging(projectParameterInfo, projectCode, pageSize, pageNo,"
            },
            {
                "fromLine": 152,
                "toLine": 152,
                "oldContent": "    public Result queryProjectParameterByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,",
                "newContent": "    public Result queryProjectParameterByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) ProjectParameterInfo projectParameterInfo,"
            },
            {
                "fromLine": 156,
                "toLine": 156,
                "oldContent": "        return projectParameterService.queryProjectParameterByCode(loginUser, projectCode, code);",
                "newContent": "        return projectParameterService.queryProjectParameterByCode(projectParameterInfo, projectCode, code);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 31,
                "toLine": 31,
                "oldContent": "        Mockito.when(projectParameterService.createProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.any(),",
                "newContent": "        Mockito.when(projectParameterService.createProjectParameter(Mockito.any(ProjectParameterInfo.class), Mockito.anyLong(),"
            },
            {
                "fromLine": 37,
                "toLine": 37,
                "oldContent": "        Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.anyLong(),",
                "newContent": "        Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(ProjectParameterInfo.class), Mockito.anyLong(), Mockito.anyLong(),"
            },
            {
                "fromLine": 43,
                "toLine": 43,
                "oldContent": "        Mockito.when(projectParameterService.deleteProjectParametersByCode(Mockito.any(), Mockito.anyLong(),",
                "newContent": "        Mockito.when(projectParameterService.deleteProjectParametersByCode(Mockito.any(ProjectParameterInfo.class), Mockito.anyLong(),"
            },
            {
                "fromLine": 49,
                "toLine": 49,
                "oldContent": "        Mockito.when(projectParameterService.batchDeleteProjectParametersByCodes(Mockito.any(), Mockito.anyLong(),",
                "newContent": "        Mockito.when(projectParameterService.batchDeleteProjectParametersByCodes(Mockito.any(ProjectParameterInfo.class), Mockito.anyLong(),"
            },
            {
                "fromLine": 55,
                "toLine": 55,
                "oldContent": "        Mockito.when(projectParameterService.queryProjectParameterListPaging(Mockito.any(), Mockito.anyLong(),",
                "newContent": "        Mockito.when(projectParameterService.queryProjectParameterListPaging(Mockito.any(ProjectParameterInfo.class), Mockito.anyLong(),"
            },
            {
                "fromLine": 61,
                "toLine": 61,
                "oldContent": "        Mockito.when(projectParameterService.queryProjectParameterByCode(Mockito.any(), Mockito.anyLong(),",
                "newContent": "        Mockito.when(projectParameterService.queryProjectParameterByCode(Mockito.any(ProjectParameterInfo.class), Mockito.anyLong(),"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 32,
                "toLine": 32,
                "oldContent": "        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterService.createProjectParameter(projectParameterInfo, projectCode,"
            },
            {
                "fromLine": 48,
                "toLine": 48,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(projectParameterInfo, projectCode,"
            },
            {
                "fromLine": 58,
                "toLine": 58,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(projectParameterInfo, projectCode,"
            },
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(projectParameterInfo, projectCode,"
            },
            {
                "fromLine": 77,
                "toLine": 77,
                "oldContent": "        Result result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterService.updateProjectParameter(projectParameterInfo, projectCode, 1,"
            },
            {
                "fromLine": 90,
                "toLine": 90,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(projectParameterInfo, projectCode, 1,"
            },
            {
                "fromLine": 98,
                "toLine": 98,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(projectParameterInfo, projectCode, 1,"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(projectParameterInfo, projectCode, 1,"
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "        Result result = projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, 1);",
                "newContent": "        Result result = projectParameterService.deleteProjectParametersByCode(projectParameterInfo, projectCode);"
            },
            {
                "fromLine": 127,
                "toLine": 127,
                "oldContent": "        result = projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, 1);",
                "newContent": "        result = projectParameterService.deleteProjectParametersByCode(projectParameterInfo, projectCode);"
            },
            {
                "fromLine": 137,
                "toLine": 137,
                "oldContent": "        result = projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, 1);",
                "newContent": "        result = projectParameterService.deleteProjectParametersByCode(projectParameterInfo, projectCode);"
            },
            {
                "fromLine": 146,
                "toLine": 146,
                "oldContent": "        Result result = projectParameterService.queryProjectParameterByCode(loginUser, projectCode, 1);",
                "newContent": "        Result result = projectParameterService.queryProjectParameterByCode(projectParameterInfo, projectCode, 1);"
            },
            {
                "fromLine": 156,
                "toLine": 156,
                "oldContent": "        result = projectParameterService.queryProjectParameterByCode(loginUser, projectCode, 1);",
                "newContent": "        result = projectParameterService.queryProjectParameterByCode(projectParameterInfo, projectCode, 1);"
            },
            {
                "fromLine": 165,
                "toLine": 165,
                "oldContent": "        result = projectParameterService.queryProjectParameterByCode(loginUser, projectCode, 1);",
                "newContent": "        result = projectParameterService.queryProjectParameterByCode(projectParameterInfo, projectCode, 1);"
            },
            {
                "fromLine": 175,
                "toLine": 175,
                "oldContent": "        Result result = projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo, null,",
                "newContent": "        Result result = projectParameterService.queryProjectParameterListPaging(projectParameterInfo, projectCode, pageSize, pageNo, null,"
            },
            {
                "fromLine": 184,
                "toLine": 184,
                "oldContent": "        result = projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo, null, null);",
                "newContent": "        result = projectParameterService.queryProjectParameterListPaging(projectParameterInfo, projectCode, pageSize, pageNo, null, null);"
            },
            {
                "fromLine": 194,
                "toLine": 194,
                "oldContent": "        result = projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo, null, null);",
                "newContent": "        result = projectParameterService.queryProjectParameterListPaging(projectParameterInfo, projectCode, pageSize, pageNo, null, null);"
            },
            {
                "fromLine": 203,
                "toLine": 203,
                "oldContent": "        result = projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, \"\");",
                "newContent": "        result = projectParameterService.batchDeleteProjectParametersByCodes(projectParameterInfo, projectCode, \"\");"
            },
            {
                "fromLine": 209,
                "toLine": 209,
                "oldContent": "        result = projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, \"1,2\");",
                "newContent": "        result = projectParameterService.batchDeleteProjectParametersByCodes(projectParameterInfo, projectCode, \"1,2\");"
            },
            {
                "fromLine": 215,
                "toLine": 215,
                "oldContent": "        projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, \"1\");",
                "newContent": "        projectParameterService.batchDeleteProjectParametersByCodes(projectParameterInfo, projectCode, \"1\");"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "                                 @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,",
                "newContent": "                                 @RequestParam(value = \"workflowDefinitionCode\") WorkflowDefinitionCode workflowDefinitionCode,"
            },
            {
                "fromLine": 65,
                "toLine": 65,
                "oldContent": "                                 @RequestParam(value = \"schedule\") String schedule,",
                "newContent": "                                 @RequestParam(value = \"schedule\") Schedule schedule,"
            },
            {
                "fromLine": 66,
                "toLine": 71,
                "oldContent": "                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_POLICY) FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,",
                "newContent": "                                 @RequestParam(value = \"scheduleParameter\") ScheduleParameter scheduleParameter,"
            },
            {
                "fromLine": 72,
                "toLine": 72,
                "oldContent": "                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,",
                "newContent": "                                 @RequestParam(value = \"scheduleParameter\") ScheduleParameter scheduleParameter,"
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {",
                "newContent": "                                 @RequestParam(value = \"scheduleParameter\") ScheduleParameter scheduleParameter) {"
            },
            {
                "fromLine": 74,
                "toLine": 77,
                "oldContent": "        Map<String, Object> result = schedulerService.insertSchedule(\n                loginUser,\n                projectCode,\n                workflowDefinitionCode,",
                "newContent": "        Map<String, Object> result = schedulerService.insertSchedule(\n                scheduleParameter,"
            },
            {
                "fromLine": 78,
                "toLine": 82,
                "oldContent": "                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,",
                "newContent": "                projectCode,"
            },
            {
                "fromLine": 83,
                "toLine": 83,
                "oldContent": "                workerGroup,\n                tenantCode,\n                environmentCode);",
                "newContent": "                workflowDefinitionCode);"
            },
            {
                "fromLine": 98,
                "toLine": 98,
                "oldContent": "                                 @PathVariable(value = \"id\") Integer id,",
                "newContent": "                                 @RequestParam(value = \"id\") ScheduleId scheduleId,"
            },
            {
                "fromLine": 99,
                "toLine": 99,
                "oldContent": "                                 @RequestParam(value = \"schedule\") String schedule,",
                "newContent": "                                 @RequestParam(value = \"schedule\") Schedule schedule,"
            },
            {
                "fromLine": 100,
                "toLine": 105,
                "oldContent": "                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,",
                "newContent": "                                 @RequestParam(value = \"scheduleParameter\") ScheduleParameter scheduleParameter,"
            },
            {
                "fromLine": 106,
                "toLine": 106,
                "oldContent": "                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,",
                "newContent": "                                 @RequestParam(value = \"scheduleParameter\") ScheduleParameter scheduleParameter,"
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {",
                "newContent": "                                 @RequestParam(value = \"scheduleParameter\") ScheduleParameter scheduleParameter) {"
            },
            {
                "fromLine": 108,
                "toLine": 112,
                "oldContent": "        Map<String, Object> result = schedulerService.updateSchedule(loginUser, projectCode, id, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);\n    }",
                "newContent": "        Map<String, Object> result = schedulerService.updateSchedule(scheduleParameter, projectCode, scheduleId);\n        return returnDataList(result);\n    }"
            },
            {
                "fromLine": 119,
                "toLine":
{
    "refactorings": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 119,
                "toLine": 119,
                "oldContent": "    public Result<Boolean> publishScheduleOnline(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,",
                "newContent": "    public Result<Boolean> publishScheduleOnline(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) ScheduleId scheduleId,"
            },
            {
                "fromLine": 123,
                "toLine": 123,
                "oldContent": "        schedulerService.onlineScheduler(loginUser, projectCode, id);",
                "newContent": "        schedulerService.onlineScheduler(scheduleId, projectCode);"
            },
            {
                "fromLine": 130,
                "toLine": 130,
                "oldContent": "    public Result<Boolean> offlineSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,",
                "newContent": "    public Result<Boolean> offlineSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) ScheduleId scheduleId,"
            },
            {
                "fromLine": 134,
                "toLine": 134,
                "oldContent": "        schedulerService.offlineScheduler(loginUser, projectCode, id);",
                "newContent": "        schedulerService.offlineScheduler(scheduleId, projectCode);"
            },
            {
                "fromLine": 144,
                "toLine": 144,
                "oldContent": "    public Result queryScheduleListPaging(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,",
                "newContent": "    public Result queryScheduleListPaging(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) ScheduleQuery scheduleQuery,"
            },
            {
                "fromLine": 148,
                "toLine": 148,
                "oldContent": "        return schedulerService.querySchedule(loginUser, projectCode, workflowDefinitionCode, searchVal, pageNo,",
                "newContent": "        return schedulerService.querySchedule(scheduleQuery, projectCode,"
            },
            {
                "fromLine": 149,
                "toLine": 149,
                "oldContent": "                pageSize);",
                "newContent": "                pageNo, pageSize);"
            },
            {
                "fromLine": 159,
                "toLine": 159,
                "oldContent": "    public Result deleteScheduleById(@RequestAttribute(value = SESSION_USER) User loginUser,",
                "newContent": "    public Result deleteScheduleById(@RequestAttribute(value = SESSION_USER) ScheduleId scheduleId,"
            },
            {
                "fromLine": 163,
                "toLine": 163,
                "oldContent": "        schedulerService.deleteSchedulesById(loginUser, id);",
                "newContent": "        schedulerService.deleteSchedulesById(scheduleId);"
            },
            {
                "fromLine": 172,
                "toLine": 172,
                "oldContent": "    public Result queryScheduleList(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,",
                "newContent": "    public Result queryScheduleList(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) ScheduleQuery scheduleQuery,"
            },
            {
                "fromLine": 176,
                "toLine": 176,
                "oldContent": "        Map<String, Object> result = schedulerService.queryScheduleList(loginUser, projectCode);",
                "newContent": "        Map<String, Object> result = schedulerService.queryScheduleList(scheduleQuery, projectCode);"
            },
            {
                "fromLine": 185,
                "toLine": 185,
                "oldContent": "    public Result previewSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,",
                "newContent": "    public Result previewSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) Schedule schedule,"
            },
            {
                "fromLine": 189,
                "toLine": 189,
                "oldContent": "        Map<String, Object> result = schedulerService.previewSchedule(loginUser, schedule);",
                "newContent": "        Map<String, Object> result = schedulerService.previewSchedule(schedule);"
            },
            {
                "fromLine": 199,
                "toLine": 199,
                "oldContent": "                                                         @PathVariable(value = \"code\") long workflowDefinitionCode,",
                "newContent": "                                                         @PathVariable(value = \"code\") WorkflowDefinitionCode workflowDefinitionCode,"
            },
            {
                "fromLine": 200,
                "toLine": 200,
                "oldContent": "                                                         @RequestParam(value = \"schedule\") String schedule,",
                "newContent": "                                                         @RequestParam(value = \"schedule\") Schedule schedule,"
            },
            {
                "fromLine": 201,
                "toLine": 206,
                "oldContent": "                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,",
                "newContent": "                                                         @RequestParam(value = \"scheduleParameter\") ScheduleParameter scheduleParameter,"
            },
            {
                "fromLine": 207,
                "toLine": 207,
                "oldContent": "                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,",
                "newContent": "                                                         @RequestParam(value = \"scheduleParameter\") ScheduleParameter scheduleParameter,"
            },
            {
                "fromLine": 208,
                "toLine": 208,
                "oldContent": "                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {",
                "newContent": "                                                         @RequestParam(value = \"scheduleParameter\") ScheduleParameter scheduleParameter) {"
            },
            {
                "fromLine": 209,
                "toLine": 213,
                "oldContent": "        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode,\n                workflowDefinitionCode, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);",
                "newContent": "        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(scheduleParameter, projectCode,\n                workflowDefinitionCode);\n        return returnDataList(result);"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 8,
                "toLine": 8,
                "oldContent": "public class TaskAlertInfo {",
                "newContent": "public class TaskAlertInfo implements AlertData {"
            },
            {
                "fromLine": 10,
                "toLine": 10,
                "oldContent": "    private String title;",
                "newContent": "    private final String title;"
            },
            {
                "fromLine": 12,
                "toLine": 12,
                "oldContent": "    private String content;",
                "newContent": "    private final String content;"
            },
            {
                "fromLine": 14,
                "toLine": 14,
                "oldContent": "    private Integer alertGroupId;",
                "newContent": "    private final Integer alertGroupId;"
            },
            {
                "fromLine": 16,
                "toLine": 16,
                "oldContent": "    public String getTitle() {",
                "newContent": "    @Override\n    public String getTitle() {"
            },
            {
                "fromLine": 20,
                "toLine": 20,
                "oldContent": "    public void setTitle(String title) {",
                "newContent": "// Removed setTitle method"
            },
            {
                "fromLine": 21,
                "toLine": 21,
                "oldContent": "        this.title = title;",
                "newContent": ""
            },
            {
                "fromLine": 23,
                "toLine": 23,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 25,
                "toLine": 25,
                "oldContent": "    public String getContent() {",
                "newContent": "    @Override\n    public String getContent() {"
            },
            {
                "fromLine": 29,
                "toLine": 29,
                "oldContent": "    public void setContent(String content) {",
                "newContent": "// Removed setContent method"
            },
            {
                "fromLine": 30,
                "toLine": 30,
                "oldContent": "        this.content = content;",
                "newContent": ""
            },
            {
                "fromLine": 32,
                "toLine": 32,
                "oldContent": "    }",
                "newContent": ""
            },
            {
                "fromLine": 34,
                "toLine": 34,
                "oldContent": "    public Integer getAlertGroupId() {",
                "newContent": "    @Override\n    public Integer getAlertGroupId() {"
            },
            {
                "fromLine": 38,
                "toLine": 38,
                "oldContent": "    public void setAlertGroupId(Integer alertGroupId) {",
                "newContent": "// Removed setAlertGroupId method"
            },
            {
                "fromLine": 39,
                "toLine": 39,
                "oldContent": "        this.alertGroupId = alertGroupId;",
                "newContent": ""
            },
            {
                "fromLine": 41,
                "toLine": 41,
                "oldContent": "    }",
                "newContent": ""
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 32,
                "toLine": 32,
                "oldContent": "    private String title;",
                "newContent": "    private final String title;"
            },
            {
                "fromLine": 34,
                "toLine": 34,
                "oldContent": "    private String content;",
                "newContent": "    private final String content;"
            },
            {
                "fromLine": 36,
                "toLine": 36,
                "oldContent": "    private AlertStatus alertStatus;",
                "newContent": "    private final AlertStatus alertStatus;"
            },
            {
                "fromLine": 38,
                "toLine": 38,
                "oldContent": "    private WarningType warningType;",
                "newContent": "    private final WarningType warningType;"
            },
            {
                "fromLine": 40,
                "toLine": 40,
                "oldContent": "    private String log;",
                "newContent": "    private final String log;"
            },
            {
                "fromLine": 42,
                "toLine": 42,
                "oldContent": "    private Integer alertGroupId;",
                "newContent": "    private final Integer alertGroupId;"
            },
            {
                "fromLine": 44,
                "toLine": 44,
                "oldContent": "    private Date createTime;",
                "newContent": "    private final Date createTime;"
            },
            {
                "fromLine": 46,
                "toLine": 46,
                "oldContent": "    private Date updateTime;",
                "newContent": "    private final Date updateTime;"
            },
            {
                "fromLine": 48,
                "toLine": 48,
                "oldContent": "    private Long projectCode;",
                "newContent": "    private final Long projectCode;"
            },
            {
                "fromLine": 50,
                "toLine": 50,
                "oldContent": "    private Long workflowDefinitionCode;",
                "newContent": "    private final Long workflowDefinitionCode;"
            },
            {
                "fromLine": 52,
                "toLine": 52,
                "oldContent": "    private Integer workflowInstanceId;",
                "newContent": "    private final Integer workflowInstanceId;"
            },
            {
                "fromLine": 54,
                "toLine": 54,
                "oldContent": "    private AlertType alertType;",
                "newContent": "    private final AlertType alertType;"
            },
            {
                "fromLine": 56,
                "toLine": 56,
                "oldContent": "    private Map<String, Object> info = new HashMap<>();",
                "newContent": "    private final Map<String, Object> info;"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorParameter.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport java.util.Map;\n\npublic class ExecutorParameter {\n\n    private User loginUser;\n    private long workflowDefinitionCode;\n    private String scheduleTime;\n    private FailureStrategy failureStrategy;\n    private WarningType warningType;\n\n    // Getters and Setters\n\n    public Map<String, Object> toMap() {\n        // Convert properties to map and return\n    }\n}",
        "org/apache/dolphinscheduler/dao/mapper/WorkflowDefinitionCode.java": "package org.apache.dolphinscheduler.dao.mapper;\n\npublic class WorkflowDefinitionCode {\n\n    private Long code;\n\n    // Getters and Setters\n}",
        "org/apache/dolphinscheduler/dao/mapper/QueryWorkflowInstanceListPagingParameter.java": "package org.apache.dolphinscheduler.dao.mapper;\n\nimport java.util.Date;\n\npublic class QueryWorkflowInstanceListPagingParameter {\n\n    private String searchVal;\n    private String executorName;\n    private int[] statusArray;\n    private String host;\n    private Date startTime;\n    private Date endTime;\n\n    // Getters and Setters\n}",
        "org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceStatusCountDtoParameter.java": "package org.apache.dolphinscheduler.dao.mapper;\n\nimport java.util.Date;\nimport java.util.Collection;\n\npublic class WorkflowInstanceStatusCountDtoParameter {\n\n    private Date startTime;\n    private Date endTime;\n    private Collection<Long> projectCodes;\n\n    // Getters and Setters\n}",
        "org/apache/dolphinscheduler/dao/mapper/QueryLastSchedulerWorkflowParameter.java": "package org.apache.dolphinscheduler.dao.mapper;\n\nimport java.util.Date;\n\npublic class QueryLastSchedulerWorkflowParameter {\n\n    private Long taskDefinitionCode;\n    private Date startTime;\n    private Date endTime;\n    private int testFlag;\n\n    // Getters and Setters\n}",
        "org/apache/dolphinscheduler/dao/mapper/QueryLastManualWorkflowParameter.java": "package org.apache.dolphinscheduler.dao.mapper;\n\nimport java.util.Date;\n\npublic class QueryLastManualWorkflowParameter {\n\n    private Long taskCode;\n    private Date startTime;\n    private Date endTime;\n    private int testFlag;\n\n    // Getters and Setters\n}",
        "org/apache/dolphinscheduler/dao/mapper/QueryTopNWorkflowInstanceParameter.java": "package org.apache.dolphinscheduler.dao.mapper;\n\nimport java.util.Date;\nimport org.apache.dolphinscheduler.common.enums.WorkflowExecutionStatus;\n\npublic class QueryTopNWorkflowInstanceParameter {\n\n    private int size;\n    private Date startTime;\n    private Date endTime;\n    private WorkflowExecutionStatus status;\n\n    // Getters and Setters\n}",
        "org/apache/dolphinscheduler/api/service/ProjectParameterInfo.java": "package org.apache.dolphinscheduler.api.service;\n\npublic class ProjectParameterInfo {\n\n    private User loginUser;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    // Getters and Setters\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleParameter.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.*;\n\npublic class ScheduleParameter {\n\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private String workerGroup;\n    private String tenantCode;\n    private Long environmentCode;\n    private Priority workflowInstancePriority;\n\n    // Getters and Setters\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleId.java": "package org.apache.dolphinscheduler.api.controller;\n\npublic class ScheduleId {\n\n    private Integer id;\n\n    // Getters and Setters\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleQuery.java": "package org.apache.dolphinscheduler.api.controller;\n\npublic class ScheduleQuery {\n\n    private long workflowDefinitionCode;\n    private String searchVal;\n\n    // Getters and Setters\n}",
        "org/apache/dolphinscheduler/plugin/task/api/model/AlertData.java": "package org.apache.dolphinscheduler.plugin.task.api.model;\n\npublic interface AlertData {\n\n    String getTitle();\n\n    String getContent();\n\n    Integer getAlertGroupId();\n}"
    }
}"