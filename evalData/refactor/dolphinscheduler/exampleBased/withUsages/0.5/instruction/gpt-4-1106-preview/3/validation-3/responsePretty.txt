"{
    "refactorings": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 65,
                "toLine": 69,
                "oldContent": "        ProjectParameterRequest parameterRequest = new ProjectParameterRequest(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.createProjectParameter(parameterRequest);",
                "newContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);"
            },
            {
                "fromLine": 91,
                "toLine": 95,
                "oldContent": "        ProjectParameterRequest parameterRequest = new ProjectParameterRequest(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.updateProjectParameter(parameterRequest);",
                "newContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 89,
                "toLine": 103,
                "oldContent": "        ScheduleCreateRequest createRequest = new ScheduleCreateRequest(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode, environmentCode);\n        Map<String, Object> result = schedulerService.insertSchedule(createRequest);",
                "newContent": "        Map<String, Object> result = schedulerService.insertSchedule(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode, environmentCode);"
            },
            {
                "fromLine": 128,
                "toLine": 144,
                "oldContent": "        ScheduleUpdateRequest updateRequest = new ScheduleUpdateRequest(loginUser, projectCode, id, schedule, warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode, environmentCode);\n        Map<String, Object> result = schedulerService.updateSchedule(updateRequest);",
                "newContent": "        Map<String, Object> result = schedulerService.updateSchedule(loginUser, projectCode, id, schedule, warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode, environmentCode);"
            },
            {
                "fromLine": 226,
                "toLine": 242,
                "oldContent": "        ScheduleUpdateRequest updateRequest = new ScheduleUpdateRequest(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode, environmentCode);\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(updateRequest);",
                "newContent": "        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode, workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode, environmentCode);"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/service/ProjectParameterRequest.java": "",
        "org/apache/dolphinscheduler/api/service/ScheduleCreateRequest.java": "",
        "org/apache/dolphinscheduler/api/service/ScheduleUpdateRequest.java": ""
    }
}"