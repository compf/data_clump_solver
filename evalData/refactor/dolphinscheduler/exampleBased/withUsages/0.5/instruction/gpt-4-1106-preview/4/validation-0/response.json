{
    "refactorings": {
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 109,
                "toLine": 112,
                "oldContent": "    public void init(TaskInstanceInit taskInstanceInit) {\n        this.host = taskInstanceInit.getHost();\n        this.startTime = taskInstanceInit.getStartTime();\n        this.executePath = taskInstanceInit.getExecutePath();\n    }",
                "newContent": "    public void init(String host, Date startTime, String executePath) {\n        this.host = host;\n        this.startTime = startTime;\n        this.executePath = executePath;\n    }"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 88,
                "toLine": 102,
                "oldContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,\n                                                            @Param(\"projectCode\") Long projectCode,\n                                                            WorkflowInstanceQuery workflowInstanceQuery);",
                "newContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,\n                                                            @Param(\"projectCode\") Long projectCode,\n                                                            @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                            @Param(\"searchVal\") String searchVal,\n                                                            @Param(\"executorName\") String executorName,\n                                                            @Param(\"states\") int[] statusArray,\n                                                            @Param(\"host\") String host,\n                                                            @Param(\"startTime\") Date startTime,\n                                                            @Param(\"endTime\") Date endTime);"
            },
            {
                "fromLine": 104,
                "toLine": 105,
                "oldContent": "    int setFailoverByHostAndStateArray(FailoverStateQuery failoverStateQuery);",
                "newContent": "    int setFailoverByHostAndStateArray(@Param(\"host\") String host,\n                                       @Param(\"states\") int[] stateArray);"
            },
            {
                "fromLine": 107,
                "toLine": 111,
                "oldContent": "    int updateWorkflowInstanceState(WorkflowInstanceUpdateState workflowInstanceUpdateState,\n                                    WorkflowExecutionStatus originState,\n                                    WorkflowExecutionStatus targetState);",
                "newContent": "    int updateWorkflowInstanceState(\n                                    @Param(\"workflowInstanceId\") Integer workflowInstanceId,\n                                    @Param(\"originState\") WorkflowExecutionStatus originState,\n                                    @Param(\"targetState\") WorkflowExecutionStatus targetState);"
            },
            {
                "fromLine": 113,
                "toLine": 114,
                "oldContent": "    int updateWorkflowInstanceByTenantCode(TenantCodeUpdate tenantCodeUpdate);",
                "newContent": "    int updateWorkflowInstanceByTenantCode(@Param(\"originTenantCode\") String originTenantCode,\n                                           @Param(\"destTenantCode\") String destTenantCode);"
            },
            {
                "fromLine": 116,
                "toLine": 117,
                "oldContent": "    int updateWorkflowInstanceByWorkerGroupName(WorkerGroupNameUpdate workerGroupNameUpdate);",
                "newContent": "    int updateWorkflowInstanceByWorkerGroupName(@Param(\"originWorkerGroupName\") String originWorkerGroupName,\n                                                @Param(\"destWorkerGroupName\") String destWorkerGroupName);"
            },
            {
                "fromLine": 119,
                "toLine": 124,
                "oldContent": "    List<WorkflowInstanceStatusCountDto> countWorkflowInstanceStateByProjectCodes(WorkflowInstanceCountQuery workflowInstanceCountQuery);",
                "newContent": "    List<WorkflowInstanceStatusCountDto> countWorkflowInstanceStateByProjectCodes(\n                                                                                  @Param(\"startTime\") Date startTime,\n                                                                                  @Param(\"endTime\") Date endTime,\n                                                                                  @Param(\"projectCodes\") Collection<Long> projectCodes);"
            },
            {
                "fromLine": 126,
                "toLine": 131,
                "oldContent": "    WorkflowInstance queryLastSchedulerWorkflow(WorkflowInstanceQuery workflowInstanceQuery,\n                                                Long taskDefinitionCode,\n                                                Date startTime,\n                                                Date endTime,\n                                                int testFlag);",
                "newContent": "    WorkflowInstance queryLastSchedulerWorkflow(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                @Param(\"taskDefinitionCode\") Long taskDefinitionCode,\n                                                @Param(\"startTime\") Date startTime,\n                                                @Param(\"endTime\") Date endTime,\n                                                @Param(\"testFlag\") int testFlag);"
            },
            {
                "fromLine": 133,
                "toLine": 138,
                "oldContent": "    WorkflowInstance queryLastManualWorkflow(WorkflowInstanceQuery workflowInstanceQuery,\n                                             Long taskCode,\n                                             Date startTime,\n                                             Date endTime,\n                                             int testFlag);",
                "newContent": "    WorkflowInstance queryLastManualWorkflow(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                             @Param(\"taskCode\") Long taskCode,\n                                             @Param(\"startTime\") Date startTime,\n                                             @Param(\"endTime\") Date endTime,\n                                             @Param(\"testFlag\") int testFlag);"
            },
            {
                "fromLine": 140,
                "toLine": 140,
                "oldContent": "    WorkflowInstance queryFirstScheduleWorkflowInstance(Long workflowDefinitionCode);",
                "newContent": "    WorkflowInstance queryFirstScheduleWorkflowInstance(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode);"
            },
            {
                "fromLine": 142,
                "toLine": 142,
                "oldContent": "    WorkflowInstance queryFirstStartWorkflowInstance(Long workflowDefinitionCode);",
                "newContent": "    WorkflowInstance queryFirstStartWorkflowInstance(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode);"
            },
            {
                "fromLine": 144,
                "toLine": 149,
                "oldContent": "    List<WorkflowInstance> queryTopNWorkflowInstance(WorkflowInstanceTopQuery workflowInstanceTopQuery);",
                "newContent": "    List<WorkflowInstance> queryTopNWorkflowInstance(@Param(\"size\") int size,\n                                                     @Param(\"startTime\") Date startTime,\n                                                     @Param(\"endTime\") Date endTime,\n                                                     @Param(\"status\") WorkflowExecutionStatus status,\n                                                     @Param(\"projectCode\") long projectCode);"
            },
            {
                "fromLine": 151,
                "toLine": 153,
                "oldContent": "    List<WorkflowInstance> queryByWorkflowDefinitionCodeAndStatus(WorkflowInstanceQuery workflowInstanceQuery,\n                                                                  int[] states);",
                "newContent": "    List<WorkflowInstance> queryByWorkflowDefinitionCodeAndStatus(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                                  @Param(\"states\") int[] states);"
            },
            {
                "fromLine": 155,
                "toLine": 157,
                "oldContent": "    List<WorkflowInstance> queryByWorkflowCodeVersionStatus(WorkflowInstanceQuery workflowInstanceQuery,\n                                                            int workflowDefinitionVersion,\n                                                            int[] states);",
                "newContent": "    List<WorkflowInstance> queryByWorkflowCodeVersionStatus(@Param(\"workflowDefinitionCode\") long workflowDefinitionCode,\n                                                            @Param(\"workflowDefinitionVersion\") int workflowDefinitionVersion,\n                                                            @Param(\"states\") int[] states);"
            },
            {
                "fromLine": 159,
                "toLine": 166,
                "oldContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,\n                                                              WorkflowInstanceQuery workflowInstanceQuery,\n                                                              Integer state,\n                                                              String host);",
                "newContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,\n                                                              @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                              @Param(\"name\") String name,\n                                                              @Param(\"startTime\") String startTime,\n                                                              @Param(\"endTime\") String endTime,\n                                                              @Param(\"state\") Integer state,\n                                                              @Param(\"host\") String host);"
            },
            {
                "fromLine": 168,
                "toLine": 174,
                "oldContent": "    List<ExecuteStatusCount> countInstanceStateV2(WorkflowInstanceCountQuery workflowInstanceCountQuery);",
                "newContent": "    List<ExecuteStatusCount> countInstanceStateV2(\n                                                  @Param(\"startTime\") Date startTime,\n                                                  @Param(\"endTime\") Date endTime,\n                                                  @Param(\"projectCode\") Long projectCode,\n                                                  @Param(\"workflowCode\") Long workflowCode,\n                                                  @Param(\"model\") Integer model,\n                                                  @Param(\"projectIds\") Set<Integer> projectIds);"
            }
        ]
    },
    "extractedClasses": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": "public class WorkflowInstanceRequest {\n\n    private long workflowDefinitionCode;\n    private String scheduleTime;\n    private FailureStrategy failureStrategy;\n    private WarningType warningType;\n\n    // getters and setters\n}\n\npublic class TaskExecutionRequest {\n\n    private int workflowInstanceId;\n    private String startNodeList;\n    private TaskDependType taskDependType;\n\n    // getters and setters\n}",
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": "public class WorkflowInstanceQuery {\n\n    private Long workflowDefinitionCode;\n    private String searchVal;\n    private String executorName;\n    private int[] statusArray;\n    private String host;\n    private Date startTime;\n    private Date endTime;\n\n    // getters and setters\n}\n\npublic class FailoverStateQuery {\n\n    private String host;\n    private int[] stateArray;\n\n    // getters and setters\n}\n\npublic class WorkflowInstanceUpdateState {\n\n    private Integer workflowInstanceId;\n    private WorkflowExecutionStatus originState;\n    private WorkflowExecutionStatus targetState;\n\n    // getters and setters\n}\n\npublic class TenantCodeUpdate {\n\n    private String originTenantCode;\n    private String destTenantCode;\n\n    // getters and setters\n}\n\npublic class WorkerGroupNameUpdate {\n\n    private String originWorkerGroupName;\n    private String destWorkerGroupName;\n\n    // getters and setters\n}\n\npublic class WorkflowInstanceCountQuery {\n\n    private Date startTime;\n    private Date endTime;\n    private Collection<Long> projectCodes;\n\n    // getters and setters\n}\n\npublic class WorkflowInstanceTopQuery {\n\n    private int size;\n    private Date startTime;\n    private Date endTime;\n    private WorkflowExecutionStatus status;\n    private long projectCode;\n\n    // getters and setters\n}",
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": "public class TaskInstanceInit {\n\n    private String host;\n    private Date startTime;\n    private String executePath;\n\n    // getters and setters\n}",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": "public class ProjectParameterRequest {\n\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    // getters and setters\n}\n\npublic class ProjectParameterPagingRequest {\n\n    private Integer pageSize;\n    private Integer pageNo;\n    private String searchVal;\n    private String projectParameterDataType;\n\n    // getters and setters\n}"
    }
}