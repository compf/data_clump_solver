
{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 36,
                "toLine": 36,
                "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,",
                "newContent": "public HttpResponse startWorkflowInstance(ExecutionParameters executionParameters,"
            },
            {
                "fromLine": 37,
                "toLine": 41,
                "oldContent": "                                              long projectCode,\n                                              long workflowDefinitionCode,\n                                              String scheduleTime,\n                                              FailureStrategy failureStrategy,\n                                              WarningType warningType) {",
                "newContent": "                                              long projectCode) {"
            },
            {
                "fromLine": 43,
                "toLine": 47,
                "oldContent": "        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);\n        params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);",
                "newContent": "        params.putAll(executionParameters.toMap());"
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "    public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,",
                "newContent": "    public HttpResponse executeTask(TaskExecutionParameters taskExecutionParameters, long projectCode,"
            },
            {
                "fromLine": 74,
                "toLine": 74,
                "oldContent": "                                    TaskDependType taskDependType) {",
                "newContent": "                                    int workflowInstanceId) {"
            },
            {
                "fromLine": 76,
                "toLine": 78,
                "oldContent": "        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);",
                "newContent": "        params.putAll(taskExecutionParameters.toMap());"
            },
            {
                "fromLine": 79,
                "toLine": 79,
                "oldContent": "        params.put(\"taskDependType\", taskDependType);",
                "newContent": "        params.put(\"workflowInstanceId\", workflowInstanceId);"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/entity/ExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.entity;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ExecutionParameters {\n\n    private User loginUser;\n    private long workflowDefinitionCode;\n    private String scheduleTime;\n    private FailureStrategy failureStrategy;\n    private WarningType warningType;\n\n    public Map<String, Object> toMap() {\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"loginUser\", loginUser);\n        parameters.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        parameters.put(\"scheduleTime\", scheduleTime);\n        parameters.put(\"failureStrategy\", failureStrategy);\n        parameters.put(\"warningType\", warningType);\n        return parameters;\n    }\n\n    // Getters and Setters\n}",
        "org/apache/dolphinscheduler/api/test/entity/TaskExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.entity;\n\nimport org.apache.dolphinscheduler.common.enums.TaskDependType;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class TaskExecutionParameters {\n\n    private User loginUser;\n    private String startNodeList;\n    private TaskDependType taskDependType;\n\n    public Map<String, Object> toMap() {\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"loginUser\", loginUser);\n        parameters.put(\"startNodeList\", startNodeList);\n        parameters.put(\"taskDependType\", taskDependType);\n        return parameters;\n    }\n\n    // Getters and Setters\n}"
    }
}