{
    "refactorings": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 122,
                "toLine": 122,
                "oldContent": "        Map<String, Object> result = schedulerService.insertSchedule(createScheduleParams);",
                "newContent": "        Map<String, Object> result = schedulerService.insertSchedule(\n                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode\n        );"
            },
            {
                "fromLine": 182,
                "toLine": 182,
                "oldContent": "        Map<String, Object> result = schedulerService.updateSchedule(updateScheduleParams);",
                "newContent": "        Map<String, Object> result = schedulerService.updateSchedule(\n                loginUser,\n                projectCode,\n                id,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode\n        );"
            },
            {
                "fromLine": 254,
                "toLine": 254,
                "oldContent": "        return schedulerService.querySchedule(queryScheduleListPagingParams);",
                "newContent": "        return schedulerService.querySchedule(\n                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                searchVal,\n                pageNo,\n                pageSize\n        );"
            },
            {
                "fromLine": 284,
                "toLine": 284,
                "oldContent": "        schedulerService.deleteSchedulesById(deleteScheduleByIdParams);",
                "newContent": "        schedulerService.deleteSchedulesById(\n                loginUser,\n                id\n        );"
            },
            {
                "fromLine": 303,
                "toLine": 303,
                "oldContent": "        Map<String, Object> result = schedulerService.queryScheduleList(queryScheduleListParams);",
                "newContent": "        Map<String, Object> result = schedulerService.queryScheduleList(\n                loginUser,\n                projectCode\n        );"
            },
            {
                "fromLine": 326,
                "toLine": 326,
                "oldContent": "        Map<String, Object> result = schedulerService.previewSchedule(previewScheduleParams);",
                "newContent": "        Map<String, Object> result = schedulerService.previewSchedule(\n                loginUser,\n                schedule\n        );"
            },
            {
                "fromLine": 374,
                "toLine": 374,
                "oldContent": "        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(updateScheduleByWorkflowDefinitionCodeParams);",
                "newContent": "        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(\n                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode\n        );"
            }
        ]
    },
    "extractedClasses": {}
}