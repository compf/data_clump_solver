"
{"refactorings": {
  "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
    {
      "fromLine": 39,
      "toLine": 44,
      "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,\n                                              long projectCode,\n                                              long workflowDefinitionCode,\n                                              String scheduleTime,\n                                              FailureStrategy failureStrategy,\n                                              WarningType warningType) {",
      "newContent": "public HttpResponse startWorkflowInstance(User loginUser,\n                                              long projectCode,\n                                              WorkflowInstanceRequest instanceRequest) {"
    },
    {
      "fromLine": 46,
      "toLine": 53,
      "oldContent": "        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);\n        params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);",
      "newContent": "        params.put(\"workflowDefinitionCode\", instanceRequest.getWorkflowDefinitionCode());\n        params.put(\"scheduleTime\", instanceRequest.getScheduleTime());\n        params.put(\"failureStrategy\", instanceRequest.getFailureStrategy());\n        params.put(\"warningType\", instanceRequest.getWarningType());\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);"
    }
  ],
  "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
    {
      "fromLine": 139,
      "toLine": 156,
      "oldContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,\n                                                            @Param(\"projectCode\") Long projectCode,\n                                                            @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                            @Param(\"searchVal\") String searchVal,\n                                                            @Param(\"executorName\") String executorName,\n                                                            @Param(\"states\") int[] statusArray,\n                                                            @Param(\"host\") String host,\n                                                            @Param(\"startTime\") Date startTime,\n                                                            @Param(\"endTime\") Date endTime);",
      "newContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,\n                                                            @Param(\"projectCode\") Long projectCode,\n                                                            WorkflowInstanceQuery instanceQuery);"
    },
    {
      "fromLine": 159,
      "toLine": 164,
      "oldContent": "    int updateWorkflowInstanceState(\n                                    @Param(\"workflowInstanceId\") Integer workflowInstanceId,\n                                    @Param(\"originState\") WorkflowExecutionStatus originState,\n                                    @Param(\"targetState\") WorkflowExecutionStatus targetState);",
      "newContent": "    int updateWorkflowInstanceState(WorkflowInstanceUpdateState updateState);"
    }
  ],
  "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
    {
      "fromLine": 96,
      "toLine": 100,
      "oldContent": "    public void init(String host, Date startTime, String executePath) {\n        this.host = host;\n        this.startTime = startTime;\n        this.executePath = executePath;\n    }",
      "newContent": "    public void init(TaskInstanceHostInfo hostInfo) {\n        this.host = hostInfo.getHost();\n        this.startTime = hostInfo.getStartTime();\n        this.executePath = hostInfo.getExecutePath();\n    }"
    }
  ],
  "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
    {
      "fromLine": 74,
      "toLine": 78,
      "oldContent": "    public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {",
      "newContent": "    public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         ProjectParameterRequest parameterRequest) {"
    },
    {
      "fromLine": 89,
      "toLine": 93,
      "oldContent": "                                         @PathVariable(\"code\") Long code,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {",
      "newContent": "                                         @PathVariable(\"code\") Long code,\n                                         ProjectParameterRequest parameterRequest) {"
    },
    {
      "fromLine": 106,
      "toLine": 108,
      "oldContent": "                                                @RequestParam(\"code\") long code) {",
      "newContent": "                                                @RequestParam(\"code\") ProjectParameterCode parameterCode) {"
    },
    {
      "fromLine": 122,
      "toLine": 124,
      "oldContent": "                                                      @RequestParam(\"codes\") String codes) {",
      "newContent": "                                                      @RequestParam(\"codes\") ProjectParameterCodes parameterCodes) {"
    }
  ],
  "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
    {
      "fromLine": 36,
      "toLine": 38,
      "oldContent": "        Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
      "newContent": "        ProjectParameterRequest parameterRequest = new ProjectParameterRequest(\"key\", \"value\", DataType.VARCHAR.name());\n        Result result = projectParameterController.createProjectParameter(loginUser, 1, parameterRequest);"
    },
    {
      "fromLine": 47,
      "toLine": 49,
      "oldContent": "        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",\n                DataType.LONG.name());",
      "newContent": "        ProjectParameterRequest parameterRequest = new ProjectParameterRequest(\"key\", \"value\", DataType.LONG.name());\n        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, parameterRequest);"
    },
    {
      "fromLine": 58,
      "toLine": 60,
      "oldContent": "        Result result = projectParameterController.deleteProjectParametersByCode(loginUser, 1, 1);",
      "newContent": "        ProjectParameterCode parameterCode = new ProjectParameterCode(1);\n        Result result = projectParameterController.deleteProjectParametersByCode(loginUser, 1, parameterCode);"
    },
    {
      "fromLine": 69,
      "toLine": 71,
      "oldContent": "        Result result = projectParameterController.batchDeleteProjectParametersByCodes(loginUser, 1, \"1\");",
      "newContent": "        ProjectParameterCodes parameterCodes = new ProjectParameterCodes(\"1\");\n        Result result = projectParameterController.batchDeleteProjectParametersByCodes(loginUser, 1, parameterCodes);"
    }
  ],
  "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
    {
      "fromLine": 51,
      "toLine": 53,
      "oldContent": "        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                DataType.VARCHAR.name());",
      "newContent": "        ProjectParameterRequest parameterRequest = new ProjectParameterRequest(\"key\", \"value\", DataType.VARCHAR.name());\n        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, parameterRequest);"
    },
    {
      "fromLine": 69,
      "toLine": 71,
      "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                DataType.VARCHAR.name());",
      "newContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, parameterRequest);"
    },
    {
      "fromLine": 80,
      "toLine": 82,
      "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",\n                DataType.VARCHAR.name());",
      "newContent": "        parameterRequest = new ProjectParameterRequest(\"key1\", \"value\", DataType.VARCHAR.name());\n        result = projectParameterService.createProjectParameter(loginUser, projectCode, parameterRequest);"
    },
    {
      "fromLine": 89,
      "toLine": 91,
      "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",\n                DataType.VARCHAR.name());",
      "newContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, parameterRequest);"
    },
    {
      "fromLine": 105,
      "toLine": 107,
      "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
      "newContent": "        ProjectParameterRequest parameterRequest = new ProjectParameterRequest(\"key\", \"value\", DataType.VARCHAR.name());\n        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, parameterRequest);"
    },
    {
      "fromLine": 121,
      "toLine": 123,
      "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",\n                DataType.VARCHAR.name());",
      "newContent": "        parameterRequest = new ProjectParameterRequest(\"key1\", \"value\", DataType.VARCHAR.name());\n        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, parameterRequest);"
    },
    {
      "fromLine": 130,
      "toLine": 132,
      "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",\n                DataType.LONG.name());",
      "newContent": "        parameterRequest = new ProjectParameterRequest(\"key1\", \"value\", DataType.LONG.name());\n        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, parameterRequest);"
    },
    {
      "fromLine": 141,
      "toLine": 143,
      "oldContent": "        result = projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, 1);",
      "newContent": "        ProjectParameterCode parameterCode = new ProjectParameterCode(1);\n        result = projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, parameterCode);"
    },
    {
      "fromLine": 161,
      "toLine": 163,
      "oldContent": "        result = projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, 1);",
      "newContent": "        result = projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, parameterCode);"
    },
    {
      "fromLine": 175,
      "toLine": 177,
      "oldContent": "        result = projectParameterService.queryProjectParameterByCode(loginUser, projectCode, 1);",
      "newContent": "        ProjectParameterCode parameterCode = new ProjectParameterCode(1);\n        result = projectParameterService.queryProjectParameterByCode(loginUser, projectCode, parameterCode);"
    },
    {
      "fromLine": 187,
      "toLine": 189,
      "oldContent": "        result = projectParameterService.queryProjectParameterByCode(loginUser, projectCode, 1);",
      "newContent": "        result = projectParameterService.queryProjectParameterByCode(loginUser, projectCode, parameterCode);"
    }
  ],
  "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
    {
      "fromLine": 80,
      "toLine": 94,
      "oldContent": "    public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_POLICY) FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {",
      "newContent": "    public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 ScheduleCreateRequest createRequest) {"
    },
    {
      "fromLine": 106,
      "toLine": 120,
      "oldContent": "    public Result updateSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @PathVariable(value = \"id\") Integer id,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {",
      "newContent": "    public Result updateSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @PathVariable(value = \"id\") Integer id,\n                                 ScheduleUpdateRequest updateRequest) {"
    },
    {
      "fromLine": 155,
      "toLine": 169,
      "oldContent": "    public Result queryScheduleListPaging(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                          @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                          @RequestParam(value = \"workflowDefinitionCode\", required = false, defaultValue = \"0\") long workflowDefinitionCode,\n                                          @RequestParam(value = \"searchVal\", required = false) String searchVal,\n                                          @RequestParam(\"pageNo\") Integer pageNo,\n                                          @RequestParam(\"pageSize\") Integer pageSize) {",
      "newContent": "    public Result queryScheduleListPaging(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                          @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                          ScheduleQueryRequest queryRequest) {"
    },
    {
      "fromLine": 193,
      "toLine": 207,
      "oldContent": "    public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                         @PathVariable(value = \"code\") long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {",
      "newContent": "    public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                         @PathVariable(value = \"code\") long workflowDefinitionCode,\n                                                         ScheduleUpdateRequest updateRequest) {"
    }
  ],
  "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
    {
      "fromLine": 23,
      "toLine": 25,
      "oldContent": "    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }",
      "newContent": "    public Integer getAlert
{"refactorings": {
  "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
    {
      "fromLine": 27,
      "toLine": 29,
      "oldContent": "    public void setAlertGroupId(Integer alertGroupId) {\n        this.alertGroupId = alertGroupId;\n    }",
      "newContent": "    public void setAlertGroupId(AlertGroupId alertGroupId) {\n        this.alertGroupId = alertGroupId.getId();\n    }"
    }
  ],
  "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
    {
      "fromLine": 59,
      "toLine": 61,
      "oldContent": "    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }",
      "newContent": "    public AlertGroupId getAlertGroupId() {\n        return new AlertGroupId(alertGroupId);\n    }"
    },
    {
      "fromLine": 63,
      "toLine": 65,
      "oldContent": "    public void setAlertGroupId(Integer alertGroupId) {\n        this.alertGroupId = alertGroupId;\n    }",
      "newContent": "    public void setAlertGroupId(AlertGroupId alertGroupId) {\n        this.alertGroupId = alertGroupId.getId();\n    }"
    }
  ]
},
"extractedClasses": {
  "org/apache/dolphinscheduler/api/test/pages/workflow/WorkflowInstanceRequest.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\npublic class WorkflowInstanceRequest {\n    private long workflowDefinitionCode;\n    private String scheduleTime;\n    private FailureStrategy failureStrategy;\n    private WarningType warningType;\n    // getters and setters\n}",
  "org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceQuery.java": "package org.apache.dolphinscheduler.dao.mapper;\n\nimport java.util.Date;\n\npublic class WorkflowInstanceQuery {\n    private Long workflowDefinitionCode;\n    private String searchVal;\n    private String executorName;\n    private int[] statusArray;\n    private String host;\n    private Date startTime;\n    private Date endTime;\n    // getters and setters\n}",
  "org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceUpdateState.java": "package org.apache.dolphinscheduler.dao.mapper;\n\nimport org.apache.dolphinscheduler.common.enums.WorkflowExecutionStatus;\n\npublic class WorkflowInstanceUpdateState {\n    private Integer workflowInstanceId;\n    private WorkflowExecutionStatus originState;\n    private WorkflowExecutionStatus targetState;\n    // getters and setters\n}",
  "org/apache/dolphinscheduler/dao/entity/TaskInstanceHostInfo.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport java.util.Date;\n\npublic class TaskInstanceHostInfo {\n    private String host;\n    private Date startTime;\n    private String executePath;\n    // getters and setters\n}",
  "org/apache/dolphinscheduler/api/controller/ProjectParameterRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\npublic class ProjectParameterRequest {\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n    // constructor, getters and setters\n}",
  "org/apache/dolphinscheduler/api/controller/ProjectParameterCode.java": "package org.apache.dolphinscheduler.api.controller;\n\npublic class ProjectParameterCode {\n    private long code;\n    // constructor, getters and setters\n}",
  "org/apache/dolphinscheduler/api/controller/ProjectParameterCodes.java": "package org.apache.dolphinscheduler.api.controller;\n\npublic class ProjectParameterCodes {\n    private String codes;\n    // constructor, getters and setters\n}",
  "org/apache/dolphinscheduler/api/controller/ScheduleCreateRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\npublic class ScheduleCreateRequest {\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workflowInstancePriority;\n    private String workerGroup;\n    private String tenantCode;\n    private Long environmentCode;\n    // constructor, getters and setters\n}",
  "org/apache/dolphinscheduler/api/controller/ScheduleUpdateRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\npublic class ScheduleUpdateRequest {\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workflowInstancePriority;\n    private String workerGroup;\n    private String tenantCode;\n    private Long environmentCode;\n    // constructor, getters and setters\n}",
  "org/apache/dolphinscheduler/api/controller/ScheduleQueryRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\npublic class ScheduleQueryRequest {\n    private long workflowDefinitionCode;\n    private String searchVal;\n    private Integer pageNo;\n    private Integer pageSize;\n    // constructor, getters and setters\n}",
  "org/apache/dolphinscheduler/plugin/task/api/model/AlertGroupId.java": "package org.apache.dolphinscheduler.plugin.task.api.model;\n\npublic class AlertGroupId {\n    private Integer id;\n    // constructor, getters and setters\n}"
}}"