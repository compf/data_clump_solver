"
{
  "refactorings": {
    "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
      {
        "fromLine": 74,
        "toLine": 74,
        "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,",
        "newContent": "public HttpResponse startWorkflowInstance(ExecutorParameter executorParameter,"
      },
      {
        "fromLine": 75,
        "toLine": 79,
        "oldContent": "long projectCode,\nlong workflowDefinitionCode,\nString scheduleTime,\nFailureStrategy failureStrategy,\nWarningType warningType) {",
        "newContent": ") {"
      },
      {
        "fromLine": 80,
        "toLine": 84,
        "oldContent": "params.put(\"loginUser\", loginUser);\nparams.put(\"workflowDefinitionCode\", workflowDefinitionCode);\nparams.put(\"scheduleTime\", scheduleTime);\nparams.put(\"failureStrategy\", failureStrategy);\nparams.put(\"warningType\", warningType);",
        "newContent": "params.put(\"loginUser\", executorParameter.getLoginUser());\nparams.put(\"workflowDefinitionCode\", executorParameter.getWorkflowDefinitionCode());\nparams.put(\"scheduleTime\", executorParameter.getScheduleTime());\nparams.put(\"failureStrategy\", executorParameter.getFailureStrategy());\nparams.put(\"warningType\", executorParameter.getWarningType());"
      },
      {
        "fromLine": 85,
        "toLine": 85,
        "oldContent": "String url = String.format(\"/projects/%s/executors/start-workflow-instance\", projectCode);",
        "newContent": "String url = String.format(\"/projects/%s/executors/start-workflow-instance\", executorParameter.getProjectCode());"
      }
    ],
    "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
      {
        "fromLine": 170,
        "toLine": 170,
        "oldContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,",
        "newContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(WorkflowInstanceQueryParameter queryParameter,"
      },
      {
        "fromLine": 171,
        "toLine": 175,
        "oldContent": "@Param(\"projectCode\") Long projectCode,\n@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n@Param(\"searchVal\") String searchVal,\n@Param(\"executorName\") String executorName,\n@Param(\"states\") int[] statusArray,",
        "newContent": ""
      },
      {
        "fromLine": 176,
        "toLine": 176,
        "oldContent": "@Param(\"host\") String host,",
        "newContent": "@Param(\"page\") Page<WorkflowInstance> page,"
      },
      {
        "fromLine": 177,
        "toLine": 177,
        "oldContent": "@Param(\"startTime\") Date startTime,",
        "newContent": "queryParameter.getHost(),"
      },
      {
        "fromLine": 178,
        "toLine": 178,
        "oldContent": "@Param(\"endTime\") Date endTime);",
        "newContent": "queryParameter.getStartTime(),"
      },
      {
        "fromLine": 179,
        "toLine": 179,
        "oldContent": "",
        "newContent": "queryParameter.getEndTime());"
      }
    ],
    "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
      {
        "fromLine": 95,
        "toLine": 95,
        "oldContent": "public void init(String host, Date startTime, String executePath) {",
        "newContent": "public void init(TaskInstanceInitialization initialization) {"
      },
      {
        "fromLine": 96,
        "toLine": 98,
        "oldContent": "this.host = host;\nthis.startTime = startTime;\nthis.executePath = executePath;",
        "newContent": "this.host = initialization.getHost();\nthis.startTime = initialization.getStartTime();\nthis.executePath = initialization.getExecutePath();"
      }
    ],
    "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
      {
        "fromLine": 79,
        "toLine": 79,
        "oldContent": "public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,",
        "newContent": "public Result createProjectParameter(ProjectParameterRequest parameterRequest,"
      },
      {
        "fromLine": 80,
        "toLine": 83,
        "oldContent": "@Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n@RequestParam(\"projectParameterName\") String projectParameterName,\n@RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n@RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {",
        "newContent": ") {"
      },
      {
        "fromLine": 84,
        "toLine": 84,
        "oldContent": "return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,",
        "newContent": "return projectParameterService.createProjectParameter(parameterRequest.getLoginUser(), parameterRequest.getProjectCode(), parameterRequest.getProjectParameterName(),"
      },
      {
        "fromLine": 85,
        "toLine": 85,
        "oldContent": "projectParameterValue, projectParameterDataType);",
        "newContent": "parameterRequest.getProjectParameterValue(), parameterRequest.getProjectParameterDataType());"
      }
    ],
    "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
      {
        "fromLine": 35,
        "toLine": 35,
        "oldContent": "Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",",
        "newContent": "Result result = projectParameterController.createProjectParameter(new ProjectParameterRequest(loginUser, 1, \"key\", \"value\","
      },
      {
        "fromLine": 36,
        "toLine": 36,
        "oldContent": "DataType.VARCHAR.name());",
        "newContent": "DataType.VARCHAR.name()));"
      }
    ],
    "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
      {
        "fromLine": 53,
        "toLine": 53,
        "oldContent": "Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
        "newContent": "Result result = projectParameterService.createProjectParameter(loginUser, projectCode, new ProjectParameterCreateRequest(\"key\", \"value\","
      },
      {
        "fromLine": 54,
        "toLine": 54,
        "oldContent": "DataType.VARCHAR.name());",
        "newContent": "DataType.VARCHAR.name()));"
      },
      {
        "fromLine": 81,
        "toLine": 81,
        "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
        "newContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, new ProjectParameterCreateRequest(\"key1\", \"value\","
      },
      {
        "fromLine": 82,
        "toLine": 82,
        "oldContent": "DataType.VARCHAR.name());",
        "newContent": "DataType.VARCHAR.name()));"
      },
      {
        "fromLine": 91,
        "toLine": 91,
        "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
        "newContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, new ProjectParameterCreateRequest(\"key1\", \"value\","
      },
      {
        "fromLine": 92,
        "toLine": 92,
        "oldContent": "DataType.VARCHAR.name());",
        "newContent": "DataType.VARCHAR.name()));"
      }
    ],
    "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
      {
        "fromLine": 109,
        "toLine": 109,
        "oldContent": "public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,",
        "newContent": "public Result createSchedule(SchedulerRequest schedulerRequest,"
      },
      {
        "fromLine": 110,
        "toLine": 114,
        "oldContent": "@Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n@RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n@RequestParam(value = \"schedule\") String schedule,\n@RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n@RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,",
        "newContent": ""
      },
      {
        "fromLine": 115,
        "toLine": 119,
        "oldContent": "@RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_POLICY) FailureStrategy failureStrategy,\n@RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n@RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n@RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n@RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {",
        "newContent": ""
      },
      {
        "fromLine": 120,
        "toLine": 126,
        "oldContent": "Map<String, Object> result = schedulerService.insertSchedule(\nloginUser,\nprojectCode,\nworkflowDefinitionCode,\nschedule,\nwarningType,\nwarningGroupId,",
        "newContent": "Map<String, Object> result = schedulerService.insertSchedule(\nschedulerRequest.getLoginUser(),\nschedulerRequest.getProjectCode(),\nschedulerRequest.getWorkflowDefinitionCode(),\nschedulerRequest.getSchedule(),\nschedulerRequest.getWarningType(),\nschedulerRequest.getWarningGroupId(),"
      },
      {
        "fromLine": 127,
        "toLine": 131,
        "oldContent": "failureStrategy,\nworkflowInstancePriority,\nworkerGroup,\ntenantCode,\nenvironmentCode);",
        "newContent": "schedulerRequest.getFailureStrategy(),\nschedulerRequest.getWorkflowInstancePriority(),\nschedulerRequest.getWorkerGroup(),\nschedulerRequest.getTenantCode(),\nschedulerRequest.getEnvironmentCode());"
      }
    ],
    "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
      {
        "fromLine": 5,
        "toLine": 21,
        "oldContent": "public class TaskAlertInfo {\n\n    private String title;\n\n    private String content;\n\n    private Integer alertGroupId;\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public void setContent(String content) {\n        this.content = content;\n    }\n\n    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }\n\n    public void setAlertGroupId(Integer alertGroupId) {\n        this.alertGroupId = alertGroupId;\n    }\n}",
        "newContent": "public class TaskAlertInfo {\n\n    private String title;\n\n    private String content;\n\n    private Integer alertGroupId;\n\n    public TaskAlertInfo(String title, String content, Integer alertGroupId) {\n        this.title = title;\n        this.content = content;\n        this.alertGroupId = alertGroupId;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }\n}"
      }
    ],
    "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
      {
        "fromLine": 54,
        "toLine": 54,
        "oldContent": "public Alert() {",
        "newContent": "private Alert() {"
      }
    ]
  },
  "extractedClasses": {
    "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorParameter.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.TaskDependType;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ExecutorParameter {\n\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String scheduleTime;\n    private FailureStrategy failureStrategy;\n    private WarningType warningType;\n\n    // getters and setters for all fields, constructor\n}",
    "org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceQueryParameter.java": "package org.apache.dolphinscheduler.dao.mapper;\n\nimport java.util.Date;\n\npublic class WorkflowInstanceQueryParameter {\n\n    private Long projectCode;\n    private Long workflowDefinitionCode;\n    private String searchVal;\n    private String executorName;\n    private int[] statusArray;\n    private String host;\n    private Date startTime;\n    private Date endTime;\n\n    // getters and setters for all fields, constructor\n}",
    "org/apache/dolphinscheduler/dao/entity/TaskInstanceInitialization.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport java.util.Date;\n\npublic class TaskInstanceInitialization {\n\n    private String host;\n    private Date startTime;\n    private String executePath;\n\n    // getters and setters for all fields, constructor\n}",
    "org/apache/dolphinscheduler/api/controller/ProjectParameterRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ProjectParameterRequest {\n\n    private User loginUser;\n    private long projectCode;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    // getters and setters for all fields, constructor\n}",
    "org/apache/dolphinscheduler/api/controller/SchedulerRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class SchedulerRequest {\n\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workflowInstancePriority;\n    private String workerGroup;\n    private String tenantCode;\n    private Long environmentCode;\n\n    // getters and setters for all fields, constructor\n}"
  }
}"