{
    "refactorings": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 56,
                "toLine": 62,
                "oldContent": "    public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         CreateProjectParameterParams params) {",
                "newContent": "    public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {"
            },
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "        return projectParameterService.createProjectParameter(params.withLoginUser(loginUser));",
                "newContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);"
            },
            {
                "fromLine": 72,
                "toLine": 78,
                "oldContent": "    public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         UpdateProjectParameterParams params) {",
                "newContent": "    public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @PathVariable(\"code\") Long code,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {"
            },
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "        return projectParameterService.updateProjectParameter(params.withLoginUser(loginUser));",
                "newContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);"
            },
            {
                "fromLine": 87,
                "toLine": 93,
                "oldContent": "    public Result deleteProjectParametersByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                DeleteProjectParametersByCodeParams params) {",
                "newContent": "    public Result deleteProjectParametersByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                @RequestParam(\"code\") long code) {"
            },
            {
                "fromLine": 95,
                "toLine": 95,
                "oldContent": "        return projectParameterService.deleteProjectParametersByCode(params.withLoginUser(loginUser));",
                "newContent": "        return projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, code);"
            },
            {
                "fromLine": 102,
                "toLine": 108,
                "oldContent": "    public Result batchDeleteProjectParametersByCodes(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                      BatchDeleteProjectParametersByCodesParams params) {",
                "newContent": "    public Result batchDeleteProjectParametersByCodes(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                      @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                      @RequestParam(\"codes\") String codes) {"
            },
            {
                "fromLine": 110,
                "toLine": 110,
                "oldContent": "        return projectParameterService.batchDeleteProjectParametersByCodes(params.withLoginUser(loginUser));",
                "newContent": "        return projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, codes);"
            },
            {
                "fromLine": 118,
                "toLine": 124,
                "oldContent": "    public Result queryProjectParameterListPaging(\n                                                  @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                  QueryProjectParameterListPagingParams params) {",
                "newContent": "    public Result queryProjectParameterListPaging(\n                                                  @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                  @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                  @RequestParam(value = \"searchVal\", required = false) String searchVal,\n                                                  @RequestParam(value = \"projectParameterDataType\", required = false) String projectParameterDataType,\n                                                  @RequestParam(\"pageNo\") Integer pageNo,\n                                                  @RequestParam(\"pageSize\") Integer pageSize) {"
            },
            {
                "fromLine": 126,
                "toLine": 126,
                "oldContent": "        return projectParameterService.queryProjectParameterListPaging(params.withLoginUser(loginUser));",
                "newContent": "        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo,\n                searchVal, projectParameterDataType);"
            },
            {
                "fromLine": 133,
                "toLine": 139,
                "oldContent": "    public Result queryProjectParameterByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                              QueryProjectParameterByCodeParams params) {",
                "newContent": "    public Result queryProjectParameterByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                              @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                              @PathVariable(\"code\") long code) {"
            },
            {
                "fromLine": 141,
                "toLine": 141,
                "oldContent": "        return projectParameterService.queryProjectParameterByCode(params.withLoginUser(loginUser));",
                "newContent": "        return projectParameterService.queryProjectParameterByCode(loginUser, projectCode, code);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 27,
                "toLine": 27,
                "oldContent": "    Result createProjectParameter(CreateProjectParameterParams params);",
                "newContent": "    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);"
            },
            {
                "fromLine": 29,
                "toLine": 29,
                "oldContent": "    Result updateProjectParameter(UpdateProjectParameterParams params);",
                "newContent": "    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);"
            },
            {
                "fromLine": 31,
                "toLine": 31,
                "oldContent": "    Result deleteProjectParametersByCode(DeleteProjectParametersByCodeParams params);",
                "newContent": "    Result deleteProjectParametersByCode(User loginUser, long projectCode, long code);"
            },
            {
                "fromLine": 33,
                "toLine": 33,
                "oldContent": "    Result batchDeleteProjectParametersByCodes(BatchDeleteProjectParametersByCodesParams params);",
                "newContent": "    Result batchDeleteProjectParametersByCodes(User loginUser, long projectCode, String codes);"
            },
            {
                "fromLine": 35,
                "toLine": 35,
                "oldContent": "    Result queryProjectParameterListPaging(QueryProjectParameterListPagingParams params);",
                "newContent": "    Result queryProjectParameterListPaging(User loginUser, long projectCode, Integer pageSize, Integer pageNo,\n                                           String searchVal, String projectParameterDataType);"
            },
            {
                "fromLine": 37,
                "toLine": 37,
                "oldContent": "    Result queryProjectParameterByCode(QueryProjectParameterByCodeParams params);",
                "newContent": "    Result queryProjectParameterByCode(User loginUser, long projectCode, long code);"
            }
        ]
    },
    "extractedClasses": {}
}