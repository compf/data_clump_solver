"
{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 32,
                "toLine": 36,
                "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,\n                                              long projectCode,\n                                              long workflowDefinitionCode,\n                                              String scheduleTime,\n                                              FailureStrategy failureStrategy,",
                "newContent": "public HttpResponse startWorkflowInstance(StartWorkflowInstanceParams params,"
            },
            {
                "fromLine": 37,
                "toLine": 41,
                "oldContent": "                                              WarningType warningType) {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);",
                "newContent": "                                              ) {\n        Map<String, Object> httpParams = new HashMap<>();\n        httpParams.put(\"loginUser\", params.getLoginUser());\n        httpParams.put(\"workflowDefinitionCode\", params.getWorkflowDefinitionCode());\n        httpParams.put(\"scheduleTime\", params.getScheduleTime());"
            },
            {
                "fromLine": 42,
                "toLine": 44,
                "oldContent": "        params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);\n        Map<String, String> headers = new HashMap<>();",
                "newContent": "        httpParams.put(\"failureStrategy\", params.getFailureStrategy());\n        httpParams.put(\"warningType\", params.getWarningType());\n        Map<String, String> headers = new HashMap<>();"
            },
            {
                "fromLine": 45,
                "toLine": 45,
                "oldContent": "        headers.put(Constants.SESSION_ID_KEY, sessionId);",
                "newContent": "        headers.put(Constants.SESSION_ID_KEY, params.getSessionId());"
            },
            {
                "fromLine": 49,
                "toLine": 49,
                "oldContent": "        String url = String.format(\"/projects/%s/executors/start-workflow-instance\", projectCode);",
                "newContent": "        String url = String.format(\"/projects/%s/executors/start-workflow-instance\", params.getProjectCode());"
            },
            {
                "fromLine": 50,
                "toLine": 50,
                "oldContent": "        return requestClient.post(url, headers, params);",
                "newContent": "        return requestClient.post(url, headers, httpParams);"
            }
        ]
    },
    "extractedClasses": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/StartWorkflowInstanceParams.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class StartWorkflowInstanceParams {\n\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String scheduleTime;\n    private FailureStrategy failureStrategy;\n    private WarningType warningType;\n    private String sessionId;\n\n    // Getters and setters for all fields\n}"
    }
}"