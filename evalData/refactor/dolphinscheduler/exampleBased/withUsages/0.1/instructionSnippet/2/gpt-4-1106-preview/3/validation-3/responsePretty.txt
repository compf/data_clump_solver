"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/utils/TaskCacheUtils.java": [
            {
                "fromLine": 72,
                "toLine": 76,
                "oldContent": "                                          StorageOperator storageOperator) {\n        List<String> keyElements = new ArrayList<>();\n        keyElements.add(String.valueOf(taskInstance.getTaskCode()));\n        keyElements.add(String.valueOf(taskInstance.getTaskDefinitionVersion()));\n        keyElements.add(String.valueOf(taskInstance.getIsCache().getCode()));",
                "newContent": "                                          StorageOperator storageOperator) {\n        List<String> keyElements = new ArrayList<>();\n        keyElements.add(String.valueOf(taskInstance.getId()));\n        keyElements.add(String.valueOf(taskInstance.getTaskDefinitionVersion()));\n        keyElements.add(String.valueOf(taskInstance.getIsCache().getCode()));"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/utils/TaskInstanceUtils.java": [
            {
                "fromLine": 32,
                "toLine": 42,
                "oldContent": "        target.setId(source.getId());\n        target.setName(source.getName());\n        target.setTaskType(source.getTaskType());\n        target.setWorkflowInstanceId(source.getWorkflowInstanceId());\n        target.setWorkflowInstanceName(source.getWorkflowInstanceName());\n        target.setProjectCode(source.getProjectCode());\n        target.setTaskCode(source.getTaskCode());\n        target.setTaskDefinitionVersion(source.getTaskDefinitionVersion());\n        target.setWorkflowInstanceName(source.getWorkflowInstanceName());\n        target.setTaskGroupPriority(source.getTaskGroupPriority());\n        target.setState(source.getState());",
                "newContent": "        target.setId(source.getId());\n        target.setName(source.getName());\n        target.setWorkflowInstanceId(source.getWorkflowInstanceId());\n        target.setProjectCode(source.getProjectCode());\n        target.setTaskDefinitionVersion(source.getTaskDefinitionVersion());\n        target.setTaskGroupPriority(source.getTaskGroupPriority());\n        target.setState(source.getState());"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/AlertDao.java": [
            {
                "fromLine": 254,
                "toLine": 260,
                "oldContent": "                .workflowDefinitionCode(workflowInstance.getWorkflowDefinitionCode())\n                .workflowInstanceName(workflowInstance.getName())\n                .taskCode(taskInstance.getTaskCode())\n                .taskName(taskInstance.getName())\n                .taskType(taskInstance.getTaskType())\n                .taskStartTime(taskInstance.getStartTime())\n                .taskHost(taskInstance.getHost())",
                "newContent": "                .workflowDefinitionCode(workflowInstance.getWorkflowDefinitionCode())\n                .workflowInstanceName(workflowInstance.getName())\n                .taskName(taskInstance.getName())\n                .taskStartTime(taskInstance.getStartTime())\n                .taskHost(taskInstance.getHost())"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/repository/impl/TaskInstanceDaoImpl.java": [
            {
                "fromLine": 72,
                "toLine": 76,
                "oldContent": "                    workflowInstance.getId(),\n                    processInstanceState,\n                    taskInstance.getTaskCode());\n            return false;\n        }",
                "newContent": "                    workflowInstance.getId(),\n                    processInstanceState,\n                    taskInstance.getId());\n            return false;\n        }"
            }
        ]
    },
    "extractedClasses": {}
}"