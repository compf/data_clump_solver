{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/WorkflowTaskRelationLog.java": [
            {
                "fromLine": 38,
                "toLine": 53,
                "oldContent": "this.name = workflowTaskRelation.getName();\n        this.workflowDefinitionCode = workflowTaskRelation.getWorkflowDefinitionCode();\n        this.workflowDefinitionVersion = workflowTaskRelation.getWorkflowDefinitionVersion();\n        this.projectCode = workflowTaskRelation.getProjectCode();\n        this.preTaskCode = workflowTaskRelation.getPreTaskCode();\n        this.preTaskVersion = workflowTaskRelation.getPreTaskVersion();\n        this.postTaskCode = workflowTaskRelation.getPostTaskCode();\n        this.postTaskVersion = workflowTaskRelation.getPostTaskVersion();\n        this.conditionType = workflowTaskRelation.getConditionType();\n        this.conditionParams = workflowTaskRelation.getConditionParams();\n        this.createTime = workflowTaskRelation.getCreateTime();\n        this.updateTime = workflowTaskRelation.getUpdateTime();",
                "newContent": "this.name = workflowTaskRelation.getName();\n        this.workflowDefinitionCode = workflowTaskRelation.getWorkflowDefinitionCode();\n        this.workflowDefinitionVersion = workflowTaskRelation.getWorkflowDefinitionVersion();\n        this.projectCode = workflowTaskRelation.getProjectCode();\n        this.preTaskCode = workflowTaskRelation.getPreTaskCode();\n        this.preTaskVersion = workflowTaskRelation.getPreTaskVersion();\n        this.postTaskCode = workflowTaskRelation.getPostTaskCode();\n        this.postTaskVersion = workflowTaskRelation.getPostTaskVersion();\n        this.conditionType = workflowTaskRelation.getConditionType();\n        this.conditionParams = workflowTaskRelation.getConditionParams();\n        this.createTime = workflowTaskRelation.getCreateTime();\n        this.updateTime = workflowTaskRelation.getUpdateTime();"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskDefinitionLog.java": [
            {
                "fromLine": 44,
                "toLine": 78,
                "oldContent": "this.code = taskDefinition.getCode();\n        this.version = taskDefinition.getVersion();\n        this.name = taskDefinition.getName();\n        this.description = taskDefinition.getDescription();\n        this.userId = taskDefinition.getUserId();\n        this.userName = taskDefinition.getUserName();\n        this.workerGroup = taskDefinition.getWorkerGroup();\n        this.environmentCode = taskDefinition.getEnvironmentCode();\n        this.projectCode = taskDefinition.getProjectCode();\n        this.projectName = taskDefinition.getProjectName();\n        this.resourceIds = taskDefinition.getResourceIds();\n        this.taskParams = taskDefinition.getTaskParams();\n        this.taskParamList = JSONUtils.toList(taskDefinition.getTaskParams(), Property.class);\n        this.taskParamMap = JSONUtils.toMap(taskDefinition.getTaskParams());\n        this.taskPriority = taskDefinition.getTaskPriority();\n        this.taskExecuteType = taskDefinition.getTaskExecuteType();\n        this.timeoutNotifyStrategy = taskDefinition.getTimeoutNotifyStrategy();\n        this.taskType = taskDefinition.getTaskType();\n        this.timeout = taskDefinition.getTimeout();\n        this.delayTime = taskDefinition.getDelayTime();\n        this.timeoutFlag = taskDefinition.getTimeoutFlag();\n        this.updateTime = taskDefinition.getUpdateTime();\n        this.createTime = taskDefinition.getCreateTime();\n        this.failRetryInterval = taskDefinition.getFailRetryInterval();\n        this.failRetryTimes = taskDefinition.getFailRetryTimes();\n        this.flag = taskDefinition.getFlag();\n        this.isCache = taskDefinition.getIsCache();\n        this.modifyBy = taskDefinition.getModifyBy();\n        this.cpuQuota = taskDefinition.getCpuQuota();\n        this.memoryMax = taskDefinition.getMemoryMax();\n        this.taskExecuteType = taskDefinition.getTaskExecuteType();",
                "newContent": "this.code = taskDefinition.getCode();\n        this.version = taskDefinition.getVersion();\n        this.name = taskDefinition.getName();\n        this.description = taskDefinition.getDescription();\n        this.userId = taskDefinition.getUserId();\n        this.userName = taskDefinition.getUserName();\n        this.workerGroup = taskDefinition.getWorkerGroup();\n        this.environmentCode = taskDefinition.getEnvironmentCode();\n        this.projectCode = taskDefinition.getProjectCode();\n        this.projectName = taskDefinition.getProjectName();\n        this.resourceIds = taskDefinition.getResourceIds();\n        this.taskParams = taskDefinition.getTaskParams();\n        this.taskParamList = JSONUtils.toList(taskDefinition.getTaskParams(), Property.class);\n        this.taskParamMap = JSONUtils.toMap(taskDefinition.getTaskParams());\n        this.taskPriority = taskDefinition.getTaskPriority();\n        this.taskExecuteType = taskDefinition.getTaskExecuteType();\n        this.timeoutNotifyStrategy = taskDefinition.getTimeoutNotifyStrategy();\n        this.taskType = taskDefinition.getTaskType();\n        this.timeout = taskDefinition.getTimeout();\n        this.delayTime = taskDefinition.getDelayTime();\n        this.timeoutFlag = taskDefinition.getTimeoutFlag();\n        this.updateTime = taskDefinition.getUpdateTime();\n        this.createTime = taskDefinition.getCreateTime();\n        this.failRetryInterval = taskDefinition.getFailRetryInterval();\n        this.failRetryTimes = taskDefinition.getFailRetryTimes();\n        this.flag = taskDefinition.getFlag();\n        this.isCache = taskDefinition.getIsCache();\n        this.modifyBy = taskDefinition.getModifyBy();\n        this.cpuQuota = taskDefinition.getCpuQuota();\n        this.memoryMax = taskDefinition.getMemoryMax();\n        this.taskExecuteType = taskDefinition.getTaskExecuteType();"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/WorkflowDefinitionLog.java": [
            {
                "fromLine": 37,
                "toLine": 53,
                "oldContent": "this.code = workflowDefinition.getCode();\n        this.name = workflowDefinition.getName();\n        this.version = workflowDefinition.getVersion();\n        this.releaseState = workflowDefinition.getReleaseState();\n        this.projectCode = workflowDefinition.getProjectCode();\n        this.description = workflowDefinition.getDescription();\n        this.globalParams = workflowDefinition.getGlobalParams();\n        this.globalParamList = JSONUtils.toList(workflowDefinition.getGlobalParams(), Property.class);\n        this.globalParamMap = JSONUtils.toMap(workflowDefinition.getGlobalParams());\n        this.createTime = workflowDefinition.getCreateTime();\n        this.updateTime = workflowDefinition.getUpdateTime();\n        this.flag = workflowDefinition.getFlag();\n        this.userId = workflowDefinition.getUserId();\n        this.setUserName(workflowDefinition.getUserName());\n        this.setProjectName(workflowDefinition.getProjectName());",
                "newContent": "this.code = workflowDefinition.getCode();\n        this.name = workflowDefinition.getName();\n        this.version = workflowDefinition.getVersion();\n        this.releaseState = workflowDefinition.getReleaseState();\n        this.projectCode = workflowDefinition.getProjectCode();\n        this.description = workflowDefinition.getDescription();\n        this.globalParams = workflowDefinition.getGlobalParams();\n        this.globalParamList = JSONUtils.toList(workflowDefinition.getGlobalParams(), Property.class);\n        this.globalParamMap = JSONUtils.toMap(workflowDefinition.getGlobalParams());\n        this.createTime = workflowDefinition.getCreateTime();\n        this.updateTime = workflowDefinition.getUpdateTime();\n        this.flag = workflowDefinition.getFlag();\n        this.userId = workflowDefinition.getUserId();\n        this.userName = workflowDefinition.getUserName();\n        this.projectName = workflowDefinition.getProjectName();"
            }
        ]
    },
    "extractedClasses": {}
}