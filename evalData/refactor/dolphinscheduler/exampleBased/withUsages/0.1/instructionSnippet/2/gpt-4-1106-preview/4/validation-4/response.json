{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 148,
                "toLine": 153,
                "oldContent": "        return schedulerService.updateSchedule(projectCode, id, scheduleParameters);\n\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);\n    }",
                "newContent": "        Map<String, Object> result = schedulerService.updateSchedule(projectCode, id, scheduleParameters);\n        return returnDataList(result);\n    }"
            },
            {
                "fromLine": 293,
                "toLine": 309,
                "oldContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_UPDATE)\n    public Result updateScheduleByWorkflowDefinitionCode(ScheduleParameters scheduleParameters) {\n                                                         @PathVariable(value = \"code\") long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(scheduleParameters);\n        return returnDataList(result);\n    }\n}\n",
                "newContent": "    @OperatorLog(auditType = AuditType.SCHEDULE_UPDATE)\n    public Result updateScheduleByWorkflowDefinitionCode(@PathVariable(value = \"code\") long workflowDefinitionCode, ScheduleParameters scheduleParameters) {\n        return schedulerService.updateScheduleByWorkflowDefinitionCode(workflowDefinitionCode, scheduleParameters);\n    }\n}\n"
            }
        ]
    },
    "extractedClasses": {}
}