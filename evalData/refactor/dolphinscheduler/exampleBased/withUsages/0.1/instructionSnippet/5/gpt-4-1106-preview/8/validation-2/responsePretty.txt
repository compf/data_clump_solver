"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 87,
                "toLine": 115,
                "oldContent": "            result = projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterInfo);\n            assertEquals(Status.CREATE_PROJECT_PARAMETER_ERROR.getCode(), result.getCode());\n        }\n\n        // PROJECT_PARAMETER_ALREADY_EXISTS\n        when(projectMapper.queryByCode(projectCode)).thenReturn(getProject(projectCode));\n        when(projectParameterMapper.selectOne(Mockito.any())).thenReturn(getProjectParameter());\n        result = projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterInfo);\n        assertEquals(Status.PROJECT_PARAMETER_ALREADY_EXISTS.getCode(), result.getCode());\n\n        // INSERT DATA ERROR\n        when(projectParameterMapper.selectOne(Mockito.any())).thenReturn(null);\n        when(projectParameterMapper.insert(Mockito.any())).thenReturn(-1);\n        result = projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterInfo);\n        assertEquals(Status.CREATE_PROJECT_PARAMETER_ERROR.getCode(), result.getCode());\n\n        // SUCCESS\n        when(projectParameterMapper.insert(Mockito.any())).thenReturn(1);\n        result = projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterInfo);\n        assertEquals(Status.SUCCESS.getCode(), result.getCode());",
                "newContent": "            result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\", DataType.VARCHAR.name());\n            assertEquals(Status.CREATE_PROJECT_PARAMETER_ERROR.getCode(), result.getCode());\n        }\n\n        // PROJECT_PARAMETER_ALREADY_EXISTS\n        when(projectMapper.queryByCode(projectCode)).thenReturn(getProject(projectCode));\n        when(projectParameterMapper.selectOne(Mockito.any())).thenReturn(getProjectParameter());\n        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\", DataType.VARCHAR.name());\n        assertEquals(Status.PROJECT_PARAMETER_ALREADY_EXISTS.getCode(), result.getCode());\n\n        // INSERT DATA ERROR\n        when(projectParameterMapper.selectOne(Mockito.any())).thenReturn(null);\n        when(projectParameterMapper.insert(Mockito.any())).thenReturn(-1);\n        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\", DataType.VARCHAR.name());\n        assertEquals(Status.CREATE_PROJECT_PARAMETER_ERROR.getCode(), result.getCode());\n\n        // SUCCESS\n        when(projectParameterMapper.insert(Mockito.any())).thenReturn(1);\n        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\", DataType.VARCHAR.name());\n        assertEquals(Status.SUCCESS.getCode(), result.getCode());"
            },
            {
                "fromLine": 126,
                "toLine": 153,
                "oldContent": "        when(projectParameterMapper.queryByCode(Mockito.anyLong())).thenReturn(null);\n        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, projectParameterInfo);\n        assertEquals(Status.PROJECT_PARAMETER_NOT_EXISTS.getCode(), result.getCode());\n\n        // PROJECT_PARAMETER_ALREADY_EXISTS\n        when(projectParameterMapper.queryByCode(Mockito.anyLong())).thenReturn(getProjectParameter());\n        when(projectParameterMapper.selectOne(Mockito.any())).thenReturn(getProjectParameter());\n        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, projectParameterInfo);\n        assertEquals(Status.PROJECT_PARAMETER_ALREADY_EXISTS.getCode(), result.getCode());\n\n        // PROJECT_UPDATE_ERROR\n        when(projectParameterMapper.selectOne(Mockito.any())).thenReturn(null);\n        when(projectParameterMapper.updateById(Mockito.any())).thenReturn(-1);\n        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, projectParameterInfo);\n        assertEquals(Status.UPDATE_PROJECT_PARAMETER_ERROR.getCode(), result.getCode());\n\n        // SUCCESS\n        when(projectParameterMapper.updateById(Mockito.any())).thenReturn(1);\n        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, projectParameterInfo);\n        assertEquals(Status.SUCCESS.getCode(), result.getCode());\n        ProjectParameter projectParameter = (ProjectParameter) result.getData();\n        assertNotNull(projectParameter.getOperator());\n        assertNotNull(projectParameter.getUpdateTime());\n        assertEquals(DataType.LONG.name(), projectParameter.getParamDataType());",
                "newContent": "        when(projectParameterMapper.queryByCode(Mockito.anyLong())).thenReturn(null);\n        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\", DataType.VARCHAR.name());\n        assertEquals(Status.PROJECT_PARAMETER_NOT_EXISTS.getCode(), result.getCode());\n\n        // PROJECT_PARAMETER_ALREADY_EXISTS\n        when(projectParameterMapper.queryByCode(Mockito.anyLong())).thenReturn(getProjectParameter());\n        when(projectParameterMapper.selectOne(Mockito.any())).thenReturn(getProjectParameter());\n        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\", DataType.VARCHAR.name());\n        assertEquals(Status.PROJECT_PARAMETER_ALREADY_EXISTS.getCode(), result.getCode());\n\n        // PROJECT_UPDATE_ERROR\n        when(projectParameterMapper.selectOne(Mockito.any())).thenReturn(null);\n        when(projectParameterMapper.updateById(Mockito.any())).thenReturn(-1);\n        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\", DataType.VARCHAR.name());\n        assertEquals(Status.UPDATE_PROJECT_PARAMETER_ERROR.getCode(), result.getCode());\n\n        // SUCCESS\n        when(projectParameterMapper.updateById(Mockito.any())).thenReturn(1);\n        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\", DataType.LONG.name());\n        assertEquals(Status.SUCCESS.getCode(), result.getCode());\n        ProjectParameter projectParameter = (ProjectParameter) result.getData();\n        assertNotNull(projectParameter.getOperator());\n        assertNotNull(projectParameter.getUpdateTime());\n        assertEquals(DataType.LONG.name(), projectParameter.getParamDataType());"
            }
        ]
    },
    "extractedClasses": {}
}"