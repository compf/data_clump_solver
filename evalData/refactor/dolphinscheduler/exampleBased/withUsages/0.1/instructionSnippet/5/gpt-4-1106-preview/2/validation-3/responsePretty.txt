"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 65,
                "toLine": 75,
                "oldContent": "public Result createProjectParameter(@RequestBody ProjectParameterRequest projectParameterRequest) {\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);\n    }",
                "newContent": "public Result createProjectParameter(@RequestBody ProjectParameterRequest projectParameterRequest) {\n        return projectParameterService.createProjectParameter(projectParameterRequest);\n    }"
            },
            {
                "fromLine": 80,
                "toLine": 90,
                "oldContent": "public Result updateProjectParameter(@RequestBody ProjectParameterRequest projectParameterRequest) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);\n    }",
                "newContent": "public Result updateProjectParameter(@RequestBody ProjectParameterRequest projectParameterRequest) {\n        return projectParameterService.updateProjectParameter(projectParameterRequest);\n    }"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 105,
                "toLine": 115,
                "oldContent": "public Result createSchedule(@RequestBody ScheduleRequest scheduleRequest) {\n\n        Map<String, Object> result = schedulerService.insertSchedule(\n                scheduleRequest.getLoginUser(),\n                scheduleRequest.getProjectCode(),\n                scheduleRequest.getWorkflowDefinitionCode(),",
                "newContent": "public Result createSchedule(@RequestBody ScheduleRequest scheduleRequest) {\n\n        Map<String, Object> result = schedulerService.insertSchedule(\n                scheduleRequest.getLoginUser(),\n                scheduleRequest.getProjectCode(),\n                scheduleRequest.getWorkflowDefinitionCode(),\n                scheduleRequest.getSchedule(),\n                scheduleRequest.getWarningType(),\n                scheduleRequest.getWarningGroupId(),\n                scheduleRequest.getFailureStrategy(),\n                scheduleRequest.getWorkflowInstancePriority(),\n                scheduleRequest.getWorkerGroup(),\n                scheduleRequest.getTenantCode(),\n                scheduleRequest.getEnvironmentCode());"
            },
            {
                "fromLine": 322,
                "toLine": 332,
                "oldContent": "public Result updateScheduleByWorkflowDefinitionCode(@RequestBody ScheduleRequest scheduleRequest) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode,\n                workflowDefinitionCode, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);",
                "newContent": "public Result updateScheduleByWorkflowDefinitionCode(@RequestBody ScheduleRequest scheduleRequest) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(\n                scheduleRequest.getLoginUser(),\n                scheduleRequest.getProjectCode(),\n                scheduleRequest.getWorkflowDefinitionCode(),\n                scheduleRequest.getSchedule(),\n                scheduleRequest.getWarningType(),\n                scheduleRequest.getWarningGroupId(),\n                scheduleRequest.getFailureStrategy(),\n                scheduleRequest.getWorkflowInstancePriority(),\n                scheduleRequest.getWorkerGroup(),\n                scheduleRequest.getTenantCode(),\n                scheduleRequest.getEnvironmentCode());\n        return returnDataList(result);"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/controller/ProjectParameterRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ProjectParameterRequest {\n    private User loginUser;\n    private long projectCode;\n    private long code;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    // Constructor, Getters and Setters\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ScheduleRequest {\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workflowInstancePriority;\n    private String workerGroup;\n    private String tenantCode;\n    private Long environmentCode;\n\n    // Constructor, Getters and Setters\n}"
    }
}"