"{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 66,
                "toLine": 76,
                "oldContent": "params.put(\"loginUser\", loginUser);\n        params.put(\"projectCode\", projectCode);\n        params.put(\"workflowInstanceId\", workflowInstanceId);",
                "newContent": "params.putAll(executionRequest.toMap());"
            },
            {
                "fromLine": 80,
                "toLine": 90,
                "oldContent": "params.put(\"loginUser\", loginUser);\n        params.put(\"workflowInstanceId\", workflowInstanceId);",
                "newContent": "params.putAll(taskExecutionRequest.toMap());"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 265,
                "toLine": 281,
                "oldContent": "@Param(\"projectCode\") Long projectCode,\n                                                              @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                              @Param(\"name\") String name,\n                                                              @Param(\"startTime\") String startTime,",
                "newContent": "@Param(\"query\") WorkflowInstanceQuery query,"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 67,
                "toLine": 77,
                "oldContent": "private Date submitTime;\n\n    private Date startTime;\n\n    private Date endTime;\n\n    private String host;\n\n    private String executePath;\n\n    private String logPath;",
                "newContent": "private TaskExecutionEnvironment taskExecutionEnvironment;"
            },
            {
                "fromLine": 138,
                "toLine": 148,
                "oldContent": "public void init(String host, Date startTime, String executePath) {\n        this.host = host;\n        this.startTime = startTime;\n        this.executePath = executePath;\n    }\n",
                "newContent": "public void init(TaskExecutionEnvironment taskExecutionEnvironment) {\n        this.taskExecutionEnvironment = taskExecutionEnvironment;\n    }\n"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 17,
                "toLine": 32,
                "oldContent": "Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "Result createProjectParameter(User loginUser, long projectCode, ProjectParameterRequest parameterRequest);"
            },
            {
                "fromLine": 17,
                "toLine": 32,
                "oldContent": "Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "Result updateProjectParameter(User loginUser, long projectCode, long code, ProjectParameterRequest parameterRequest);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 64,
                "toLine": 80,
                "oldContent": "@RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {",
                "newContent": "@ModelAttribute ProjectParameterRequest parameterRequest) {"
            },
            {
                "fromLine": 83,
                "toLine": 100,
                "oldContent": "@RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {",
                "newContent": "@ModelAttribute ProjectParameterRequest parameterRequest) {"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 45,
                "toLine": 68,
                "oldContent": "Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "Result result = projectParameterController.createProjectParameter(loginUser, 1, new ProjectParameterRequest(\"key\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 45,
                "toLine": 68,
                "oldContent": "Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",\n                DataType.LONG.name());",
                "newContent": "Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, new ProjectParameterRequest(\"key\", \"value\", DataType.LONG.name()));"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 74,
                "toLine": 84,
                "oldContent": "Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "Result result = projectParameterService.createProjectParameter(loginUser, projectCode, new ProjectParameterRequest(\"key\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 87,
                "toLine": 118,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                    DataType.VARCHAR.name());",
                "newContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, new ProjectParameterRequest(\"key\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 120,
                "toLine": 161,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, new ProjectParameterRequest(\"key\", \"value\", DataType.VARCHAR.name()));"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 104,
                "toLine": 114,
                "oldContent": "@RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,",
                "newContent": "@ModelAttribute ScheduleRequest scheduleRequest,"
            },
            {
                "fromLine": 116,
                "toLine": 135,
                "oldContent": "@RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_POLICY) FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {",
                "newContent": ""
            },
            {
                "fromLine": 330,
                "toLine": 353,
                "oldContent": "@RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {",
                "newContent": "@ModelAttribute ScheduleRequest scheduleRequest) {"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionRequest.java": "public class ExecutionRequest {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n\n    public ExecutionRequest(User loginUser, long projectCode, int workflowInstanceId) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n        this.workflowInstanceId = workflowInstanceId;\n    }\n\n    public Map<String, Object> toMap() {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"projectCode\", projectCode);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        return params;\n    }\n}",
        "org/apache/dolphinscheduler/api/test/pages/workflow/TaskExecutionRequest.java": "public class TaskExecutionRequest extends ExecutionRequest {\n    private String startNodeList;\n    private TaskDependType taskDependType;\n\n    public TaskExecutionRequest(User loginUser, long projectCode, int workflowInstanceId, String startNodeList, TaskDependType taskDependType) {\n        super(loginUser, projectCode, workflowInstanceId);\n        this.startNodeList = startNodeList;\n        this.taskDependType = taskDependType;\n    }\n\n    @Override\n    public Map<String, Object> toMap() {\n        Map<String, Object> params = super.toMap();\n        params.put(\"startNodeList\", startNodeList);\n        params.put(\"taskDependType\", taskDependType);\n        return params;\n    }\n}",
        "org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceQuery.java": "public class WorkflowInstanceQuery {\n    private Long projectCode;\n    private Long workflowDefinitionCode;\n    private String name;\n    private String startTime;\n    private String endTime;\n\n    public WorkflowInstanceQuery(Long projectCode, Long workflowDefinitionCode, String name, String startTime, String endTime) {\n        this.projectCode = projectCode;\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.name = name;\n        this.startTime = startTime;\n        this.endTime = endTime;\n    }\n\n    // Getters and setters\n}",
        "org/apache/dolphinscheduler/dao/entity/TaskExecutionEnvironment.java": "public class TaskExecutionEnvironment {\n    private Date submitTime;\n    private Date startTime;\n    private Date endTime;\n    private String host;\n    private String executePath;\n    private String logPath;\n\n    public TaskExecutionEnvironment(Date submitTime, Date startTime, Date endTime, String host, String executePath, String logPath) {\n        this.submitTime = submitTime;\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.host = host;\n        this.executePath = executePath;\n        this.logPath = logPath;\n    }\n\n    // Getters and setters\n}",
        "org/apache/dolphinscheduler/api/service/ProjectParameterRequest.java": "public class ProjectParameterRequest {\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    public ProjectParameterRequest(String projectParameterName, String projectParameterValue, String projectParameterDataType) {\n        this.projectParameterName = projectParameterName;\n        this.projectParameterValue = projectParameterValue;\n        this.projectParameterDataType = projectParameterDataType;\n    }\n\n    // Getters and setters\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleRequest.java": "public class ScheduleRequest {\n    private long workflowDefinitionCode;\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private String workerGroup;\n    private String tenantCode;\n    private Long environmentCode;\n    private Priority workflowInstancePriority;\n\n    public ScheduleRequest(long workflowDefinitionCode, String schedule, WarningType warningType, int warningGroupId, FailureStrategy failureStrategy, String workerGroup, String tenantCode, Long environmentCode, Priority workflowInstancePriority) {\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.schedule = schedule;\n        this.warningType = warningType;\n        this.warningGroupId = warningGroupId;\n        this.failureStrategy = failureStrategy;\n        this.workerGroup = workerGroup;\n        this.tenantCode = tenantCode;\n        this.environmentCode = environmentCode;\n        this.workflowInstancePriority = workflowInstancePriority;\n    }\n\n    // Getters and setters\n}"
    }
}"