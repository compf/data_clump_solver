"{
    "refactorings": {
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/parameters/dataquality/DataQualityParameters.java": [
            {
                "fromLine": 88,
                "toLine": 88,
                "oldContent": "        return sparkParameters != null;",
                "newContent": "        return sparkParameters != null;"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/parameters/AbstractParameters.java": [
            {
                "fromLine": 82,
                "toLine": 82,
                "oldContent": "//        k8sTaskExecutionContext.setConnectionParams(",
                "newContent": "        k8sTaskExecutionContext.setConnectionParams("
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "//                localParametersMaps.put(property.getProp(), property);",
                "newContent": "                localParametersMaps.put(property.getProp(), property);"
            },
            {
                "fromLine": 122,
                "toLine": 122,
                "oldContent": "//                if (property.getDirect() == null || Objects.equals(Direct.IN, property.getDirect())) {",
                "newContent": "                if (property.getDirect() == null || Objects.equals(Direct.IN, property.getDirect())) {"
            },
            {
                "fromLine": 123,
                "toLine": 123,
                "oldContent": "//                    localParametersMaps.put(property.getProp(), property);",
                "newContent": "                    localParametersMaps.put(property.getProp(), property);"
            },
            {
                "fromLine": 138,
                "toLine": 138,
                "oldContent": "//                varPoolMap.put(property.getProp(), property);",
                "newContent": "                varPoolMap.put(property.getProp(), property);"
            },
            {
                "fromLine": 148,
                "toLine": 148,
                "oldContent": "//                if (value != null) {",
                "newContent": "                if (value != null) {"
            },
            {
                "fromLine": 149,
                "toLine": 149,
                "oldContent": "//                    info.setValue(value);",
                "newContent": "                    info.setValue(value);"
            },
            {
                "fromLine": 154,
                "toLine": 154,
                "oldContent": "//        varPool = VarPoolUtils.mergeVarPool(Lists.newArrayList(varPool, outProperty));",
                "newContent": "        varPool = VarPoolUtils.mergeVarPool(Lists.newArrayList(varPool, outProperty));"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 1,
                "toLine": 1,
                "oldContent": "// class TaskAlertInfo {",
                "newContent": "class TaskAlertInfo {"
            },
            {
                "fromLine": 2,
                "toLine": 2,
                "oldContent": "//    private String title;",
                "newContent": "    private String title;"
            },
            {
                "fromLine": 3,
                "toLine": 3,
                "oldContent": "//    private String content;",
                "newContent": "    private String content;"
            },
            {
                "fromLine": 4,
                "toLine": 4,
                "oldContent": "//    private Integer alertGroupId;",
                "newContent": "    private Integer alertGroupId;"
            },
            {
                "fromLine": 6,
                "toLine": 6,
                "oldContent": "//    // Constructor, getters, and setters",
                "newContent": "    // Constructor, getters, and setters"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/AbstractTask.java": [
            {
                "fromLine": 22,
                "toLine": 22,
                "oldContent": "// import org.apache.dolphinscheduler.plugin.task.api.model.TaskAlertInfo;",
                "newContent": "import org.apache.dolphinscheduler.plugin.task.api.model.TaskAlertInfo;"
            },
            {
                "fromLine": 63,
                "toLine": 63,
                "oldContent": "//    protected TaskAlertInfo taskAlertInfo;",
                "newContent": "    protected TaskAlertInfo taskAlertInfo;"
            },
            {
                "fromLine": 122,
                "toLine": 122,
                "oldContent": "//    public TaskAlertInfo getTaskAlertInfo() {",
                "newContent": "    public TaskAlertInfo getTaskAlertInfo() {"
            },
            {
                "fromLine": 126,
                "toLine": 126,
                "oldContent": "//    public void setTaskAlertInfo(TaskAlertInfo taskAlertInfo) {",
                "newContent": "    public void setTaskAlertInfo(TaskAlertInfo taskAlertInfo) {"
            }
        ]
    },
    "extractedClasses": {}
}"