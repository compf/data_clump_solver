"{
    "refactorings": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 75,
                "toLine": 80,
                "oldContent": "        ProjectParameterCreateParams params = new ProjectParameterCreateParams(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);\n        return projectParameterService.createProjectParameter(params);",
                "newContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);"
            },
            {
                "fromLine": 96,
                "toLine": 102,
                "oldContent": "        ProjectParameterUpdateParams params = new ProjectParameterUpdateParams(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);\n        return projectParameterService.updateProjectParameter(params);",
                "newContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);"
            },
            {
                "fromLine": 112,
                "toLine": 118,
                "oldContent": "        ProjectParameterDeleteParams params = new ProjectParameterDeleteParams(loginUser, projectCode, code);\n        return projectParameterService.deleteProjectParametersByCode(params);",
                "newContent": "        return projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, code);"
            },
            {
                "fromLine": 127,
                "toLine": 134,
                "oldContent": "        ProjectParameterBatchDeleteParams params = new ProjectParameterBatchDeleteParams(loginUser, projectCode, codes);\n        return projectParameterService.batchDeleteProjectParametersByCodes(params);",
                "newContent": "        return projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, codes);"
            },
            {
                "fromLine": 150,
                "toLine": 156,
                "oldContent": "        ProjectParameterListPagingParams params = new ProjectParameterListPagingParams(loginUser, projectCode, pageSize, pageNo,\n                searchVal, projectParameterDataType);\n        return projectParameterService.queryProjectParameterListPaging(params);",
                "newContent": "        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo,\n                searchVal, projectParameterDataType);"
            },
            {
                "fromLine": 165,
                "toLine": 171,
                "oldContent": "        ProjectParameterQueryByCodeParams params = new ProjectParameterQueryByCodeParams(loginUser, projectCode, code);\n        return projectParameterService.queryProjectParameterByCode(params);",
                "newContent": "        return projectParameterService.queryProjectParameterByCode(loginUser, projectCode, code);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 121,
                "toLine": 127,
                "oldContent": "        ScheduleCreateParams createParams = new ScheduleCreateParams(loginUser, projectCode, workflowDefinitionCode, schedule, warningType,\n                warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        Map<String, Object> result = schedulerService.insertSchedule(createParams);\n        return returnDataList(result);",
                "newContent": "        Map<String, Object> result = schedulerService.insertSchedule(\n                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode);\n\n        return returnDataList(result);"
            },
            {
                "fromLine": 170,
                "toLine": 186,
                "oldContent": "        ScheduleUpdateParams updateParams = new ScheduleUpdateParams(loginUser, projectCode, id, schedule, warningType, warningGroupId,\n                failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        Map<String, Object> result = schedulerService.updateSchedule(updateParams);\n        return returnDataList(result);",
                "newContent": "        Map<String, Object> result = schedulerService.updateSchedule(loginUser, projectCode, id, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);"
            },
            {
                "fromLine": 337,
                "toLine": 353,
                "oldContent": "        ScheduleUpdateByWorkflowDefinitionCodeParams updateByWorkflowDefinitionCodeParams = new ScheduleUpdateByWorkflowDefinitionCodeParams(loginUser, projectCode,\n                workflowDefinitionCode, schedule, warningType, warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(updateByWorkflowDefinitionCodeParams);\n        return returnDataList(result);",
                "newContent": "        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode,\n                workflowDefinitionCode, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);"
            }
        ]
    },
    "extractedClasses": {
        "ProjectParameterCreateParams.java": "// Removed the ProjectParameterCreateParams class",
        "ProjectParameterUpdateParams.java": "// Removed the ProjectParameterUpdateParams class",
        "ProjectParameterDeleteParams.java": "// Removed the ProjectParameterDeleteParams class",
        "ProjectParameterBatchDeleteParams.java": "// Removed the ProjectParameterBatchDeleteParams class",
        "ProjectParameterListPagingParams.java": "// Removed the ProjectParameterListPagingParams class",
        "ProjectParameterQueryByCodeParams.java": "// Removed the ProjectParameterQueryByCodeParams class",
        "ScheduleCreateParams.java": "// Removed the ScheduleCreateParams class",
        "ScheduleUpdateParams.java": "// Removed the ScheduleUpdateParams class",
        "ScheduleUpdateByWorkflowDefinitionCodeParams.java": "// Removed the ScheduleUpdateByWorkflowDefinitionCodeParams class"
    }
}"