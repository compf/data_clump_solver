"{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 35,
                "toLine": 35,
                "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,",
                "newContent": "public HttpResponse startWorkflowInstance(ExecutionParameters executionParameters,"
            },
            {
                "fromLine": 36,
                "toLine": 36,
                "oldContent": "                                              long projectCode,",
                "newContent": ""
            },
            {
                "fromLine": 37,
                "toLine": 37,
                "oldContent": "                                              long workflowDefinitionCode,",
                "newContent": ""
            },
            {
                "fromLine": 38,
                "toLine": 38,
                "oldContent": "                                              String scheduleTime,",
                "newContent": ""
            },
            {
                "fromLine": 39,
                "toLine": 39,
                "oldContent": "                                              FailureStrategy failureStrategy,",
                "newContent": ""
            },
            {
                "fromLine": 40,
                "toLine": 40,
                "oldContent": "                                              WarningType warningType) {",
                "newContent": ""
            },
            {
                "fromLine": 41,
                "toLine": 41,
                "oldContent": "        Map<String, Object> params = new HashMap<>();",
                "newContent": "        Map<String, Object> params = executionParameters.toMap();"
            },
            {
                "fromLine": 42,
                "toLine": 42,
                "oldContent": "        params.put(\"loginUser\", loginUser);",
                "newContent": ""
            },
            {
                "fromLine": 43,
                "toLine": 43,
                "oldContent": "        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);",
                "newContent": ""
            },
            {
                "fromLine": 44,
                "toLine": 44,
                "oldContent": "        params.put(\"scheduleTime\", scheduleTime);",
                "newContent": ""
            },
            {
                "fromLine": 45,
                "toLine": 45,
                "oldContent": "        params.put(\"failureStrategy\", failureStrategy);",
                "newContent": ""
            },
            {
                "fromLine": 46,
                "toLine": 46,
                "oldContent": "        params.put(\"warningType\", warningType);",
                "newContent": ""
            },
            {
                "fromLine": 47,
                "toLine": 47,
                "oldContent": "        Map<String, String> headers = new HashMap<>();",
                "newContent": "        Map<String, String> headers = executionParameters.toHeaders();"
            },
            {
                "fromLine": 48,
                "toLine": 48,
                "oldContent": "        headers.put(Constants.SESSION_ID_KEY, sessionId);",
                "newContent": ""
            },
            {
                "fromLine": 51,
                "toLine": 51,
                "oldContent": "        String url = String.format(\"/projects/%s/executors/start-workflow-instance\", projectCode);",
                "newContent": "        String url = String.format(\"/projects/%s/executors/start-workflow-instance\", executionParameters.getProjectCode());"
            }
        ]
    },
    "extractedClasses": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.test.core.Constants;\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ExecutionParameters {\n\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String scheduleTime;\n    private FailureStrategy failureStrategy;\n    private WarningType warningType;\n    private String sessionId;\n\n    // Constructor, getters, and setters are omitted for brevity\n\n    public Map<String, Object> toMap() {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);\n        params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);\n        return params;\n    }\n\n    public Map<String, String> toHeaders() {\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n        return headers;\n    }\n}\n"
    }
}"