"{
    "refactorings": {
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/parameters/dataquality/DataQualityParameters.java": [
            {
                "fromLine": 79,
                "toLine": 79,
                "oldContent": "//        if (ruleId == 0) {",
                "newContent": "        if (ruleId == 0) {"
            },
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "            log.error(\"rule id is null\");",
                "newContent": "//            log.error(\"rule id is null\");"
            },
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "            return false;",
                "newContent": "//            return false;"
            },
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "        }",
                "newContent": "//        }"
            },
            {
                "fromLine": 88,
                "toLine": 88,
                "oldContent": "//        return sparkParameters != null;",
                "newContent": "        return sparkParameters != null;"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/utils/PropertyUtils.java": [
            {
                "fromLine": 50,
                "toLine": 50,
                "oldContent": "//                        .map(entry -> new Property(entry.getKey(), Direct.IN, DataType.VARCHAR, entry.getValue()))",
                "newContent": "                        .map(entry -> new Property(entry.getKey(), Direct.IN, DataType.VARCHAR, entry.getValue()))"
            },
            {
                "fromLine": 51,
                "toLine": 51,
                "oldContent": "//                        .collect(Collectors.toList());",
                "newContent": "                        .collect(Collectors.toList());"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/utils/VarPoolUtils.java": [
            {
                "fromLine": 40,
                "toLine": 40,
                "oldContent": "//    public List<Property> deserializeVarPool(String varPoolJson) {",
                "newContent": "    public List<Property> deserializeVarPool(String varPoolJson) {"
            },
            {
                "fromLine": 75,
                "toLine": 75,
                "oldContent": "//    public String mergeVarPoolJsonString(List<String> varPoolJsons) {",
                "newContent": "    public String mergeVarPoolJsonString(List<String> varPoolJsons) {"
            },
            {
                "fromLine": 76,
                "toLine": 76,
                "oldContent": "//        List<List<Property>> varPools = varPoolJsons.stream()",
                "newContent": "        List<List<Property>> varPools = varPoolJsons.stream()"
            }
        ]
    },
    "extractedClasses": {}
}"