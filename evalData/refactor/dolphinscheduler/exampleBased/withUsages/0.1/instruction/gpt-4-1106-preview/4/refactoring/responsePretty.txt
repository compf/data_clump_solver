"
{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 47,
                "toLine": 49,
                "oldContent": "params.put(\"loginUser\", loginUser);\n        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);",
                "newContent": "params.putAll(ExecutionParameters.of(loginUser, workflowDefinitionCode, scheduleTime).toMap());"
            },
            {
                "fromLine": 50,
                "toLine": 52,
                "oldContent": "params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);\n        Map<String, String> headers = new HashMap<>();",
                "newContent": "params.putAll(ExecutionParameters.of(failureStrategy, warningType).toMap());\n        Map<String, String> headers = new HashMap<>();"
            },
            {
                "fromLine": 68,
                "toLine": 70,
                "oldContent": "params.put(\"loginUser\", loginUser);\n        params.put(\"id\", workflowInstanceCode);\n        Map<String, String> headers = new HashMap<>();",
                "newContent": "params.putAll(ExecutionParameters.of(loginUser, workflowInstanceCode).toMap());\n        Map<String, String> headers = new HashMap<>();"
            },
            {
                "fromLine": 85,
                "toLine": 87,
                "oldContent": "params.put(\"loginUser\", loginUser);\n        params.put(\"projectCode\", projectCode);\n        params.put(\"workflowInstanceId\", workflowInstanceId);",
                "newContent": "params.putAll(ExecutionParameters.of(loginUser, projectCode, workflowInstanceId).toMap());"
            },
            {
                "fromLine": 88,
                "toLine": 88,
                "oldContent": "params.put(\"executeType\", executeType);",
                "newContent": "params.putAll(ExecutionParameters.of(executeType).toMap());"
            },
            {
                "fromLine": 104,
                "toLine": 106,
                "oldContent": "params.put(\"loginUser\", loginUser);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);",
                "newContent": "params.putAll(ExecutionParameters.of(loginUser, workflowInstanceId, startNodeList).toMap());"
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "params.put(\"taskDependType\", taskDependType);",
                "newContent": "params.putAll(ExecutionParameters.of(taskDependType).toMap());"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 104,
                "toLine": 104,
                "oldContent": "     * @param page page",
                "newContent": "     * @param pageRequest page request"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "     * @param projectId projectId",
                "newContent": "     * @param projectCode projectCode"
            },
            {
                "fromLine": 106,
                "toLine": 106,
                "oldContent": "     * @param processDefinitionId processDefinitionId",
                "newContent": "     * @param workflowDefinitionCode workflowDefinitionCode"
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "     * @param searchVal searchVal",
                "newContent": "     * @param searchVal search value"
            },
            {
                "fromLine": 108,
                "toLine": 108,
                "oldContent": "     * @param executorId executorId",
                "newContent": "     * @param executorName executor name"
            },
            {
                "fromLine": 109,
                "toLine": 109,
                "oldContent": "     * @param statusArray statusArray",
                "newContent": "     * @param statusArray status array"
            },
            {
                "fromLine": 110,
                "toLine": 110,
                "oldContent": "     * @param host host",
                "newContent": "     * @param host host name"
            },
            {
                "fromLine": 111,
                "toLine": 111,
                "oldContent": "     * @param startTime startTime",
                "newContent": "     * @param startTime start time"
            },
            {
                "fromLine": 112,
                "toLine": 112,
                "oldContent": "     * @param endTime endTime",
                "newContent": "     * @param endTime end time"
            },
            {
                "fromLine": 113,
                "toLine": 113,
                "oldContent": "     * @return workflow instance IPage",
                "newContent": "     * @return workflow instance page"
            },
            {
                "fromLine": 117,
                "toLine": 117,
                "oldContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,",
                "newContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListPaging(PageRequest pageRequest,"
            },
            {
                "fromLine": 118,
                "toLine": 118,
                "oldContent": "                                                            @Param(\"projectCode\") Long projectCode,",
                "newContent": "                                                            @Param(\"projectCode\") long projectCode,"
            },
            {
                "fromLine": 119,
                "toLine": 119,
                "oldContent": "                                                            @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,",
                "newContent": "                                                            @Param(\"workflowDefinitionCode\") long workflowDefinitionCode,"
            },
            {
                "fromLine": 120,
                "toLine": 120,
                "oldContent": "                                                            @Param(\"searchVal\") String searchVal,",
                "newContent": "                                                            @Param(\"searchVal\") String searchValue,"
            },
            {
                "fromLine": 121,
                "toLine": 121,
                "oldContent": "                                                            @Param(\"executorName\") String executorName,",
                "newContent": "                                                            @Param(\"executorName\") String executorName,"
            },
            {
                "fromLine": 122,
                "toLine": 122,
                "oldContent": "                                                            @Param(\"states\") int[] statusArray,",
                "newContent": "                                                            @Param(\"states\") int[] statusArray,"
            },
            {
                "fromLine": 123,
                "toLine": 123,
                "oldContent": "                                                            @Param(\"host\") String host,",
                "newContent": "                                                            @Param(\"host\") String hostName,"
            },
            {
                "fromLine": 124,
                "toLine": 124,
                "oldContent": "                                                            @Param(\"startTime\") Date startTime,",
                "newContent": "                                                            @Param(\"startTime\") Date startTime,"
            },
            {
                "fromLine": 125,
                "toLine": 125,
                "oldContent": "                                                            @Param(\"endTime\") Date endTime);",
                "newContent": "                                                            @Param(\"endTime\") Date endTime);"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 94,
                "toLine": 96,
                "oldContent": "    public void init(String host, Date startTime, String executePath) {\n        this.host = host;\n        this.startTime = startTime;",
                "newContent": "    public void init(TaskInitializationParameters parameters) {\n        this.host = parameters.getHost();\n        this.startTime = parameters.getStartTime();"
            },
            {
                "fromLine": 97,
                "toLine": 97,
                "oldContent": "        this.executePath = executePath;",
                "newContent": "        this.executePath = parameters.getExecutePath();"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 26,
                "toLine": 26,
                "oldContent": "                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "                                  ProjectParameterCreateRequest createRequest);"
            },
            {
                "fromLine": 28,
                "toLine": 28,
                "oldContent": "                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "                                  ProjectParameterUpdateRequest updateRequest);"
            },
            {
                "fromLine": 30,
                "toLine": 30,
                "oldContent": "    Result deleteProjectParametersByCode(User loginUser, long projectCode, long code);",
                "newContent": "    Result deleteProjectParametersByCode(User loginUser, long projectCode, ProjectParameterDeleteRequest deleteRequest);"
            },
            {
                "fromLine": 32,
                "toLine": 32,
                "oldContent": "    Result batchDeleteProjectParametersByCodes(User loginUser, long projectCode, String codes);",
                "newContent": "    Result batchDeleteProjectParametersByCodes(User loginUser, long projectCode, ProjectParameterBatchDeleteRequest batchDeleteRequest);"
            },
            {
                "fromLine": 34,
                "toLine": 34,
                "oldContent": "                                           String searchVal, String projectParameterDataType);",
                "newContent": "                                           ProjectParameterQueryRequest queryRequest);"
            },
            {
                "fromLine": 36,
                "toLine": 36,
                "oldContent": "    Result queryProjectParameterByCode(User loginUser, long projectCode, long code);",
                "newContent": "    Result queryProjectParameterByCode(User loginUser, long projectCode, ProjectParameterCodeRequest codeRequest);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 71,
                "toLine": 75,
                "oldContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "        ProjectParameterCreateRequest createRequest = new ProjectParameterCreateRequest(projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.createProjectParameter(loginUser, projectCode, createRequest);"
            },
            {
                "fromLine": 87,
                "toLine": 91,
                "oldContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "        ProjectParameterUpdateRequest updateRequest = new ProjectParameterUpdateRequest(code, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, updateRequest);"
            },
            {
                "fromLine": 103,
                "toLine": 105,
                "oldContent": "        return projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, code);",
                "newContent": "        ProjectParameterDeleteRequest deleteRequest = new ProjectParameterDeleteRequest(code);\n        return projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, deleteRequest);"
            },
            {
                "fromLine": 117,
                "toLine": 119,
                "oldContent": "        return projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, codes);",
                "newContent": "        ProjectParameterBatchDeleteRequest batchDeleteRequest = new ProjectParameterBatchDeleteRequest(codes);\n        return projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, batchDeleteRequest);"
            },
            {
                "fromLine": 132,
                "toLine": 134,
                "oldContent": "        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo,\n                searchVal, projectParameterDataType);",
                "newContent": "        ProjectParameterQueryRequest queryRequest = new ProjectParameterQueryRequest(pageSize, pageNo, searchVal, projectParameterDataType);\n        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, queryRequest);"
            },
            {
                "fromLine": 146,
                "toLine": 148,
                "oldContent": "        return projectParameterService.queryProjectParameterByCode(loginUser, projectCode, code);",
                "newContent": "        ProjectParameterCodeRequest codeRequest = new ProjectParameterCodeRequest(code);\n        return projectParameterService.queryProjectParameterByCode(loginUser, projectCode, codeRequest);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 29,
                "toLine": 31,
                "oldContent": "        Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "        ProjectParameterCreateRequest createRequest = new ProjectParameterCreateRequest(\"key\", \"value\", DataType.VARCHAR.name());\n        Result result = projectParameterController.createProjectParameter(loginUser, 1, createRequest);"
            },
            {
                "fromLine": 37,
                "toLine": 39,
                "oldContent": "        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",\n                DataType.LONG.name());",
                "newContent": "        ProjectParameterUpdateRequest updateRequest = new ProjectParameterUpdateRequest(1L, \"key\", \"value\", DataType.LONG.name());\n        Result result = projectParameterController.updateProjectParameter(loginUser, 1, updateRequest);"
            },
            {
                "fromLine": 45,
                "toLine": 47,
                "oldContent": "        Result result = projectParameterController.deleteProjectParametersByCode(loginUser, 1, 1);",
                "newContent": "        ProjectParameterDeleteRequest deleteRequest = new ProjectParameterDeleteRequest(1);\n        Result result = projectParameterController.deleteProjectParametersByCode(loginUser, 1, deleteRequest);"
            },
            {
                "fromLine": 53,
                "toLine": 55,
                "oldContent": "        Result result = projectParameterController.batchDeleteProjectParametersByCodes(loginUser, 1, \"1\");",
                "newContent": "        ProjectParameterBatchDeleteRequest batchDeleteRequest = new ProjectParameterBatchDeleteRequest(\"1\");\n        Result result = projectParameterController.batchDeleteProjectParametersByCodes(loginUser, 1, batchDeleteRequest);"
            },
            {
                "fromLine": 61,
                "toLine": 63,
                "oldContent": "        Result result = projectParameterController.queryProjectParameterListPaging(loginUser, 1, \"1\",\n                DataType.VARCHAR.name(), 1, 10);",
                "newContent": "        ProjectParameterQueryRequest queryRequest = new ProjectParameterQueryRequest(10, 1, \"1\", DataType.VARCHAR.name());\n        Result result = projectParameterController.queryProjectParameterListPaging(loginUser, 1, queryRequest);"
            },
            {
                "fromLine": 69,
                "toLine": 71,
                "oldContent": "        Result result = projectParameterController.queryProjectParameterByCode(loginUser, 1, 1);",
                "newContent": "        ProjectParameterCodeRequest codeRequest = new ProjectParameterCodeRequest(1);\n        Result result = projectParameterController.queryProjectParameterByCode(loginUser, 1, codeRequest);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 37,
                "toLine": 39,
                "oldContent": "        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "        ProjectParameterCreateRequest createRequest = new ProjectParameterCreateRequest(\"key\", \"value\", DataType.VARCHAR.name());\n        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, createRequest);"
            },
            {
                "fromLine": 49,
                "toLine": 51,
                "oldContent": "        Result result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "        ProjectParameterUpdateRequest updateRequest = new ProjectParameterUpdateRequest(1, \"key\", \"value\", DataType.VARCHAR.name());\n        Result result = projectParameterService.updateProjectParameter(loginUser, projectCode, updateRequest);"
            },
            {
                "fromLine": 61,
                "toLine": 63,
                "oldContent": "        Result result = projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, 1);",
                "newContent": "        ProjectParameterDeleteRequest deleteRequest = new ProjectParameterDeleteRequest(1);\n        Result result = projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, deleteRequest);"
            },
            {
                "fromLine": 73,
                "toLine": 75,
                "oldContent": "        Result result = projectParameterService.queryProjectParameterByCode(loginUser, projectCode, 1);",
                "newContent": "        ProjectParameterCodeRequest codeRequest = new ProjectParameterCodeRequest(1);\n        Result result = projectParameterService.queryProjectParameterByCode(loginUser, projectCode, codeRequest);"
            },
            {
                "fromLine": 85,
                "toLine": 87,
                "oldContent": "        Result result =\n                projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo, null,\n                        DataType.VARCHAR.name());",
                "newContent": "        ProjectParameterQueryRequest queryRequest = new ProjectParameterQueryRequest(pageSize, pageNo, null, DataType.VARCHAR.name());\n        Result result = projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, queryRequest);"
            },
            {
                "fromLine": 97,
                "toLine": 99,
                "oldContent": "        Result result = projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, \"\");",
                "newContent": "        ProjectParameterBatch
{
    "refactorings": {
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 97,
                "toLine": 99,
                "oldContent": "        Result result = projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, \"\");",
                "newContent": "        ProjectParameterBatchDeleteRequest batchDeleteRequest = new ProjectParameterBatchDeleteRequest(\"\");\n        Result result = projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, batchDeleteRequest);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 72,
                "toLine": 84,
                "oldContent": "        Map<String, Object> result = schedulerService.insertSchedule(\n                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode);\n\n        return returnDataList(result);",
                "newContent": "        ScheduleCreateRequest createRequest = new ScheduleCreateRequest(\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode);\n        Map<String, Object> result = schedulerService.insertSchedule(loginUser, projectCode, createRequest);\n        return returnDataList(result);"
            },
            {
                "fromLine": 100,
                "toLine": 114,
                "oldContent": "        Map<String, Object> result = schedulerService.updateSchedule(loginUser, projectCode, id, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);",
                "newContent": "        ScheduleUpdateRequest updateRequest = new ScheduleUpdateRequest(\n                id,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode);\n        Map<String, Object> result = schedulerService.updateSchedule(loginUser, projectCode, updateRequest);\n        return returnDataList(result);"
            },
            {
                "fromLine": 130,
                "toLine": 142,
                "oldContent": "        return schedulerService.querySchedule(loginUser, projectCode, workflowDefinitionCode, searchVal, pageNo,\n                pageSize);\n\n    }",
                "newContent": "        ScheduleQueryRequest queryRequest = new ScheduleQueryRequest(\n                workflowDefinitionCode,\n                searchVal,\n                pageNo,\n                pageSize);\n        return schedulerService.querySchedule(loginUser, projectCode, queryRequest);\n    }"
            },
            {
                "fromLine": 152,
                "toLine": 154,
                "oldContent": "        schedulerService.deleteSchedulesById(loginUser, id);\n        return new Result(Status.SUCCESS);",
                "newContent": "        ScheduleDeleteRequest deleteRequest = new ScheduleDeleteRequest(id);\n        return schedulerService.deleteSchedulesById(loginUser, deleteRequest);"
            },
            {
                "fromLine": 164,
                "toLine": 166,
                "oldContent": "        Map<String, Object> result = schedulerService.queryScheduleList(loginUser, projectCode);\n        return returnDataList(result);",
                "newContent": "        ScheduleListQueryRequest listQueryRequest = new ScheduleListQueryRequest();\n        Map<String, Object> result = schedulerService.queryScheduleList(loginUser, projectCode, listQueryRequest);\n        return returnDataList(result);"
            },
            {
                "fromLine": 178,
                "toLine": 180,
                "oldContent": "        Map<String, Object> result = schedulerService.previewSchedule(loginUser, schedule);\n        return returnDataList(result);",
                "newContent": "        SchedulePreviewRequest previewRequest = new SchedulePreviewRequest(schedule);\n        Map<String, Object> result = schedulerService.previewSchedule(loginUser, previewRequest);\n        return returnDataList(result);"
            },
            {
                "fromLine": 194,
                "toLine": 208,
                "oldContent": "        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode,\n                workflowDefinitionCode, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);",
                "newContent": "        ScheduleUpdateByWorkflowDefinitionCodeRequest updateByWorkflowDefinitionCodeRequest = new ScheduleUpdateByWorkflowDefinitionCodeRequest(\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode);\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode, updateByWorkflowDefinitionCodeRequest);\n        return returnDataList(result);"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 49,
                "toLine": 49,
                "oldContent": "    private Map<String, Object> info = new HashMap<>();",
                "newContent": "    private Map<String, String> info = new HashMap<>();"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 15,
                "toLine": 15,
                "oldContent": "    private String title;",
                "newContent": "    private final String title;"
            },
            {
                "fromLine": 17,
                "toLine": 17,
                "oldContent": "    private String content;",
                "newContent": "    private final String content;"
            },
            {
                "fromLine": 19,
                "toLine": 19,
                "oldContent": "    private Integer alertGroupId;",
                "newContent": "    private final Integer alertGroupId;"
            },
            {
                "fromLine": 21,
                "toLine": 23,
                "oldContent": "    public String getTitle() {\n        return title;\n    }",
                "newContent": ""
            },
            {
                "fromLine": 25,
                "toLine": 27,
                "oldContent": "    public void setTitle(String title) {\n        this.title = title;\n    }",
                "newContent": ""
            },
            {
                "fromLine": 29,
                "toLine": 31,
                "oldContent": "    public String getContent() {\n        return content;\n    }",
                "newContent": ""
            },
            {
                "fromLine": 33,
                "toLine": 35,
                "oldContent": "    public void setContent(String content) {\n        this.content = content;\n    }",
                "newContent": ""
            },
            {
                "fromLine": 37,
                "toLine": 39,
                "oldContent": "    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }",
                "newContent": ""
            },
            {
                "fromLine": 41,
                "toLine": 43,
                "oldContent": "    public void setAlertGroupId(Integer alertGroupId) {\n        this.alertGroupId = alertGroupId;\n    }",
                "newContent": ""
            }
        ]
    },
    "extractedClasses": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.TaskDependType;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ExecutionParameters {\n\n    private final User loginUser;\n    private final Long projectCode;\n    private final Long workflowDefinitionCode;\n    private final Integer workflowInstanceId;\n    private final String scheduleTime;\n    private final String startNodeList;\n    private final FailureStrategy failureStrategy;\n    private final WarningType warningType;\n    private final ExecuteType executeType;\n    private final TaskDependType taskDependType;\n\n    // Constructor and getters\n\n    public static ExecutionParameters of(User loginUser, Long projectCode, Long workflowDefinitionCode, String scheduleTime) {\n        return new ExecutionParameters(loginUser, projectCode, workflowDefinitionCode, null, scheduleTime, null, null, null, null, null);\n    }\n\n    public static ExecutionParameters of(FailureStrategy failureStrategy, WarningType warningType) {\n        return new ExecutionParameters(null, null, null, null, null, null, failureStrategy, warningType, null, null);\n    }\n\n    public static ExecutionParameters of(User loginUser, Integer workflowInstanceId) {\n        return new ExecutionParameters(loginUser, null, null, workflowInstanceId, null, null, null, null, null, null);\n    }\n\n    public static ExecutionParameters of(User loginUser, Long projectCode, Integer workflowInstanceId) {\n        return new ExecutionParameters(loginUser, projectCode, null, workflowInstanceId, null, null, null, null, null, null);\n    }\n\n    public static ExecutionParameters of(ExecuteType executeType) {\n        return new ExecutionParameters(null, null, null, null, null, null, null, null, executeType, null);\n    }\n\n    public static ExecutionParameters of(User loginUser, Integer workflowInstanceId, String startNodeList) {\n        return new ExecutionParameters(loginUser, null, null, workflowInstanceId, null, startNodeList, null, null, null, null);\n    }\n\n    public static ExecutionParameters of(TaskDependType taskDependType) {\n        return new ExecutionParameters(null, null, null, null, null, null, null, null, null, taskDependType);\n    }\n\n    public Map<String, Object> toMap() {\n        Map<String, Object> parametersMap = new HashMap<>();\n        if (loginUser != null) {\n            parametersMap.put(\"loginUser\", loginUser);\n        }\n        if (projectCode != null) {\n            parametersMap.put(\"projectCode\", projectCode);\n        }\n        if (workflowDefinitionCode != null) {\n            parametersMap.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        }\n        if (workflowInstanceId != null) {\n            parametersMap.put(\"workflowInstanceId\", workflowInstanceId);\n        }\n        if (scheduleTime != null) {\n            parametersMap.put(\"scheduleTime\", scheduleTime);\n        }\n        if (startNodeList != null) {\n            parametersMap.put(\"startNodeList\", startNodeList);\n        }\n        if (failureStrategy != null) {\n            parametersMap.put(\"failureStrategy\", failureStrategy);\n        }\n        if (warningType != null) {\n            parametersMap.put(\"warningType\", warningType);\n        }\n        if (executeType != null) {\n            parametersMap.put(\"executeType\", executeType);\n        }\n        if (taskDependType != null) {\n            parametersMap.put(\"taskDependType\", taskDependType);\n        }\n        return parametersMap;\n    }\n}\n",
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInitializationParameters.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport java.util.Date;\n\npublic class TaskInitializationParameters {\n\n    private final String host;\n    private final Date startTime;\n    private final String executePath;\n\n    public TaskInitializationParameters(String host, Date startTime, String executePath) {\n        this.host = host;\n        this.startTime = startTime;\n        this.executePath = executePath;\n    }\n\n    public String getHost() {\n        return host;\n    }\n\n    public Date getStartTime() {\n        return startTime;\n    }\n\n    public String getExecutePath() {\n        return executePath;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterCreateRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterCreateRequest {\n\n    private final String name;\n    private final String value;\n    private final String dataType;\n\n    public ProjectParameterCreateRequest(String name, String value, String dataType) {\n        this.name = name;\n        this.value = value;\n        this.dataType = dataType;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getValue() {\n        return value;\n    }\n\n    public String getDataType() {\n        return dataType;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterUpdateRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterUpdateRequest {\n\n    private final long code;\n    private final String name;\n    private final String value;\n    private final String dataType;\n\n    public ProjectParameterUpdateRequest(long code, String name, String value, String dataType) {\n        this.code = code;\n        this.name = name;\n        this.value = value;\n        this.dataType = dataType;\n    }\n\n    public long getCode() {\n        return code;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getValue() {\n        return value;\n    }\n\n    public String getDataType() {\n        return dataType;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterDeleteRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterDeleteRequest {\n\n    private final long code;\n\n    public ProjectParameterDeleteRequest(long code) {\n        this.code = code;\n    }\n\n    public long getCode() {\n        return code;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterBatchDeleteRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterBatchDeleteRequest {\n\n    private final String codes;\n\n    public ProjectParameterBatchDeleteRequest(String codes) {\n        this.codes = codes;\n    }\n\n    public String getCodes() {\n        return codes;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterQueryRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterQueryRequest {\n\n    private final Integer pageSize;\n    private final Integer pageNo;\n    private final String searchVal;\n    private final String dataType;\n\n    public ProjectParameterQueryRequest(Integer pageSize, Integer pageNo, String searchVal, String dataType) {\n        this.pageSize = pageSize;\n        this.pageNo = pageNo;\n        this.searchVal = searchVal;\n        this.dataType = dataType;\n    }\n\n    public Integer getPageSize() {\n        return pageSize;\n    }\n\n    public Integer getPageNo() {\n        return pageNo;\n    }\n\n    public String getSearchVal() {\n        return searchVal;\n    }\n\n    public String getDataType() {\n        return dataType;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterCodeRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterCodeRequest {\n\n    private final long code;\n\n    public ProjectParameterCodeRequest(long code) {\n        this.code = code;\n    }\n\n    public long getCode() {\n        return code;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ScheduleCreateRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\npublic class ScheduleCreateRequest {\n\n    private final long workflowDefinitionCode;\n    private final String schedule;\n    private final WarningType warningType;\n    private final int warningGroupId;\n    private final FailureStrategy failureStrategy;\n    private final Priority workflowInstancePriority;\n    private final String workerGroup;\n    private final String tenantCode;\n    private final long environmentCode;\n\n    public ScheduleCreateRequest(long workflowDefinitionCode, String schedule, WarningType warningType, int warningGroupId, FailureStrategy failureStrategy, Priority workflowInstancePriority, String workerGroup, String tenantCode, long environmentCode) {\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.schedule = schedule;\n        this.warningType = warningType;\n        this.warningGroupId = warningGroupId;\n        this.failureStrategy = failureStrategy;\n        this.workflowInstancePriority = workflowInstancePriority;\n        this.workerGroup = workerGroup;\n        this.tenantCode = tenantCode;\n        this.environmentCode = environmentCode;\n    }\n\n    public long getWorkflowDefinitionCode() {\n        return workflowDefinitionCode;\n    }\n\n    public String getSchedule() {\n        return schedule;\n    }\n\n    public WarningType getWarningType() {\n        return warningType;\n    }\n\n    public int getWarningGroupId() {\n        return warningGroupId;\n    }\n\n    public FailureStrategy getFailureStrategy() {\n        return failureStrategy;\n    }\n\n    public Priority getWorkflowInstancePriority() {\n        return workflowInstancePriority;\n    }\n\n    public String getWorkerGroup() {\n        return workerGroup;\n    }\n\n    public String getTenantCode() {\n        return tenantCode;\n    }\n\n    public long getEnvironmentCode()
{
    "refactorings": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 194,
                "toLine": 208,
                "oldContent": "        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode,\n                workflowDefinitionCode, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);",
                "newContent": "        ScheduleUpdateByWorkflowDefinitionCodeRequest updateByWorkflowDefinitionCodeRequest = new ScheduleUpdateByWorkflowDefinitionCodeRequest(\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode);\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode, updateByWorkflowDefinitionCodeRequest);\n        return returnDataList(result);"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 49,
                "toLine": 49,
                "oldContent": "    private Map<String, Object> info = new HashMap<>();",
                "newContent": "    private Map<String, String> info = new HashMap<>();"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 15,
                "toLine": 15,
                "oldContent": "    private String title;",
                "newContent": "    private final String title;"
            },
            {
                "fromLine": 17,
                "toLine": 17,
                "oldContent": "    private String content;",
                "newContent": "    private final String content;"
            },
            {
                "fromLine": 19,
                "toLine": 19,
                "oldContent": "    private Integer alertGroupId;",
                "newContent": "    private final Integer alertGroupId;"
            },
            {
                "fromLine": 21,
                "toLine": 23,
                "oldContent": "    public String getTitle() {\n        return title;\n    }",
                "newContent": ""
            },
            {
                "fromLine": 25,
                "toLine": 27,
                "oldContent": "    public void setTitle(String title) {\n        this.title = title;\n    }",
                "newContent": ""
            },
            {
                "fromLine": 29,
                "toLine": 31,
                "oldContent": "    public String getContent() {\n        return content;\n    }",
                "newContent": ""
            },
            {
                "fromLine": 33,
                "toLine": 35,
                "oldContent": "    public void setContent(String content) {\n        this.content = content;\n    }",
                "newContent": ""
            },
            {
                "fromLine": 37,
                "toLine": 39,
                "oldContent": "    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }",
                "newContent": ""
            },
            {
                "fromLine": 41,
                "toLine": 43,
                "oldContent": "    public void setAlertGroupId(Integer alertGroupId) {\n        this.alertGroupId = alertGroupId;\n    }",
                "newContent": ""
            }
        ]
    },
    "extractedClasses": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.TaskDependType;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ExecutionParameters {\n\n    private final User loginUser;\n    private final Long projectCode;\n    private final Long workflowDefinitionCode;\n    private final Integer workflowInstanceId;\n    private final String scheduleTime;\n    private final String startNodeList;\n    private final FailureStrategy failureStrategy;\n    private final WarningType warningType;\n    private final ExecuteType executeType;\n    private final TaskDependType taskDependType;\n\n    // Constructor and getters\n\n    public static ExecutionParameters of(User loginUser, Long projectCode, Long workflowDefinitionCode, String scheduleTime) {\n        return new ExecutionParameters(loginUser, projectCode, workflowDefinitionCode, null, scheduleTime, null, null, null, null, null);\n    }\n\n    public static ExecutionParameters of(FailureStrategy failureStrategy, WarningType warningType) {\n        return new ExecutionParameters(null, null, null, null, null, null, failureStrategy, warningType, null, null);\n    }\n\n    public static ExecutionParameters of(User loginUser, Integer workflowInstanceId) {\n        return new ExecutionParameters(loginUser, null, null, workflowInstanceId, null, null, null, null, null, null);\n    }\n\n    public static ExecutionParameters of(User loginUser, Long projectCode, Integer workflowInstanceId) {\n        return new ExecutionParameters(loginUser, projectCode, null, workflowInstanceId, null, null, null, null, null, null);\n    }\n\n    public static ExecutionParameters of(ExecuteType executeType) {\n        return new ExecutionParameters(null, null, null, null, null, null, null, null, executeType, null);\n    }\n\n    public static ExecutionParameters of(User loginUser, Integer workflowInstanceId, String startNodeList) {\n        return new ExecutionParameters(loginUser, null, null, workflowInstanceId, null, startNodeList, null, null, null, null);\n    }\n\n    public static ExecutionParameters of(TaskDependType taskDependType) {\n        return new ExecutionParameters(null, null, null, null, null, null, null, null, null, taskDependType);\n    }\n\n    public Map<String, Object> toMap() {\n        Map<String, Object> parametersMap = new HashMap<>();\n        if (loginUser != null) {\n            parametersMap.put(\"loginUser\", loginUser);\n        }\n        if (projectCode != null) {\n            parametersMap.put(\"projectCode\", projectCode);\n        }\n        if (workflowDefinitionCode != null) {\n            parametersMap.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        }\n        if (workflowInstanceId != null) {\n            parametersMap.put(\"workflowInstanceId\", workflowInstanceId);\n        }\n        if (scheduleTime != null) {\n            parametersMap.put(\"scheduleTime\", scheduleTime);\n        }\n        if (startNodeList != null) {\n            parametersMap.put(\"startNodeList\", startNodeList);\n        }\n        if (failureStrategy != null) {\n            parametersMap.put(\"failureStrategy\", failureStrategy);\n        }\n        if (warningType != null) {\n            parametersMap.put(\"warningType\", warningType);\n        }\n        if (executeType != null) {\n            parametersMap.put(\"executeType\", executeType);\n        }\n        if (taskDependType != null) {\n            parametersMap.put(\"taskDependType\", taskDependType);\n        }\n        return parametersMap;\n    }\n}\n",
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInitializationParameters.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport java.util.Date;\n\npublic class TaskInitializationParameters {\n\n    private final String host;\n    private final Date startTime;\n    private final String executePath;\n\n    public TaskInitializationParameters(String host, Date startTime, String executePath) {\n        this.host = host;\n        this.startTime = startTime;\n        this.executePath = executePath;\n    }\n\n    public String getHost() {\n        return host;\n    }\n\n    public Date getStartTime() {\n        return startTime;\n    }\n\n    public String getExecutePath() {\n        return executePath;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterCreateRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterCreateRequest {\n\n    private final String name;\n    private final String value;\n    private final String dataType;\n\n    public ProjectParameterCreateRequest(String name, String value, String dataType) {\n        this.name = name;\n        this.value = value;\n        this.dataType = dataType;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getValue() {\n        return value;\n    }\n\n    public String getDataType() {\n        return dataType;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterUpdateRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterUpdateRequest {\n\n    private final long code;\n    private final String name;\n    private final String value;\n    private final String dataType;\n\n    public ProjectParameterUpdateRequest(long code, String name, String value, String dataType) {\n        this.code = code;\n        this.name = name;\n        this.value = value;\n        this.dataType = dataType;\n    }\n\n    public long getCode() {\n        return code;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getValue() {\n        return value;\n    }\n\n    public String getDataType() {\n        return dataType;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterDeleteRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterDeleteRequest {\n\n    private final long code;\n\n    public ProjectParameterDeleteRequest(long code) {\n        this.code = code;\n    }\n\n    public long getCode() {\n        return code;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterBatchDeleteRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterBatchDeleteRequest {\n\n    private final String codes;\n\n    public ProjectParameterBatchDeleteRequest(String codes) {\n        this.codes = codes;\n    }\n\n    public String getCodes() {\n        return codes;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterQueryRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterQueryRequest {\n\n    private final Integer pageSize;\n    private final Integer pageNo;\n    private final String searchVal;\n    private final String dataType;\n\n    public ProjectParameterQueryRequest(Integer pageSize, Integer pageNo, String searchVal, String dataType) {\n        this.pageSize = pageSize;\n        this.pageNo = pageNo;\n        this.searchVal = searchVal;\n        this.dataType = dataType;\n    }\n\n    public Integer getPageSize() {\n        return pageSize;\n    }\n\n    public Integer getPageNo() {\n        return pageNo;\n    }\n\n    public String getSearchVal() {\n        return searchVal;\n    }\n\n    public String getDataType() {\n        return dataType;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ProjectParameterCodeRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ProjectParameterCodeRequest {\n\n    private final long code;\n\n    public ProjectParameterCodeRequest(long code) {\n        this.code = code;\n    }\n\n    public long getCode() {\n        return code;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ScheduleCreateRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\npublic class ScheduleCreateRequest {\n\n    private final long workflowDefinitionCode;\n    private final String schedule;\n    private final WarningType warningType;\n    private final int warningGroupId;\n    private final FailureStrategy failureStrategy;\n    private final Priority workflowInstancePriority;\n    private final String workerGroup;\n    private final String tenantCode;\n    private final long environmentCode;\n\n    public ScheduleCreateRequest(long workflowDefinitionCode, String schedule, WarningType warningType, int warningGroupId, FailureStrategy failureStrategy, Priority workflowInstancePriority, String workerGroup, String tenantCode, long environmentCode) {\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.schedule = schedule;\n        this.warningType = warningType;\n        this.warningGroupId = warningGroupId;\n        this.failureStrategy = failureStrategy;\n        this.workflowInstancePriority = workflowInstancePriority;\n        this.workerGroup = workerGroup;\n        this.tenantCode = tenantCode;\n        this.environmentCode = environmentCode;\n    }\n\n    public long getWorkflowDefinitionCode() {\n        return workflowDefinitionCode;\n    }\n\n    public String getSchedule() {\n        return schedule;\n    }\n\n    public WarningType getWarningType() {\n        return warningType;\n    }\n\n    public int getWarningGroupId() {\n        return warningGroupId;\n    }\n\n    public FailureStrategy getFailureStrategy() {\n        return failureStrategy;\n    }\n\n    public Priority getWorkflowInstancePriority() {\n        return workflowInstancePriority;\n    }\n\n    public String getWorkerGroup() {\n        return workerGroup;\n    }\n\n    public String getTenantCode() {\n        return tenantCode;\n    }\n\n    public long getEnvironmentCode() {\n        return environmentCode;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ScheduleUpdateRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\npublic class ScheduleUpdateRequest {\n\n    private final int id;\n    private final String schedule;\n    private final WarningType warningType;\n    private final int warningGroupId;\n    private final FailureStrategy failureStrategy;\n    private final Priority workflowInstancePriority;\n    private final String workerGroup;\n    private final String tenantCode;\n    private final long environmentCode;\n\n    public ScheduleUpdateRequest(int id, String schedule, WarningType warningType, int warningGroupId, FailureStrategy failureStrategy, Priority workflowInstancePriority, String workerGroup, String tenantCode, long environmentCode) {\n        this.id = id;\n        this.schedule = schedule;\n        this.warningType = warningType;\n        this.warningGroupId = warningGroupId;\n        this.failureStrategy = failureStrategy;\n        this.workflowInstancePriority = workflowInstancePriority;\n        this.workerGroup = workerGroup;\n        this.tenantCode = tenantCode;\n        this.environmentCode = environmentCode;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public String getSchedule() {\n        return schedule;\n    }\n\n    public WarningType getWarningType() {\n        return warningType;\n    }\n\n    public int getWarningGroupId() {\n        return warningGroupId;\n    }\n\n    public FailureStrategy getFailureStrategy() {\n        return failureStrategy;\n    }\n\n    public Priority getWorkflowInstancePriority() {\n        return workflowInstancePriority;\n    }\n\n    public String getWorkerGroup() {\n        return workerGroup;\n    }\n\n    public String getTenantCode() {\n        return tenantCode;\n    }\n\n    public long getEnvironmentCode() {\n        return environmentCode;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ScheduleQueryRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ScheduleQueryRequest {\n\n    private final long workflowDefinitionCode;\n    private final String searchVal;\n    private final Integer pageNo;\n    private final Integer pageSize;\n\n    public ScheduleQueryRequest(long workflowDefinitionCode, String searchVal, Integer pageNo, Integer pageSize) {\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.searchVal = searchVal;\n        this.pageNo = pageNo;\n        this.pageSize = pageSize;\n    }\n\n    public long getWorkflowDefinitionCode() {\n        return workflowDefinitionCode;\n    }\n\n    public String getSearchVal() {\n        return searchVal;\n    }\n\n    public Integer getPageNo() {\n        return pageNo;\n    }\n\n    public Integer getPageSize() {\n        return pageSize;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ScheduleDeleteRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ScheduleDeleteRequest {\n\n    private final int id;\n\n    public ScheduleDeleteRequest(int id) {\n        this.id = id;\n    }\n\n    public int getId() {\n        return id;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ScheduleListQueryRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class ScheduleListQueryRequest {\n\n    // This class can be extended in the future if needed\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/SchedulePreviewRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class SchedulePreviewRequest {\n\n    private final String schedule;\n\n    public SchedulePreviewRequest(String schedule
{
    "extractedClasses": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/SchedulePreviewRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\npublic class SchedulePreviewRequest {\n\n    private final String schedule;\n\n    public SchedulePreviewRequest(String schedule) {\n        this.schedule = schedule;\n    }\n\n    public String getSchedule() {\n        return schedule;\n    }\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/ScheduleUpdateByWorkflowDefinitionCodeRequest.java": "package org.apache.dolphinscheduler.api.dto;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\npublic class ScheduleUpdateByWorkflowDefinitionCodeRequest {\n\n    private final long workflowDefinitionCode;\n    private final String schedule;\n    private final WarningType warningType;\n    private final int warningGroupId;\n    private final FailureStrategy failureStrategy;\n    private final Priority workflowInstancePriority;\n    private final String workerGroup;\n    private final String tenantCode;\n    private final long environmentCode;\n\n    public ScheduleUpdateByWorkflowDefinitionCodeRequest(long workflowDefinitionCode, String schedule, WarningType warningType, int warningGroupId, FailureStrategy failureStrategy, Priority workflowInstancePriority, String workerGroup, String tenantCode, long environmentCode) {\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.schedule = schedule;\n        this.warningType = warningType;\n        this.warningGroupId = warningGroupId;\n        this.failureStrategy = failureStrategy;\n        this.workflowInstancePriority = workflowInstancePriority;\n        this.workerGroup = workerGroup;\n        this.tenantCode = tenantCode;\n        this.environmentCode = environmentCode;\n    }\n\n    public long getWorkflowDefinitionCode() {\n        return workflowDefinitionCode;\n    }\n\n    public String getSchedule() {\n        return schedule;\n    }\n\n    public WarningType getWarningType() {\n        return warningType;\n    }\n\n    public int getWarningGroupId() {\n        return warningGroupId;\n    }\n\n    public FailureStrategy getFailureStrategy() {\n        return failureStrategy;\n    }\n\n    public Priority getWorkflowInstancePriority() {\n        return workflowInstancePriority;\n    }\n\n    public String getWorkerGroup() {\n        return workerGroup;\n    }\n\n    public String getTenantCode() {\n        return tenantCode;\n    }\n\n    public long getEnvironmentCode() {\n        return environmentCode;\n    }\n}\n"
    }
}"