"
{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 43,
                "toLine": 43,
                "oldContent": "params.put(\"loginUser\", loginUser);",
                "newContent": "// params.put(\"loginUser\", loginUser);"
            },
            {
                "fromLine": 44,
                "toLine": 44,
                "oldContent": "params.put(\"workflowDefinitionCode\", workflowDefinitionCode);",
                "newContent": "// params.put(\"workflowDefinitionCode\", workflowDefinitionCode);"
            },
            {
                "fromLine": 45,
                "toLine": 45,
                "oldContent": "params.put(\"scheduleTime\", scheduleTime);",
                "newContent": "// params.put(\"scheduleTime\", scheduleTime);"
            },
            {
                "fromLine": 46,
                "toLine": 46,
                "oldContent": "params.put(\"failureStrategy\", failureStrategy);",
                "newContent": "// params.put(\"failureStrategy\", failureStrategy);"
            },
            {
                "fromLine": 47,
                "toLine": 47,
                "oldContent": "params.put(\"warningType\", warningType);",
                "newContent": "// params.put(\"warningType\", warningType);"
            },
            {
                "fromLine": 49,
                "toLine": 49,
                "oldContent": "params.put(\"loginUser\", loginUser);",
                "newContent": "// params.put(\"loginUser\", loginUser);"
            },
            {
                "fromLine": 50,
                "toLine": 50,
                "oldContent": "params.put(\"id\", workflowInstanceCode);",
                "newContent": "// params.put(\"id\", workflowInstanceCode);"
            },
            {
                "fromLine": 52,
                "toLine": 52,
                "oldContent": "params.put(\"loginUser\", loginUser);",
                "newContent": "// params.put(\"loginUser\", loginUser);"
            },
            {
                "fromLine": 53,
                "toLine": 53,
                "oldContent": "params.put(\"projectCode\", projectCode);",
                "newContent": "// params.put(\"projectCode\", projectCode);"
            },
            {
                "fromLine": 54,
                "toLine": 54,
                "oldContent": "params.put(\"workflowInstanceId\", workflowInstanceId);",
                "newContent": "// params.put(\"workflowInstanceId\", workflowInstanceId);"
            },
            {
                "fromLine": 55,
                "toLine": 55,
                "oldContent": "params.put(\"executeType\", executeType);",
                "newContent": "// params.put(\"executeType\", executeType);"
            },
            {
                "fromLine": 57,
                "toLine": 57,
                "oldContent": "params.put(\"loginUser\", loginUser);",
                "newContent": "// params.put(\"loginUser\", loginUser);"
            },
            {
                "fromLine": 58,
                "toLine": 58,
                "oldContent": "params.put(\"workflowInstanceId\", workflowInstanceId);",
                "newContent": "// params.put(\"workflowInstanceId\", workflowInstanceId);"
            },
            {
                "fromLine": 59,
                "toLine": 59,
                "oldContent": "params.put(\"startNodeList\", startNodeList);",
                "newContent": "// params.put(\"startNodeList\", startNodeList);"
            },
            {
                "fromLine": 60,
                "toLine": 60,
                "oldContent": "params.put(\"taskDependType\", taskDependType);",
                "newContent": "// params.put(\"taskDependType\", taskDependType);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 25,
                "toLine": 25,
                "oldContent": "Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,",
                "newContent": "Result createProjectParameter(ProjectParameterRequest projectParameterRequest,"
            },
            {
                "fromLine": 26,
                "toLine": 26,
                "oldContent": "                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "                                  User loginUser, long projectCode);"
            },
            {
                "fromLine": 28,
                "toLine": 28,
                "oldContent": "Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,",
                "newContent": "Result updateProjectParameter(ProjectParameterRequest projectParameterRequest,"
            },
            {
                "fromLine": 29,
                "toLine": 29,
                "oldContent": "                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "                                  User loginUser, long projectCode, long code);"
            },
            {
                "fromLine": 31,
                "toLine": 31,
                "oldContent": "Result deleteProjectParametersByCode(User loginUser, long projectCode, long code);",
                "newContent": "Result deleteProjectParametersByCode(User loginUser, long projectCode, long code);"
            },
            {
                "fromLine": 33,
                "toLine": 33,
                "oldContent": "Result batchDeleteProjectParametersByCodes(User loginUser, long projectCode, String codes);",
                "newContent": "Result batchDeleteProjectParametersByCodes(User loginUser, long projectCode, String codes);"
            },
            {
                "fromLine": 35,
                "toLine": 35,
                "oldContent": "Result queryProjectParameterListPaging(User loginUser, long projectCode, Integer pageSize, Integer pageNo,",
                "newContent": "Result queryProjectParameterListPaging(User loginUser, long projectCode, Integer pageSize, Integer pageNo,"
            },
            {
                "fromLine": 36,
                "toLine": 36,
                "oldContent": "                                           String searchVal, String projectParameterDataType);",
                "newContent": "                                           String searchVal, String projectParameterDataType);"
            },
            {
                "fromLine": 38,
                "toLine": 38,
                "oldContent": "Result queryProjectParameterByCode(User loginUser, long projectCode, long code);",
                "newContent": "Result queryProjectParameterByCode(User loginUser, long projectCode, long code);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 75,
                "toLine": 75,
                "oldContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,",
                "newContent": "        return projectParameterService.createProjectParameter(new ProjectParameterRequest(projectParameterName,"
            },
            {
                "fromLine": 76,
                "toLine": 76,
                "oldContent": "                projectParameterValue, projectParameterDataType);",
                "newContent": "                projectParameterValue, projectParameterDataType), loginUser, projectCode);"
            },
            {
                "fromLine": 88,
                "toLine": 88,
                "oldContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,",
                "newContent": "        return projectParameterService.updateProjectParameter(new ProjectParameterRequest(projectParameterName,"
            },
            {
                "fromLine": 89,
                "toLine": 89,
                "oldContent": "                projectParameterValue, projectParameterDataType);",
                "newContent": "                projectParameterValue, projectParameterDataType), loginUser, projectCode, code);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 29,
                "toLine": 29,
                "oldContent": "        Mockito.when(projectParameterService.createProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.any(),",
                "newContent": "        Mockito.when(projectParameterService.createProjectParameter(Mockito.any(),"
            },
            {
                "fromLine": 30,
                "toLine": 30,
                "oldContent": "                Mockito.any(), Mockito.any())).thenReturn(getSuccessResult());",
                "newContent": "                Mockito.any(), Mockito.anyLong())).thenReturn(getSuccessResult());"
            },
            {
                "fromLine": 41,
                "toLine": 41,
                "oldContent": "        Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.anyLong(),",
                "newContent": "        Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(),"
            },
            {
                "fromLine": 42,
                "toLine": 42,
                "oldContent": "                Mockito.any(), Mockito.any(), Mockito.any())).thenReturn(getSuccessResult());",
                "newContent": "                Mockito.any(), Mockito.anyLong(), Mockito.anyLong())).thenReturn(getSuccessResult());"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 30,
                "toLine": 30,
                "oldContent": "        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterService.createProjectParameter(new ProjectParameterRequest(\"key\", \"value\","
            },
            {
                "fromLine": 31,
                "toLine": 31,
                "oldContent": "                DataType.VARCHAR.name());",
                "newContent": "                DataType.VARCHAR.name()), loginUser, projectCode);"
            },
            {
                "fromLine": 40,
                "toLine": 40,
                "oldContent": "            result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "            result = projectParameterService.createProjectParameter(new ProjectParameterRequest(\"key\", \"value\","
            },
            {
                "fromLine": 41,
                "toLine": 41,
                "oldContent": "                    DataType.VARCHAR.name());",
                "newContent": "                    DataType.VARCHAR.name()), loginUser, projectCode);"
            },
            {
                "fromLine": 49,
                "toLine": 49,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(new ProjectParameterRequest(\"key\", \"value\","
            },
            {
                "fromLine": 50,
                "toLine": 50,
                "oldContent": "                DataType.VARCHAR.name());",
                "newContent": "                DataType.VARCHAR.name()), loginUser, projectCode);"
            },
            {
                "fromLine": 56,
                "toLine": 56,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(new ProjectParameterRequest(\"key1\", \"value\","
            },
            {
                "fromLine": 57,
                "toLine": 57,
                "oldContent": "                DataType.VARCHAR.name());",
                "newContent": "                DataType.VARCHAR.name()), loginUser, projectCode);"
            },
            {
                "fromLine": 63,
                "toLine": 63,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(new ProjectParameterRequest(\"key1\", \"value\","
            },
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "                DataType.LONG.name());",
                "newContent": "                DataType.LONG.name()), loginUser, projectCode);"
            },
            {
                "fromLine": 72,
                "toLine": 72,
                "oldContent": "        Result result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterService.updateProjectParameter(new ProjectParameterRequest(\"key\", \"value\","
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "                DataType.VARCHAR.name());",
                "newContent": "                DataType.VARCHAR.name()), loginUser, projectCode, 1);"
            },
            {
                "fromLine": 82,
                "toLine": 82,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterRequest(\"key\", \"value\","
            },
            {
                "fromLine": 83,
                "toLine": 83,
                "oldContent": "                DataType.VARCHAR.name());",
                "newContent": "                DataType.VARCHAR.name()), loginUser, projectCode, 1);"
            },
            {
                "fromLine": 91,
                "toLine": 91,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterRequest(\"key\", \"value\","
            },
            {
                "fromLine": 92,
                "toLine": 92,
                "oldContent": "                DataType.VARCHAR.name());",
                "newContent": "                DataType.VARCHAR.name()), loginUser, projectCode, 1);"
            },
            {
                "fromLine": 100,
                "toLine": 100,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterRequest(\"key1\", \"value\","
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "                DataType.VARCHAR.name());",
                "newContent": "                DataType.VARCHAR.name()), loginUser, projectCode, 1);"
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterRequest(\"key1\", \"value\","
            },
            {
                "fromLine": 108,
                "toLine": 108,
                "oldContent": "                DataType.LONG.name());",
                "newContent": "                DataType.LONG.name()), loginUser, projectCode, 1);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 71,
                "toLine": 71,
                "oldContent": "                loginUser,",
                "newContent": "//                loginUser,"
            },
            {
                "fromLine": 72,
                "toLine": 72,
                "oldContent": "                projectCode,",
                "newContent": "//                projectCode,"
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "                workflowDefinitionCode,",
                "newContent": "//                workflowDefinitionCode,"
            },
            {
                "fromLine": 74,
                "toLine": 74,
                "oldContent": "                schedule,",
                "newContent": "//                schedule,"
            },
            {
                "fromLine": 75,
                "toLine": 75,
                "oldContent": "                warningType,",
                "newContent": "//                warningType,"
            },
            {
                "fromLine": 76,
                "toLine": 76,
                "oldContent": "                warningGroupId,",
                "newContent": "//                warningGroupId,"
            },
            {
                "fromLine": 77,
                "toLine": 77,
                "oldContent": "                failureStrategy,",
                "newContent": "//                failureStrategy,"
            },
            {
                "fromLine": 78,
                "toLine": 78,
                "oldContent": "                workflowInstancePriority,",
                "newContent": "//                workflowInstancePriority,"
            },
            {
                "fromLine": 79,
                "toLine": 79,
                "oldContent": "                workerGroup,",
                "newContent": "//                workerGroup,"
            },
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "                tenantCode,",
                "newContent": "//                tenantCode,"
            },
            {
                "fromLine": 81,
                "toLine": 81,
                "oldContent": "                environmentCode);",
                "newContent": "//                environmentCode);"
            },
            {
                "fromLine": 98,
                "toLine": 98,
                "oldContent": "                loginUser,",
                "newContent": "//                loginUser,"
            },
            {
                "fromLine": 99,
                "toLine": 99,
                "oldContent": "                projectCode,",
                "newContent": "//                projectCode,"
            },
            {
                "fromLine": 100,
                "toLine": 100,
                "oldContent": "                id,",
                "newContent": "//                id,"
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "                schedule,",
                "newContent": "//                schedule,"
            },
            {
                "fromLine": 102,
                "toLine": 102,
                "oldContent": "                warningType,",
                "newContent": "//                warningType,"
            },
            {
                "fromLine": 103,
                "toLine": 103,
                "oldContent": "                warningGroupId,",
                "newContent": "//                warningGroupId,"
            },
            {
                "fromLine": 104,
                "toLine": 104,
                "oldContent": "                failureStrategy,",
                "newContent": "//                failureStrategy,"
            },
            {
                "fromLine": 105,
                "toLine": 105,
                "oldContent": "                workflowInstancePriority,",
                "newContent": "//                workflow
{
    "refactorings": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 106,
                "toLine": 106,
                "oldContent": "                workerGroup,",
                "newContent": "//                workerGroup,"
            },
            {
                "fromLine": 107,
                "toLine": 107,
                "oldContent": "                tenantCode,",
                "newContent": "//                tenantCode,"
            },
            {
                "fromLine": 108,
                "toLine": 108,
                "oldContent": "                environmentCode);",
                "newContent": "//                environmentCode);"
            },
            {
                "fromLine": 126,
                "toLine": 126,
                "oldContent": "                loginUser,",
                "newContent": "//                loginUser,"
            },
            {
                "fromLine": 127,
                "toLine": 127,
                "oldContent": "                projectCode,",
                "newContent": "//                projectCode,"
            },
            {
                "fromLine": 128,
                "toLine": 128,
                "oldContent": "                workflowDefinitionCode,",
                "newContent": "//                workflowDefinitionCode,"
            },
            {
                "fromLine": 129,
                "toLine": 129,
                "oldContent": "                searchVal,",
                "newContent": "//                searchVal,"
            },
            {
                "fromLine": 130,
                "toLine": 130,
                "oldContent": "                pageNo,",
                "newContent": "//                pageNo,"
            },
            {
                "fromLine": 131,
                "toLine": 131,
                "oldContent": "                pageSize);",
                "newContent": "//                pageSize);"
            },
            {
                "fromLine": 149,
                "toLine": 149,
                "oldContent": "        schedulerService.deleteSchedulesById(loginUser, id);",
                "newContent": "        schedulerService.deleteSchedulesById(loginUser, projectCode, id);"
            },
            {
                "fromLine": 164,
                "toLine": 164,
                "oldContent": "        Map<String, Object> result = schedulerService.queryScheduleList(loginUser, projectCode);",
                "newContent": "        Map<String, Object> result = schedulerService.queryScheduleList(loginUser, projectCode);"
            },
            {
                "fromLine": 178,
                "toLine": 178,
                "oldContent": "        Map<String, Object> result = schedulerService.previewSchedule(loginUser, schedule);",
                "newContent": "        Map<String, Object> result = schedulerService.previewSchedule(loginUser, schedule);"
            },
            {
                "fromLine": 195,
                "toLine": 195,
                "oldContent": "                loginUser,",
                "newContent": "//                loginUser,"
            },
            {
                "fromLine": 196,
                "toLine": 196,
                "oldContent": "                projectCode,",
                "newContent": "//                projectCode,"
            },
            {
                "fromLine": 197,
                "toLine": 197,
                "oldContent": "                workflowDefinitionCode,",
                "newContent": "//                workflowDefinitionCode,"
            },
            {
                "fromLine": 198,
                "toLine": 198,
                "oldContent": "                schedule,",
                "newContent": "//                schedule,"
            },
            {
                "fromLine": 199,
                "toLine": 199,
                "oldContent": "                warningType,",
                "newContent": "//                warningType,"
            },
            {
                "fromLine": 200,
                "toLine": 200,
                "oldContent": "                warningGroupId,",
                "newContent": "//                warningGroupId,"
            },
            {
                "fromLine": 201,
                "toLine": 201,
                "oldContent": "                failureStrategy,",
                "newContent": "//                failureStrategy,"
            },
            {
                "fromLine": 202,
                "toLine": 202,
                "oldContent": "                workflowInstancePriority,",
                "newContent": "//                workflowInstancePriority,"
            },
            {
                "fromLine": 203,
                "toLine": 203,
                "oldContent": "                workerGroup,",
                "newContent": "//                workerGroup,"
            },
            {
                "fromLine": 204,
                "toLine": 204,
                "oldContent": "                tenantCode,",
                "newContent": "//                tenantCode,"
            },
            {
                "fromLine": 205,
                "toLine": 205,
                "oldContent": "                environmentCode);",
                "newContent": "//                environmentCode);"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 43,
                "toLine": 43,
                "oldContent": "    private String sign;",
                "newContent": "//    private String sign;"
            },
            {
                "fromLine": 45,
                "toLine": 45,
                "oldContent": "    private String title;",
                "newContent": "//    private String title;"
            },
            {
                "fromLine": 47,
                "toLine": 47,
                "oldContent": "    private String content;",
                "newContent": "//    private String content;"
            },
            {
                "fromLine": 49,
                "toLine": 49,
                "oldContent": "    private AlertStatus alertStatus;",
                "newContent": "//    private AlertStatus alertStatus;"
            },
            {
                "fromLine": 51,
                "toLine": 51,
                "oldContent": "    private WarningType warningType;",
                "newContent": "//    private WarningType warningType;"
            },
            {
                "fromLine": 53,
                "toLine": 53,
                "oldContent": "    private String log;",
                "newContent": "//    private String log;"
            },
            {
                "fromLine": 55,
                "toLine": 55,
                "oldContent": "    private Integer alertGroupId;",
                "newContent": "//    private Integer alertGroupId;"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 25,
                "toLine": 25,
                "oldContent": "    private String title;",
                "newContent": "//    private String title;"
            },
            {
                "fromLine": 27,
                "toLine": 27,
                "oldContent": "    private String content;",
                "newContent": "//    private String content;"
            },
            {
                "fromLine": 29,
                "toLine": 29,
                "oldContent": "    private Integer alertGroupId;",
                "newContent": "//    private Integer alertGroupId;"
            }
        ]
    },
    "extractedClasses": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": "class WorkflowExecuteRequest {\n    private User loginUser;\n    private long workflowDefinitionCode;\n    private String scheduleTime;\n    private FailureStrategy failureStrategy;\n    private WarningType warningType;\n\n    // Constructor, getters, and setters\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": "class ProjectParameterRequest {\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    // Constructor, getters, and setters\n}\n",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": "class ScheduleCreateRequest {\n    private long workflowDefinitionCode;\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workflowInstancePriority;\n    private String workerGroup;\n    private String tenantCode;\n    private Long environmentCode;\n\n    // Constructor, getters, and setters\n}\n",
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": "class AlertInfo {\n    private String sign;\n    private String title;\n    private String content;\n    private AlertStatus alertStatus;\n    private WarningType warningType;\n    private String log;\n    private Integer alertGroupId;\n\n    // Constructor, getters, and setters\n}\n",
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": "class TaskAlertInfo {\n    private String title;\n    private String content;\n    private Integer alertGroupId;\n\n    // Constructor, getters, and setters\n}\n"
    }
}"