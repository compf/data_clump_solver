{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 84,
                "toLine": 92,
                "oldContent": "public Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);\n    }\n\n    @Operation(summary = \"deleteProjectParametersByCode\", description = \"DELETE_PROJECT_PARAMETER_NOTES\")",
                "newContent": "public Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);\n    }\n"
            },
            {
                "fromLine": 97,
                "toLine": 141,
                "oldContent": "public Result deleteProjectParametersByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                @RequestParam(\"code\") long code) {\n        return projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, code);\n    }\n    })\n    @PostMapping(value = \"/batch-delete\")\n    @ResponseStatus(HttpStatus.OK)\n    @ApiException(DELETE_PROJECT_PARAMETER_ERROR)\n    public Result batchDeleteProjectParametersByCodes(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                      @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                      @RequestParam(\"codes\") String codes) {\n        return projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, codes);\n    },\n            @Parameter(name = \"pageNo\", description = \"PAGE_NO\", required = true, schema = @Schema(implementation = int.class, example = \"1\")),\n            @Parameter(name = \"pageSize\", description = \"PAGE_SIZE\", required = true, schema = @Schema(implementation = int.class, example = \"10\"))\n    })\n    @GetMapping()\n    @ResponseStatus(HttpStatus.OK)\n    @ApiException(QUERY_PROJECT_PARAMETER_ERROR)\n    public Result queryProjectParameterListPaging(\n                                                  @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                  @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                  @RequestParam(value = \"searchVal\", required = false) String searchVal,\n                                                  @RequestParam(value = \"projectParameterDataType\", required = false) String projectParameterDataType,\n                                                  @RequestParam(\"pageNo\") Integer pageNo,\n                                                  @RequestParam(\"pageSize\") Integer pageSize) {\n        checkPageParams(pageNo, pageSize);\n        searchVal = ParameterUtils.handleEscapes(searchVal);\n        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo,\n                searchVal, projectParameterDataType);\n    }\n    })\n    @GetMapping(value = \"/{code}\")\n    @ResponseStatus(HttpStatus.OK)\n    @ApiException(QUERY_PROJECT_PARAMETER_ERROR)\n    public Result queryProjectParameterByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                              @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                              @PathVariable(\"code\") long code) {\n        return projectParameterService.queryProjectParameterByCode(loginUser, projectCode, code);\n    }",
                "newContent": "public Result deleteProjectParametersByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                @RequestParam(\"code\") long code) {\n        return projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, code);\n    }\n\n    @PostMapping(value = \"/batch-delete\")\n    @ResponseStatus(HttpStatus.OK)\n    @ApiException(DELETE_PROJECT_PARAMETER_ERROR)\n    public Result batchDeleteProjectParametersByCodes(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                      @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                      @RequestParam(\"codes\") String codes) {\n        return projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, codes);\n    }\n\n    @GetMapping()\n    @ResponseStatus(HttpStatus.OK)\n    @ApiException(QUERY_PROJECT_PARAMETER_ERROR)\n    public Result queryProjectParameterListPaging(\n                                                  @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                  @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                  @RequestParam(value = \"searchVal\", required = false) String searchVal,\n                                                  @RequestParam(value = \"projectParameterDataType\", required = false) String projectParameterDataType,\n                                                  @RequestParam(\"pageNo\") Integer pageNo,\n                                                  @RequestParam(\"pageSize\") Integer pageSize) {\n        checkPageParams(pageNo, pageSize);\n        searchVal = ParameterUtils.handleEscapes(searchVal);\n        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo,\n                searchVal, projectParameterDataType);\n    }\n\n    @GetMapping(value = \"/{code}\")\n    @ResponseStatus(HttpStatus.OK)\n    @ApiException(QUERY_PROJECT_PARAMETER_ERROR)\n    public Result queryProjectParameterByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                              @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                              @PathVariable(\"code\") long code) {\n        return projectParameterService.queryProjectParameterByCode(loginUser, projectCode, code);\n    }"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 109,
                "toLine": 113,
                "oldContent": "public Result createSchedule(User loginUser, long projectCode, long workflowDefinitionCode, String schedule,\n                                 Map<String, Object> result = schedulerService.insertSchedule(\n                loginUser,\n                projectCode,",
                "newContent": "public Result createSchedule(User loginUser, long projectCode, long workflowDefinitionCode, String schedule,\n                                 WarningType warningType, int warningGroupId, FailureStrategy failureStrategy,\n                                 Priority workflowInstancePriority, String workerGroup, String tenantCode, Long environmentCode) {\n                Map<String, Object> result = schedulerService.insertSchedule(\n                loginUser,"
            },
            {
                "fromLine": 122,
                "toLine": 126,
                "oldContent": "workflowInstancePriority);\n\n        return returnDataList(result);\n    }\n    /**",
                "newContent": "workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workerGroup,\n                tenantCode,\n                environmentCode,\n                workflowInstancePriority);\n\n        return returnDataList(result);\n    }"
            },
            {
                "fromLine": 155,
                "toLine": 175,
                "oldContent": "public Result updateSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @RequestParam(value = \"id\") Integer id,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = \"NONE\") WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = \"0\") int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = \"MEDIUM\") Priority workflowInstancePriority) {\n\n        Map<String, Object> result = schedulerService.updateSchedule(loginUser, projectCode, id, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);\n    }\n\n    @Operation(summary = \"online\", description = \"ONLINE_SCHEDULE_NOTES\")",
                "newContent": "public Result updateSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @RequestParam(value = \"id\") Integer id,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = \"NONE\") WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = \"0\") int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = \"MEDIUM\") Priority workflowInstancePriority) {"
            },
            {
                "fromLine": 180,
                "toLine": 189,
                "oldContent": "public Result<Boolean> publishScheduleOnline(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                 @RequestParam(value = \"id\") Integer id) {\n        schedulerService.onlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }\n    @Parameters({\n            @Parameter(name = \"id\", description = \"SCHEDULE_ID\", required = true, schema = @Schema(implementation = int.class, example = \"100\"))",
                "newContent": "public Result<Boolean> publishScheduleOnline(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                 @RequestParam(value = \"id\") Integer id) {\n        schedulerService.onlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }"
            },
            {
                "fromLine": 192,
                "toLine": 201,
                "oldContent": "public Result<Boolean> offlineSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                           @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                           @RequestParam(value = \"id\") Integer id) {\n        schedulerService.offlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }\n    @Operation(summary = \"queryScheduleListPaging\", description = \"QUERY_SCHEDULE_LIST_PAGING_NOTES\")\n    @Parameters({",
                "newContent": "public Result<Boolean> offlineSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                           @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                           @RequestParam(value = \"id\") Integer id) {\n        schedulerService.offlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }"
            },
            {
                "fromLine": 207,
                "toLine": 222,
                "oldContent": "public Result queryScheduleListPaging(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                          @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                          @RequestParam(value = \"workflowDefinitionCode\", required = false, defaultValue = \"0\") long workflowDefinitionCode,\n                                          @RequestParam(value = \"searchVal\", required = false) String searchVal,\n                                          @RequestParam(\"pageNo\") Integer pageNo,\n                                          @RequestParam(\"pageSize\") Integer pageSize) {",
                "newContent": "public Result queryScheduleListPaging(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                          @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                          @RequestParam(value = \"workflowDefinitionCode\", required = false, defaultValue = \"0\") long workflowDefinitionCode,\n                                          @RequestParam(value = \"searchVal\", required = false) String searchVal,\n                                          @RequestParam(\"pageNo\") Integer pageNo,\n                                          @RequestParam(\"pageSize\") Integer pageSize) {"
            },
            {
                "fromLine": 236,
                "toLine": 245,
                "oldContent": "public Result deleteScheduleById(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                     @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                     @RequestParam(value = \"id\") Integer id) {\n        schedulerService.deleteSchedulesById(loginUser, id);\n        return new Result(Status.SUCCESS);\n    }\n\n    /**",
                "newContent": "public Result deleteScheduleById(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                     @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                     @RequestParam(value = \"id\") Integer id) {\n        schedulerService.deleteSchedulesById(loginUser, id);\n        return new Result(Status.SUCCESS);\n    }"
            },
            {
                "fromLine": 253,
                "toLine": 261,
                "oldContent": "public Result queryScheduleList(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                    @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode) {",
                "newContent": "public Result queryScheduleList(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                    @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode) {"
            },
            {
                "fromLine": 273,
                "toLine": 281,
                "oldContent": "public Result previewSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                  @RequestParam(value = \"schedule\") String schedule) {",
                "newContent": "public Result previewSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                  @RequestParam(value = \"schedule\") String schedule) {"
            },
            {
                "fromLine": 309,
                "toLine": 328,
                "oldContent": "public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                         @PathVariable(value = \"code\") long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = \"NONE\") WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false, defaultValue = \"0\") int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = \"MEDIUM\") Priority workflowInstancePriority) {",
                "newContent": "public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                         @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = \"NONE\") WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false, defaultValue = \"0\") int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = \"MEDIUM\") Priority workflowInstancePriority) {"
            }
        ]
    },
    "extractedClasses": {}
}