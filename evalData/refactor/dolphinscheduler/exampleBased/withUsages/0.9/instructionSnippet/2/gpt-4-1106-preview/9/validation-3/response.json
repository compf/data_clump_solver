{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 87,
                "toLine": 91,
                "oldContent": "@ResponseStatus(HttpStatus.OK)\n    @ApiException(UPDATE_PROJECT_PARAMETER_ERROR)\n    public Result updateProjectParameter(@PathVariable(\"code\") Long code, ProjectParameterUpdateData data) {\n        // implementation of method\n    } // end of method updateProjectParameter",
                "newContent": "@ResponseStatus(HttpStatus.OK)\n    @ApiException(UPDATE_PROJECT_PARAMETER_ERROR)\n    public Result updateProjectParameter(@PathVariable(\"code\") Long code, @RequestBody ProjectParameterUpdateData data) {\n        return projectParameterService.updateProjectParameter(data);\n    } // end of method updateProjectParameter"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 17,
                "toLine": 29,
                "oldContent": "public interface ProjectParameterService {\n\n    Result createProjectParameter(ProjectParameterCreationData data);\n\n    Result updateProjectParameter(ProjectParameterUpdateData data);\n\n    Result deleteProjectParametersByCode(User loginUser, long projectCode, long code);",
                "newContent": "public interface ProjectParameterService {\n\n    Result createProjectParameter(@RequestBody ProjectParameterCreationData data);\n\n    Result updateProjectParameter(@RequestBody ProjectParameterUpdateData data);\n\n    Result deleteProjectParametersByCode(User loginUser, long projectCode, long code);"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 318,
                "toLine": 322,
                "oldContent": "@ApiException(UPDATE_SCHEDULE_ERROR)\n    @OperatorLog(auditType = AuditType.SCHEDULE_UPDATE)\n    public Result updateScheduleByWorkflowDefinitionCode(UpdateScheduleByWorkflowDefinitionCodeData data) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(data);\n        return returnDataList(result);",
                "newContent": "@ApiException(UPDATE_SCHEDULE_ERROR)\n    @OperatorLog(auditType = AuditType.SCHEDULE_UPDATE)\n    public Result updateScheduleByWorkflowDefinitionCode(@RequestBody UpdateScheduleByWorkflowDefinitionCodeData data) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(data);\n        return returnDataList(result);\n    }"
            }
        ]
    }
}