"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 84,
                "toLine": 88,
                "oldContent": "public Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType) {\n        // Implementation here",
                "newContent": "public Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);\n    }"
            },
            {
                "fromLine": 97,
                "toLine": 106,
                "oldContent": "public Result deleteProjectParametersByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                @RequestParam(\"code\") long code) {\n\n        return projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, code);\n    }\n\n    @Operation(summary = \"batchDeleteProjectParametersByCodes\", description = \"DELETE_PROJECT_PARAMETER_NOTES\")",
                "newContent": "public Result deleteProjectParametersByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                @RequestParam(\"code\") long code) {\n        return projectParameterService.deleteProjectParametersByCode(loginUser, projectCode, code);\n    }"
            },
            {
                "fromLine": 111,
                "toLine": 120,
                "oldContent": "public Result batchDeleteProjectParametersByCodes(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                      @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                      @RequestParam(\"codes\") String codes) {\n\n        return projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, codes);\n    }\n\n    @Operation(summary = \"queryProjectParameterListPaging\", description = \"QUERY_PROJECT_PARAMETER_LIST_PAGING_NOTES\")",
                "newContent": "public Result batchDeleteProjectParametersByCodes(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                      @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                      @RequestParam(\"codes\") String codes) {\n        return projectParameterService.batchDeleteProjectParametersByCodes(loginUser, projectCode, codes);\n    }"
            },
            {
                "fromLine": 127,
                "toLine": 143,
                "oldContent": "public Result queryProjectParameterListPaging(\n                                                  @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                  @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                  @RequestParam(value = \"searchVal\", required = false) String searchVal,\n                                                  @RequestParam(value = \"projectParameterDataType\", required = false) String projectParameterDataType,\n                                                  @RequestParam(\"pageNo\") Integer pageNo,\n                                                  @RequestParam(\"pageSize\") Integer pageSize) {\n\n        checkPageParams(pageNo, pageSize);\n        searchVal = ParameterUtils.handleEscapes(searchVal);\n        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo,\n                searchVal, projectParameterDataType);\n    }\n\n    @Operation(summary = \"queryProjectParameterByCode\", description = \"QUERY_PROJECT_PARAMETER_NOTES\")",
                "newContent": "public Result queryProjectParameterListPaging(\n                                                  @Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                                  @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                  @RequestParam(value = \"searchVal\", required = false) String searchVal,\n                                                  @RequestParam(value = \"projectParameterDataType\", required = false) String projectParameterDataType,\n                                                  @RequestParam(\"pageNo\") Integer pageNo,\n                                                  @RequestParam(\"pageSize\") Integer pageSize) {\n        checkPageParams(pageNo, pageSize);\n        searchVal = ParameterUtils.handleEscapes(searchVal);\n        return projectParameterService.queryProjectParameterListPaging(loginUser, projectCode, pageSize, pageNo,\n                searchVal, projectParameterDataType);\n    }"
            },
            {
                "fromLine": 148,
                "toLine": 156,
                "oldContent": "public Result queryProjectParameterByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                              @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                              @PathVariable(\"code\") long code) {\n        return projectParameterService.queryProjectParameterByCode(loginUser, projectCode, code);\n    }\n\n}",
                "newContent": "public Result queryProjectParameterByCode(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                              @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                              @PathVariable(\"code\") long code) {\n        return projectParameterService.queryProjectParameterByCode(loginUser, projectCode, code);\n    }"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 113,
                "toLine": 117,
                "oldContent": "        // Implementation here\n}\n                projectCode,\n                workflowDefinitionCode,\n                schedule,",
                "newContent": "                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,"
            },
            {
                "fromLine": 122,
                "toLine": 128,
                "oldContent": "                workerGroup,\n                tenantCode,\n                environmentCode);\n\n        return returnDataList(result);\n    }\n",
                "newContent": "                warningType,\n                warningGroupId,\n                failureStrategy,\n                workerGroup,\n                tenantCode,\n                environmentCode,\n                workflowInstancePriority);\n\n        return returnDataList(result);\n    }"
            },
            {
                "fromLine": 158,
                "toLine": 178,
                "oldContent": "    public Result updateSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @PathVariable(value = \"id\") Integer id,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {",
                "newContent": "    public Result updateSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @RequestParam(value = \"id\") Integer id,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = \"NONE\") WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = \"0\") int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = \"MEDIUM\") Priority workflowInstancePriority) {"
            },
            {
                "fromLine": 183,
                "toLine": 192,
                "oldContent": "public Result<Boolean> publishScheduleOnline(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                 @PathVariable(\"id\") Integer id) {\n        schedulerService.onlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }\n\n    @Operation(summary = \"offline\", description = \"OFFLINE_SCHEDULE_NOTES\")",
                "newContent": "public Result<Boolean> publishScheduleOnline(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                 @RequestParam(value = \"id\") Integer id) {\n        schedulerService.onlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }"
            },
            {
                "fromLine": 197,
                "toLine": 206,
                "oldContent": "public Result<Boolean> offlineSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                           @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                           @PathVariable(\"id\") Integer id) {\n        schedulerService.offlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }\n\n    /**",
                "newContent": "public Result<Boolean> offlineSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                           @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                           @RequestParam(value = \"id\") Integer id) {\n        schedulerService.offlineScheduler(loginUser, projectCode, id);\n        return Result.success(true);\n    }"
            },
            {
                "fromLine": 224,
                "toLine": 239,
                "oldContent": "public Result queryScheduleListPaging(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                          @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                          @RequestParam(value = \"workflowDefinitionCode\", required = false, defaultValue = \"0\") long workflowDefinitionCode,\n                                          @RequestParam(value = \"searchVal\", required = false) String searchVal,\n                                          @RequestParam(\"pageNo\") Integer pageNo,\n                                          @RequestParam(\"pageSize\") Integer pageSize) {",
                "newContent": "public Result queryScheduleListPaging(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                          @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                          @RequestParam(value = \"workflowDefinitionCode\", required = false, defaultValue = \"0\") long workflowDefinitionCode,\n                                          @RequestParam(value = \"searchVal\", required = false) String searchVal,\n                                          @RequestParam(\"pageNo\") Integer pageNo,\n                                          @RequestParam(\"pageSize\") Integer pageSize) {"
            },
            {
                "fromLine": 253,
                "toLine": 262,
                "oldContent": "public Result deleteScheduleById(@RequestAttribute(value = SESSION_USER) User loginUser,\n                                     @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                     @PathVariable(\"id\") Integer id) {",
                "newContent": "public Result deleteScheduleById(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                     @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                     @RequestParam(value = \"id\") Integer id) {"
            },
            {
                "fromLine": 270,
                "toLine": 278,
                "oldContent": "public Result queryScheduleList(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                    @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode) {",
                "newContent": "public Result queryScheduleList(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                    @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode) {"
            },
            {
                "fromLine": 290,
                "toLine": 298,
                "oldContent": "public Result previewSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                  @RequestParam(value = \"schedule\") String schedule) {",
                "newContent": "public Result previewSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                  @RequestParam(value = \"schedule\") String schedule) {"
            },
            {
                "fromLine": 326,
                "toLine": 330,
                "oldContent": "public Result updateScheduleByWorkflowDefinitionCode(User loginUser, long projectCode, long workflowDefinitionCode,\n                                                         String schedule, WarningType warningType, int warningGroupId, FailureStrategy failureStrategy,\n                                                         String workerGroup, String tenantCode, long environmentCode, Priority workflowInstancePriority) {",
                "newContent": "public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                         @PathVariable(value = \"code\") long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = \"NONE\") WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false, defaultValue = \"0\") int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = \"MEDIUM\") Priority workflowInstancePriority) {"
            },
            {
                "fromLine": 333,
                "toLine": 338,
                "oldContent": "                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);\n    }\n}\n",
                "newContent": "                warningType, warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        return returnDataList(result);\n    }\n}"
            }
        ]
    },
    "extractedClasses": {}
}"