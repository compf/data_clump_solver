"{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 69,
                "toLine": 73,
                "oldContent": "public HttpResponse execute(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {\n        Map<String, Object> params = new HashMap<>();",
                "newContent": "public HttpResponse execute(ExecutionParameters executionParameters) {\n        Map<String, Object> params = new HashMap<>();"
            },
            {
                "fromLine": 83,
                "toLine": 87,
                "oldContent": "public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,\n                                    TaskDependType taskDependType) {",
                "newContent": "public HttpResponse executeTask(ExecutionTaskParameters executionTaskParameters) {"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 268,
                "toLine": 278,
                "oldContent": "IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,",
                "newContent": "IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              WorkflowInstanceQueryParameters queryParameters,"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 141,
                "toLine": 145,
                "oldContent": "public void init(String host, Date startTime, String executePath) {\n        this.host = host;\n        this.startTime = startTime;",
                "newContent": "public void init(TaskInstanceInitializationParameters initParameters) {\n        this.host = initParameters.getHost();\n        this.startTime = initParameters.getStartTime();"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 17,
                "toLine": 29,
                "oldContent": "Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "Result createProjectParameter(ProjectParameterCreationParameters creationParameters);"
            },
            {
                "fromLine": 17,
                "toLine": 29,
                "oldContent": "Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "Result updateProjectParameter(ProjectParameterUpdateParameters updateParameters);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 67,
                "toLine": 77,
                "oldContent": "public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {",
                "newContent": "public Result createProjectParameter(@RequestBody ProjectParameterCreationParameters creationParameters) {"
            },
            {
                "fromLine": 86,
                "toLine": 90,
                "oldContent": "public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,",
                "newContent": "public Result updateProjectParameter(@RequestBody ProjectParameterUpdateParameters updateParameters) {"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 48,
                "toLine": 54,
                "oldContent": "Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "Result result = projectParameterController.createProjectParameter(new ProjectParameterCreationParameters(loginUser, 1, \"key\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 59,
                "toLine": 65,
                "oldContent": "Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",\n                DataType.LONG.name());",
                "newContent": "Result result = projectParameterController.updateProjectParameter(new ProjectParameterUpdateParameters(loginUser, 1, 1L, \"key\", \"value\", DataType.LONG.name()));"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 77,
                "toLine": 81,
                "oldContent": "Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "Result result = projectParameterService.createProjectParameter(new ProjectParameterCreationParameters(loginUser, projectCode, \"key\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 90,
                "toLine": 94,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                    DataType.VARCHAR.name());",
                "newContent": "result = projectParameterService.createProjectParameter(new ProjectParameterCreationParameters(loginUser, projectCode, \"key\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 98,
                "toLine": 102,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "result = projectParameterService.createProjectParameter(new ProjectParameterCreationParameters(loginUser, projectCode, \"key\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 105,
                "toLine": 109,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "result = projectParameterService.createProjectParameter(new ProjectParameterCreationParameters(loginUser, projectCode, \"key1\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 111,
                "toLine": 115,
                "oldContent": "result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "result = projectParameterService.createProjectParameter(new ProjectParameterCreationParameters(loginUser, projectCode, \"key1\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 123,
                "toLine": 127,
                "oldContent": "Result result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "Result result = projectParameterService.updateProjectParameter(new ProjectParameterUpdateParameters(loginUser, projectCode, 1, \"key\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 134,
                "toLine": 138,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "result = projectParameterService.updateProjectParameter(new ProjectParameterUpdateParameters(loginUser, projectCode, 1, \"key\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 141,
                "toLine": 145,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "result = projectParameterService.updateProjectParameter(new ProjectParameterUpdateParameters(loginUser, projectCode, 1, \"key\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 148,
                "toLine": 152,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",\n                DataType.VARCHAR.name());",
                "newContent": "result = projectParameterService.updateProjectParameter(new ProjectParameterUpdateParameters(loginUser, projectCode, 1, \"key1\", \"value\", DataType.VARCHAR.name()));"
            },
            {
                "fromLine": 154,
                "toLine": 158,
                "oldContent": "result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",\n                DataType.LONG.name());",
                "newContent": "result = projectParameterService.updateProjectParameter(new ProjectParameterUpdateParameters(loginUser, projectCode, 1, \"key1\", \"value\", DataType.LONG.name()));"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 107,
                "toLine": 111,
                "oldContent": "public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,",
                "newContent": "public Result createSchedule(@RequestBody ScheduleCreationParameters creationParameters) {"
            },
            {
                "fromLine": 333,
                "toLine": 337,
                "oldContent": "public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,",
                "newContent": "public Result updateScheduleByWorkflowDefinitionCode(@RequestBody ScheduleUpdateParameters updateParameters) {"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 17,
                "toLine": 50,
                "oldContent": "public class TaskAlertInfo {\n\n    private String title;\n\n    private String content;\n\n    private Integer alertGroupId;\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public void setContent(String content) {\n        this.content = content;\n    }\n\n    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }\n\n    public void setAlertGroupId(Integer alertGroupId) {\n        this.alertGroupId = alertGroupId;\n    }",
                "newContent": "public class TaskAlertInfo {\n\n    private AlertData alertData;\n\n    public String getTitle() {\n        return alertData.getTitle();\n    }\n\n    public String getContent() {\n        return alertData.getContent();\n    }\n\n    public Integer getAlertGroupId() {\n        return alertData.getAlertGroupId();\n    }\n\n    // Additional methods\n}"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 49,
                "toLine": 56,
                "oldContent": "private String title;\n\n    @TableField(value = \"content\")\n    private String content;\n",
                "newContent": ""
            },
            {
                "fromLine": 64,
                "toLine": 68,
                "oldContent": "private String log;\n\n    @TableField(\"alertgroup_id\")\n    private Integer alertGroupId;\n",
                "newContent": "private String log;\n\n    private AlertData alertData;\n"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ExecutionParameters {\n\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private ExecuteType executeType;\n\n    // Constructors, getters, setters, and potentially other methods\n}",
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionTaskParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.common.enums.TaskDependType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ExecutionTaskParameters {\n\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private String startNodeList;\n    private TaskDependType taskDependType;\n\n    // Constructors, getters, setters, and potentially other methods\n}",
        "org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceQueryParameters.java": "package org.apache.dolphinscheduler.dao.mapper;\n\nimport java.util.Date;\n\npublic class WorkflowInstanceQueryParameters {\n\n    private Long projectCode;\n    private Long workflowDefinitionCode;\n    private String name;\n    private String host;\n    private Date startTime;\n    private Date endTime;\n\n    // Constructors, getters, setters, and potentially other methods\n}",
        "org/apache/dolphinscheduler/dao/entity/TaskInstanceInitializationParameters.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport java.util.Date;\n\npublic class TaskInstanceInitializationParameters {\n\n    private String host;\n    private Date startTime;\n    // Constructors, getters, setters, and potentially other methods\n}",
        "org/apache/dolphinscheduler/api/service/ProjectParameterCreationParameters.java": "package org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\nimport org.apache.dolphinscheduler.plugin.task.api.enums.DataType;\n\npublic class ProjectParameterCreationParameters {\n\n    private User loginUser;\n    private long projectCode;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    // Constructors, getters, setters, and potentially other methods\n}",
        "org/apache/dolphinscheduler/api/service/ProjectParameterUpdateParameters.java": "package org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ProjectParameterUpdateParameters {\n\n    private User loginUser;\n    private long projectCode;\n    private long code;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    // Constructors, getters, setters, and potentially other methods\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleCreationParameters.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ScheduleCreationParameters {\n\n    private User loginUser;\n    private long projectCode;\n    // Other schedule-related fields\n\n    // Constructors, getters, setters, and potentially other methods\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleUpdateParameters.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ScheduleUpdateParameters {\n\n    private User loginUser;\n    private long projectCode;\n    // Other schedule-related fields\n\n    // Constructors, getters, setters, and potentially other methods\n}",
        "org/apache/dolphinscheduler/plugin/task/api/model/AlertData.java": "package org.apache.dolphinscheduler.plugin.task.api.model;\n\npublic class AlertData {\n\n    private String title;\n    private String content;\n    private Integer alertGroupId;\n\n    // Constructors, getters, setters, and potentially other methods\n}",
        "org/apache/dolphinscheduler/dao/entity/AlertData.java": "package org.apache.dolphinscheduler.dao.entity;\n\npublic class AlertData {\n\n    private String title;\n    private String content;\n    private Integer alertGroupId;\n\n    // Constructors, getters, setters, and potentially other methods\n}"
    }
}"