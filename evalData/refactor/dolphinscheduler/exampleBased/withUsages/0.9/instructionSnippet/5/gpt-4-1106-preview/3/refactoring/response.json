{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 67,
                "toLine": 77,
                "oldContent": "public HttpResponse execute(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"projectCode\", projectCode);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"executeType\", executeType);",
                "newContent": "public HttpResponse execute(ExecutionParameters parameters) {\n        Map<String, Object> params = parameters.toMap();"
            },
            {
                "fromLine": 81,
                "toLine": 91,
                "oldContent": "public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,\n                                    TaskDependType taskDependType) {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);",
                "newContent": "public HttpResponse executeTask(TaskExecutionParameters parameters) {\n        Map<String, Object> params = parameters.toMap();"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 17,
                "toLine": 34,
                "oldContent": "Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);\n\n    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "Result createProjectParameter(ProjectParameterRequest request);\n\n    Result updateProjectParameter(ProjectParameterRequest request);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 65,
                "toLine": 81,
                "oldContent": "public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);\n    }\n",
                "newContent": "public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.createProjectParameter(request);\n    }\n"
            },
            {
                "fromLine": 84,
                "toLine": 101,
                "oldContent": "public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @PathVariable(\"code\") Long code,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);\n    }\n",
                "newContent": "public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @PathVariable(\"code\") Long code,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.updateProjectParameter(request);\n    }\n"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 46,
                "toLine": 69,
                "oldContent": "Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());\n        Assertions.assertEquals(Status.SUCCESS.getCode(), result.getCode());\n    }\n\n    @Test\n    public void testUpdateProjectParameter() {\n        User loginUser = getGeneralUser();\n\n        Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.anyLong(),\n                Mockito.any(), Mockito.any(), Mockito.any())).thenReturn(getSuccessResult());\n        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",\n                DataType.LONG.name());\n        Assertions.assertEquals(Status.SUCCESS.getCode(), result.getCode());\n    }\n\n    @Test",
                "newContent": "ProjectParameterRequest createRequest = new ProjectParameterRequest(loginUser, 1, \"key\", \"value\", DataType.VARCHAR.name());\n        Mockito.when(projectParameterService.createProjectParameter(Mockito.any(ProjectParameterRequest.class)))\n                .thenReturn(getSuccessResult());\n        Result result = projectParameterController.createProjectParameter(createRequest);\n        Assertions.assertEquals(Status.SUCCESS.getCode(), result.getCode());\n\n        ProjectParameterRequest updateRequest = new ProjectParameterRequest(loginUser, 1, 1L, \"key\", \"value\", DataType.LONG.name());\n        Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(ProjectParameterRequest.class)))\n                .thenReturn(getSuccessResult());\n        result = projectParameterController.updateProjectParameter(updateRequest);\n        Assertions.assertEquals(Status.SUCCESS.getCode(), result.getCode());"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 75,
                "toLine": 85,
                "oldContent": "Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                DataType.VARCHAR.name());\n        assertNull(result.getData());\n        assertNull(result.getCode());\n        assertNull(result.getMsg());\n",
                "newContent": "ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\", DataType.VARCHAR.name());\n        Result result = projectParameterService.createProjectParameter(request);\n        assertNull(result.getData());\n        assertNull(result.getCode());\n        assertNull(result.getMsg());\n"
            },
            {
                "fromLine": 88,
                "toLine": 119,
                "oldContent": "            result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",\n                    DataType.VARCHAR.name());\n            assertEquals(Status.CREATE_PROJECT_PARAMETER_ERROR.getCode(), result.getCode());\n        }\n",
                "newContent": "            ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\", DataType.VARCHAR.name());\n            result = projectParameterService.createProjectParameter(request);\n            assertEquals(Status.CREATE_PROJECT_PARAMETER_ERROR.getCode(), result.getCode());\n        }\n"
            },
            {
                "fromLine": 121,
                "toLine": 162,
                "oldContent": "Result result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",\n                DataType.VARCHAR.name());\n        assertNull(result.getData());\n        assertNull(result.getCode());\n        assertNull(result.getMsg());\n",
                "newContent": "ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, 1, \"key\", \"value\", DataType.VARCHAR.name());\n        Result result = projectParameterService.updateProjectParameter(request);\n        assertNull(result.getData());\n        assertNull(result.getCode());\n        assertNull(result.getMsg());\n"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 77,
                "toLine": 96,
                "oldContent": "    /**\n     * create schedule\n     *\n     * @param loginUser login user\n     * @param projectCode project code\n     * @param workflowDefinitionCode workflow definition code\n     * @param schedule scheduler\n     * @param warningType warning type\n     * @param warningGroupId warning group id\n     * @param failureStrategy failure strategy\n     * @param workflowInstancePriority workflow instance priority\n     * @param workerGroup worker group\n     * @param tenantCode tenant code\n     * @return create result code\n     */",
                "newContent": "    /**\n     * create schedule\n     *\n     * @param scheduleRequest the request object containing schedule creation parameters\n     * @return create result code\n     */"
            },
            {
                "fromLine": 105,
                "toLine": 136,
                "oldContent": "public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_POLICY) FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.insertSchedule(",
                "newContent": "public Result createSchedule(@Parameter(hidden = true) @RequestBody ScheduleRequest scheduleRequest) {\n        Map<String, Object> result = schedulerService.insertSchedule(scheduleRequest);"
            },
            {
                "fromLine": 304,
                "toLine": 322,
                "oldContent": "    /**\n     * update workflow definition schedule\n     *\n     * @param loginUser login user\n     * @param projectCode project code\n     * @param workflowDefinitionCode workflow definition code\n     * @param schedule scheduler\n     * @param warningType warning type\n     * @param warningGroupId warning group id\n     * @param failureStrategy failure strategy\n     * @param workerGroup worker group\n     * @param workflowInstancePriority workflow instance priority\n     * @return update result code\n     */",
                "newContent": "    /**\n     * update workflow definition schedule\n     *\n     * @param scheduleRequest the request object containing schedule update parameters\n     * @return update result code\n     */"
            },
            {
                "fromLine": 331,
                "toLine": 354,
                "oldContent": "public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                         @PathVariable(value = \"code\") long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                                         @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") long environmentCode,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode,",
                "newContent": "public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestBody ScheduleRequest scheduleRequest) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(scheduleRequest);"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.dao.entity.User;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ExecutionParameters {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private ExecuteType executeType;\n\n    public ExecutionParameters(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n        this.workflowInstanceId = workflowInstanceId;\n        this.executeType = executeType;\n    }\n\n    public Map<String, Object> toMap() {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"projectCode\", projectCode);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"executeType\", executeType);\n        return params;\n    }\n}",
        "org/apache/dolphinscheduler/api/test/pages/workflow/TaskExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.common.enums.TaskDependType;\nimport org.apache.dolphinscheduler.dao.entity.User;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class TaskExecutionParameters {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private String startNodeList;\n    private TaskDependType taskDependType;\n\n    public TaskExecutionParameters(User loginUser, long projectCode, int workflowInstanceId, String startNodeList, TaskDependType taskDependType) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n        this.workflowInstanceId = workflowInstanceId;\n        this.startNodeList = startNodeList;\n        this.taskDependType = taskDependType;\n    }\n\n    public Map<String, Object> toMap() {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);\n        params.put(\"taskDependType\", taskDependType);\n        return params;\n    }\n}",
        "org/apache/dolphinscheduler/api/controller/ProjectParameterRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ProjectParameterRequest {\n    private User loginUser;\n    private long projectCode;\n    private Long code;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    public ProjectParameterRequest(User loginUser, long projectCode, String projectParameterName, String projectParameterValue, String projectParameterDataType) {\n        this(loginUser, projectCode, null, projectParameterName, projectParameterValue, projectParameterDataType);\n    }\n\n    public ProjectParameterRequest(User loginUser, long projectCode, Long code, String projectParameterName, String projectParameterValue, String projectParameterDataType) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n        this.code = code;\n        this.projectParameterName = projectParameterName;\n        this.projectParameterValue = projectParameterValue;\n        this.projectParameterDataType = projectParameterDataType;\n    }\n\n    // Getters and setters\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ScheduleRequest {\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workflowInstancePriority;\n    private String workerGroup;\n    private String tenantCode;\n    private Long environmentCode;\n\n    public ScheduleRequest(User loginUser, long projectCode, long workflowDefinitionCode, String schedule, WarningType warningType, int warningGroupId, FailureStrategy failureStrategy, Priority workflowInstancePriority, String workerGroup, String tenantCode, Long environmentCode) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.schedule = schedule;\n        this.warningType = warningType;\n        this.warningGroupId = warningGroupId;\
        {"fromLine": 47,
                "toLine": 60,
                "oldContent": "\n    @TableField(value = \"sign\")\n    private String sign;\n\n    @TableField(value = \"title\")\n    private String title;\n\n    @TableField(value = \"content\")\n    private String content;\n\n    @TableField(value = \"alert_status\")\n    private AlertStatus alertStatus;\n\n    @TableField(value = \"warning_type\")",
                "newContent": "private AlertData alertData;"
            }
       		      
       		          
   		      
       	      
       	      
   		      
       	      
   		      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
    
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
   		      
       	      
   		      
       	      
   		
      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	
      
   		      
       	      
   		      
       	      
   		      
       	      
   		      
       	
      
   		      
       	      
   		      
       	      
   		
      
       	      
   		      
       	      
   		      
       	
      
   		      
       	      
    
   		      
       	      
   		      
       	
      
   		      
       	
      
   		      
    
   		      
       	      
   		      
       	
      
   		
      
       	
      
   		      
    
   		      
       	
      
   		      
    
   		      
       	
      
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		
      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		
      
    
   		      
    
   	      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		
      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		      
    
   		
      
    
   		      
    
   		      
    
   		      
    

   
       	      
       	      
       	      
       	      
   
   		      
       	      
       	      
       	      
       	      
   		      
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	
      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	
      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
   	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	
      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	
      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	
      
   
       	      
   
       	      
   
       	      
   
       	
      
   
       	      
   
       	
      
   
       	      
   
       	      
   
       	      
   
       	      
   
       	      
      
   
       	      
   
   
       	      
   
       	      
   
       	      
      
   
       	      
   
       	      
   
   
       	      
   
       	      
   
       	      
      
   
       	      
   
       	      
   
   
       	      
   
       	      
   
       	      
      
   
   
       	      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   	      
   
       	      
   
   
       	
      
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
   
   
       	      
   
   
   	      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	      
      
   
       	
      
   
       	      
   
   
       	      
   
   
       	      
      
   
       	      
   
   
       	
      
   
       	      
      
   
       	      
   
   
       	      
      
   
       	      
      

{
    "refactorings": {
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 47,
                "toLine": 72,
                "oldContent": "\n    @TableField(value = \"sign\")\n    private String sign;\n\n    @TableField(value = \"title\")\n    private String title;\n\n    @TableField(value = \"content\")\n    private String content;\n\n    @TableField(value = \"alert_status\")\n    private AlertStatus alertStatus;\n\n    @TableField(value = \"warning_type\")\n    private WarningType warningType;\n\n    @TableField(value = \"log\")\n    private String log;\n\n    @TableField(\"alertgroup_id\")\n    private Integer alertGroupId;\n\n    @TableField(\"create_time\")\n    private Date createTime;\n\n    @TableField(\"update_time\")\n    private Date updateTime;",
                "newContent": "private AlertData alertData;"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/dao/entity/AlertData.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport org.apache.dolphinscheduler.common.enums.AlertStatus;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport java.util.Date;\n\npublic class AlertData {\n    private String sign;\n    private String title;\n    private String content;\n    private AlertStatus alertStatus;\n    private WarningType warningType;\n    private String log;\n    private Integer alertGroupId;\n    private Date createTime;\n    private Date updateTime;\n\n    public AlertData(String sign, String title, String content, AlertStatus alertStatus, WarningType warningType, String log, Integer alertGroupId, Date createTime, Date updateTime) {\n        this.sign = sign;\n        this.title = title;\n        this.content = content;\n        this.alertStatus = alertStatus;\n        this.warningType = warningType;\n        this.log = log;\n        this.alertGroupId = alertGroupId;\n        this.createTime = createTime;\n        this.updateTime = updateTime;\n    }\n\n    // Getters and Setters\n}"
    }
}