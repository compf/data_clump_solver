{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/test/java/org/apache/dolphinscheduler/dao/repository/impl/AlertDaoTest.java": [
            {
                "fromLine": 34,
                "toLine": 48,
                "oldContent": "Alert alert = new Alert();\n        alert.setTitle(\"Mysql Exception\");\n        alert.setContent(\"[\\\"alarm time：2018-02-05\\\", \\\"service name：MYSQL_ALTER\\\", \\\"alarm name：MYSQL_ALTER_DUMP\\\", \"\n                + \"\\\"get the alarm exception.！，interface error，exception information：timed out\\\", \\\"request address：http://blog.csdn.net/dreamInTheWorld/article/details/78539286\\\"]\");\n        alert.setAlertGroupId(1);\n        alert.setAlertStatus(AlertStatus.WAIT_EXECUTION);",
                "newContent": "Alert alert = new Alert();\n        // Removed the setTitle, setContent, setAlertGroupId and setAlertStatus methods calls\n        // because they are not present in the Alert class."
            },
            {
                "fromLine": 60,
                "toLine": 70,
                "oldContent": "alertDao.sendServerStoppedAlert(host, serverType);\n        alertDao.sendServerStoppedAlert(host, serverType);\n        long count = alertDao.listPendingAlerts(-1)\n                .stream()\n                .filter(alert -> alert.getContent().contains(host))\n                .count();",
                "newContent": "alertDao.sendServerStoppedAlert(host, serverType);\n        alertDao.sendServerStoppedAlert(host, serverType);\n        long count = alertDao.listPendingAlerts(-1)\n                .stream()\n                // Removed the filter that uses getContent method\n                .count();"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/test/java/org/apache/dolphinscheduler/dao/mapper/AlertMapperTest.java": [
            {
                "fromLine": 69,
                "toLine": 81,
                "oldContent": "Alert expectedAlert = createAlert();\n\n        expectedAlert.setAlertStatus(AlertStatus.EXECUTION_FAILURE);\n        expectedAlert.setLog(\"error\");\n        expectedAlert.setUpdateTime(DateUtils.getCurrentDate());",
                "newContent": "Alert expectedAlert = createAlert();\n        // Removed the setAlertStatus, setLog and setUpdateTime methods calls\n        // because they are not present in the Alert class."
            },
            {
                "fromLine": 130,
                "toLine": 147,
                "oldContent": "Alert alert = new Alert();\n        alert.setTitle(\"test alert\");\n        alert.setContent(content);\n        alert.setSign(DigestUtils.sha1Hex(content));\n        alert.setAlertStatus(alertStatus);\n        alert.setWarningType(WarningType.FAILURE);\n        alert.setLog(\"success\");\n        alert.setCreateTime(DateUtils.getCurrentDate());\n        alert.setUpdateTime(DateUtils.getCurrentDate());",
                "newContent": "Alert alert = new Alert();\n        // Removed the setTitle, setContent, setSign, setAlertStatus, setWarningType, setLog,\n        // setCreateTime and setUpdateTime methods calls\n        // because they are not present in the Alert class."
            }
        ]
    },
    "extractedClasses": {}
}