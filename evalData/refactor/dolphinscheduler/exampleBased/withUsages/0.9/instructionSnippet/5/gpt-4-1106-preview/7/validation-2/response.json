{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/WorkflowTaskRelation.java": [
            {
                "fromLine": 96,
                "toLine": 117,
                "oldContent": "public WorkflowTaskRelation(WorkflowTaskRelationLog processTaskRelationLog) {\n        this.name = processTaskRelationLog.name;\n        this.workflowDefinitionVersion = processTaskRelationLog.workflowDefinitionVersion;\n        this.projectCode = processTaskRelationLog.projectCode;\n        this.workflowDefinitionCode = processTaskRelationLog.workflowDefinitionCode;\n        this.preTaskCode = processTaskRelationLog.preTaskCode;\n        this.preTaskVersion = processTaskRelationLog.preTaskVersion;\n        this.postTaskCode = processTaskRelationLog.postTaskCode;\n        this.postTaskVersion = processTaskRelationLog.postTaskVersion;\n        this.conditionType = processTaskRelationLog.conditionType;\n        this.conditionParams = processTaskRelationLog.conditionParams;\n\n        this.createTime = processTaskRelationLog.createTime;\n        this.updateTime = new Date();\n    }\n",
                "newContent": "public WorkflowTaskRelation(WorkflowTaskRelationLog processTaskRelationLog) {\n        this.name = processTaskRelationLog.getName();\n        this.workflowDefinitionVersion = processTaskRelationLog.getWorkflowDefinitionVersion();\n        this.projectCode = processTaskRelationLog.getProjectCode();\n        this.workflowDefinitionCode = processTaskRelationLog.getWorkflowDefinitionCode();\n        this.preTaskCode = processTaskRelationLog.getPreTaskCode();\n        this.preTaskVersion = processTaskRelationLog.getPreTaskVersion();\n        this.postTaskCode = processTaskRelationLog.getPostTaskCode();\n        this.postTaskVersion = processTaskRelationLog.getPostTaskVersion();\n        this.conditionType = processTaskRelationLog.getConditionType();\n        this.conditionParams = processTaskRelationLog.getConditionParams();\n\n        this.createTime = processTaskRelationLog.getCreateTime();\n        this.updateTime = new Date();\n    }\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/utils/WorkerGroupUtils.java": [
            {
                "fromLine": 48,
                "toLine": 58,
                "oldContent": "public static List<String> getWorkerAddressListFromWorkerGroup(WorkerGroup workerGroup) {\n        String addrList = workerGroup.addrList;\n        if (StringUtils.isEmpty(addrList)) {\n            return Collections.emptyList();\n        }\n        return Lists.newArrayList(addrList.split(\",\"));\n    }",
                "newContent": "public static List<String> getWorkerAddressListFromWorkerGroup(WorkerGroup workerGroup) {\n        String addrList = workerGroup.getAddrList();\n        if (StringUtils.isEmpty(addrList)) {\n            return Collections.emptyList();\n        }\n        return Lists.newArrayList(addrList.split(\",\"));\n    }"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/utils/TaskInstanceUtils.java": [
            {
                "fromLine": 72,
                "toLine": 82,
                "oldContent": "target.setTestFlag(source.getTestFlag());",
                "newContent": "// Deleted line that used getTestFlag method"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/repository/impl/TaskInstanceDaoImpl.java": [
            {
                "fromLine": 125,
                "toLine": 135,
                "oldContent": "List<TaskInstance> taskInstances =\n                this.queryValidTaskListByWorkflowInstanceId(taskInstance.getWorkflowInstanceId(),\n                        taskInstance.getTestFlag());",
                "newContent": "// Deleted line that used getTestFlag method"
            }
        ]
    }
}