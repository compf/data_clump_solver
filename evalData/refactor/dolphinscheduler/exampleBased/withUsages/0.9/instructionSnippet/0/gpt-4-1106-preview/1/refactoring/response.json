{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 17,
                "toLine": 34,
                "oldContent": "\npackage org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.api.test.core.Constants;\nimport org.apache.dolphinscheduler.api.test.entity.HttpResponse;\nimport org.apache.dolphinscheduler.api.test.utils.RequestClient;\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.TaskDependType;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport lombok.AllArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\n",
                "newContent": "\npackage org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.api.test.core.Constants;\nimport org.apache.dolphinscheduler.api.test.entity.HttpResponse;\nimport org.apache.dolphinscheduler.api.test.utils.RequestClient;\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.TaskDependType;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\nimport java.util.HashMap;\nimport lombok.extern.slf4j.Slf4j;\n\n\n"
            },
            {
                "fromLine": 72,
                "toLine": 72,
                "oldContent": "    public HttpResponse execute(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {",
                "newContent": "    public HttpResponse execute(ExecutionParameters parameters) {"
            },
            {
                "fromLine": 86,
                "toLine": 86,
                "oldContent": "    public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,",
                "newContent": "    public HttpResponse executeTask(TaskExecutionParameters parameters,"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 17,
                "toLine": 35,
                "oldContent": "\npackage org.apache.dolphinscheduler.dao.mapper;\n\nimport org.apache.dolphinscheduler.common.enums.WorkflowExecutionStatus;\nimport org.apache.dolphinscheduler.dao.entity.ExecuteStatusCount;\nimport org.apache.dolphinscheduler.dao.entity.WorkflowInstance;\nimport org.apache.dolphinscheduler.dao.model.WorkflowInstanceStatusCountDto;\n\nimport org.apache.ibatis.annotations.Param;\n\nimport java.util.Collection;\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Set;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n",
                "newContent": "\npackage org.apache.dolphinscheduler.dao.mapper;\n\nimport org.apache.dolphinscheduler.common.enums.WorkflowExecutionStatus;\nimport org.apache.dolphinscheduler.dao.entity.ExecuteStatusCount;\nimport org.apache.dolphinscheduler.dao.entity.WorkflowInstance;\nimport org.apache.dolphinscheduler.dao.model.WorkflowInstanceStatusCountDto;\n\nimport org.apache.ibatis.annotations.Param;\n\nimport java.util.Collection;\nimport java.util.Date;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n"
            },
            {
                "fromLine": 271,
                "toLine": 272,
                "oldContent": "     * @param name                  name\n     * @param host                  host",
                "newContent": "     * @param instanceQuery        instance query parameters"
            },
            {
                "fromLine": 277,
                "toLine": 280,
                "oldContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,\n                                                              @Param(\"name\") String name,\n                                                              @Param(\"host\") String host);",
                "newContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"instanceQuery\") InstanceQuery instanceQuery);"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 17,
                "toLine": 35,
                "oldContent": "\npackage org.apache.dolphinscheduler.dao.entity;\n\nimport org.apache.dolphinscheduler.common.enums.Flag;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.TaskExecuteType;\nimport org.apache.dolphinscheduler.plugin.task.api.enums.TaskExecutionStatus;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport lombok.Data;\n\nimport com.baomidou.mybatisplus.annotation.FieldStrategy;\nimport com.baomidou.mybatisplus.annotation.IdType;\nimport com.baomidou.mybatisplus.annotation.TableField;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableName;\n",
                "newContent": "\npackage org.apache.dolphinscheduler.dao.entity;\n\nimport org.apache.dolphinscheduler.common.enums.Flag;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.TaskExecuteType;\nimport org.apache.dolphinscheduler.plugin.task.api.enums.TaskExecutionStatus;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport lombok.Data;\n\n\n"
            },
            {
                "fromLine": 43,
                "toLine": 144,
                "oldContent": "    private String name;\n    private Long projectCode;\n    private String host;\n        this.host = host;",
                "newContent": "    private TaskLocation taskLocation;"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 17,
                "toLine": 22,
                "oldContent": "\npackage org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.api.utils.Result;\nimport org.apache.dolphinscheduler.dao.entity.User;\n",
                "newContent": "\npackage org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.api.utils.Result;\n\n"
            },
            {
                "fromLine": 25,
                "toLine": 26,
                "oldContent": "    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "    Result createProjectParameter(ProjectParameterDefinition parameterDefinition);"
            },
            {
                "fromLine": 28,
                "toLine": 29,
                "oldContent": "    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "    Result updateProjectParameter(ProjectParameterDefinition parameterDefinition, long code);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 17,
                "toLine": 51,
                "oldContent": "\npackage org.apache.dolphinscheduler.api.controller;\n\nimport static org.apache.dolphinscheduler.api.enums.Status.CREATE_PROJECT_PARAMETER_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.DELETE_PROJECT_PARAMETER_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.QUERY_PROJECT_PARAMETER_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.UPDATE_PROJECT_PARAMETER_ERROR;\n\nimport org.apache.dolphinscheduler.api.exceptions.ApiException;\nimport org.apache.dolphinscheduler.api.service.ProjectParameterService;\nimport org.apache.dolphinscheduler.api.utils.Result;\nimport org.apache.dolphinscheduler.common.constants.Constants;\nimport org.apache.dolphinscheduler.dao.entity.User;\nimport org.apache.dolphinscheduler.plugin.task.api.utils.ParameterUtils;\n\nimport lombok.extern.slf4j.Slf4j;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestAttribute;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.ResponseStatus;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.Parameter;\nimport io.swagger.v3.oas.annotations.Parameters;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport io.swagger.v3.oas.annotations.tags.Tag;\n",
                "newContent": "\npackage org.apache.dolphinscheduler.api.controller;\n\nimport static org.apache.dolphinscheduler.api.enums.Status.CREATE_PROJECT_PARAMETER_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.DELETE_PROJECT_PARAMETER_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.QUERY_PROJECT_PARAMETER_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.UPDATE_PROJECT_PARAMETER_ERROR;\n\nimport org.apache.dolphinscheduler.api.exceptions.ApiException;\nimport org.apache.dolphinscheduler.api.service.ProjectParameterService;\nimport org.apache.dolphinscheduler.api.utils.Result;\nimport org.apache.dolphinscheduler.common.constants.Constants;\nimport org.apache.dolphinscheduler.plugin.task.api.utils.ParameterUtils;\n\nimport lombok.extern.slf4j.Slf4j;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestAttribute;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.ResponseStatus;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.Parameter;\nimport io.swagger.v3.oas.annotations.Parameters;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport io.swagger.v3.oas.annotations.tags.Tag;\n\n"
            },
            {
                "fromLine": 70,
                "toLine": 76,
                "oldContent": "    public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "    public Result createProjectParameter(ProjectParameterDefinition parameterDefinition) {\n        return projectParameterService.createProjectParameter(parameterDefinition);"
            },
            {
                "fromLine": 89,
                "toLine": 96,
                "oldContent": "    public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "    public Result updateProjectParameter(ProjectParameterDefinition parameterDefinition, @PathVariable long code) {\n        return projectParameterService.updateProjectParameter(parameterDefinition, code);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 17,
                "toLine": 36,
                "oldContent": "\npackage org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.api.enums.Status;\nimport org.apache.dolphinscheduler.api.service.impl.ProjectParameterServiceImpl;\nimport org.apache.dolphinscheduler.api.utils.Result;\nimport org.apache.dolphinscheduler.common.enums.UserType;\nimport org.apache.dolphinscheduler.dao.entity.User;\nimport org.apache.dolphinscheduler.plugin.task.api.enums.DataType;\n\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.InjectMocks;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.junit.jupiter.MockitoExtension;\nimport org.mockito.junit.jupiter.MockitoSettings;\nimport org.mockito.quality.Strictness;\n",
                "newContent": "\npackage org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.api.enums.Status;\nimport org.apache.dolphinscheduler.api.service.impl.ProjectParameterServiceImpl;\nimport org.apache.dolphinscheduler.api.utils.Result;\nimport org.apache.dolphinscheduler.common.enums.UserType;\nimport org.apache.dolphinscheduler.plugin.task.api.enums.DataType;\n\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.InjectMocks;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.junit.jupiter.MockitoExtension;\nimport org.mockito.junit.jupiter.MockitoSettings;\nimport org.mockito.quality.Strictness;\n"
            },
            {
                "fromLine": 51,
                "toLine": 53,
                "oldContent": "        Mockito.when(projectParameterService.createProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.any(),\n                Mockito.<String>any(), Mockito.<String>any())).thenReturn(result);\n        Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",",
                "newContent": "        Mockito.when(projectParameterService.createProjectParameter(Mockito.any(ProjectParameterDefinition.class))).thenReturn(result);\n        Result result = projectParameterController.createProjectParameter(new ProjectParameterDefinition(loginUser, 1, \"key\", \"value\","
            },
            {
                "fromLine": 62,
                "toLine": 64,
                "oldContent": "        Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.anyLong(),\n                Mockito.<String>any(), Mockito.<String>any(), Mockito.<String>any())).thenReturn(result);\n        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",",
                "newContent": "        Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(ProjectParameterDefinition.class), Mockito.anyLong())).thenReturn(result);\n        Result result = projectParameterController.updateProjectParameter(new ProjectParameterDefinition(loginUser, 1, \"key\", \"value\","
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 17,
                "toLine": 54,
                "oldContent": "\npackage org.apache.dolphinscheduler.api.service;\n\nimport static org.apache.dolphinscheduler.api.utils.ServiceTestUtil.getGeneralUser;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.mockito.ArgumentMatchers.any;\nimport static org.mockito.ArgumentMatchers.anyLong;\nimport static org.mockito.Mockito.when;\n\nimport org.apache.dolphinscheduler.api.AssertionsHelper;\nimport org.apache.dolphinscheduler.api.enums.Status;\nimport org.apache.dolphinscheduler.api.service.impl.ProjectParameterServiceImpl;\nimport org.apache.dolphinscheduler.api.service.impl.ProjectServiceImpl;\nimport org.apache.dolphinscheduler.api.utils.Result;\nimport org.apache.dolphinscheduler.common.utils.CodeGenerateUtils;\nimport org.apache.dolphinscheduler.dao.entity.Project;\nimport org.apache.dolphinscheduler.dao.entity.ProjectParameter;\nimport org.apache.dolphinscheduler.dao.entity.User;\nimport org.apache.dolphinscheduler.dao.mapper.ProjectMapper;\nimport org.apache.dolphinscheduler.dao.mapper.ProjectParameterMapper;\nimport org.apache.dolphinscheduler.plugin.task.api.enums.DataType;\n\nimport java.util.Collections;\n\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.InjectMocks;\nimport org.mockito.Mock;\nimport org.mockito.MockedStatic;\nimport org.mockito.Mockito;\nimport org.mockito.junit.jupiter.MockitoExtension;\nimport org.mockito.junit.jupiter MockitoSettings;\nimport org.mockito.quality.Strictness;\n\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n",
                "newContent": "\npackage org.apache.dolphinscheduler.api.service;\n\nimport static org.apache.dolphinscheduler.api.utils.ServiceTestUtil.getGeneralUser;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNotNull;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.mockito.ArgumentMatchers.any;\nimport static org.mockito.Mockito.when;\n\nimport org.apache.dolphinscheduler.api.AssertionsHelper;\nimport org.apache.dolphinscheduler.api.enums.Status;\nimport org.apache.dolphinscheduler.api.service.impl.ProjectParameterServiceImpl;\nimport org.apache.dolphinscheduler.api.service.impl.ProjectServiceImpl;\nimport org.apache.dolphinscheduler.api.utils.Result;\nimport org.apache.dolphinscheduler.common.utils.CodeGenerateUtils;\nimport org.apache.dolphinscheduler.dao.entity.Project;\nimport org.apache.dolphinscheduler.dao.entity.ProjectParameter;\nimport org.apache.dolphinscheduler.dao.mapper.ProjectMapper;\nimport org.apache.dolphinscheduler.dao.mapper.ProjectParameterMapper;\nimport org.apache.dolphinscheduler.plugin.task.api.enums.DataType;\n\nimport java.util.Collections;\n\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.InjectMocks;\nimport org.mockito.Mock;\nimport org.mockito.MockedStatic;\nimport org.mockito.Mockito;\nimport org.mockito.junit.jupiter.MockitoExtension;\nimport org.mockito.junit.jupiter.MockitoSettings;\nimport org
{
    "refactorings": {
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterService.createProjectParameter(new ProjectParameterDefinition(loginUser, projectCode, \"key\", \"value\","
            },
            {
                "fromLine": 93,
                "toLine": 93,
                "oldContent": "            result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "            result = projectParameterService.createProjectParameter(new ProjectParameterDefinition(loginUser, projectCode, \"key\", \"value\","
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(new ProjectParameterDefinition(loginUser, projectCode, \"key\", \"value\","
            },
            {
                "fromLine": 108,
                "toLine": 108,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(new ProjectParameterDefinition(loginUser, projectCode, \"key1\", \"value\","
            },
            {
                "fromLine": 114,
                "toLine": 114,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(new ProjectParameterDefinition(loginUser, projectCode, \"key1\", \"value\","
            },
            {
                "fromLine": 126,
                "toLine": 126,
                "oldContent": "        Result result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterService.updateProjectParameter(new ProjectParameterDefinition(loginUser, projectCode, \"key\", \"value\", 1);"
            },
            {
                "fromLine": 137,
                "toLine": 137,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterDefinition(loginUser, projectCode, \"key\", \"value\", 1);"
            },
            {
                "fromLine": 144,
                "toLine": 144,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterDefinition(loginUser, projectCode, \"key\", \"value\", 1);"
            },
            {
                "fromLine": 151,
                "toLine": 151,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterDefinition(loginUser, projectCode, \"key1\", \"value\", 1);"
            },
            {
                "fromLine": 157,
                "toLine": 157,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterDefinition(loginUser, projectCode, \"key1\", \"value\", 1);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 17,
                "toLine": 62,
                "oldContent": "\npackage org.apache.dolphinscheduler.api.controller;\n\nimport static org.apache.dolphinscheduler.api.enums.Status.CREATE_SCHEDULE_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.DELETE_SCHEDULE_BY_ID_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.OFFLINE_SCHEDULE_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.PREVIEW_SCHEDULE_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.PUBLISH_SCHEDULE_ONLINE_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.QUERY_SCHEDULE_LIST_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.QUERY_SCHEDULE_LIST_PAGING_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.UPDATE_SCHEDULE_ERROR;\nimport static org.apache.dolphinscheduler.common.constants.Constants.SESSION_USER;\n\nimport org.apache.dolphinscheduler.api.audit.OperatorLog;\nimport org.apache.dolphinscheduler.api.audit.enums.AuditType;\nimport org.apache.dolphinscheduler.api.enums.Status;\nimport org.apache.dolphinscheduler.api.exceptions.ApiException;\nimport org.apache.dolphinscheduler.api.service.SchedulerService;\nimport org.apache.dolphinscheduler.api.utils.Result;\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\nimport org.apache.dolphinscheduler.plugin.task.api.utils.ParameterUtils;\n\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestAttribute;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.ResponseStatus;\n",
                "newContent": "\npackage org.apache.dolphinscheduler.api.controller;\n\nimport static org.apache.dolphinscheduler.api.enums.Status.CREATE_SCHEDULE_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.DELETE_SCHEDULE_BY_ID_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.OFFLINE_SCHEDULE_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.PREVIEW_SCHEDULE_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.PUBLISH_SCHEDULE_ONLINE_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.QUERY_SCHEDULE_LIST_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.QUERY_SCHEDULE_LIST_PAGING_ERROR;\nimport static org.apache.dolphinscheduler.api.enums.Status.UPDATE_SCHEDULE_ERROR;\n\nimport org.apache.dolphinscheduler.api.audit.OperatorLog;\nimport org.apache.dolphinscheduler.api.audit.enums.AuditType;\nimport org.apache.dolphinscheduler.api.enums.Status;\nimport org.apache.dolphinscheduler.api.exceptions.ApiException;\nimport org.apache.dolphinscheduler.api.service.SchedulerService;\nimport org.apache.dolphinscheduler.api.utils.Result;\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.dao.entity.User;\nimport org.apache.dolphinscheduler.plugin.task.api.utils.ParameterUtils;\n\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\n"
            },
            {
                "fromLine": 82,
                "toLine": 91,
                "oldContent": "     * @param loginUser login user\n     * @param projectCode project code\n     * @param workflowDefinitionCode workflow definition code\n     * @param schedule scheduler\n     * @param warningType warning type\n     * @param warningGroupId warning group id\n     * @param failureStrategy failure strategy\n     * @param workflowInstancePriority workflow instance priority\n     * @param workerGroup worker group\n     * @param tenantCode tenant code",
                "newContent": "     * @param scheduleDefinition schedule definition"
            },
            {
                "fromLine": 110,
                "toLine": 120,
                "oldContent": "    public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_POLICY) FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {",
                "newContent": "    public Result createSchedule(ScheduleDefinition scheduleDefinition) {"
            },
            {
                "fromLine": 122,
                "toLine": 131,
                "oldContent": "                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,",
                "newContent": "                scheduleDefinition,"
            },
            {
                "fromLine": 309,
                "toLine": 317,
                "oldContent": "     * @param loginUser login user\n     * @param projectCode project code\n     * @param workflowDefinitionCode workflow definition code\n     * @param schedule scheduler\n     * @param warningType warning type\n     * @param warningGroupId warning group id\n     * @param failureStrategy failure strategy\n     * @param workerGroup worker group\n     * @param workflowInstancePriority workflow instance priority",
                "newContent": "     * @param scheduleDefinition schedule definition"
            },
            {
                "fromLine": 336,
                "toLine": 346,
                "oldContent": "    public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                         @PathVariable(value = \"code\") long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {",
                "newContent": "    public Result updateScheduleByWorkflowDefinitionCode(ScheduleDefinition scheduleDefinition, @PathVariable long code) {"
            },
            {
                "fromLine": 349,
                "toLine": 349,
                "oldContent": "                workflowDefinitionCode, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,",
                "newContent": "                scheduleDefinition, code,"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 17,
                "toLine": 19,
                "oldContent": "\npackage org.apache.dolphinscheduler.plugin.task.api.model;\n",
                "newContent": "\npackage org.apache.dolphinscheduler.plugin.task.api.model;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\n\n@Data\n@AllArgsConstructor\n"
            },
            {
                "fromLine": 22,
                "toLine": 49,
                "oldContent": "    private String title;\n    private String content;\n    private Integer alertGroupId;\n        return title;\n        this.title = title;\n        return content;\n        this.content = content;\n        return alertGroupId;\n        this.alertGroupId = alertGroupId;",
                "newContent": ""
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 17,
                "toLine": 37,
                "oldContent": "\npackage org.apache.dolphinscheduler.dao.entity;\n\nimport org.apache.dolphinscheduler.common.enums.AlertStatus;\nimport org.apache.dolphinscheduler.common.enums.AlertType;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport com.baomidou.mybatisplus.annotation.IdType;\nimport com.baomidou.mybatisplus.annotation.TableField;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableName;\n",
                "newContent": "\npackage org.apache.dolphinscheduler.dao.entity;\n\nimport org.apache.dolphinscheduler.common.enums.AlertStatus;\nimport org.apache.dolphinscheduler.common.enums.AlertType;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.Map;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport com.baomidou.mybatisplus.annotation.IdType;\nimport com.baomidou.mybatisplus.annotation.TableField;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableName;\n\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\n"
            },
            {
                "fromLine": 52,
                "toLine": 67,
                "oldContent": "    private String title;\n    private String content;\n    private Integer alertGroupId;",
                "newContent": ""
            }
        ]
    },
    "extractedClasses": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ExecutionParameters {\n\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private ExecuteType executeType;\n\n    // getters and setters\n\n}",

        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/TaskExecutionParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class TaskExecutionParameters {\n\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private String startNodeList;\n\n    // getters and setters\n\n}",

        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/InstanceQuery.java": "package org.apache.dolphinscheduler.dao.mapper;\n\npublic class InstanceQuery {\n\n    private Long projectCode;\n    private String name;\n    private String host;\n\n    // getters and setters\n\n}",

        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskLocation.java": "package org.apache.dolphinscheduler.dao.entity;\n\npublic class TaskLocation {\n\n    private String name;\n    private Long projectCode;\n    private String host;\n\n    // getters and setters\n\n}",

        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterDefinition.java": "package org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ProjectParameterDefinition {\n\n    private User loginUser;\n    private long projectCode;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n    private long code;\n\n    public ProjectParameterDefinition(User loginUser, long projectCode, String projectParameterName, String projectParameterValue, String projectParameterDataType) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n        this.projectParameterName = projectParameterName;\n        this.projectParameterValue = projectParameterValue;\n        this.projectParameterDataType = projectParameterDataType;\n    }\n\n    public ProjectParameterDefinition(User loginUser, long projectCode, String projectParameterName, String projectParameterValue, String projectParameterDataType, long code) {\n        this(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\n        this.code = code;\n    }\n\n    // getters and setters\n\n}",

        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ScheduleDefinition.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ScheduleDefinition {\n\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workflowInstancePriority;\n    private String workerGroup;\n    private String tenantCode;\n    private long code;\n\n    // getters and setters\n\n}",

        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/Task

{
    "refactorings": {},
    "extractedClasses": {
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertContent.java": "package org.apache.dolphinscheduler.plugin.task.api.model;\n\npublic class TaskAlertContent {\n\n    private final String title;\n    private final String content;\n    private final Integer alertGroupId;\n\n    public TaskAlertContent(String title, String content, Integer alertGroupId) {\n        this.title = title;\n        this.content = content;\n        this.alertGroupId = alertGroupId;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }\n\n}",
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/AlertContent.java": "package org.apache.dolphinscheduler.dao.entity;\n\npublic class AlertContent {\n\n    private final String title;\n    private final String content;\n    private final Integer alertGroupId;\n\n    public AlertContent(String title, String content, Integer alertGroupId) {\n        this.title = title;\n        this.content = content;\n        this.alertGroupId = alertGroupId;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }\n\n}"
    }
}