"{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 143,
                "toLine": 143,
                "oldContent": "    public void init(String host, Date startTime, String executePath) {",
                "newContent": "    public void init(ExecutionEnvironment environment) {"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 74,
                "toLine": 75,
                "oldContent": "                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,",
                "newContent": "                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") DataType projectParameterDataType) {"
            },
            {
                "fromLine": 94,
                "toLine": 95,
                "oldContent": "                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,",
                "newContent": "                                         @RequestParam(value = \"projectParameterDataType\") DataType projectParameterDataType) {"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 81,
                "toLine": 90,
                "oldContent": "     *\n     * @param loginUser login user\n     * @param projectCode project code\n     * @param workflowDefinitionCode workflow definition code\n     * @param schedule scheduler\n     * @param warningType warning type\n     * @param warningGroupId warning group id\n     * @param failureStrategy failure strategy\n     * @param workflowInstancePriority workflow instance priority\n     * @param workerGroup worker group",
                "newContent": "     *\n     * @param loginUser login user\n     * @param projectCode project code\n     * @param scheduleConfig The configuration for the schedule"
            },
            {
                "fromLine": 121,
                "toLine": 130,
                "oldContent": "        Map<String, Object> result = schedulerService.insertSchedule(\n                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,",
                "newContent": "        Map<String, Object> result = schedulerService.insertSchedule(\n                loginUser,\n                projectCode,\n                scheduleConfig,"
            },
            {
                "fromLine": 308,
                "toLine": 316,
                "oldContent": "     *\n     * @param loginUser login user\n     * @param projectCode project code\n     * @param workflowDefinitionCode workflow definition code\n     * @param schedule scheduler\n     * @param warningType warning type\n     * @param warningGroupId warning group id\n     * @param failureStrategy failure strategy\n     * @param workerGroup worker group",
                "newContent": "     *\n     * @param loginUser login user\n     * @param projectCode project code\n     * @param scheduleConfig The configuration for the schedule"
            },
            {
                "fromLine": 346,
                "toLine": 348,
                "oldContent": "                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode,\n                workflowDefinitionCode, schedule,",
                "newContent": "                                                         @RequestParam(value = \"workflowInstancePriority\", required = false) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode,\n                scheduleConfig,"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 28,
                "toLine": 48,
                "oldContent": "    public String getTitle() {\n    }\n\n    public void setTitle(String title) {\n    }\n\n    public String getContent() {\n    }\n\n    public void setContent(String content) {\n    }\n\n    public Integer getAlertGroupId() {\n    }\n\n    public void setAlertGroupId(Integer alertGroupId) {\n    }",
                "newContent": "    // Fields, constructors, getters, and setters for title, content, and alertGroupId are removed, and encapsulated in AlertInfo class."
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 51,
                "toLine": 66,
                "oldContent": "    @TableField(value = \"title\")\n\n    private String title;\n\n    @TableField(value = \"content\")\n\n    private String content;\n\n    @TableField(\"alertgroup_id\")\n\n    private int alertGroupId; // There might be a typo here, the field type should be Integer instead of int",
                "newContent": "    private AlertInfo alertInfo;"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/dao/entity/ExecutionEnvironment.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport java.util.Date;\n\npublic class ExecutionEnvironment {\n    private String host;\n    private Date startTime;\n    private String executePath;\n\n    // Constructor, getters, setters are not shown for brevity\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleConfig.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.*;\n\npublic class ScheduleConfig {\n    private Long workflowDefinitionCode;\n    private String schedule;\n    private WarningType warningType;\n    private Integer warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workerGroup;\n\n    // Constructor, getters, setters are not shown for brevity\n}",
        "org/apache/dolphinscheduler/plugin/task/api/model/AlertInfo.java": "package org.apache.dolphinscheduler.plugin.task.api.model;\n\npublic class AlertInfo {\n    private String title;\n    private String content;\n    private Integer alertGroupId;\n\n    // Constructor, getters, setters are not shown for brevity\n}"
    }
}"