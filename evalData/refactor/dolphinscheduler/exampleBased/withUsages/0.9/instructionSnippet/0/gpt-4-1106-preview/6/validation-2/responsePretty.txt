"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/WorkflowInstance.java": [
            {
                "fromLine": 222,
                "toLine": 222,
                "oldContent": "        } else if (stateDescList == null) {",
                "newContent": ""
            },
            {
                "fromLine": 237,
                "toLine": 237,
                "oldContent": "}",
                "newContent": ""
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/WorkflowDefinitionLog.java": [
            {
                "fromLine": 39,
                "toLine": 49,
                "oldContent": "        this.setUpdateTime(workflowDefinition.getUpdateTime());\n        this.setFlag(workflowDefinition.getFlag());\n        this.setUserId(workflowDefinition.getUserId());\n        this.setUserName(workflowDefinition.getUserName());\n        this.setProjectName(workflowDefinition.getProjectName());\n        this.setLocations(workflowDefinition.getLocations());\n        this.setScheduleReleaseState(workflowDefinition.getScheduleReleaseState());\n        this.setTimeout(workflowDefinition.getTimeout());\n        this.setModifyBy(workflowDefinition.getModifyBy());\n        this.setWarningGroupId(workflowDefinition.getWarningGroupId());\n        this.setExecutionType(workflowDefinition.getExecutionType());",
                "newContent": ""
            },
            {
                "fromLine": 53,
                "toLine": 53,
                "oldContent": "    public boolean equals(Object o) {",
                "newContent": ""
            },
            {
                "fromLine": 55,
                "toLine": 55,
                "oldContent": "    }",
                "newContent": ""
            }
        ]
    },
    "extractedClasses": {}
}"