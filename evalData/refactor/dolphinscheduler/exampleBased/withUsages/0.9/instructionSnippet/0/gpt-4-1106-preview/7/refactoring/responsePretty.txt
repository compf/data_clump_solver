"{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 72,
                "toLine": 72,
                "oldContent": "public HttpResponse execute(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {",
                "newContent": "public HttpResponse execute(ExecutionRequest executionRequest) {"
            },
            {
                "fromLine": 86,
                "toLine": 86,
                "oldContent": "public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,",
                "newContent": "public HttpResponse executeTask(ExecutionRequest executionRequest, String startNodeList,"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 271,
                "toLine": 278,
                "oldContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,",
                "newContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"searchRequest\") WorkflowSearchRequest searchRequest,"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 43,
                "toLine": 73,
                "oldContent": "    private String name;\n    private Long projectCode;\n    private String host;",
                "newContent": "    private TaskHostInformation taskHostInformation;"
            },
            {
                "fromLine": 144,
                "toLine": 144,
                "oldContent": "        this.host = host;",
                "newContent": "        this.taskHostInformation.setHost(host);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 25,
                "toLine": 26,
                "oldContent": "    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "    Result createProjectParameter(ProjectParameterRequest projectParameterRequest);"
            },
            {
                "fromLine": 28,
                "toLine": 29,
                "oldContent": "    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "    Result updateProjectParameter(ProjectParameterRequest projectParameterRequest);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 70,
                "toLine": 76,
                "oldContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "        return projectParameterService.createProjectParameter(new ProjectParameterRequest(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType));"
            },
            {
                "fromLine": 89,
                "toLine": 96,
                "oldContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "        return projectParameterService.updateProjectParameter(new ProjectParameterRequest(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType));"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 51,
                "toLine": 53,
                "oldContent": "        Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterController.createProjectParameter(new ProjectParameterRequest(loginUser, 1, \"key\", \"value\", \"VARCHAR\"));"
            },
            {
                "fromLine": 62,
                "toLine": 64,
                "oldContent": "        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterController.updateProjectParameter(new ProjectParameterRequest(loginUser, 1, 1L, \"key\", \"value\", \"VARCHAR\"));"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 80,
                "toLine": 114,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\", \"VARCHAR\");",
                "newContent": "        result = projectParameterService.createProjectParameter(new ProjectParameterRequest(loginUser, projectCode, \"key1\", \"value\", \"VARCHAR\"));"
            },
            {
                "fromLine": 126,
                "toLine": 157,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\", \"VARCHAR\");",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterRequest(loginUser, projectCode, 1, \"key1\", \"value\", \"VARCHAR\"));"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 110,
                "toLine": 118,
                "oldContent": "                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_POLICY) FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,",
                "newContent": "                                 @RequestParam(value = \"scheduleConfig\") ScheduleConfig scheduleConfig,"
            },
            {
                "fromLine": 120,
                "toLine": 131,
                "oldContent": "                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,",
                "newContent": "                new ScheduleRequest(loginUser, projectCode, workflowDefinitionCode, scheduleConfig, workflowInstancePriority),"
            },
            {
                "fromLine": 336,
                "toLine": 344,
                "oldContent": "                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,",
                "newContent": "                                                         @RequestParam(value = \"scheduleConfig\") ScheduleConfig scheduleConfig,"
            },
            {
                "fromLine": 346,
                "toLine": 349,
                "oldContent": "                workflowDefinitionCode, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,",
                "newContent": "                new ScheduleRequest(loginUser, projectCode, workflowDefinitionCode, scheduleConfig, workflowInstancePriority),"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 22,
                "toLine": 49,
                "oldContent": "    private String title;\n    private String content;\n    private Integer alertGroupId;",
                "newContent": "    private AlertGroupingInfo alertGroupingInfo;"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 52,
                "toLine": 67,
                "oldContent": "    private String title;\n    private String content;\n    private Integer alertGroupId;",
                "newContent": "    private AlertGroupingInfo alertGroupingInfo;"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionRequest.java": "public class ExecutionRequest {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private ExecuteType executeType;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/dao/mapper/WorkflowSearchRequest.java": "public class WorkflowSearchRequest {\n    private String name;\n    private String host;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/dao/entity/TaskHostInformation.java": "public class TaskHostInformation {\n    private String name;\n    private Long projectCode;\n    private String host;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/api/service/ProjectParameterRequest.java": "public class ProjectParameterRequest {\n    private User loginUser;\n    private long projectCode;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleConfig.java": "public class ScheduleConfig {\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private String workerGroup;\n    private String tenantCode;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleRequest.java": "public class ScheduleRequest {\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private ScheduleConfig scheduleConfig;\n    private Priority workflowInstancePriority;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/plugin/task/api/model/AlertGroupingInfo.java": "public class AlertGroupingInfo {\n    private String title;\n    private String content;\n    private Integer alertGroupId;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/dao/entity/AlertGroupingInfo.java": "public class AlertGroupingInfo {\n    private String title;\n    private String content;\n    private Integer alertGroupId;\n\n    // Constructor, getters, and setters\n}"
    }
}"