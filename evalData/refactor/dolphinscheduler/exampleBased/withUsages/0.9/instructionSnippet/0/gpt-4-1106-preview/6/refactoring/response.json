{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 72,
                "toLine": 72,
                "oldContent": "    public HttpResponse execute(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {",
                "newContent": "    public HttpResponse execute(ExecutionRequest executionRequest) {"
            },
            {
                "fromLine": 86,
                "toLine": 86,
                "oldContent": "    public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,",
                "newContent": "    public HttpResponse executeTask(TaskExecutionRequest taskExecutionRequest,"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 271,
                "toLine": 272,
                "oldContent": "     * @param name                  name\n     * @param host                  host",
                "newContent": "     * @param queryCriteria          QueryCriteria"
            },
            {
                "fromLine": 277,
                "toLine": 278,
                "oldContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,",
                "newContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"queryCriteria\") QueryCriteria queryCriteria,"
            },
            {
                "fromLine": 280,
                "toLine": 280,
                "oldContent": "                                                              @Param(\"name\") String name,",
                "newContent": ""
            },
            {
                "fromLine": 284,
                "toLine": 284,
                "oldContent": "                                                              @Param(\"host\") String host);",
                "newContent": ""
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 43,
                "toLine": 43,
                "oldContent": "    private String name;",
                "newContent": ""
            },
            {
                "fromLine": 51,
                "toLine": 51,
                "oldContent": "    private Long projectCode;",
                "newContent": ""
            },
            {
                "fromLine": 73,
                "toLine": 73,
                "oldContent": "    private String host;",
                "newContent": ""
            },
            {
                "fromLine": 144,
                "toLine": 144,
                "oldContent": "        this.host = host;",
                "newContent": ""
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 25,
                "toLine": 26,
                "oldContent": "    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "    Result createProjectParameter(ProjectParameterRequest parameterRequest);"
            },
            {
                "fromLine": 28,
                "toLine": 29,
                "oldContent": "    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "    Result updateProjectParameter(ProjectParameterUpdateRequest parameterUpdateRequest);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 70,
                "toLine": 76,
                "oldContent": "    public Result createProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "    public Result createProjectParameter(@RequestBody ProjectParameterRequest parameterRequest) {\n        return projectParameterService.createProjectParameter(parameterRequest);"
            },
            {
                "fromLine": 89,
                "toLine": 96,
                "oldContent": "    public Result updateProjectParameter(@Parameter(hidden = true) @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                         @RequestParam(\"projectParameterName\") String projectParameterName,\n                                         @RequestParam(value = \"projectParameterValue\") String projectParameterValue,\n                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "    public Result updateProjectParameter(@RequestBody ProjectParameterUpdateRequest parameterUpdateRequest) {\n        return projectParameterService.updateProjectParameter(parameterUpdateRequest);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 51,
                "toLine": 51,
                "oldContent": "        Mockito.when(projectParameterService.createProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.any(),",
                "newContent": "        Mockito.when(projectParameterService.createProjectParameter(Mockito.any(ProjectParameterRequest.class))"
            },
            {
                "fromLine": 53,
                "toLine": 53,
                "oldContent": "        Result result = projectParameterController.createProjectParameter(loginUser, 1, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterController.createProjectParameter(new ProjectParameterRequest(loginUser, 1, \"key\", \"value\","
            },
            {
                "fromLine": 62,
                "toLine": 62,
                "oldContent": "        Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.anyLong(),",
                "newContent": "        Mockito.when(projectParameterService.updateProjectParameter(Mockito.any(ProjectParameterUpdateRequest.class))"
            },
            {
                "fromLine": 64,
                "toLine": 64,
                "oldContent": "        Result result = projectParameterController.updateProjectParameter(loginUser, 1, 1L, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterController.updateProjectParameter(new ProjectParameterUpdateRequest(loginUser, 1, 1L, \"key\", \"value\","
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 80,
                "toLine": 80,
                "oldContent": "        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterService.createProjectParameter(new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\","
            },
            {
                "fromLine": 93,
                "toLine": 93,
                "oldContent": "            result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "            result = projectParameterService.createProjectParameter(new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\","
            },
            {
                "fromLine": 101,
                "toLine": 101,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\","
            },
            {
                "fromLine": 108,
                "toLine": 108,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(new ProjectParameterRequest(loginUser, projectCode, \"key1\", \"value\","
            },
            {
                "fromLine": 114,
                "toLine": 114,
                "oldContent": "        result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.createProjectParameter(new ProjectParameterRequest(loginUser, projectCode, \"key1\", \"value\","
            },
            {
                "fromLine": 126,
                "toLine": 126,
                "oldContent": "        Result result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "        Result result = projectParameterService.updateProjectParameter(new ProjectParameterUpdateRequest(loginUser, projectCode, 1, \"key\", \"value\","
            },
            {
                "fromLine": 137,
                "toLine": 137,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterUpdateRequest(loginUser, projectCode, 1, \"key\", \"value\","
            },
            {
                "fromLine": 144,
                "toLine": 144,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterUpdateRequest(loginUser, projectCode, 1, \"key\", \"value\","
            },
            {
                "fromLine": 151,
                "toLine": 151,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterUpdateRequest(loginUser, projectCode, 1, \"key1\", \"value\","
            },
            {
                "fromLine": 157,
                "toLine": 157,
                "oldContent": "        result = projectParameterService.updateProjectParameter(loginUser, projectCode, 1, \"key1\", \"value\",",
                "newContent": "        result = projectParameterService.updateProjectParameter(new ProjectParameterUpdateRequest(loginUser, projectCode, 1, \"key1\", \"value\","
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 110,
                "toLine": 120,
                "oldContent": "    public Result createSchedule(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                 @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                 @RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_POLICY) FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,",
                "newContent": "    public Result createSchedule(@RequestBody ScheduleCreationRequest scheduleCreationRequest) {"
            },
            {
                "fromLine": 122,
                "toLine": 131,
                "oldContent": "                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,",
                "newContent": "                scheduleCreationRequest,"
            },
            {
                "fromLine": 336,
                "toLine": 346,
                "oldContent": "    public Result updateScheduleByWorkflowDefinitionCode(@Parameter(hidden = true) @RequestAttribute(value = SESSION_USER) User loginUser,\n                                                         @Parameter(name = \"projectCode\", description = \"PROJECT_CODE\", required = true) @PathVariable long projectCode,\n                                                         @PathVariable(value = \"code\") long workflowDefinitionCode,\n                                                         @RequestParam(value = \"schedule\") String schedule,\n                                                         @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                                         @RequestParam(value = \"warningGroupId\", required = false) int warningGroupId,\n                                                         @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"END\") FailureStrategy failureStrategy,\n                                                         @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                                         @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,",
                "newContent": "    public Result updateScheduleByWorkflowDefinitionCode(@RequestBody ScheduleUpdateRequest scheduleUpdateRequest) {"
            },
            {
                "fromLine": 349,
                "toLine": 349,
                "oldContent": "                workflowDefinitionCode, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,",
                "newContent": "                scheduleUpdateRequest,"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 22,
                "toLine": 26,
                "oldContent": "    private String title;\n    private String content;\n    private Integer alertGroupId;",
                "newContent": ""
            },
            {
                "fromLine": 33,
                "toLine": 45,
                "oldContent": "        this.title = title;\n        ...\n        this.alertGroupId = alertGroupId;",
                "newContent": ""
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 52,
                "toLine": 67,
                "oldContent": "    private String title;\n    ...\n    private Integer alertGroupId;",
                "newContent": "    private AlertData alertData;"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/entity/ExecutionRequest.java": "package org.apache.dolphinscheduler.api.test.entity;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ExecutionRequest {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private ExecuteType executeType;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/api/test/entity/TaskExecutionRequest.java": "package org.apache.dolphinscheduler.api.test.entity;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class TaskExecutionRequest {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private String startNodeList;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/dao/mapper/QueryCriteria.java": "package org.apache.dolphinscheduler.dao.mapper;\n\npublic class QueryCriteria {\n    private Long projectCode;\n    private String name;\n    private String host;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/api/service/ProjectParameterRequest.java": "package org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ProjectParameterRequest {\n    private User loginUser;\n    private long projectCode;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/api/service/ProjectParameterUpdateRequest.java": "package org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ProjectParameterUpdateRequest extends ProjectParameterRequest {\n    private long code;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/api/model/ScheduleCreationRequest.java": "package org.apache.dolphinscheduler.api.model;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ScheduleCreationRequest {\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workflowInstancePriority;\n    private String workerGroup;\n    private String tenantCode;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/api/model/ScheduleUpdateRequest.java": "package org.apache.dolphinscheduler.api.model;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ScheduleUpdateRequest extends ScheduleCreationRequest {\n    private long workflowDefinitionCode;\n\n    // Constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/plugin/task/api/model/AlertData.java": "package org.apache.dolphinscheduler.plugin.task.api.model;\n\npublic class AlertData {\n    private String title;\n    private String content;\n    private Integer alertGroupId;\n\n    // Constructor, getters,
    {
        "refactorings": {
            "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
                {
                    "fromLine": 43,
                    "toLine": 73,
                    "oldContent": "    private String name;\n    ...\n    private String host;",
                    "newContent": "    private TaskInstanceIdentity identity;"
                },
                {
                    "fromLine": 144,
                    "toLine": 144,
                    "oldContent": "        this.host = host;",
                    "newContent": ""
                }
            ],
            "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
                {
                    "fromLine": 86,
                    "toLine": 86,
                    "oldContent": "    public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,",
                    "newContent": "    public HttpResponse executeTask(ExecutionTaskRequest taskExecutionRequest,"
                }
            ]
        },
        "extractedClasses": {
            "org/apache/dolphinscheduler/dao/entity/TaskInstanceIdentity.java": "package org.apache.dolphinscheduler.dao.entity;\n\npublic class TaskInstanceIdentity {\n    private Long projectCode;\n    private String name;\n    private String host;\n\n    // Constructor, getters, and setters\n}",
            "org/apache/dolphinscheduler/api/test/entity/ExecutionTaskRequest.java": "package org.apache.dolphinscheduler.api.test.entity;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ExecutionTaskRequest extends ExecutionRequest {\n    private String startNodeList;\n\n    // Constructor, getters, and setters\n}"
        }
    }
   