"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 97,
                "toLine": 117,
                "oldContent": "\n    private Integer memoryMax;\n\n    private int testFlag;\n\n    public void init(TaskExecutionMetaData taskExecutionMetaData) {\n        this.taskExecutionMetaData = taskExecutionMetaData;\n    }\n\n}\n        this.taskExecutionMetaData = taskExecutionMetaData;",
                "newContent": "\n    private Integer memoryMax;\n\n    private int testFlag;\n\n    public void init(TaskExecutionMetaData taskExecutionMetaData) {\n        this.taskExecutionMetaData = taskExecutionMetaData;\n    }\n\n}"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 254,
                "toLine": 275,
                "oldContent": "     * @param workflowDefinitionCode workflowDefinitionCode\n     * @param states                states array\n     * @return workflow instance list\n     */\n\n    List<WorkflowInstance> queryByWorkflowDefinitionCodeAndStatus(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                                  @Param(\"states\") int[] states);\n\n    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(@Param(\"page\") Page<WorkflowInstance> page,\n                                                              @Param(\"workflowQuery\") WorkflowQuery workflowQuery);\n     * @param page              page\n     * @param workflowQuery     workflow query request\n     \n     /**\n    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(@Param(\"page\") Page<WorkflowInstance> page,\n                                                              @Param(\"workflowQuery\") WorkflowQuery workflowQuery);\n    /**\n     * \n     * @param workflowFilter  workflow filter request\n     * @param workflowCode    workflowCode\n     * @param model        model\n     * @param projectIds   projectIds",
                "newContent": "     * @param workflowDefinitionCode workflowDefinitionCode\n     * @param states                states array\n     * @return workflow instance list\n     */\n\n    List<WorkflowInstance> queryByWorkflowDefinitionCodeAndStatus(@Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                                  @Param(\"states\") int[] states);\n\n    /**\n     * Query workflow instance list with paging and filters\n     *\n     * @param page          Pagination page\n     * @param workflowQuery Workflow query filters\n     * @return IPage of WorkflowInstance\n     */\n    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(@Param(\"page\") Page<WorkflowInstance> page,\n                                                              @Param(\"workflowQuery\") WorkflowQuery workflowQuery);\n"
            },
            {
                "fromLine": 277,
                "toLine": 297,
                "oldContent": "    List<ExecuteStatusCount> countInstanceStateV2(\n                                                  @Param(\"startTime\") Date startTime,\n                                                  @Param(\"endTime\") Date endTime,\n                                                  @Param(\"workflowCode\") Long workflowCode,\n                                                  @Param(\"model\") Integer model,\n                                                  @Param(\"projectIds\") Set<Integer> projectIds);\n     * query process list by triggerCode\n     * @param triggerCode\n     * @return\n     */\n    List<WorkflowInstance> queryByTriggerCode(@Param(\"triggerCode\") Long triggerCode);\n}",
                "newContent": "    /**\n     * Count instance state count with different filters\n     *\n     * @param startTime    Start time for filtering\n     * @param endTime      End time for filtering\n     * @param workflowCode Workflow code for filtering\n     * @param model        Model for filtering\n     * @param projectIds   Set of project ids for filtering\n     * @return List of ExecuteStatusCount\n     */\n    List<ExecuteStatusCount> countInstanceStateV2(\n            @Param(\"startTime\") Date startTime,\n            @Param(\"endTime\") Date endTime,\n            @Param(\"workflowCode\") Long workflowCode,\n            @Param(\"model\") Integer model,\n            @Param(\"projectIds\") Set<Integer> projectIds);\n\n    /**\n     * Query workflow instance list by trigger code\n     *\n     * @param triggerCode Trigger code for filtering\n     * @return List of WorkflowInstance\n     */\n    List<WorkflowInstance> queryByTriggerCode(@Param(\"triggerCode\") Long triggerCode);\n}"
            }
        ]
    }
}"