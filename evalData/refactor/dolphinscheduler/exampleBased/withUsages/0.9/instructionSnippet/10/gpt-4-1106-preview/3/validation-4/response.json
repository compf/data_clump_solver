{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/WorkflowDefinitionLog.java": [
            {
                "fromLine": 17,
                "toLine": 72,
                "oldContent": "// Unable to refactor WorkflowDefinitionLog class automatically\n\n    private int operator;\n\n    private Date operateTime;\n\n    public WorkflowDefinitionLog() {\n        super();\n    public WorkflowDefinitionLog(WorkflowDefinition workflowDefinition) {\n        this.setCode(workflowDefinition.getCode());\n        this.setName(workflowDefinition.getName());\n        this.setVersion(workflowDefinition.getVersion());\n        this.setReleaseState(workflowDefinition.getReleaseState());\n        this.setProjectCode(workflowDefinition.getProjectCode());\n        this.setDescription(workflowDefinition.getDescription());\n        this.setGlobalParams(workflowDefinition.getGlobalParams());\n        this.setGlobalParamList(workflowDefinition.getGlobalParamList());\n        this.setGlobalParamMap(workflowDefinition.getGlobalParamMap());\n        this.setCreateTime(workflowDefinition.getCreateTime());\n        this.setUpdateTime(workflowDefinition.getUpdateTime());\n        this.setFlag(workflowDefinition.getFlag());\n        this.setUserId(workflowDefinition.getUserId());\n        this.setUserName(workflowDefinition.getUserName());\n        this.setProjectName(workflowDefinition.getProjectName());\n        this.setLocations(workflowDefinition.getLocations());\n        this.setScheduleReleaseState(workflowDefinition.getScheduleReleaseState());\n        this.setTimeout(workflowDefinition.getTimeout());\n        this.setModifyBy(workflowDefinition.getModifyBy());\n        this.setWarningGroupId(workflowDefinition.getWarningGroupId());\n        this.setExecutionType(workflowDefinition.getExecutionType());\n    }\n",
                "newContent": "public class WorkflowDefinitionLog extends WorkflowDefinition {\n\n    private int operator;\n\n    private Date operateTime;\n\n    public WorkflowDefinitionLog() {\n        super();\n    }\n\n    public WorkflowDefinitionLog(WorkflowDefinition workflowDefinition) {\n        this.setCode(workflowDefinition.getCode());\n        this.setName(workflowDefinition.getName());\n        this.setVersion(workflowDefinition.getVersion());\n        this.setReleaseState(workflowDefinition.getReleaseState());\n        this.setProjectCode(workflowDefinition.getProjectCode());\n        this.setDescription(workflowDefinition.getDescription());\n        this.setGlobalParams(workflowDefinition.getGlobalParams());\n        this.setGlobalParamList(workflowDefinition.getGlobalParamList());\n        this.setGlobalParamMap(workflowDefinition.getGlobalParamMap());\n        this.setCreateTime(workflowDefinition.getCreateTime());\n        this.setUpdateTime(workflowDefinition.getUpdateTime());\n        this.setFlag(workflowDefinition.getFlag());\n        this.setUserId(workflowDefinition.getUserId());\n        this.setUserName(workflowDefinition.getUserName());\n        this.setProjectName(workflowDefinition.getProjectName());\n        this.setLocations(workflowDefinition.getLocations());\n        this.setScheduleReleaseState(workflowDefinition.getScheduleReleaseState());\n        this.setTimeout(workflowDefinition.getTimeout());\n        this.setModifyBy(workflowDefinition.getModifyBy());\n        this.setWarningGroupId(workflowDefinition.getWarningGroupId());\n        this.setExecutionType(workflowDefinition.getExecutionType());\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        return super.equals(o);\n    }\n\n}\n"
            }
        ]
    },
    "extractedClasses": {}
}