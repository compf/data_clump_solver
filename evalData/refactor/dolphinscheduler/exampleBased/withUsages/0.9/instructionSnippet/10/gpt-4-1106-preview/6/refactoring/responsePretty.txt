"{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 62,
                "toLine": 96,
                "oldContent": "        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"id\", workflowInstanceCode);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/query-executing-workflow\", projectCode);\n        return requestClient.get(url, headers, params);\n    }\n\n    public HttpResponse execute(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"projectCode\", projectCode);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"executeType\", executeType);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/execute\", projectCode);\n        return requestClient.post(url, headers, params);\n    }\n\n    public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,\n                                    TaskDependType taskDependType) {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);\n        params.put(\"taskDependType\", taskDependType);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n\n        RequestClient requestClient = new RequestClient();",
                "newContent": "        HttpParameters parameters = new HttpParameters(loginUser, workflowInstanceCode, Constants.SESSION_ID_KEY, sessionId);\n\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/query-executing-workflow\", projectCode);\n        return requestClient.get(url, parameters.getHeaders(), parameters.getParams());\n    }\n\n    public HttpResponse execute(ExecutionRequestData requestData) {\n        HttpParameters parameters = new HttpParameters(requestData.getLoginUser(), requestData.getProjectCode(), requestData.getWorkflowInstanceId(), requestData.getExecuteType(), Constants.SESSION_ID_KEY, sessionId);\n\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/execute\", requestData.getProjectCode());\n        return requestClient.post(url, parameters.getHeaders(), parameters.getParams());\n    }\n\n    public HttpResponse executeTask(TaskExecutionRequest requestData) {\n        HttpParameters parameters = new HttpParameters(requestData.getLoginUser(), requestData.getWorkflowInstanceId(), requestData.getStartNodeList(), requestData.getTaskDependType(), Constants.SESSION_ID_KEY, sessionId);\n\n        RequestClient requestClient = new RequestClient();"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 261,
                "toLine": 294,
                "oldContent": "\n    List<WorkflowInstance> queryByWorkflowCodeVersionStatus(@Param(\"workflowDefinitionCode\") long workflowDefinitionCode,\n                                                            @Param(\"workflowDefinitionVersion\") int workflowDefinitionVersion,\n                                                            @Param(\"states\") int[] states);\n\n    /**\n     * Filter workflow instance\n     *\n     * @param page                  page\n     * @param workflowDefinitionCode workflowDefinitionCode\n     * @param name                  name\n     * @param host                  host\n     * @param startTime             startTime\n     * @param endTime               endTime\n     * @return workflow instance IPage\n     */\n    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,\n                                                              @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                              @Param(\"name\") String name,\n                                                              @Param(\"startTime\") String startTime,\n                                                              @Param(\"endTime\") String endTime,\n                                                              @Param(\"state\") Integer state,\n                                                              @Param(\"host\") String host);\n\n    /**\n     * Statistics workflow instance state v2\n     * <p>\n     * We only need project codes to determine whether the workflow instance belongs to the user or not.\n     *\n     * @param startTime    startTime\n     * @param endTime      endTime\n     * @param projectCode  projectCode\n     * @param workflowCode workflowCode",
                "newContent": "\n    List<WorkflowInstance> queryByWorkflowCodeVersionStatus(@Param(\"workflowDefinitionCode\") long workflowDefinitionCode,\n                                                            @Param(\"workflowDefinitionVersion\") int workflowDefinitionVersion,\n                                                            @Param(\"states\") int[] states);\n\n    /**\n     * Filter workflow instance\n     *\n     * @param page                  page\n     * @param workflowDefinitionCode workflowDefinitionCode\n     * @param name                  name\n     * @param host                  host\n     * @param startTime             startTime\n     * @param endTime               endTime\n     * @return workflow instance IPage\n     */\n    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,\n                                                              @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                              @Param(\"name\") String name,\n                                                              @Param(\"startTime\") String startTime,\n                                                              @Param(\"endTime\") String endTime,\n                                                              @Param(\"state\") Integer state,\n                                                              @Param(\"host\") String host);\n\n    /**\n     * Statistics workflow instance state v2\n     * <p>\n     * We only need project codes to determine whether the workflow instance belongs to the user or not.\n     *\n     * @param startTime    startTime\n     * @param endTime      endTime\n     * @param projectCode  projectCode\n     * @param workflowCode workflowCode"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 15,
                "toLine": 39,
                "oldContent": " * limitations under the License.\n */\n\npackage org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.api.utils.Result;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic interface ProjectParameterService {\n\n    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);\n\n    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);\n\n    Result deleteProjectParametersByCode(User loginUser, long projectCode, long code);\n\n    Result batchDeleteProjectParametersByCodes(User loginUser, long projectCode, String codes);\n\n    Result queryProjectParameterListPaging(User loginUser, long projectCode, Integer pageSize, Integer pageNo,\n                                           String searchVal, String projectParameterDataType);\n\n    Result queryProjectParameterByCode(User loginUser, long projectCode, long code);\n}",
                "newContent": " * limitations under the License.\n */\n\npackage org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.api.utils.Result;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic interface ProjectParameterService {\n\n    Result createProjectParameter(ProjectParameterRequest projectParameterRequest);\n\n    Result updateProjectParameter(ProjectParameterRequest projectParameterRequest);\n\n    Result deleteProjectParametersByCode(User loginUser, long projectCode, long code);\n\n    Result batchDeleteProjectParametersByCodes(User loginUser, long projectCode, String codes);\n\n    Result queryProjectParameterListPaging(User loginUser, long projectCode, Integer pageSize, Integer pageNo,\n                                           String searchVal, String projectParameterDataType);\n\n    Result queryProjectParameterByCode(User loginUser, long projectCode, long code);\n}"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/pages/workflow/HttpParameters.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class HttpParameters {\n    private Map<String, Object> params;\n    private Map<String, String> headers;\n\n    public HttpParameters(User loginUser, long workflowInstanceCode, String sessionIdKey, String sessionId) {\n        params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"id\", workflowInstanceCode);\n        headers = new HashMap<>();\n        headers.put(sessionIdKey, sessionId);\n    }\n\n    public Map<String, Object> getParams() {\n        return params;\n    }\n\n    public Map<String, String> getHeaders() {\n        return headers;\n    }\n}",
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionRequestData.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.enums.ExecuteType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ExecutionRequestData {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private ExecuteType executeType;\n\n    public ExecutionRequestData(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n        this.workflowInstanceId = workflowInstanceId;\n        this.executeType = executeType;\n    }\n\n    public User getLoginUser() {\n        return loginUser;\n    }\n\n    public long getProjectCode() {\n        return projectCode;\n    }\n\n    public int getWorkflowInstanceId() {\n        return workflowInstanceId;\n    }\n\n    public ExecuteType getExecuteType() {\n        return executeType;\n    }\n}",
        "org/apache/dolphinscheduler/api/test/pages/workflow/TaskExecutionRequest.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.common.enums.TaskDependType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class TaskExecutionRequest {\n    private User loginUser;\n    private long workflowInstanceId;\n    private String startNodeList;\n    private TaskDependType taskDependType;\n\n    public TaskExecutionRequest(User loginUser, long workflowInstanceId, String startNodeList, TaskDependType taskDependType) {\n        this.loginUser = loginUser;\n        this.workflowInstanceId = workflowInstanceId;\n        this.startNodeList = startNodeList;\n        this.taskDependType = taskDependType;\n    }\n\n    public User getLoginUser() {\n        return loginUser;\n    }\n\n    public long getWorkflowInstanceId() {\n        return workflowInstanceId;\n    }\n\n    public String getStartNodeList() {\n        return startNodeList;\n    }\n\n    public TaskDependType getTaskDependType() {\n        return taskDependType;\n    }\n}",
        "org/apache/dolphinscheduler/api/service/ProjectParameterRequest.java": "package org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ProjectParameterRequest {\n    private User loginUser;\n    private long projectCode;\n    private long parameterCode;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    public ProjectParameterRequest(User loginUser, long projectCode, String projectParameterName,\n                                   String projectParameterValue, String projectParameterDataType) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n        this.projectParameterName = projectParameterName;\n        this.projectParameterValue = projectParameterValue;\n        this.projectParameterDataType = projectParameterDataType;\n    }\n\n    public User getLoginUser() {\n        return loginUser;\n    }\n\n    public long getProjectCode() {\n        return projectCode;\n    }\n\n    public long getParameterCode() {\n        return parameterCode;\n    }\n\n    public String getProjectParameterName() {\n        return projectParameterName;\n    }\n\n    public String getProjectParameterValue() {\n        return projectParameterValue;\n    }\n\n    public String getProjectParameterDataType() {\n        return projectParameterDataType;\n    }\n\n    public void setParameterCode(long parameterCode) {\n        this.parameterCode = parameterCode;\n    }\n}"
    }
}"