"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 57,
                "toLine": 77,
                "oldContent": "@TableField(value = \"project_code\")\n    private Long projectCode;",
                "newContent": "// @TableField(value = \"project_code\")\n    // private Long projectCode;"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 252,
                "toLine": 282,
                "oldContent": "List<WorkflowInstance> queryByWorkflowCodeVersionStatus(@Param(\"workflowCodeVersionStatus\") WorkflowCodeVersionStatus workflowCodeVersionStatus);\n\n    /**\n     * Filter workflow instance\n     *\n     * @param page                  page\n     * @param workflowInstanceFilter workflowInstanceFilter\n     * @return workflow instance IPage\n     */\n    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"workflowInstanceFilter\") WorkflowInstanceFilter workflowInstanceFilter);\n",
                "newContent": "// List<WorkflowInstance> queryByWorkflowCodeVersionStatus(@Param(\"workflowCodeVersionStatus\") WorkflowCodeVersionStatus workflowCodeVersionStatus);\n\n    /**\n     * Filter workflow instance\n     *\n     * @param page                  page\n     * @param workflowInstanceFilter workflowInstanceFilter\n     * @return workflow instance IPage\n     */\n    // IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n    //                                                           @Param(\"workflowInstanceFilter\") WorkflowInstanceFilter workflowInstanceFilter);\n"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/WorkflowInstance.java": [
            {
                "fromLine": 162,
                "toLine": 183,
                "oldContent": "public WorkflowInstance(WorkflowDefinition workflowDefinition) {\n        this.workflowDefinition = workflowDefinition;\n        // todo: the name is not unique\n        this.name = String.join(\"-\",\n                workflowDefinition.getName(),\n                String.valueOf(workflowDefinition.getVersion()),\n                DateUtils.getCurrentTimeStamp());\n    }\n",
                "newContent": "// public WorkflowInstance(WorkflowDefinition workflowDefinition) {\n    //     this.workflowDefinition = workflowDefinition;\n    //     // todo: the name is not unique\n    //     this.name = String.join(\"-\",\n    //             workflowDefinition.getName(),\n    //             String.valueOf(workflowDefinition.getVersion()),\n    //             DateUtils.getCurrentTimeStamp());\n    // }\n"
            },
            {
                "fromLine": 211,
                "toLine": 238,
                "oldContent": "public void setStateWithDesc(WorkflowExecutionStatus state, String stateDesc) {\n        this.setState(state);\n        if (StringUtils.isEmpty(this.getStateHistory())) {\n            stateDescList = new ArrayList<>();\n        } else if (stateDescList == null) {\n            stateDescList = JSONUtils.toList(this.getStateHistory(), StateDesc.class);\n        }\n        stateDescList.add(new StateDesc(new Date(), state, stateDesc));\n        this.setStateHistory(JSONUtils.toJsonString(stateDescList));\n    }\n\n    @Data\n    @NoArgsConstructor\n    @AllArgsConstructor\n    public static class StateDesc {\n\n        Date time;\n        WorkflowExecutionStatus state;\n        String desc;",
                "newContent": "public void setStateWithDesc(WorkflowExecutionStatus state, String stateDesc) {\n        // this.setState(state);\n        if (StringUtils.isEmpty(this.getStateHistory())) {\n            stateDescList = new ArrayList<>();\n        } else if (stateDescList == null) {\n            stateDescList = JSONUtils.toList(this.getStateHistory(), StateDesc.class);\n        }\n        stateDescList.add(new StateDesc(new Date(), state, stateDesc));\n        // this.setStateHistory(JSONUtils.toJsonString(stateDescList));\n    }\n\n    @Data\n    @NoArgsConstructor\n    @AllArgsConstructor\n    public static class StateDesc {\n\n        Date time;\n        WorkflowExecutionStatus state;\n        String desc;"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/WorkflowTaskRelation.java": [
            {
                "fromLine": 91,
                "toLine": 122,
                "oldContent": "public WorkflowTaskRelation(WorkflowTaskRelationLog processTaskRelationLog) {\n        this.name = processTaskRelationLog.getName();\n        this.workflowDefinitionVersion = processTaskRelationLog.getWorkflowDefinitionVersion();\n        this.projectCode = processTaskRelationLog.getProjectCode();\n        this.workflowDefinitionCode = processTaskRelationLog.getWorkflowDefinitionCode();\n        this.preTaskCode = processTaskRelationLog.getPreTaskCode();\n        this.preTaskVersion = processTaskRelationLog.getPreTaskVersion();\n        this.postTaskCode = processTaskRelationLog.getPostTaskCode();\n        this.postTaskVersion = processTaskRelationLog.getPostTaskVersion();\n        this.conditionType = processTaskRelationLog.getConditionType();\n        this.conditionParams = processTaskRelationLog.getConditionParams();\n\n        this.createTime = processTaskRelationLog.getCreateTime();\n        this.updateTime = new Date();\n    }\n",
                "newContent": "// public WorkflowTaskRelation(WorkflowTaskRelationLog processTaskRelationLog) {\n    //     this.name = processTaskRelationLog.getName();\n    //     this.workflowDefinitionVersion = processTaskRelationLog.getWorkflowDefinitionVersion();\n    //     this.projectCode = processTaskRelationLog.getProjectCode();\n    //     this.workflowDefinitionCode = processTaskRelationLog.getWorkflowDefinitionCode();\n    //     this.preTaskCode = processTaskRelationLog.getPreTaskCode();\n    //     this.preTaskVersion = processTaskRelationLog.getPreTaskVersion();\n    //     this.postTaskCode = processTaskRelationLog.getPostTaskCode();\n    //     this.postTaskVersion = processTaskRelationLog.getPostTaskVersion();\n    //     this.conditionType = processTaskRelationLog.getConditionType();\n    //     this.conditionParams = processTaskRelationLog.getConditionParams();\n\n    //     this.createTime = processTaskRelationLog.getCreateTime();\n    //     this.updateTime = new Date();\n    // }\n"
            }
        ]
    },
    "extractedClasses": {}
}"