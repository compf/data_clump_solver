"{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 62,
                "toLine": 96,
                "oldContent": "        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"id\", workflowInstanceCode);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/query-executing-workflow\", projectCode);\n        return requestClient.get(url, headers, params);\n    }\n\n    public HttpResponse execute(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"projectCode\", projectCode);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"executeType\", executeType);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/execute\", projectCode);\n        return requestClient.post(url, headers, params);\n    }\n\n    public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,\n                                    TaskDependType taskDependType) {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);\n        params.put(\"taskDependType\", taskDependType);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n\n        RequestClient requestClient = new RequestClient();",
                "newContent": "        ExecutorRequest executorRequest = new ExecutorRequest(loginUser, workflowInstanceCode);\n        ExecutorHeaders executorHeaders = new ExecutorHeaders(sessionId);\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/query-executing-workflow\", projectCode);\n        return requestClient.get(url, executorHeaders.getHeadersMap(), executorRequest.getParamsMap());\n    }\n\n    public HttpResponse execute(ExecutorRequest executorRequest) {\n        ExecutorHeaders executorHeaders = new ExecutorHeaders(sessionId);\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/execute\", executorRequest.getProjectCode());\n        return requestClient.post(url, executorHeaders.getHeadersMap(), executorRequest.getParamsMap());\n    }\n\n    public HttpResponse executeTask(ExecutorRequest executorRequest) {\n        ExecutorHeaders executorHeaders = new ExecutorHeaders(sessionId);\n        RequestClient requestClient = new RequestClient();"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 261,
                "toLine": 294,
                "oldContent": "\n    List<WorkflowInstance> queryByWorkflowCodeVersionStatus(@Param(\"workflowDefinitionCode\") long workflowDefinitionCode,\n                                                            @Param(\"workflowDefinitionVersion\") int workflowDefinitionVersion,\n                                                            @Param(\"states\") int[] states);\n\n    /**\n     * Filter workflow instance\n     *\n     * @param page                  page\n     * @param workflowDefinitionCode workflowDefinitionCode\n     * @param name                  name\n     * @param host                  host\n     * @param startTime             startTime\n     * @param endTime               endTime\n     * @return workflow instance IPage\n     */\n    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"projectCode\") Long projectCode,\n                                                              @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                              @Param(\"name\") String name,\n                                                              @Param(\"startTime\") String startTime,\n                                                              @Param(\"endTime\") String endTime,\n                                                              @Param(\"state\") Integer state,\n                                                              @Param(\"host\") String host);\n\n    /**\n     * Statistics workflow instance state v2\n     * <p>\n     * We only need project codes to determine whether the workflow instance belongs to the user or not.\n     *\n     * @param startTime    startTime\n     * @param endTime      endTime\n     * @param projectCode  projectCode\n     * @param workflowCode workflowCode",
                "newContent": "\n    List<WorkflowInstance> queryByWorkflowCodeVersionStatus(@Param(\"workflowCodeVersionStatus\") WorkflowCodeVersionStatus workflowCodeVersionStatus);\n\n    /**\n     * Filter workflow instance\n     *\n     * @param page                  page\n     * @param workflowInstanceFilter workflowInstanceFilter\n     * @return workflow instance IPage\n     */\n    IPage<WorkflowInstance> queryWorkflowInstanceListV2Paging(Page<WorkflowInstance> page,\n                                                              @Param(\"workflowInstanceFilter\") WorkflowInstanceFilter workflowInstanceFilter);\n\n    /**\n     * Statistics workflow instance state v2\n     * <p>\n     * We only need project codes to determine whether the workflow instance belongs to the user or not.\n     *\n     * @param workflowStateStatisticsFilter workflowStateStatisticsFilter"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 42,
                "toLine": 77,
                "oldContent": "@TableName(\"t_ds_alert\")\npublic class Alert {\n\n    @TableId(value = \"id\", type = IdType.AUTO)\n    private Integer id;\n\n    @TableField(value = \"sign\")\n    private String sign;\n\n    @TableField(value = \"title\")\n    private String title;\n\n    @TableField(value = \"content\")\n    private String content;\n\n    @TableField(value = \"alert_status\")\n    private AlertStatus alertStatus;\n\n    @TableField(value = \"warning_type\")\n    private WarningType warningType;\n\n    @TableField(value = \"log\")\n    private String log;\n\n    @TableField(\"alertgroup_id\")\n    private Integer alertGroupId;\n\n    @TableField(\"create_time\")\n    private Date createTime;\n\n    @TableField(\"update_time\")\n    private Date updateTime;\n\n    @TableField(\"project_code\")\n    private Long projectCode;\n",
                "newContent": "@TableName(\"t_ds_alert\")\npublic class Alert {\n\n    @TableId(value = \"id\", type = IdType.AUTO)\n    private Integer id;\n\n    @TableField(value = \"sign\")\n    private String sign;\n\n    private TaskAlertInfo taskAlertInfo;\n\n    @TableField(value = \"alert_status\")\n    private AlertStatus alertStatus;\n\n    @TableField(value = \"warning_type\")\n    private WarningType warningType;\n\n    @TableField(value = \"log\")\n    private String log;\n\n    @TableField(\"create_time\")\n    private Date createTime;\n\n    @TableField(\"update_time\")\n    private Date updateTime;\n\n    @TableField(\"project_code\")\n    private Long projectCode;\n"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorRequest.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ExecutorRequest {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private ExecuteType executeType;\n\n    public ExecutorRequest(User loginUser, long projectCode) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n    }\n\n    public Map<String, Object> getParamsMap() {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"projectCode\", projectCode);\n        return params;\n    }\n\n    public long getProjectCode() {\n        return projectCode;\n    }\n}\n",
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorHeaders.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.test.core.Constants;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ExecutorHeaders {\n    private String sessionId;\n\n    public ExecutorHeaders(String sessionId) {\n        this.sessionId = sessionId;\n    }\n\n    public Map<String, String> getHeadersMap() {\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n        return headers;\n    }\n}\n",
        "org/apache/dolphinscheduler/dao/mapper/WorkflowCodeVersionStatus.java": "package org.apache.dolphinscheduler.dao.mapper;\n\npublic class WorkflowCodeVersionStatus {\n    private long workflowDefinitionCode;\n    private int workflowDefinitionVersion;\n    private int[] states;\n\n    public WorkflowCodeVersionStatus(long workflowDefinitionCode, int workflowDefinitionVersion, int[] states) {\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.workflowDefinitionVersion = workflowDefinitionVersion;\n        this.states = states;\n    }\n\n    public long getWorkflowDefinitionCode() {\n        return workflowDefinitionCode;\n    }\n\n    public int getWorkflowDefinitionVersion() {\n        return workflowDefinitionVersion;\n    }\n\n    public int[] getStates() {\n        return states;\n    }\n}\n",
        "org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceFilter.java": "package org.apache.dolphinscheduler.dao.mapper;\n\nimport java.util.Date;\n\npublic class WorkflowInstanceFilter {\n    private Long projectCode;\n    private Long workflowDefinitionCode;\n    private String name;\n    private Date startTime;\n    private Date endTime;\n    private Integer state;\n    private String host;\n\n    public WorkflowInstanceFilter(Long projectCode, Long workflowDefinitionCode, String name, Date startTime, Date endTime, Integer state, String host) {\n        this.projectCode = projectCode;\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.name = name;\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.state = state;\n        this.host = host;\n    }\n\n    public Long getProjectCode() {\n        return projectCode;\n    }\n\n    public Long getWorkflowDefinitionCode() {\n        return workflowDefinitionCode;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Date getStartTime() {\n        return startTime;\n    }\n\n    public Date getEndTime() {\n        return endTime;\n    }\n\n    public Integer getState() {\n        return state;\n    }\n\n    public String getHost() {\n        return host;\n    }\n}\n",
        "org/apache/dolphinscheduler/dao/mapper/WorkflowStateStatisticsFilter.java": "package org.apache.dolphinscheduler.dao.mapper;\n\nimport java.util.Date;\n\npublic class WorkflowStateStatisticsFilter {\n    private Date startTime;\n    private Date endTime;\n    private Long projectCode;\n    private Long workflowCode;\n\n    public WorkflowStateStatisticsFilter(Date startTime, Date endTime, Long projectCode, Long workflowCode) {\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.projectCode = projectCode;\n        this.workflowCode = workflowCode;\n    }\n\n    public Date getStartTime() {\n        return startTime;\n    }\n\n    public Date getEndTime() {\n        return endTime;\n    }\n\n    public Long getProjectCode() {\n        return projectCode;\n    }\n\n    public Long getWorkflowCode() {\n        return workflowCode;\n    }\n}\n"
    }
}"