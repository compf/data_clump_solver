"{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/WorkflowInstanceServiceImpl.java": [
            {
                "fromLine": 399,
                "toLine": 401,
                "oldContent": "                workflowInstance.getName(),\n                workflowInstanceQueryRequest.getStartTime(),\n                workflowInstanceQueryRequest.getEndTime(),",
                "newContent": "                workflowInstance.getName(),\n                DateUtils.stringToDate(workflowInstanceQueryRequest.getStartTime()),\n                DateUtils.stringToDate(workflowInstanceQueryRequest.getEndTime()),"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 74,
                "toLine": 76,
                "oldContent": "                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.createProjectParameter(request);",
                "newContent": "                                         @RequestParam(value = \"projectParameterDataType\", defaultValue = \"VARCHAR\") String projectParameterDataType) {\n        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);"
            },
            {
                "fromLine": 94,
                "toLine": 96,
                "oldContent": "                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        ProjectParameterRequest request = new ProjectParameterRequest(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.updateProjectParameter(request);",
                "newContent": "                                         @RequestParam(value = \"projectParameterDataType\") String projectParameterDataType) {\n        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);"
            }
        ]
    },
    "extractedClasses": {}
}"