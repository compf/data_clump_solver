{
    "refactorings": {
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 71,
                "toLine": 73,
                "oldContent": "@RequestParam(\"projectParameterName\") String projectParameterName) {\n        return projectParameterService.createProjectParameter(request);",
                "newContent": "@RequestParam(\"projectParameterName\") String projectParameterName) {\n        return projectParameterService.createProjectParameter(request);"
            }
        ],
        "/root/data_clump_solver/cloned_projects/dolphinscheduler/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 111,
                "toLine": 121,
                "oldContent": "@RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = DEFAULT_WARNING_TYPE) WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = DEFAULT_NOTIFY_GROUP_ID) int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = DEFAULT_FAILURE_POLICY) FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = DEFAULT_WORKFLOW_INSTANCE_PRIORITY) Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.insertSchedule(request);",
                "newContent": "@RequestParam(value = \"workflowDefinitionCode\") long workflowDefinitionCode,\n                                 @RequestParam(value = \"schedule\") String schedule,\n                                 @RequestParam(value = \"warningType\", required = false, defaultValue = \"" 	,		"DEFAULT_WARNING_TYPE\") WarningType warningType,\n                                 @RequestParam(value = \"warningGroupId\", required = false, defaultValue = \"" 		:		"DEFAULT_NOTIFY_GROUP_ID\") int warningGroupId,\n                                 @RequestParam(value = \"failureStrategy\", required = false, defaultValue = \"" 		,		"DEFAULT_FAILURE_POLICY\") FailureStrategy failureStrategy,\n                                 @RequestParam(value = \"workerGroup\", required = false, defaultValue = \"" 		:		"default\") String workerGroup,\n                                 @RequestParam(value = \"tenantCode\", required = false, defaultValue = \"" 		,		"default\") String tenantCode,\n                                 @RequestParam(value = \"environmentCode\", required = false, defaultValue = \"" 	:		"-1\") Long environmentCode,\n                                 @RequestParam(value = \"workflowInstancePriority\", required = false, defaultValue = \"" 	,		"DEFAULT_WORKFLOW_INSTANCE_PRIORITY\") Priority workflowInstancePriority) {\n        Map<String, Object> result = schedulerService.insertSchedule(request);"
           		:		"}]}"
            }
        ]
    },
    "extractedClasses": {}
}