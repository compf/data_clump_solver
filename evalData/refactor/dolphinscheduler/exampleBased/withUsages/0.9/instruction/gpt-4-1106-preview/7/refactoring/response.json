
{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 33,
                "toLine": 38,
                "oldContent": "params.put(\"loginUser\", loginUser);\n        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);\n        params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);",
                "newContent": "ExecutionRequest executionRequest = new ExecutionRequest(loginUser, workflowDefinitionCode, scheduleTime, failureStrategy, warningType, null, null, null);\n        Map<String, Object> params = executionRequest.toMap();"            
            },
            {
                "fromLine": 41,
                "toLine": 47,
                "oldContent": "Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"id\", workflowInstanceCode);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/query-executing-workflow\", projectCode);",
                "newContent": "ExecutionRequest executionRequest = new ExecutionRequest(loginUser, null, null, null, null, null, workflowInstanceCode, null);\n        Map<String, Object> params = executionRequest.toMap();\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/query-executing-workflow\", projectCode);"               
            },
            {
                "fromLine": 82,
                "toLine": 88,
                "oldContent": "params.put(\"loginUser\", loginUser);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);\n        params.put(\"taskDependType\", taskDependType);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n\n",
                "newContent": "ExecutionRequest executionRequest = new ExecutionRequest(loginUser, null, null, null, null, startNodeList, workflowInstanceId, taskDependType);\n        Map<String, Object> params = executionRequest.toMap();\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);"                
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/pages/workflow/ExecutionRequest.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.api.test.entity.User;\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.TaskDependType;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ExecutionRequest {\n\n    private final User loginUser;\n    private final Long workflowDefinitionCode;\n    private final String scheduleTime;\n    private final FailureStrategy failureStrategy;\n    private final WarningType warningType;\n    private final String startNodeList;\n    private final Integer workflowInstanceId;\n    private final TaskDependType taskDependType;\n\n    public ExecutionRequest(User loginUser,\n                           Long workflowDefinitionCode,\n                           String scheduleTime,\n                           FailureStrategy failureStrategy,\n                           WarningType warningType,\n                           String startNodeList,\n                           Integer workflowInstanceId,\n                           TaskDependType taskDependType) {\n        this.loginUser = loginUser;\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.scheduleTime = scheduleTime;\n        this.failureStrategy = failureStrategy;\n        this.warningType = warningType;\n        this.startNodeList = startNodeList;\n        this.workflowInstanceId = workflowInstanceId;\n        this.taskDependType = taskDependType;\n    }\n\n    public Map<String, Object> toMap() {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        if (workflowDefinitionCode != null) {\n            params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        }\n        if (scheduleTime != null) {\n            params.put(\"scheduleTime\", scheduleTime);\n        }\n        if (failureStrategy != null) {\n            params.put(\"failureStrategy\", failureStrategy);\n        }\n        if (warningType != null) {\n            params.put(\"warningType\", warningType);\n        }\n        if (startNodeList != null) {\n            params.put(\"startNodeList\", startNodeList);\n        }\n        if (workflowInstanceId != null) {\n            params.put(\"workflowInstanceId\", workflowInstanceId);\n        }\n        if (taskDependType != null) {\n            params.put(\"taskDependType\", taskDependType);\n        }\n        return params;\n    }\n}"
    }
}
