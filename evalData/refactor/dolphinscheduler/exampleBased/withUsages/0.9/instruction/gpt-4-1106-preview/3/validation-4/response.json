{
    "refactorings": {
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 77,
                "toLine": 77,
                "oldContent": "        return projectParameterService.createProjectParameter(parameter);",
                "newContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);"
            },
            {
                "fromLine": 124,
                "toLine": 134,
                "oldContent": "        ScheduleRequest scheduleRequest = new ScheduleRequest(loginUser, projectCode, workflowDefinitionCode,\n                schedule, warningType, warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        Map<String, Object> result = schedulerService.insertSchedule(scheduleRequest);",
                "newContent": "                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 24,
                "toLine": 27,
                "oldContent": "import org.apache.dolphinscheduler.api.dto.ProjectParameterRequest;\n    Result createProjectParameter(ProjectParameterRequest request);",
                "newContent": ""
            },
            {
                "fromLine": 29,
                "toLine": 29,
                "oldContent": "    Result createProjectParameter(ProjectParameterRequest request);",
                "newContent": "    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);"
            }
        ]
    },
    "extractedClasses": {
        
    }
}