"
{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 98,
                "toLine": 109,
                "oldContent": "public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,\n                                    TaskDependType taskDependType) {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);\n        params.put(\"taskDependType\", taskDependType);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/execute-task\", projectCode);\n        return requestClient.post(url, headers, params);\n    }",
                "newContent": "public HttpResponse executeTask(User loginUser, long projectCode, TaskExecutionRequest taskExecutionRequest) {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowInstanceId\", taskExecutionRequest.getWorkflowInstanceId());\n        params.put(\"startNodeList\", taskExecutionRequest.getStartNodeList());\n        params.put(\"taskDependType\", taskExecutionRequest.getTaskDependType());\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);\n\n        RequestClient requestClient = new RequestClient();\n        String url = String.format(\"/projects/%s/executors/execute-task\", projectCode);\n        return requestClient.post(url, headers, params);\n    }"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 36,
                "toLine": 57,
                "oldContent": "public class Alert {\n\n    @TableId(value = \"id\", type = IdType.AUTO)\n    private Integer id;\n\n    @TableField(value = \"sign\")\n    private String sign;\n\n    @TableField(value = \"title\")\n    private String title;\n\n    @TableField(value = \"content\")\n    private String content;\n\n    @TableField(value = \"alert_status\")\n    private AlertStatus alertStatus;\n\n    @TableField(value = \"warning_type\")\n    private WarningType warningType;\n\n    @TableField(value = \"log\")\n    private String log;\n\n    @TableField(\"alertgroup_id\")\n    private Integer alertGroupId;",
                "newContent": "public class Alert {\n\n    @TableId(value = \"id\", type = IdType.AUTO)\n    private Integer id;\n\n    @TableField(value = \"sign\")\n    private String sign;\n\n    private TaskAlertInfo taskAlertInfo;\n\n    @TableField(value = \"alert_status\")\n    private AlertStatus alertStatus;\n\n    @TableField(value = \"warning_type\")\n    private WarningType warningType;\n\n    @TableField(value = \"log\")\n    private String log;\n\n    @TableField(\"alertgroup_id\")\n    private Integer alertGroupId;"
            }
        ]
    },
    "extractedClasses": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/TaskExecutionRequest.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.common.enums.TaskDependType;\n\npublic class TaskExecutionRequest {\n    private int workflowInstanceId;\n    private String startNodeList;\n    private TaskDependType taskDependType;\n\n    // Getters and setters\n    public int getWorkflowInstanceId() { return workflowInstanceId; }\n\n    public void setWorkflowInstanceId(int workflowInstanceId) { this.workflowInstanceId = workflowInstanceId; }\n\n    public String getStartNodeList() { return startNodeList; }\n\n    public void setStartNodeList(String startNodeList) { this.startNodeList = startNodeList; }\n\n    public TaskDependType getTaskDependType() { return taskDependType; }\n\n    public void setTaskDependType(TaskDependType taskDependType) { this.taskDependType = taskDependType; }\n}"
    }
}
"