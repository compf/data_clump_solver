"{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 47,
                "toLine": 60,
                "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,\n                                              long projectCode,\n                                              long workflowDefinitionCode,\n                                              String scheduleTime,\n                                              FailureStrategy failureStrategy,\n                                              WarningType warningType) {\n        // method implementation\n    }",
                "newContent": "public HttpResponse startWorkflowInstance(ExecutorParameter executorParameter) {\n        // method implementation using ExecutorParameter\n    }"
            },
            {
                "fromLine": 62,
                "toLine": 73,
                "oldContent": "public HttpResponse queryExecutingWorkflow(User loginUser, long projectCode, long workflowInstanceCode) {\n        // method implementation\n    }",
                "newContent": "public HttpResponse queryExecutingWorkflow(QueryParameter queryParameter) {\n        // method implementation using QueryParameter\n    }"
            },
            {
                "fromLine": 75,
                "toLine": 84,
                "oldContent": "public HttpResponse execute(User loginUser, long projectCode, int workflowInstanceId, ExecuteType executeType) {\n        // method implementation\n    }",
                "newContent": "public HttpResponse execute(ExecuteParameter executeParameter) {\n        // method implementation using ExecuteParameter\n    }"
            },
            {
                "fromLine": 86,
                "toLine": 97,
                "oldContent": "public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,\n                                    TaskDependType taskDependType) {\n        // method implementation\n    }",
                "newContent": "public HttpResponse executeTask(ExecuteTaskParameter executeTaskParameter) {\n        // method implementation using ExecuteTaskParameter\n    }"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 223,
                "toLine": 231,
                "oldContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,\n                                                            @Param(\"projectCode\") Long projectCode,\n                                                            @Param(\"workflowDefinitionCode\") Long workflowDefinitionCode,\n                                                            @Param(\"searchVal\") String searchVal,\n                                                            @Param(\"executorName\") String executorName,\n                                                            @Param(\"states\") int[] statusArray,\n                                                            @Param(\"host\") String host,\n                                                            @Param(\"startTime\") Date startTime,\n                                                            @Param(\"endTime\") Date endTime);",
                "newContent": "IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,\n                                                            WorkflowInstanceQuery workflowInstanceQuery);"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 65,
                "toLine": 67,
                "oldContent": "public void init(String host, Date startTime, String executePath) {\n        this.host = host;\n        this.startTime = startTime;",
                "newContent": "public void init(TaskExecutionInitialization taskExecutionInitialization) {\n        this.host = taskExecutionInitialization.getHost();\n        this.startTime = taskExecutionInitialization.getStartTime();"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 9,
                "toLine": 9,
                "oldContent": "",
                "newContent": "Result createProjectParameter(ProjectParameterRequest projectParameterRequest);"
            },
            {
                "fromLine": 11,
                "toLine": 13,
                "oldContent": "Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "Result updateProjectParameter(ProjectParameterRequest projectParameterRequest);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 72,
                "toLine": 79,
                "oldContent": "return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "ProjectParameterRequest projectParameterRequest = new ProjectParameterRequest(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\nreturn projectParameterService.createProjectParameter(projectParameterRequest);"
            },
            {
                "fromLine": 95,
                "toLine": 102,
                "oldContent": "return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "ProjectParameterRequest projectParameterRequest = new ProjectParameterRequest(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);\nreturn projectParameterService.updateProjectParameter(projectParameterRequest);"
            }
        ]
    },
    "extractedClasses": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/entity/ExecutorParameter.java": "public class ExecutorParameter {\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String scheduleTime;\n    private FailureStrategy failureStrategy;\n    private WarningType warningType;\n\n    // Constructor, getters and setters\n}",
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/entity/QueryParameter.java": "public class QueryParameter {\n    private User loginUser;\n    private long projectCode;\n    private long workflowInstanceCode;\n\n    // Constructor, getters and setters\n}",
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/entity/ExecuteParameter.java": "public class ExecuteParameter {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private ExecuteType executeType;\n\n    // Constructor, getters and setters\n}",
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/entity/ExecuteTaskParameter.java": "public class ExecuteTaskParameter {\n    private User loginUser;\n    private long projectCode;\n    private int workflowInstanceId;\n    private String startNodeList;\n    private TaskDependType taskDependType;\n\n    // Constructor, getters and setters\n}",
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/WorkflowInstanceQuery.java": "public class WorkflowInstanceQuery {\n    private Long projectCode;\n    private Long workflowDefinitionCode;\n    private String searchVal;\n    private String executorName;\n    private int[] statusArray;\n    private String host;\n    private Date startTime;\n    private Date endTime;\n\n    // Constructor, getters and setters\n}",
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskExecutionInitialization.java": "public class TaskExecutionInitialization {\n    private String host;\n    private Date startTime;\n    private String executePath;\n\n    // Constructor, getters and setters\n}",
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterRequest.java": "public class ProjectParameterRequest {\n    private User loginUser;\n    private long projectCode;\n    private long code;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    public ProjectParameterRequest(User loginUser, long projectCode, String projectParameterName, String projectParameterValue, String projectParameterDataType) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n        this.projectParameterName = projectParameterName;\n        this.projectParameterValue = projectParameterValue;\n        this.projectParameterDataType = projectParameterDataType;\n    }\n\n    public ProjectParameterRequest(User loginUser, long projectCode, long code, String projectParameterName, String projectParameterValue, String projectParameterDataType) {\n        this(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\n        this.code = code;\n    }\n\n    // Getters and Setters\n}"
    }
}"