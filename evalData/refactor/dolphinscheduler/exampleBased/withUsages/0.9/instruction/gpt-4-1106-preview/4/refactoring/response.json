
{
    "refactorings":{
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 45,
                "toLine": 49,
                "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,\n                                              long projectCode,\n                                              long workflowDefinitionCode,\n                                              String scheduleTime,\n                                              FailureStrategy failureStrategy,",
                "newContent": "public HttpResponse startWorkflowInstance(StartWorkflowInstanceParams params,"
            },
            {
                "fromLine": 50,
                "toLine": 54,
                "oldContent": "                                              WarningType warningType) {\n        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);",
                "newContent": "                                              ) {\n        Map<String, Object> paramMap = new HashMap<>();\n        paramMap.put(\"loginUser\", params.getLoginUser());\n        paramMap.put(\"workflowDefinitionCode\", params.getWorkflowDefinitionCode());\n        paramMap.put(\"scheduleTime\", params.getScheduleTime());"
            },
            {
                "fromLine": 55,
                "toLine": 57,
                "oldContent": "        params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);\n        Map<String, String> headers = new HashMap<>();",
                "newContent": "        paramMap.put(\"failureStrategy\", params.getFailureStrategy());\n        paramMap.put(\"warningType\", params.getWarningType());\n        Map<String, String> headers = new HashMap<>();"
            },
            {
                "fromLine": 62,
                "toLine": 62,
                "oldContent": "        return requestClient.post(url, headers, params);",
                "newContent": "        return requestClient.post(url, headers, paramMap);"
            }
        ]
    },
    "extractedClasses":{
        "org/apache/dolphinscheduler/api/test/pages/workflow/StartWorkflowInstanceParams.java": 
        "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class StartWorkflowInstanceParams {\n\n    private User loginUser;\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String scheduleTime;\n    private FailureStrategy failureStrategy;\n    private WarningType warningType;\n\n    public StartWorkflowInstanceParams(User loginUser, long projectCode, long workflowDefinitionCode, String scheduleTime, FailureStrategy failureStrategy, WarningType warningType) {\n        this.loginUser = loginUser;\n        this.projectCode = projectCode;\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.scheduleTime = scheduleTime;\n        this.failureStrategy = failureStrategy;\n        this.warningType = warningType;\n    }\n\n    public User getLoginUser() {\n        return loginUser;\n    }\n\n    public long getProjectCode() {\n        return projectCode;\n    }\n\n    public long getWorkflowDefinitionCode() {\n        return workflowDefinitionCode;\n    }\n\n    public String getScheduleTime() {\n        return scheduleTime;\n    }\n\n    public FailureStrategy getFailureStrategy() {\n        return failureStrategy;\n    }\n\n    public WarningType getWarningType() {\n        return warningType;\n    }\n}\n"
    }
}
