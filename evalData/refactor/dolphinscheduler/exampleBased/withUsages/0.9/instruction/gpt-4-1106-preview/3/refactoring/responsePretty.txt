"
{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 35,
                "toLine": 46,
                "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,\n                                              long projectCode,\n                                              long workflowDefinitionCode,\n                                              String scheduleTime,\n                                              FailureStrategy failureStrategy,\n                                              WarningType warningType) {",
                "newContent": "public HttpResponse startWorkflowInstance(ExecutorParameter parameter) {"
            },
            {
                "fromLine": 76,
                "toLine": 91,
                "oldContent": "public HttpResponse executeTask(User loginUser, long projectCode, int workflowInstanceId, String startNodeList,\n                                    TaskDependType taskDependType) {",
                "newContent": "public HttpResponse executeTask(ExecutorParameter parameter) {"
            },
            {
                "fromLine": 95,
                "toLine": 112,
                "oldContent": "        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowInstanceId\", workflowInstanceId);\n        params.put(\"startNodeList\", startNodeList);\n        params.put(\"taskDependType\", taskDependType);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);",
                "newContent": "        Map<String, Object> params = parameter.toMap();\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);"
            },
            {
                "fromLine": 52,
                "toLine": 69,
                "oldContent": "        Map<String, Object> params = new HashMap<>();\n        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);\n        params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);",
                "newContent": "        Map<String, Object> params = parameter.toMap();\n        Map<String, String> headers = new HashMap<>();\n        headers.put(Constants.SESSION_ID_KEY, sessionId);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 24,
                "toLine": 24,
                "oldContent": "",
                "newContent": "import org.apache.dolphinscheduler.api.dto.ProjectParameterRequest;\n"
            },
            {
                "fromLine": 28,
                "toLine": 31,
                "oldContent": "    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,\n                                  String projectParameterValue, String projectParameterDataType);",
                "newContent": "    Result createProjectParameter(ProjectParameterRequest request);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 167,
                "toLine": 167,
                "oldContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,",
                "newContent": "        ProjectParameterRequest parameter = new ProjectParameterRequest(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.createProjectParameter(parameter);"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/ProjectParameterControllerTest.java": [
            {
                "fromLine": 30,
                "toLine": 34,
                "oldContent": "        Mockito.when(projectParameterService.createProjectParameter(Mockito.any(), Mockito.anyLong(), Mockito.any(),\n                Mockito.any(), Mockito.any())).thenReturn(getSuccessResult());",
                "newContent": "        Mockito.when(projectParameterService.createProjectParameter(Mockito.any())).thenReturn(getSuccessResult());"
            }
        ],
        "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/ProjectParameterServiceTest.java": [
            {
                "fromLine": 59,
                "toLine": 59,
                "oldContent": "        Result result = projectParameterService.createProjectParameter(loginUser, projectCode, \"key\", \"value\",",
                "newContent": "        ProjectParameterRequest parameter = new ProjectParameterRequest(loginUser, projectCode, \"key\", \"value\", DataType.VARCHAR.name());\n        Result result = projectParameterService.createProjectParameter(parameter);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 207,
                "toLine": 207,
                "oldContent": "        Map<String, Object> result = schedulerService.insertSchedule(",
                "newContent": "        ScheduleRequest scheduleRequest = new ScheduleRequest(loginUser, projectCode, workflowDefinitionCode,\n                schedule, warningType, warningGroupId, failureStrategy, workerGroup, tenantCode, environmentCode, workflowInstancePriority);\n        Map<String, Object> result = schedulerService.insertSchedule(scheduleRequest);"
            }
        ],
        "dolphinscheduler-task-plugin/dolphinscheduler-task-api/src/main/java/org/apache/dolphinscheduler/plugin/task/api/model/TaskAlertInfo.java": [
            {
                "fromLine": 15,
                "toLine": 28,
                "oldContent": "public class TaskAlertInfo {\n\n    private String title;\n\n    private String content;\n\n    private Integer alertGroupId;\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public void setContent(String content) {\n        this.content = content;\n    }\n\n    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }\n\n    public void setAlertGroupId(Integer alertGroupId) {\n        this.alertGroupId = alertGroupId;\n    }\n}",
                "newContent": "public class TaskAlertInfo {\n\n    private final String title;\n\n    private final String content;\n\n    private final Integer alertGroupId;\n\n    public TaskAlertInfo(String title, String content, Integer alertGroupId) {\n        this.title = title;\n        this.content = content;\n        this.alertGroupId = alertGroupId;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getContent() {\n        return content;\n    }\n\n    public Integer getAlertGroupId() {\n        return alertGroupId;\n    }\n}"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/Alert.java": [
            {
                "fromLine": 49,
                "toLine": 56,
                "oldContent": "public class Alert {\n\n    @TableId(value = \"id\", type = IdType.AUTO)\n    private Integer id;\n\n    @TableField(value = \"sign\")\n    private String sign;\n",
                "newContent": "public class Alert {\n\n    @TableId(value = \"id\", type = IdType.AUTO)\n    private final Integer id;\n\n    @TableField(value = \"sign\")\n    private final String sign;\n"
            },
            {
                "fromLine": 58,
                "toLine": 59,
                "oldContent": "    private String title;",
                "newContent": "    private final String title;"
            },
            {
                "fromLine": 61,
                "toLine": 62,
                "oldContent": "    private String content;",
                "newContent": "    private final String content;"
            },
            {
                "fromLine": 64,
                "toLine": 65,
                "oldContent": "    private AlertStatus alertStatus;",
                "newContent": "    private final AlertStatus alertStatus;"
            },
            {
                "fromLine": 67,
                "toLine": 68,
                "oldContent": "    private WarningType warningType;",
                "newContent": "    private final WarningType warningType;"
            },
            {
                "fromLine": 70,
                "toLine": 71,
                "oldContent": "    private String log;",
                "newContent": "    private final String log;"
            },
            {
                "fromLine": 73,
                "toLine": 74,
                "oldContent": "    private Integer alertGroupId;",
                "newContent": "    private final Integer alertGroupId;"
            },
            {
                "fromLine": 76,
                "toLine": 77,
                "oldContent": "    private Date createTime;",
                "newContent": "    private final Date createTime;"
            },
            {
                "fromLine": 79,
                "toLine": 80,
                "oldContent": "    private Date updateTime;",
                "newContent": "    private final Date updateTime;"
            },
            {
                "fromLine": 82,
                "toLine": 83,
                "oldContent": "    private Long projectCode;",
                "newContent": "    private final Long projectCode;"
            },
            {
                "fromLine": 85,
                "toLine": 86,
                "oldContent": "    private Long workflowDefinitionCode;",
                "newContent": "    private final Long workflowDefinitionCode;"
            },
            {
                "fromLine": 88,
                "toLine": 89,
                "oldContent": "    private Integer workflowInstanceId;",
                "newContent": "    private final Integer workflowInstanceId;"
            },
            {
                "fromLine": 91,
                "toLine": 92,
                "oldContent": "    private AlertType alertType;",
                "newContent": "    private final AlertType alertType;"
            },
            {
                "fromLine": 94,
                "toLine": 95,
                "oldContent": "    private Map<String, Object> info = new HashMap<>();",
                "newContent": "    private final Map<String, Object> info;"
            },
            {
                "fromLine": 97,
                "toLine": 114,
                "oldContent": "",
                "newContent": "    public Alert(String sign, String title, String content, AlertStatus alertStatus, WarningType warningType, String log, Integer alertGroupId, Date createTime, Date updateTime, Long projectCode, Long workflowDefinitionCode, Integer workflowInstanceId, AlertType alertType, Map<String, Object> info) {\n        this.sign = sign;\n        this.title = title;\n        this.content = content;\n        this.alertStatus = alertStatus;\n        this.warningType = warningType;\n        this.log = log;\n        this.alertGroupId = alertGroupId;\n        this.createTime = createTime;\n        this.updateTime = updateTime;\n        this.projectCode = projectCode;\n        this.workflowDefinitionCode = workflowDefinitionCode;\n        this.workflowInstanceId = workflowInstanceId;\n        this.alertType = alertType;\n        this.info = info;\n    }\n"
            }
        ]
    },
    "extractedClasses": {
        "ExecutorParameter.java": "public class ExecutorParameter {\n\n    private final User loginUser;\n    private final long projectCode;\n    private final long workflowDefinitionCode;\n    private final String scheduleTime;\n    private final FailureStrategy failureStrategy;\n    private final WarningType warningType;\n\n    // Constructor, getters and other methods...\n\n    public Map<String, Object> toMap() {\n        Map<String, Object> parameters = new HashMap<>();\n        parameters.put(\"loginUser\", loginUser);\n        parameters.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        parameters.put(\"scheduleTime\", scheduleTime);\n        parameters.put(\"failureStrategy\", failureStrategy);\n        parameters.put(\"warningType\", warningType);\n        return parameters;\n    }\n}",
        "ProjectParameterRequest.java": "public class ProjectParameterRequest {\n\n    private final User loginUser;\n    private final long projectCode;\n    private final String projectParameterName;\n    private final String projectParameterValue;\n    private final String projectParameterDataType;\n\n    // Constructor, getters and other methods...\n}",
        "ScheduleRequest.java": "public class ScheduleRequest {\n\n    private final User loginUser;\n    private final long projectCode;\n    private final long workflowDefinitionCode;\n    private final String schedule;\n    private final WarningType warningType;\n    private final int warningGroupId;\n    private final FailureStrategy failureStrategy;\n    private final Priority workflowInstancePriority;\n    private final String workerGroup;\n    private final String tenantCode;\n    private final Long environmentCode;\n\n    // Constructor, getters and other methods...\n}"
    }
}"