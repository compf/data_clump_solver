
{
    "refactorings": {
        "dolphinscheduler-api-test/dolphinscheduler-api-test-case/src/test/java/org/apache/dolphinscheduler/api/test/pages/workflow/ExecutorPage.java": [
            {
                "fromLine": 29,
                "toLine": 31,
                "oldContent": "public HttpResponse startWorkflowInstance(User loginUser,\n                                              long projectCode,\n                                              long workflowDefinitionCode,",
                "newContent": "public HttpResponse startWorkflowInstance(WorkflowExecutionInfo executionInfo,"
            },
            {
                "fromLine": 35,
                "toLine": 39,
                "oldContent": "        params.put(\"loginUser\", loginUser);\n        params.put(\"workflowDefinitionCode\", workflowDefinitionCode);\n        params.put(\"scheduleTime\", scheduleTime);\n        params.put(\"failureStrategy\", failureStrategy);\n        params.put(\"warningType\", warningType);",
                "newContent": "        params.put(\"loginUser\", executionInfo.getLoginUser());\n        params.put(\"workflowDefinitionCode\", executionInfo.getWorkflowDefinitionCode());\n        params.put(\"scheduleTime\", executionInfo.getScheduleTime());\n        params.put(\"failureStrategy\", executionInfo.getFailureStrategy());\n        params.put(\"warningType\", executionInfo.getWarningType());"
            },
            {
                "fromLine": 52,
                "toLine": 54,
                "oldContent": "    public HttpResponse queryExecutingWorkflow(User loginUser, long projectCode, long workflowInstanceCode) {",
                "newContent": "    public HttpResponse queryExecutingWorkflow(QueryWorkflowInfo queryWorkflowInfo) {"
            },
            {
                "fromLine": 56,
                "toLine": 58,
                "oldContent": "        params.put(\"loginUser\", loginUser);\n        params.put(\"id\", workflowInstanceCode);",
                "newContent": "        params.put(\"loginUser\", queryWorkflowInfo.getLoginUser());\n        params.put(\"id\", queryWorkflowInfo.getWorkflowInstanceCode());"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/WorkflowInstanceMapper.java": [
            {
                "fromLine": 315,
                "toLine": 315,
                "oldContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListPaging(Page<WorkflowInstance> page,",
                "newContent": "    IPage<WorkflowInstance> queryWorkflowInstanceListPaging(IPage<WorkflowInstance> page,"
            }
        ],
        "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java": [
            {
                "fromLine": 115,
                "toLine": 117,
                "oldContent": "    public void init(String host, Date startTime, String executePath) {\n        this.host = host;\n        this.startTime = startTime;",
                "newContent": "    public void init(TaskInstanceExecutionInfo executionInfo) {\n        this.host = executionInfo.getHost();\n        this.startTime = executionInfo.getStartTime();"
            },
            {
                "fromLine": 118,
                "toLine": 118,
                "oldContent": "        this.executePath = executePath;",
                "newContent": "        this.executePath = executionInfo.getExecutePath();"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProjectParameterService.java": [
            {
                "fromLine": 17,
                "toLine": 17,
                "oldContent": "    Result createProjectParameter(User loginUser, long projectCode, String projectParameterName,",
                "newContent": "    Result createProjectParameter(ProjectParameterInfo parameterInfo,"
            },
            {
                "fromLine": 19,
                "toLine": 21,
                "oldContent": "                                  String projectParameterValue, String projectParameterDataType);\n\n    Result updateProjectParameter(User loginUser, long projectCode, long code, String projectParameterName,",
                "newContent": "                                  String projectParameterValue, String projectParameterDataType);\n\n    Result updateProjectParameter(ProjectParameterInfo parameterInfo,"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ProjectParameterController.java": [
            {
                "fromLine": 76,
                "toLine": 80,
                "oldContent": "        return projectParameterService.createProjectParameter(loginUser, projectCode, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "        ProjectParameterInfo parameterInfo = new ProjectParameterInfo(loginUser, projectCode, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.createProjectParameter(parameterInfo);"
            },
            {
                "fromLine": 94,
                "toLine": 99,
                "oldContent": "        return projectParameterService.updateProjectParameter(loginUser, projectCode, code, projectParameterName,\n                projectParameterValue, projectParameterDataType);",
                "newContent": "        ProjectParameterInfo parameterInfo = new ProjectParameterInfo(loginUser, projectCode, code, projectParameterName, projectParameterValue, projectParameterDataType);\n        return projectParameterService.updateProjectParameter(parameterInfo);"
            }
        ],
        "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/SchedulerController.java": [
            {
                "fromLine": 133,
                "toLine": 147,
                "oldContent": "        Map<String, Object> result = schedulerService.insertSchedule(\n                loginUser,\n                projectCode,\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode);\n\n        return returnDataList(result);",
                "newContent": "        ScheduleCreateRequest scheduleCreateRequest = new ScheduleCreateRequest(\n                    projectCode,\n                    workflowDefinitionCode,\n                    schedule,\n                    warningType,\n                    warningGroupId,\n                    failureStrategy,\n                    workflowInstancePriority,\n                    workerGroup,\n                    tenantCode,\n                    environmentCode);\n        Map<String, Object> result = schedulerService.insertSchedule(loginUser, scheduleCreateRequest);\n        return returnDataList(result);"
            },
            {
                "fromLine": 162,
                "toLine": 176,
                "oldContent": "        Map<String, Object> result = schedulerService.updateSchedule(loginUser, projectCode, id, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);",
                "newContent": "        ScheduleUpdateRequest scheduleUpdateRequest = new ScheduleUpdateRequest(\n                id,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode);\n        Map<String, Object> result = schedulerService.updateSchedule(loginUser, projectCode, scheduleUpdateRequest);\n        return returnDataList(result);"
            },
            {
                "fromLine": 281,
                "toLine": 295,
                "oldContent": "        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode,\n                workflowDefinitionCode, schedule,\n                warningType, warningGroupId, failureStrategy, workflowInstancePriority, workerGroup, tenantCode,\n                environmentCode);\n        return returnDataList(result);",
                "newContent": "        ScheduleUpdateRequest scheduleUpdateRequest = new ScheduleUpdateRequest(\n                workflowDefinitionCode,\n                schedule,\n                warningType,\n                warningGroupId,\n                failureStrategy,\n                workflowInstancePriority,\n                workerGroup,\n                tenantCode,\n                environmentCode);\n        Map<String, Object> result = schedulerService.updateScheduleByWorkflowDefinitionCode(loginUser, projectCode, scheduleUpdateRequest);\n        return returnDataList(result);"
            }
        ]
    },
    "extractedClasses": {
        "org/apache/dolphinscheduler/api/test/pages/workflow/WorkflowExecutionInfo.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\npublic class WorkflowExecutionInfo {\n\n    private User loginUser;\n    private long workflowDefinitionCode;\n    private String scheduleTime;\n    private FailureStrategy failureStrategy;\n    private WarningType warningType;\n\n    // getters and setters\n}",
        "org/apache/dolphinscheduler/api/test/pages/workflow/QueryWorkflowInfo.java": "package org.apache.dolphinscheduler.api.test.pages.workflow;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class QueryWorkflowInfo {\n\n    private User loginUser;\n    private long workflowInstanceCode;\n\n    // getters and setters\n}",
        "org/apache/dolphinscheduler/dao/entity/TaskInstanceExecutionInfo.java": "package org.apache.dolphinscheduler.dao.entity;\n\nimport java.util.Date;\n\npublic class TaskInstanceExecutionInfo {\n\n    private String host;\n    private Date startTime;\n    private String executePath;\n\n    // getters and setters\n}",
        "org/apache/dolphinscheduler/api/service/ProjectParameterInfo.java": "package org.apache.dolphinscheduler.api.service;\n\nimport org.apache.dolphinscheduler.dao.entity.User;\n\npublic class ProjectParameterInfo {\n\n    private User loginUser;\n    private long projectCode;\n    private String projectParameterName;\n    private String projectParameterValue;\n    private String projectParameterDataType;\n\n    // getters and setters\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleCreateRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\npublic class ScheduleCreateRequest {\n\n    private long projectCode;\n    private long workflowDefinitionCode;\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workflowInstancePriority;\n    private String workerGroup;\n    private String tenantCode;\n    private long environmentCode;\n\n    // getters and setters\n}",
        "org/apache/dolphinscheduler/api/controller/ScheduleUpdateRequest.java": "package org.apache.dolphinscheduler.api.controller;\n\nimport org.apache.dolphinscheduler.common.enums.FailureStrategy;\nimport org.apache.dolphinscheduler.common.enums.Priority;\nimport org.apache.dolphinscheduler.common.enums.WarningType;\n\npublic class ScheduleUpdateRequest {\n\n    private long id;\n    private String schedule;\n    private WarningType warningType;\n    private int warningGroupId;\n    private FailureStrategy failureStrategy;\n    private Priority workflowInstancePriority;\n    private String workerGroup;\n    private String tenantCode;\n    private long environmentCode;\n\n    // constructor, getters, and setters\n}",
        "org/apache/dolphinscheduler/plugin/task/api/model/AlertParameter.java": "package org.apache.dolphinscheduler.plugin.task.api.model;\n\npublic class AlertParameter {\n\n    private String title;\n    private String content;\n    private Integer alertGroupId;\n\n    // constructor, getters, and setters\n}"
    }
}