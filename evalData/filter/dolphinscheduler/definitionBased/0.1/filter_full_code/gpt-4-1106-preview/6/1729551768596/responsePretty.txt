"{
    "key":"//dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/UsersServiceImpl.java\n    @Override\n    public User createUserIfNotExists(String userName,\n                                      String userPassword,\n                                      String email,\n                                      String phone,\n                                      String tenantCode,\n                                      String queue,\n                                      int state) {\n        User user = userMapper.queryByUserNameAccurately(userName);\n        if (Objects.isNull(user)) {\n            Tenant tenant = tenantMapper.queryByTenantCode(tenantCode);\n            user = createUser(userName, userPassword, email, tenant.getId(), phone, queue, state);\n            return user;\n        }\n\n        updateUser(user, user.getId(), userName, userPassword, email, user.getTenantId(), phone, queue, state, null);\n        user = userMapper.queryDetailsById(user.getId());\n        return user;\n    }\n}",
    "reason":"domain",
    "justification":"The method 'createUserIfNotExists' in UsersServiceImpl.java contains at least three common fields (userName, userPassword, email, phone, tenantCode, queue, state) which are related to user creation and update. These fields represent a user domain object and are used to create or update a user entity. Extracting these fields into a separate User domain class would improve code readability, maintainability, and promote the DRY (Don't Repeat Yourself) principle.",
    "suggestedName":"UserCreationRequest"
}"