{
    "key": "package org.apache.dolphinscheduler.plugin.datasource.api.constants;\n\nimport org.apache.dolphinscheduler.common.constants.DateConstants;\n\nimport java.time.Duration;\nimport java.util.Set;\nimport java.util.regex.Pattern;\n\nimport com.google.common.collect.Sets;\n\n@UtilityClass\npublic class DataSourceConstants {\n\n    public static final String JDBC_MYSQL = \"jdbc:mysql://\";\n    public static final String JDBC_POSTGRESQL = \"jdbc:postgresql://\";\n    public static final String JDBC_HIVE_2 = \"jdbc:hive2://\";\n\n    public static final String SPRING_DATASOURCE_MIN_IDLE = \"spring.datasource.minIdle\";\n\n    public static final String SPRING_DATASOURCE_MAX_ACTIVE = \"spring.datasource.maxActive\";\n\n    public static final String SUPPORT_HIVE_ONE_SESSION = \"support.hive.oneSession\";\n\n    //... Rest of the fields and methods\n}",
    "reason": "domain",
    "justification": "The constants `JDBC_MYSQL`, `JDBC_POSTGRESQL`, and `JDBC_HIVE_2` seem to be part of a common JDBC URL domain, and it's likely that there are other similar constants for different databases. Extracting these to a separate class makes the code cleaner, easier to maintain, and avoids the data clump issue.\n\nSimilarly, `SPRING_DATASOURCE_MIN_IDLE`, `SPRING_DATASOURCE_MAX_ACTIVE`, and `SUPPORT_HIVE_ONE_SESSION` might be part of a common configuration domain for data source properties. Grouping these related constants in a separate class provides better modularity and can avoid potential issues related to the use of these constants across multiple classes.",
    "suggestedName": "JdbcConstants"
}