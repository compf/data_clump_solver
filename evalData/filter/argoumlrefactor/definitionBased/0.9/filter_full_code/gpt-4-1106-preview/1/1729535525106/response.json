{
    "key": "void fireTreeNodesChanged(Object source, Object[] path, int[] childIndices, Object[] children) {\n       Object[] listeners = listenerList.getListenerList();\n       // Process the listeners last to first, notifying\n       // those that are interested in this event\n       for (int i = listeners.length - 2; i >= 0; i -= 2) {\n           if (listeners[i]==TreeModelListener.class) {\n               // Lazily create the event:\n               if (e == null)\n                   e = new TreeModelEvent(source, path, childIndices, children);\n               ((TreeModelListener)listeners[i+1]).treeNodesChanged(e);\n           }\n       }\n   }",
    "reason":"occurrence",
    "justification":"This code is duplicated in different methods, where the only difference is the type of event being created and fired (nodes changed, inserted, structure changed, etc.). This leads to unnecessary code duplication which can be refactored into a helper method that accepts the type of event as a parameter, thus reducing duplication and making the code easier to maintain.",
    "suggestedName":"fireTreeEvent"
}