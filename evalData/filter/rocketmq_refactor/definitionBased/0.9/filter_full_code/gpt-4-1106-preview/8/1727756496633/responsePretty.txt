"
{
    "key":"//store/src/main/java/org/apache/rocketmq/store/stats/BrokerStatsManager.java\n//common/src/main/java/org/apache/rocketmq/common/BrokerConfig.java\n//broker/src/main/java/org/apache/rocketmq/broker/metrics/ConsumerLagCalculator.java\n//broker/src/main/java/org/apache/rocketmq/broker/out/BrokerOuterAPI.java\n//broker/src/main/java/org/apache/rocketmq/broker/failover/EscapeBridge.java\n//example/src/main/java/org/apache/rocketmq/example/broadcast/PushConsumer.java\n//example/src/main/java/org/apache/rocketmq/example/namespace/PullConsumerWithNamespace.java",
    "reason":"domain",
    "justification":"These classes have at least three fields in common related to the concept of a 'broker' or 'consumer', such as 'brokerAddr', 'brokerName', 'brokerId', 'consumerGroupName', all of which are directly associated with the domain of message queuing systems and are central to the functioning of such systems. Extracting these variables into a separate class can help encapsulate the broker or consumer's identity or configuration information, improve code readability, maintainability, and can be reused across different classes, thus fulfilling the idea of domain-driven design."
}
"