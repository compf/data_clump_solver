{
  "report_version": "unknown",
  "report_timestamp": "2024-09-30T23:13:57.547Z",
  "target_language": "java",
  "report_summary": {
    "additional": null,
    "amount_classes_or_interfaces_with_data_clumps": 33,
    "amount_files_with_data_clumps": 34,
    "amount_methods_with_data_clumps": 61,
    "fields_to_fields_data_clump": 22,
    "parameters_to_fields_data_clump": 17,
    "parameters_to_parameters_data_clump": 186,
    "amount_data_clumps": 225
  },
  "project_info": {
    "project_url": "https://github.com/compf/zuul",
    "project_name": "unknown_project_name",
    "project_version": 1,
    "project_commit_hash": "unknown",
    "project_tag": null,
    "project_commit_date": null,
    "additional": {},
    "number_of_files": 349,
    "number_of_classes_or_interfaces": 418,
    "number_of_methods": 2142,
    "number_of_data_fields": 1203,
    "number_of_method_parameters": 1663
  },
  "detector": {
    "name": "data-clumps-doctor",
    "url": "https://github.com/NilsBaumgartner1994/data-clumps-doctor",
    "version": "unknown",
    "options": {
      "typeVariablesConsidered": false,
      "similarityModifierOfVariablesWithUnknownType": 0,
      "fieldsOfClassesWithUnknownHierarchyProbabilityModifier": 1,
      "sharedFieldsToFieldsAmountMinimum": 3,
      "analyseFieldsInClassesOrInterfacesInheritedFromSuperClassesOrInterfaces": false,
      "sharedParametersToParametersAmountMinimum": 3,
      "sharedParametersToFieldsAmountMinimum": 3,
      "methodsOfClassesOrInterfacesWithUnknownHierarchyProbabilityModifier": 1
    }
  },
  "data_clumps": {
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/HttpRequestReadTimeoutHandler.java-com.netflix.netty.common.HttpRequestReadTimeoutHandler/method/addLast(com.netflix.netty.common.io.netty.channel.ChannelPipeline pipeline, long timeout, java.util.concurrent.TimeUnit unit, com.netflix.netty.common.com.netflix.spectator.api.Counter httpRequestReadTimeoutCounter)-com.netflix.netty.common.HttpRequestReadTimeoutHandler-timeoutunithttpRequestReadTimeoutCounter": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/HttpRequestReadTimeoutHandler.java-com.netflix.netty.common.HttpRequestReadTimeoutHandler/method/addLast(com.netflix.netty.common.io.netty.channel.ChannelPipeline pipeline, long timeout, java.util.concurrent.TimeUnit unit, com.netflix.netty.common.com.netflix.spectator.api.Counter httpRequestReadTimeoutCounter)-com.netflix.netty.common.HttpRequestReadTimeoutHandler-timeoutunithttpRequestReadTimeoutCounter",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/HttpRequestReadTimeoutHandler.java",
      "from_class_or_interface_name": "HttpRequestReadTimeoutHandler",
      "from_class_or_interface_key": "com.netflix.netty.common.HttpRequestReadTimeoutHandler",
      "from_method_name": "addLast",
      "from_method_key": "com.netflix.netty.common.HttpRequestReadTimeoutHandler/method/addLast(com.netflix.netty.common.io.netty.channel.ChannelPipeline pipeline, long timeout, java.util.concurrent.TimeUnit unit, com.netflix.netty.common.com.netflix.spectator.api.Counter httpRequestReadTimeoutCounter)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/HttpRequestReadTimeoutHandler.java",
      "to_class_or_interface_name": "HttpRequestReadTimeoutHandler",
      "to_class_or_interface_key": "com.netflix.netty.common.HttpRequestReadTimeoutHandler",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.HttpRequestReadTimeoutHandler/method/addLast(com.netflix.netty.common.io.netty.channel.ChannelPipeline pipeline, long timeout, java.util.concurrent.TimeUnit unit, com.netflix.netty.common.com.netflix.spectator.api.Counter httpRequestReadTimeoutCounter)/parameter/timeout": {
          "key": "com.netflix.netty.common.HttpRequestReadTimeoutHandler/method/addLast(com.netflix.netty.common.io.netty.channel.ChannelPipeline pipeline, long timeout, java.util.concurrent.TimeUnit unit, com.netflix.netty.common.com.netflix.spectator.api.Counter httpRequestReadTimeoutCounter)/parameter/timeout",
          "name": "timeout",
          "type": "long",
          "displayedType": "long",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.netty.common.HttpRequestReadTimeoutHandler/memberField/timeout",
            "name": "timeout",
            "type": "long",
            "displayedType": "long",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 44,
              "startColumn": 24,
              "endLine": 44,
              "endColumn": 31
            }
          },
          "position": {
            "startLine": 59,
            "startColumn": 44,
            "endLine": 59,
            "endColumn": 51
          }
        },
        "com.netflix.netty.common.HttpRequestReadTimeoutHandler/method/addLast(com.netflix.netty.common.io.netty.channel.ChannelPipeline pipeline, long timeout, java.util.concurrent.TimeUnit unit, com.netflix.netty.common.com.netflix.spectator.api.Counter httpRequestReadTimeoutCounter)/parameter/unit": {
          "key": "com.netflix.netty.common.HttpRequestReadTimeoutHandler/method/addLast(com.netflix.netty.common.io.netty.channel.ChannelPipeline pipeline, long timeout, java.util.concurrent.TimeUnit unit, com.netflix.netty.common.com.netflix.spectator.api.Counter httpRequestReadTimeoutCounter)/parameter/unit",
          "name": "unit",
          "type": "java.util.concurrent.TimeUnit",
          "displayedType": "TimeUnit",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.netty.common.HttpRequestReadTimeoutHandler/memberField/unit",
            "name": "unit",
            "type": "java.util.concurrent.TimeUnit",
            "displayedType": "TimeUnit",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 45,
              "startColumn": 28,
              "endLine": 45,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 59,
            "startColumn": 62,
            "endLine": 59,
            "endColumn": 66
          }
        },
        "com.netflix.netty.common.HttpRequestReadTimeoutHandler/method/addLast(com.netflix.netty.common.io.netty.channel.ChannelPipeline pipeline, long timeout, java.util.concurrent.TimeUnit unit, com.netflix.netty.common.com.netflix.spectator.api.Counter httpRequestReadTimeoutCounter)/parameter/httpRequestReadTimeoutCounter": {
          "key": "com.netflix.netty.common.HttpRequestReadTimeoutHandler/method/addLast(com.netflix.netty.common.io.netty.channel.ChannelPipeline pipeline, long timeout, java.util.concurrent.TimeUnit unit, com.netflix.netty.common.com.netflix.spectator.api.Counter httpRequestReadTimeoutCounter)/parameter/httpRequestReadTimeoutCounter",
          "name": "httpRequestReadTimeoutCounter",
          "type": "com.netflix.netty.common.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.netty.common.HttpRequestReadTimeoutHandler/memberField/httpRequestReadTimeoutCounter",
            "name": "httpRequestReadTimeoutCounter",
            "type": "com.netflix.netty.common.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 46,
              "startColumn": 27,
              "endLine": 46,
              "endColumn": 56
            }
          },
          "position": {
            "startLine": 59,
            "startColumn": 76,
            "endLine": 59,
            "endColumn": 105
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/accesslog/AccessLogPublisher.java-com.netflix.netty.common.accesslog.AccessLogPublisher/method/log(com.netflix.netty.common.accesslog.io.netty.channel.Channel channel, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpRequest request, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpResponse response, java.time.LocalDateTime dateTime, java.lang.Integer localPort, java.lang.String remoteIp, java.lang.Long durationNs, java.lang.Integer requestBodySize, java.lang.Integer responseBodySize)-com.netflix.netty.common.accesslog.AccessLogChannelHandler.RequestState-requestresponsedateTime": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/accesslog/AccessLogPublisher.java-com.netflix.netty.common.accesslog.AccessLogPublisher/method/log(com.netflix.netty.common.accesslog.io.netty.channel.Channel channel, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpRequest request, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpResponse response, java.time.LocalDateTime dateTime, java.lang.Integer localPort, java.lang.String remoteIp, java.lang.Long durationNs, java.lang.Integer requestBodySize, java.lang.Integer responseBodySize)-com.netflix.netty.common.accesslog.AccessLogChannelHandler.RequestState-requestresponsedateTime",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/accesslog/AccessLogPublisher.java",
      "from_class_or_interface_name": "AccessLogPublisher",
      "from_class_or_interface_key": "com.netflix.netty.common.accesslog.AccessLogPublisher",
      "from_method_name": "log",
      "from_method_key": "com.netflix.netty.common.accesslog.AccessLogPublisher/method/log(com.netflix.netty.common.accesslog.io.netty.channel.Channel channel, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpRequest request, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpResponse response, java.time.LocalDateTime dateTime, java.lang.Integer localPort, java.lang.String remoteIp, java.lang.Long durationNs, java.lang.Integer requestBodySize, java.lang.Integer responseBodySize)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/accesslog/AccessLogChannelHandler.java",
      "to_class_or_interface_name": "RequestState",
      "to_class_or_interface_key": "com.netflix.netty.common.accesslog.AccessLogChannelHandler.RequestState",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.accesslog.AccessLogPublisher/method/log(com.netflix.netty.common.accesslog.io.netty.channel.Channel channel, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpRequest request, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpResponse response, java.time.LocalDateTime dateTime, java.lang.Integer localPort, java.lang.String remoteIp, java.lang.Long durationNs, java.lang.Integer requestBodySize, java.lang.Integer responseBodySize)/parameter/request": {
          "key": "com.netflix.netty.common.accesslog.AccessLogPublisher/method/log(com.netflix.netty.common.accesslog.io.netty.channel.Channel channel, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpRequest request, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpResponse response, java.time.LocalDateTime dateTime, java.lang.Integer localPort, java.lang.String remoteIp, java.lang.Long durationNs, java.lang.Integer requestBodySize, java.lang.Integer responseBodySize)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.netty.common.accesslog.AccessLogChannelHandler.RequestState/memberField/request",
            "name": "request",
            "type": "com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [],
            "position": {
              "startLine": 133,
              "startColumn": 21,
              "endLine": 133,
              "endColumn": 28
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 25,
            "endLine": 58,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.accesslog.AccessLogPublisher/method/log(com.netflix.netty.common.accesslog.io.netty.channel.Channel channel, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpRequest request, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpResponse response, java.time.LocalDateTime dateTime, java.lang.Integer localPort, java.lang.String remoteIp, java.lang.Long durationNs, java.lang.Integer requestBodySize, java.lang.Integer responseBodySize)/parameter/response": {
          "key": "com.netflix.netty.common.accesslog.AccessLogPublisher/method/log(com.netflix.netty.common.accesslog.io.netty.channel.Channel channel, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpRequest request, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpResponse response, java.time.LocalDateTime dateTime, java.lang.Integer localPort, java.lang.String remoteIp, java.lang.Long durationNs, java.lang.Integer requestBodySize, java.lang.Integer responseBodySize)/parameter/response",
          "name": "response",
          "type": "com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpResponse",
          "displayedType": "HttpResponse",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.netty.common.accesslog.AccessLogChannelHandler.RequestState/memberField/response",
            "name": "response",
            "type": "com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpResponse",
            "displayedType": "HttpResponse",
            "modifiers": [],
            "position": {
              "startLine": 134,
              "startColumn": 22,
              "endLine": 134,
              "endColumn": 30
            }
          },
          "position": {
            "startLine": 59,
            "startColumn": 26,
            "endLine": 59,
            "endColumn": 34
          }
        },
        "com.netflix.netty.common.accesslog.AccessLogPublisher/method/log(com.netflix.netty.common.accesslog.io.netty.channel.Channel channel, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpRequest request, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpResponse response, java.time.LocalDateTime dateTime, java.lang.Integer localPort, java.lang.String remoteIp, java.lang.Long durationNs, java.lang.Integer requestBodySize, java.lang.Integer responseBodySize)/parameter/dateTime": {
          "key": "com.netflix.netty.common.accesslog.AccessLogPublisher/method/log(com.netflix.netty.common.accesslog.io.netty.channel.Channel channel, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpRequest request, com.netflix.netty.common.accesslog.io.netty.handler.codec.http.HttpResponse response, java.time.LocalDateTime dateTime, java.lang.Integer localPort, java.lang.String remoteIp, java.lang.Long durationNs, java.lang.Integer requestBodySize, java.lang.Integer responseBodySize)/parameter/dateTime",
          "name": "dateTime",
          "type": "java.time.LocalDateTime",
          "displayedType": "LocalDateTime",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.netty.common.accesslog.AccessLogChannelHandler.RequestState/memberField/dateTime",
            "name": "dateTime",
            "type": "java.time.LocalDateTime",
            "displayedType": "LocalDateTime",
            "modifiers": [],
            "position": {
              "startLine": 132,
              "startColumn": 23,
              "endLine": 132,
              "endColumn": 31
            }
          },
          "position": {
            "startLine": 60,
            "startColumn": 27,
            "endLine": 60,
            "endColumn": 35
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)-registrycounterNamemetricId": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)-registrycounterNamemetricId",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java",
      "from_class_or_interface_name": "Http2MetricsChannelHandlers",
      "from_class_or_interface_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers",
      "from_method_name": "incrementErrorCounter",
      "from_method_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java",
      "to_class_or_interface_name": "Http2MetricsChannelHandlers",
      "to_class_or_interface_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers",
      "to_method_name": "incrementCounter",
      "to_method_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)/parameter/registry": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)/parameter/registry",
          "name": "registry",
          "type": "com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)/parameter/registry",
            "name": "registry",
            "type": "com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 56,
              "startColumn": 46,
              "endLine": 56,
              "endColumn": 54
            }
          },
          "position": {
            "startLine": 48,
            "startColumn": 51,
            "endLine": 48,
            "endColumn": 59
          }
        },
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)/parameter/counterName": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)/parameter/counterName",
          "name": "counterName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)/parameter/counterName",
            "name": "counterName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 56,
              "startColumn": 63,
              "endLine": 56,
              "endColumn": 74
            }
          },
          "position": {
            "startLine": 48,
            "startColumn": 68,
            "endLine": 48,
            "endColumn": 79
          }
        },
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)/parameter/metricId": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)/parameter/metricId",
          "name": "metricId",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)/parameter/metricId",
            "name": "metricId",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 56,
              "startColumn": 83,
              "endLine": 56,
              "endColumn": 91
            }
          },
          "position": {
            "startLine": 48,
            "startColumn": 88,
            "endLine": 48,
            "endColumn": 96
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)-registrycounterNamemetricId": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)-registrycounterNamemetricId",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java",
      "from_class_or_interface_name": "Http2MetricsChannelHandlers",
      "from_class_or_interface_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers",
      "from_method_name": "incrementCounter",
      "from_method_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java",
      "to_class_or_interface_name": "Http2MetricsChannelHandlers",
      "to_class_or_interface_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers",
      "to_method_name": "incrementErrorCounter",
      "to_method_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)/parameter/registry": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)/parameter/registry",
          "name": "registry",
          "type": "com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)/parameter/registry",
            "name": "registry",
            "type": "com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 48,
              "startColumn": 51,
              "endLine": 48,
              "endColumn": 59
            }
          },
          "position": {
            "startLine": 56,
            "startColumn": 46,
            "endLine": 56,
            "endColumn": 54
          }
        },
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)/parameter/counterName": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)/parameter/counterName",
          "name": "counterName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)/parameter/counterName",
            "name": "counterName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 48,
              "startColumn": 68,
              "endLine": 48,
              "endColumn": 79
            }
          },
          "position": {
            "startLine": 56,
            "startColumn": 63,
            "endLine": 56,
            "endColumn": 74
          }
        },
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)/parameter/metricId": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Frame frame)/parameter/metricId",
          "name": "metricId",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers/method/incrementErrorCounter(com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry registry, java.lang.String counterName, java.lang.String metricId, com.netflix.netty.common.metrics.io.netty.handler.codec.http2.Http2Exception h2e)/parameter/metricId",
            "name": "metricId",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 48,
              "startColumn": 88,
              "endLine": 48,
              "endColumn": 96
            }
          },
          "position": {
            "startLine": 56,
            "startColumn": 83,
            "endLine": 56,
            "endColumn": 91
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/ssl/ServerSslConfig.java-com.netflix.netty.common.ssl.ServerSslConfig/method/withDefaultCiphers(java.io.File certChainFile, java.io.File keyFile, java.lang.String[] protocols)-com.netflix.netty.common.ssl.ServerSslConfig-certChainFilekeyFileprotocols": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/ssl/ServerSslConfig.java-com.netflix.netty.common.ssl.ServerSslConfig/method/withDefaultCiphers(java.io.File certChainFile, java.io.File keyFile, java.lang.String[] protocols)-com.netflix.netty.common.ssl.ServerSslConfig-certChainFilekeyFileprotocols",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/ssl/ServerSslConfig.java",
      "from_class_or_interface_name": "ServerSslConfig",
      "from_class_or_interface_key": "com.netflix.netty.common.ssl.ServerSslConfig",
      "from_method_name": "withDefaultCiphers",
      "from_method_key": "com.netflix.netty.common.ssl.ServerSslConfig/method/withDefaultCiphers(java.io.File certChainFile, java.io.File keyFile, java.lang.String[] protocols)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/ssl/ServerSslConfig.java",
      "to_class_or_interface_name": "ServerSslConfig",
      "to_class_or_interface_key": "com.netflix.netty.common.ssl.ServerSslConfig",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.ssl.ServerSslConfig/method/withDefaultCiphers(java.io.File certChainFile, java.io.File keyFile, java.lang.String[] protocols)/parameter/certChainFile": {
          "key": "com.netflix.netty.common.ssl.ServerSslConfig/method/withDefaultCiphers(java.io.File certChainFile, java.io.File keyFile, java.lang.String[] protocols)/parameter/certChainFile",
          "name": "certChainFile",
          "type": "java.io.File",
          "displayedType": "File",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.netty.common.ssl.ServerSslConfig/memberField/certChainFile",
            "name": "certChainFile",
            "type": "java.io.File",
            "displayedType": "File",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 52,
              "startColumn": 24,
              "endLine": 52,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 118,
            "startColumn": 59,
            "endLine": 118,
            "endColumn": 72
          }
        },
        "com.netflix.netty.common.ssl.ServerSslConfig/method/withDefaultCiphers(java.io.File certChainFile, java.io.File keyFile, java.lang.String[] protocols)/parameter/keyFile": {
          "key": "com.netflix.netty.common.ssl.ServerSslConfig/method/withDefaultCiphers(java.io.File certChainFile, java.io.File keyFile, java.lang.String[] protocols)/parameter/keyFile",
          "name": "keyFile",
          "type": "java.io.File",
          "displayedType": "File",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.netty.common.ssl.ServerSslConfig/memberField/keyFile",
            "name": "keyFile",
            "type": "java.io.File",
            "displayedType": "File",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 53,
              "startColumn": 24,
              "endLine": 53,
              "endColumn": 31
            }
          },
          "position": {
            "startLine": 118,
            "startColumn": 79,
            "endLine": 118,
            "endColumn": 86
          }
        },
        "com.netflix.netty.common.ssl.ServerSslConfig/method/withDefaultCiphers(java.io.File certChainFile, java.io.File keyFile, java.lang.String[] protocols)/parameter/protocols": {
          "key": "com.netflix.netty.common.ssl.ServerSslConfig/method/withDefaultCiphers(java.io.File certChainFile, java.io.File keyFile, java.lang.String[] protocols)/parameter/protocols",
          "name": "protocols",
          "type": "java.lang.String[]",
          "displayedType": "String[]",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.netty.common.ssl.ServerSslConfig/memberField/protocols",
            "name": "protocols",
            "type": "java.lang.String[]",
            "displayedType": "String[]",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 50,
              "startColumn": 28,
              "endLine": 50,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 118,
            "startColumn": 98,
            "endLine": 118,
            "endColumn": 107
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-ctxnfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-ctxnfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "notifyHandlers",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "rejectByClosingConnection",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 65,
              "startColumn": 35,
              "endLine": 65,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 295,
            "startColumn": 35,
            "endLine": 295,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 66,
              "startColumn": 28,
              "endLine": 66,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 296,
            "startColumn": 28,
            "endLine": 296,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 20,
              "endLine": 67,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 298,
            "startColumn": 20,
            "endLine": 298,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 68,
              "startColumn": 25,
              "endLine": 68,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 299,
            "startColumn": 25,
            "endLine": 299,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-ctxnfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-ctxnfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "notifyHandlers",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "reject",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 35,
              "endLine": 228,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 295,
            "startColumn": 35,
            "endLine": 295,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 28,
              "endLine": 230,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 296,
            "startColumn": 28,
            "endLine": 296,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 20,
              "endLine": 231,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 298,
            "startColumn": 20,
            "endLine": 298,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 232,
              "startColumn": 25,
              "endLine": 232,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 299,
            "startColumn": 25,
            "endLine": 299,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "notifyHandlers",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "sendRejectionResponse",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 105,
              "startColumn": 35,
              "endLine": 105,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 295,
            "startColumn": 35,
            "endLine": 295,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 106,
              "startColumn": 28,
              "endLine": 106,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 296,
            "startColumn": 28,
            "endLine": 296,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 107,
              "startColumn": 20,
              "endLine": 107,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 298,
            "startColumn": 20,
            "endLine": 298,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 108,
              "startColumn": 25,
              "endLine": 108,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 299,
            "startColumn": 25,
            "endLine": 299,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "notifyHandlers",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "reject",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 263,
              "startColumn": 35,
              "endLine": 263,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 295,
            "startColumn": 35,
            "endLine": 295,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 265,
              "startColumn": 28,
              "endLine": 265,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 296,
            "startColumn": 28,
            "endLine": 296,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 266,
              "startColumn": 20,
              "endLine": 266,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 298,
            "startColumn": 20,
            "endLine": 298,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 267,
              "startColumn": 25,
              "endLine": 267,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 299,
            "startColumn": 25,
            "endLine": 299,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreason": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreason",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "notifyHandlers",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "handleRejection",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 167,
              "startColumn": 35,
              "endLine": 167,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 295,
            "startColumn": 35,
            "endLine": 295,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 170,
              "startColumn": 28,
              "endLine": 170,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 296,
            "startColumn": 28,
            "endLine": 296,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 171,
              "startColumn": 20,
              "endLine": 171,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 298,
            "startColumn": 20,
            "endLine": 298,
            "endColumn": 26
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RequestRejectedEvent-nfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-com.netflix.netty.common.throttle.RequestRejectedEvent-nfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "notifyHandlers",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RequestRejectedEvent.java",
      "to_class_or_interface_name": "RequestRejectedEvent",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RequestRejectedEvent",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 25,
              "startColumn": 34,
              "endLine": 25,
              "endColumn": 42
            }
          },
          "position": {
            "startLine": 296,
            "startColumn": 28,
            "endLine": 296,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 27,
              "startColumn": 26,
              "endLine": 27,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 298,
            "startColumn": 20,
            "endLine": 298,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 24,
              "startColumn": 31,
              "endLine": 24,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 299,
            "startColumn": 25,
            "endLine": 299,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-ctxnfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-ctxnfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "rejectByClosingConnection",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "notifyHandlers",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 295,
              "startColumn": 35,
              "endLine": 295,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 65,
            "startColumn": 35,
            "endLine": 65,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 296,
              "startColumn": 28,
              "endLine": 296,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 66,
            "startColumn": 28,
            "endLine": 66,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 298,
              "startColumn": 20,
              "endLine": 298,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 20,
            "endLine": 67,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 299,
              "startColumn": 25,
              "endLine": 299,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 68,
            "startColumn": 25,
            "endLine": 68,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-ctxnfStatusreasonrequestinjectedLatencyMillis": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-ctxnfStatusreasonrequestinjectedLatencyMillis",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "rejectByClosingConnection",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "reject",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 35,
              "endLine": 228,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 65,
            "startColumn": 35,
            "endLine": 65,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 28,
              "endLine": 230,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 66,
            "startColumn": 28,
            "endLine": 66,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 20,
              "endLine": 231,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 20,
            "endLine": 67,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 232,
              "startColumn": 25,
              "endLine": 232,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 68,
            "startColumn": 25,
            "endLine": 68,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 233,
              "startColumn": 31,
              "endLine": 233,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 69,
            "startColumn": 31,
            "endLine": 69,
            "endColumn": 52
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequestinjectedLatencyMillis": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequestinjectedLatencyMillis",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "rejectByClosingConnection",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "sendRejectionResponse",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 105,
              "startColumn": 35,
              "endLine": 105,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 65,
            "startColumn": 35,
            "endLine": 65,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 106,
              "startColumn": 28,
              "endLine": 106,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 66,
            "startColumn": 28,
            "endLine": 66,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 107,
              "startColumn": 20,
              "endLine": 107,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 20,
            "endLine": 67,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 108,
              "startColumn": 25,
              "endLine": 108,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 68,
            "startColumn": 25,
            "endLine": 68,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 109,
              "startColumn": 31,
              "endLine": 109,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 69,
            "startColumn": 31,
            "endLine": 69,
            "endColumn": 52
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequestinjectedLatencyMillis": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequestinjectedLatencyMillis",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "rejectByClosingConnection",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "reject",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 263,
              "startColumn": 35,
              "endLine": 263,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 65,
            "startColumn": 35,
            "endLine": 65,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 265,
              "startColumn": 28,
              "endLine": 265,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 66,
            "startColumn": 28,
            "endLine": 66,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 266,
              "startColumn": 20,
              "endLine": 266,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 20,
            "endLine": 67,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 267,
              "startColumn": 25,
              "endLine": 267,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 68,
            "startColumn": 25,
            "endLine": 68,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 268,
              "startColumn": 31,
              "endLine": 268,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 69,
            "startColumn": 31,
            "endLine": 69,
            "endColumn": 52
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasoninjectedLatencyMillis": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasoninjectedLatencyMillis",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "rejectByClosingConnection",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "handleRejection",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 167,
              "startColumn": 35,
              "endLine": 167,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 65,
            "startColumn": 35,
            "endLine": 65,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 170,
              "startColumn": 28,
              "endLine": 170,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 66,
            "startColumn": 28,
            "endLine": 66,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 171,
              "startColumn": 20,
              "endLine": 171,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 20,
            "endLine": 67,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 172,
              "startColumn": 31,
              "endLine": 172,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 69,
            "startColumn": 31,
            "endLine": 69,
            "endColumn": 52
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RequestRejectedEvent-nfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-com.netflix.netty.common.throttle.RequestRejectedEvent-nfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "rejectByClosingConnection",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RequestRejectedEvent.java",
      "to_class_or_interface_name": "RequestRejectedEvent",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RequestRejectedEvent",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 25,
              "startColumn": 34,
              "endLine": 25,
              "endColumn": 42
            }
          },
          "position": {
            "startLine": 66,
            "startColumn": 28,
            "endLine": 66,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 27,
              "startColumn": 26,
              "endLine": 27,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 20,
            "endLine": 67,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 24,
              "startColumn": 31,
              "endLine": 24,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 68,
            "startColumn": 25,
            "endLine": 68,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-ctxnfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-ctxnfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "notifyHandlers",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 295,
              "startColumn": 35,
              "endLine": 295,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 35,
            "endLine": 228,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 296,
              "startColumn": 28,
              "endLine": 296,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 28,
            "endLine": 230,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 298,
              "startColumn": 20,
              "endLine": 298,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 20,
            "endLine": 231,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 299,
              "startColumn": 25,
              "endLine": 299,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 232,
            "startColumn": 25,
            "endLine": 232,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-ctxnfStatusreasonrequestinjectedLatencyMillis": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-ctxnfStatusreasonrequestinjectedLatencyMillis",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "rejectByClosingConnection",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 65,
              "startColumn": 35,
              "endLine": 65,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 35,
            "endLine": 228,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 66,
              "startColumn": 28,
              "endLine": 66,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 28,
            "endLine": 230,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 20,
              "endLine": 67,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 20,
            "endLine": 231,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 68,
              "startColumn": 25,
              "endLine": 68,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 232,
            "startColumn": 25,
            "endLine": 232,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 69,
              "startColumn": 31,
              "endLine": 69,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 233,
            "startColumn": 31,
            "endLine": 233,
            "endColumn": 52
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBody": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBody",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "sendRejectionResponse",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 105,
              "startColumn": 35,
              "endLine": 105,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 35,
            "endLine": 228,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 106,
              "startColumn": 28,
              "endLine": 106,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 28,
            "endLine": 230,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 107,
              "startColumn": 20,
              "endLine": 107,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 20,
            "endLine": 231,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 108,
              "startColumn": 25,
              "endLine": 108,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 232,
            "startColumn": 25,
            "endLine": 232,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 109,
              "startColumn": 31,
              "endLine": 109,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 233,
            "startColumn": 31,
            "endLine": 233,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 110,
              "startColumn": 32,
              "endLine": 110,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 234,
            "startColumn": 32,
            "endLine": 234,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 111,
              "startColumn": 20,
              "endLine": 111,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 235,
            "startColumn": 20,
            "endLine": 235,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxrejectionTypenfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBody": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxrejectionTypenfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBody",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "reject",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 263,
              "startColumn": 35,
              "endLine": 263,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 35,
            "endLine": 228,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectionType": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectionType",
          "name": "rejectionType",
          "type": "com.netflix.netty.common.throttle.RejectionType",
          "displayedType": "RejectionType",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType",
            "name": "rejectionType",
            "type": "com.netflix.netty.common.throttle.RejectionType",
            "displayedType": "RejectionType",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 264,
              "startColumn": 27,
              "endLine": 264,
              "endColumn": 40
            }
          },
          "position": {
            "startLine": 229,
            "startColumn": 27,
            "endLine": 229,
            "endColumn": 40
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 265,
              "startColumn": 28,
              "endLine": 265,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 28,
            "endLine": 230,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 266,
              "startColumn": 20,
              "endLine": 266,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 20,
            "endLine": 231,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 267,
              "startColumn": 25,
              "endLine": 267,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 232,
            "startColumn": 25,
            "endLine": 232,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 268,
              "startColumn": 31,
              "endLine": 268,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 233,
            "startColumn": 31,
            "endLine": 233,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 269,
              "startColumn": 32,
              "endLine": 269,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 234,
            "startColumn": 32,
            "endLine": 234,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 270,
              "startColumn": 20,
              "endLine": 270,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 235,
            "startColumn": 20,
            "endLine": 235,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxrejectionTypenfStatusreasoninjectedLatencyMillisrejectedCoderejectedBody": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxrejectionTypenfStatusreasoninjectedLatencyMillisrejectedCoderejectedBody",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "handleRejection",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 167,
              "startColumn": 35,
              "endLine": 167,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 35,
            "endLine": 228,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectionType": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectionType",
          "name": "rejectionType",
          "type": "com.netflix.netty.common.throttle.RejectionType",
          "displayedType": "RejectionType",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType",
            "name": "rejectionType",
            "type": "com.netflix.netty.common.throttle.RejectionType",
            "displayedType": "RejectionType",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 169,
              "startColumn": 27,
              "endLine": 169,
              "endColumn": 40
            }
          },
          "position": {
            "startLine": 229,
            "startColumn": 27,
            "endLine": 229,
            "endColumn": 40
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 170,
              "startColumn": 28,
              "endLine": 170,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 28,
            "endLine": 230,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 171,
              "startColumn": 20,
              "endLine": 171,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 20,
            "endLine": 231,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 172,
              "startColumn": 31,
              "endLine": 172,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 233,
            "startColumn": 31,
            "endLine": 233,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 173,
              "startColumn": 32,
              "endLine": 173,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 234,
            "startColumn": 32,
            "endLine": 234,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 174,
              "startColumn": 20,
              "endLine": 174,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 235,
            "startColumn": 20,
            "endLine": 235,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RequestRejectedEvent-nfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-com.netflix.netty.common.throttle.RequestRejectedEvent-nfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RequestRejectedEvent.java",
      "to_class_or_interface_name": "RequestRejectedEvent",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RequestRejectedEvent",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 25,
              "startColumn": 34,
              "endLine": 25,
              "endColumn": 42
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 28,
            "endLine": 230,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 27,
              "startColumn": 26,
              "endLine": 27,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 20,
            "endLine": 231,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 24,
              "startColumn": 31,
              "endLine": 24,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 232,
            "startColumn": 25,
            "endLine": 232,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-ctxnfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-ctxnfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "sendRejectionResponse",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "notifyHandlers",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 295,
              "startColumn": 35,
              "endLine": 295,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 105,
            "startColumn": 35,
            "endLine": 105,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 296,
              "startColumn": 28,
              "endLine": 296,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 106,
            "startColumn": 28,
            "endLine": 106,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 298,
              "startColumn": 20,
              "endLine": 298,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 107,
            "startColumn": 20,
            "endLine": 107,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 299,
              "startColumn": 25,
              "endLine": 299,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 108,
            "startColumn": 25,
            "endLine": 108,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-ctxnfStatusreasonrequestinjectedLatencyMillis": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-ctxnfStatusreasonrequestinjectedLatencyMillis",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "sendRejectionResponse",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "rejectByClosingConnection",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 65,
              "startColumn": 35,
              "endLine": 65,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 105,
            "startColumn": 35,
            "endLine": 105,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 66,
              "startColumn": 28,
              "endLine": 66,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 106,
            "startColumn": 28,
            "endLine": 106,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 20,
              "endLine": 67,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 107,
            "startColumn": 20,
            "endLine": 107,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 68,
              "startColumn": 25,
              "endLine": 68,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 108,
            "startColumn": 25,
            "endLine": 108,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 69,
              "startColumn": 31,
              "endLine": 69,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 109,
            "startColumn": 31,
            "endLine": 109,
            "endColumn": 52
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-ctxnfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBody": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-ctxnfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBody",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "sendRejectionResponse",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "reject",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 35,
              "endLine": 228,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 105,
            "startColumn": 35,
            "endLine": 105,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 28,
              "endLine": 230,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 106,
            "startColumn": 28,
            "endLine": 106,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 20,
              "endLine": 231,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 107,
            "startColumn": 20,
            "endLine": 107,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 232,
              "startColumn": 25,
              "endLine": 232,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 108,
            "startColumn": 25,
            "endLine": 108,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 233,
              "startColumn": 31,
              "endLine": 233,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 109,
            "startColumn": 31,
            "endLine": 109,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 234,
              "startColumn": 32,
              "endLine": 234,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 110,
            "startColumn": 32,
            "endLine": 110,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 235,
              "startColumn": 20,
              "endLine": 235,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 111,
            "startColumn": 20,
            "endLine": 111,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "sendRejectionResponse",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "reject",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 263,
              "startColumn": 35,
              "endLine": 263,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 105,
            "startColumn": 35,
            "endLine": 105,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 265,
              "startColumn": 28,
              "endLine": 265,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 106,
            "startColumn": 28,
            "endLine": 106,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 266,
              "startColumn": 20,
              "endLine": 266,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 107,
            "startColumn": 20,
            "endLine": 107,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 267,
              "startColumn": 25,
              "endLine": 267,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 108,
            "startColumn": 25,
            "endLine": 108,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 268,
              "startColumn": 31,
              "endLine": 268,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 109,
            "startColumn": 31,
            "endLine": 109,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 269,
              "startColumn": 32,
              "endLine": 269,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 110,
            "startColumn": 32,
            "endLine": 110,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 270,
              "startColumn": 20,
              "endLine": 270,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 111,
            "startColumn": 20,
            "endLine": 111,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
          "name": "rejectionHeaders",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "displayedType": "Map<String, String>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
            "name": "rejectionHeaders",
            "type": "java.util.Map<java.lang.String, java.lang.String>",
            "displayedType": "Map<String, String>",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 271,
              "startColumn": 33,
              "endLine": 271,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 112,
            "startColumn": 33,
            "endLine": 112,
            "endColumn": 49
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasoninjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasoninjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "sendRejectionResponse",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "handleRejection",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 167,
              "startColumn": 35,
              "endLine": 167,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 105,
            "startColumn": 35,
            "endLine": 105,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 170,
              "startColumn": 28,
              "endLine": 170,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 106,
            "startColumn": 28,
            "endLine": 106,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 171,
              "startColumn": 20,
              "endLine": 171,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 107,
            "startColumn": 20,
            "endLine": 107,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 172,
              "startColumn": 31,
              "endLine": 172,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 109,
            "startColumn": 31,
            "endLine": 109,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 173,
              "startColumn": 32,
              "endLine": 173,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 110,
            "startColumn": 32,
            "endLine": 110,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 174,
              "startColumn": 20,
              "endLine": 174,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 111,
            "startColumn": 20,
            "endLine": 111,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
          "name": "rejectionHeaders",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "displayedType": "Map<String, String>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
            "name": "rejectionHeaders",
            "type": "java.util.Map<java.lang.String, java.lang.String>",
            "displayedType": "Map<String, String>",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 175,
              "startColumn": 33,
              "endLine": 175,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 112,
            "startColumn": 33,
            "endLine": 112,
            "endColumn": 49
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RequestRejectedEvent-nfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RequestRejectedEvent-nfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "sendRejectionResponse",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RequestRejectedEvent.java",
      "to_class_or_interface_name": "RequestRejectedEvent",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RequestRejectedEvent",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 25,
              "startColumn": 34,
              "endLine": 25,
              "endColumn": 42
            }
          },
          "position": {
            "startLine": 106,
            "startColumn": 28,
            "endLine": 106,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 27,
              "startColumn": 26,
              "endLine": 27,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 107,
            "startColumn": 20,
            "endLine": 107,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 24,
              "startColumn": 31,
              "endLine": 24,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 108,
            "startColumn": 25,
            "endLine": 108,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-ctxnfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-ctxnfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "notifyHandlers",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 295,
              "startColumn": 35,
              "endLine": 295,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 263,
            "startColumn": 35,
            "endLine": 263,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 296,
              "startColumn": 28,
              "endLine": 296,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 265,
            "startColumn": 28,
            "endLine": 265,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 298,
              "startColumn": 20,
              "endLine": 298,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 266,
            "startColumn": 20,
            "endLine": 266,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 299,
              "startColumn": 25,
              "endLine": 299,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 267,
            "startColumn": 25,
            "endLine": 267,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-ctxnfStatusreasonrequestinjectedLatencyMillis": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-ctxnfStatusreasonrequestinjectedLatencyMillis",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "rejectByClosingConnection",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 65,
              "startColumn": 35,
              "endLine": 65,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 263,
            "startColumn": 35,
            "endLine": 263,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 66,
              "startColumn": 28,
              "endLine": 66,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 265,
            "startColumn": 28,
            "endLine": 265,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 20,
              "endLine": 67,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 266,
            "startColumn": 20,
            "endLine": 266,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 68,
              "startColumn": 25,
              "endLine": 68,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 267,
            "startColumn": 25,
            "endLine": 267,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 69,
              "startColumn": 31,
              "endLine": 69,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 268,
            "startColumn": 31,
            "endLine": 268,
            "endColumn": 52
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-ctxrejectionTypenfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBody": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-ctxrejectionTypenfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBody",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "reject",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 35,
              "endLine": 228,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 263,
            "startColumn": 35,
            "endLine": 263,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType",
          "name": "rejectionType",
          "type": "com.netflix.netty.common.throttle.RejectionType",
          "displayedType": "RejectionType",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectionType",
            "name": "rejectionType",
            "type": "com.netflix.netty.common.throttle.RejectionType",
            "displayedType": "RejectionType",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 229,
              "startColumn": 27,
              "endLine": 229,
              "endColumn": 40
            }
          },
          "position": {
            "startLine": 264,
            "startColumn": 27,
            "endLine": 264,
            "endColumn": 40
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 28,
              "endLine": 230,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 265,
            "startColumn": 28,
            "endLine": 265,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 20,
              "endLine": 231,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 266,
            "startColumn": 20,
            "endLine": 266,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 232,
              "startColumn": 25,
              "endLine": 232,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 267,
            "startColumn": 25,
            "endLine": 267,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 233,
              "startColumn": 31,
              "endLine": 233,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 268,
            "startColumn": 31,
            "endLine": 268,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 234,
              "startColumn": 32,
              "endLine": 234,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 269,
            "startColumn": 32,
            "endLine": 269,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 235,
              "startColumn": 20,
              "endLine": 235,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 270,
            "startColumn": 20,
            "endLine": 270,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasonrequestinjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "sendRejectionResponse",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 105,
              "startColumn": 35,
              "endLine": 105,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 263,
            "startColumn": 35,
            "endLine": 263,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 106,
              "startColumn": 28,
              "endLine": 106,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 265,
            "startColumn": 28,
            "endLine": 265,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 107,
              "startColumn": 20,
              "endLine": 107,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 266,
            "startColumn": 20,
            "endLine": 266,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 108,
              "startColumn": 25,
              "endLine": 108,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 267,
            "startColumn": 25,
            "endLine": 267,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 109,
              "startColumn": 31,
              "endLine": 109,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 268,
            "startColumn": 31,
            "endLine": 268,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 110,
              "startColumn": 32,
              "endLine": 110,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 269,
            "startColumn": 32,
            "endLine": 269,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 111,
              "startColumn": 20,
              "endLine": 111,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 270,
            "startColumn": 20,
            "endLine": 270,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
          "name": "rejectionHeaders",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "displayedType": "Map<String, String>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
            "name": "rejectionHeaders",
            "type": "java.util.Map<java.lang.String, java.lang.String>",
            "displayedType": "Map<String, String>",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 112,
              "startColumn": 33,
              "endLine": 112,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 271,
            "startColumn": 33,
            "endLine": 271,
            "endColumn": 49
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxrejectionTypenfStatusreasoninjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxrejectionTypenfStatusreasoninjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "handleRejection",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 167,
              "startColumn": 35,
              "endLine": 167,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 263,
            "startColumn": 35,
            "endLine": 263,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType",
          "name": "rejectionType",
          "type": "com.netflix.netty.common.throttle.RejectionType",
          "displayedType": "RejectionType",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType",
            "name": "rejectionType",
            "type": "com.netflix.netty.common.throttle.RejectionType",
            "displayedType": "RejectionType",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 169,
              "startColumn": 27,
              "endLine": 169,
              "endColumn": 40
            }
          },
          "position": {
            "startLine": 264,
            "startColumn": 27,
            "endLine": 264,
            "endColumn": 40
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 170,
              "startColumn": 28,
              "endLine": 170,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 265,
            "startColumn": 28,
            "endLine": 265,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 171,
              "startColumn": 20,
              "endLine": 171,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 266,
            "startColumn": 20,
            "endLine": 266,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 172,
              "startColumn": 31,
              "endLine": 172,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 268,
            "startColumn": 31,
            "endLine": 268,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 173,
              "startColumn": 32,
              "endLine": 173,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 269,
            "startColumn": 32,
            "endLine": 269,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 174,
              "startColumn": 20,
              "endLine": 174,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 270,
            "startColumn": 20,
            "endLine": 270,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
          "name": "rejectionHeaders",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "displayedType": "Map<String, String>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
            "name": "rejectionHeaders",
            "type": "java.util.Map<java.lang.String, java.lang.String>",
            "displayedType": "Map<String, String>",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 175,
              "startColumn": 33,
              "endLine": 175,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 271,
            "startColumn": 33,
            "endLine": 271,
            "endColumn": 49
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RequestRejectedEvent-nfStatusreasonrequest": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RequestRejectedEvent-nfStatusreasonrequest",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "reject",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RequestRejectedEvent.java",
      "to_class_or_interface_name": "RequestRejectedEvent",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RequestRejectedEvent",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 25,
              "startColumn": 34,
              "endLine": 25,
              "endColumn": 42
            }
          },
          "position": {
            "startLine": 265,
            "startColumn": 28,
            "endLine": 265,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 27,
              "startColumn": 26,
              "endLine": 27,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 266,
            "startColumn": 20,
            "endLine": 266,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/request",
          "name": "request",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
          "displayedType": "HttpRequest",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RequestRejectedEvent/memberField/request",
            "name": "request",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest",
            "displayedType": "HttpRequest",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 24,
              "startColumn": 31,
              "endLine": 24,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 267,
            "startColumn": 25,
            "endLine": 267,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-ctxnfStatusreason": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)-ctxnfStatusreason",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "handleRejection",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "notifyHandlers",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 295,
              "startColumn": 35,
              "endLine": 295,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 167,
            "startColumn": 35,
            "endLine": 167,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 296,
              "startColumn": 28,
              "endLine": 296,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 170,
            "startColumn": 28,
            "endLine": 170,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/notifyHandlers(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus status, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "STATIC"
            ],
            "position": {
              "startLine": 298,
              "startColumn": 20,
              "endLine": 298,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 171,
            "startColumn": 20,
            "endLine": 171,
            "endColumn": 26
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-ctxnfStatusreasoninjectedLatencyMillis": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)-ctxnfStatusreasoninjectedLatencyMillis",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "handleRejection",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "rejectByClosingConnection",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 65,
              "startColumn": 35,
              "endLine": 65,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 167,
            "startColumn": 35,
            "endLine": 167,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 66,
              "startColumn": 28,
              "endLine": 66,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 170,
            "startColumn": 28,
            "endLine": 170,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 20,
              "endLine": 67,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 171,
            "startColumn": 20,
            "endLine": 171,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/rejectByClosingConnection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 69,
              "startColumn": 31,
              "endLine": 69,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 172,
            "startColumn": 31,
            "endLine": 172,
            "endColumn": 52
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-ctxrejectionTypenfStatusreasoninjectedLatencyMillisrejectedCoderejectedBody": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)-ctxrejectionTypenfStatusreasoninjectedLatencyMillisrejectedCoderejectedBody",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "handleRejection",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "reject",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 35,
              "endLine": 228,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 167,
            "startColumn": 35,
            "endLine": 167,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType",
          "name": "rejectionType",
          "type": "com.netflix.netty.common.throttle.RejectionType",
          "displayedType": "RejectionType",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectionType",
            "name": "rejectionType",
            "type": "com.netflix.netty.common.throttle.RejectionType",
            "displayedType": "RejectionType",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 229,
              "startColumn": 27,
              "endLine": 229,
              "endColumn": 40
            }
          },
          "position": {
            "startLine": 169,
            "startColumn": 27,
            "endLine": 169,
            "endColumn": 40
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 28,
              "endLine": 230,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 170,
            "startColumn": 28,
            "endLine": 170,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 20,
              "endLine": 231,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 171,
            "startColumn": 20,
            "endLine": 171,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 233,
              "startColumn": 31,
              "endLine": 233,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 172,
            "startColumn": 31,
            "endLine": 172,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 234,
              "startColumn": 32,
              "endLine": 234,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 173,
            "startColumn": 32,
            "endLine": 173,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 235,
              "startColumn": 20,
              "endLine": 235,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 174,
            "startColumn": 20,
            "endLine": 174,
            "endColumn": 32
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasoninjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxnfStatusreasoninjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "handleRejection",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "sendRejectionResponse",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 105,
              "startColumn": 35,
              "endLine": 105,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 167,
            "startColumn": 35,
            "endLine": 167,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 106,
              "startColumn": 28,
              "endLine": 106,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 170,
            "startColumn": 28,
            "endLine": 170,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 107,
              "startColumn": 20,
              "endLine": 107,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 171,
            "startColumn": 20,
            "endLine": 171,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 109,
              "startColumn": 31,
              "endLine": 109,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 172,
            "startColumn": 31,
            "endLine": 172,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 110,
              "startColumn": 32,
              "endLine": 110,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 173,
            "startColumn": 32,
            "endLine": 173,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 111,
              "startColumn": 20,
              "endLine": 111,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 174,
            "startColumn": 20,
            "endLine": 174,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
          "name": "rejectionHeaders",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "displayedType": "Map<String, String>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/sendRejectionResponse(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
            "name": "rejectionHeaders",
            "type": "java.util.Map<java.lang.String, java.lang.String>",
            "displayedType": "Map<String, String>",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 112,
              "startColumn": 33,
              "endLine": 112,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 175,
            "startColumn": 33,
            "endLine": 175,
            "endColumn": 49
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxrejectionTypenfStatusreasoninjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java-com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)-ctxrejectionTypenfStatusreasoninjectedLatencyMillisrejectedCoderejectedBodyrejectionHeaders",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "from_class_or_interface_name": "RejectionUtils",
      "from_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "from_method_name": "handleRejection",
      "from_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java",
      "to_class_or_interface_name": "RejectionUtils",
      "to_class_or_interface_key": "com.netflix.netty.common.throttle.RejectionUtils",
      "to_method_name": "reject",
      "to_method_key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 263,
              "startColumn": 35,
              "endLine": 263,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 167,
            "startColumn": 35,
            "endLine": 167,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType",
          "name": "rejectionType",
          "type": "com.netflix.netty.common.throttle.RejectionType",
          "displayedType": "RejectionType",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionType",
            "name": "rejectionType",
            "type": "com.netflix.netty.common.throttle.RejectionType",
            "displayedType": "RejectionType",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 264,
              "startColumn": 27,
              "endLine": 264,
              "endColumn": 40
            }
          },
          "position": {
            "startLine": 169,
            "startColumn": 27,
            "endLine": 169,
            "endColumn": 40
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
          "name": "nfStatus",
          "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/nfStatus",
            "name": "nfStatus",
            "type": "com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 265,
              "startColumn": 28,
              "endLine": 265,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 170,
            "startColumn": 28,
            "endLine": 170,
            "endColumn": 36
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 266,
              "startColumn": 20,
              "endLine": 266,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 171,
            "startColumn": 20,
            "endLine": 171,
            "endColumn": 26
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
          "name": "injectedLatencyMillis",
          "type": "java.lang.Integer",
          "displayedType": "Integer",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/injectedLatencyMillis",
            "name": "injectedLatencyMillis",
            "type": "java.lang.Integer",
            "displayedType": "Integer",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 268,
              "startColumn": 31,
              "endLine": 268,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 172,
            "startColumn": 31,
            "endLine": 172,
            "endColumn": 52
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
          "name": "rejectedCode",
          "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedCode",
            "name": "rejectedCode",
            "type": "com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 269,
              "startColumn": 32,
              "endLine": 269,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 173,
            "startColumn": 32,
            "endLine": 173,
            "endColumn": 44
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
          "name": "rejectedBody",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectedBody",
            "name": "rejectedBody",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 270,
              "startColumn": 20,
              "endLine": 270,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 174,
            "startColumn": 20,
            "endLine": 174,
            "endColumn": 32
          }
        },
        "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders": {
          "key": "com.netflix.netty.common.throttle.RejectionUtils/method/handleRejection(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
          "name": "rejectionHeaders",
          "type": "java.util.Map<java.lang.String, java.lang.String>",
          "displayedType": "Map<String, String>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.throttle.RejectionUtils/method/reject(com.netflix.netty.common.throttle.io.netty.channel.ChannelHandlerContext ctx, com.netflix.netty.common.throttle.RejectionType rejectionType, com.netflix.netty.common.throttle.com.netflix.zuul.stats.status.StatusCategory nfStatus, java.lang.String reason, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpRequest request, java.lang.Integer injectedLatencyMillis, com.netflix.netty.common.throttle.io.netty.handler.codec.http.HttpResponseStatus rejectedCode, java.lang.String rejectedBody, java.util.Map<java.lang.String, java.lang.String> rejectionHeaders)/parameter/rejectionHeaders",
            "name": "rejectionHeaders",
            "type": "java.util.Map<java.lang.String, java.lang.String>",
            "displayedType": "Map<String, String>",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 271,
              "startColumn": 33,
              "endLine": 271,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 175,
            "startColumn": 33,
            "endLine": 175,
            "endColumn": 49
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToOriginReadTimeout",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 208,
              "startColumn": 26,
              "endLine": 208,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 249,
            "startColumn": 26,
            "endLine": 249,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 250,
            "startColumn": 32,
            "endLine": 250,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 210,
              "startColumn": 27,
              "endLine": 210,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 251,
            "startColumn": 27,
            "endLine": 251,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 211,
              "startColumn": 27,
              "endLine": 211,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 252,
            "startColumn": 27,
            "endLine": 252,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToOriginReadTimeout",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "blockRequestWithMultipleHostHeaders",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 375,
              "startColumn": 26,
              "endLine": 375,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 249,
            "startColumn": 26,
            "endLine": 249,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 376,
              "startColumn": 32,
              "endLine": 376,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 250,
            "startColumn": 32,
            "endLine": 250,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 377,
              "startColumn": 27,
              "endLine": 377,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 251,
            "startColumn": 27,
            "endLine": 251,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 378,
              "startColumn": 27,
              "endLine": 378,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 252,
            "startColumn": 27,
            "endLine": 252,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToOriginReadTimeout",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 291,
              "startColumn": 26,
              "endLine": 291,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 249,
            "startColumn": 26,
            "endLine": 249,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 292,
              "startColumn": 32,
              "endLine": 292,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 250,
            "startColumn": 32,
            "endLine": 250,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 293,
              "startColumn": 27,
              "endLine": 293,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 251,
            "startColumn": 27,
            "endLine": 251,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 294,
              "startColumn": 27,
              "endLine": 294,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 252,
            "startColumn": 27,
            "endLine": 252,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToOriginReadTimeout",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGet_ServerChunkedDribbleDelay",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 351,
              "startColumn": 26,
              "endLine": 351,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 249,
            "startColumn": 26,
            "endLine": 249,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 352,
              "startColumn": 32,
              "endLine": 352,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 250,
            "startColumn": 32,
            "endLine": 250,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 353,
              "startColumn": 27,
              "endLine": 353,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 251,
            "startColumn": 27,
            "endLine": 251,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 354,
              "startColumn": 27,
              "endLine": 354,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 252,
            "startColumn": 27,
            "endLine": 252,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToOriginReadTimeout",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostWithInvalidHostHeader",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 26,
              "endLine": 228,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 249,
            "startColumn": 26,
            "endLine": 249,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 229,
              "startColumn": 32,
              "endLine": 229,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 250,
            "startColumn": 32,
            "endLine": 250,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 27,
              "endLine": 230,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 251,
            "startColumn": 27,
            "endLine": 251,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 27,
              "endLine": 231,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 252,
            "startColumn": 27,
            "endLine": 252,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToOriginReadTimeout",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 311,
              "startColumn": 26,
              "endLine": 311,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 249,
            "startColumn": 26,
            "endLine": 249,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 312,
              "startColumn": 32,
              "endLine": 312,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 250,
            "startColumn": 32,
            "endLine": 250,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 313,
              "startColumn": 27,
              "endLine": 313,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 251,
            "startColumn": 27,
            "endLine": 251,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 314,
              "startColumn": 27,
              "endLine": 314,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 252,
            "startColumn": 27,
            "endLine": 252,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToOriginReadTimeout",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 331,
              "startColumn": 26,
              "endLine": 331,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 249,
            "startColumn": 26,
            "endLine": 249,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 332,
              "startColumn": 32,
              "endLine": 332,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 250,
            "startColumn": 32,
            "endLine": 250,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 333,
              "startColumn": 27,
              "endLine": 333,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 251,
            "startColumn": 27,
            "endLine": 251,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 334,
              "startColumn": 27,
              "endLine": 334,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 252,
            "startColumn": 27,
            "endLine": 252,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToOriginReadTimeout",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 271,
              "startColumn": 26,
              "endLine": 271,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 249,
            "startColumn": 26,
            "endLine": 249,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 272,
              "startColumn": 32,
              "endLine": 272,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 250,
            "startColumn": 32,
            "endLine": 250,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 273,
              "startColumn": 27,
              "endLine": 273,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 251,
            "startColumn": 27,
            "endLine": 251,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 274,
              "startColumn": 27,
              "endLine": 274,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 252,
            "startColumn": 27,
            "endLine": 252,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToOriginReadTimeout",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 188,
              "startColumn": 26,
              "endLine": 188,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 249,
            "startColumn": 26,
            "endLine": 249,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 32,
              "endLine": 189,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 250,
            "startColumn": 32,
            "endLine": 250,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 190,
              "startColumn": 27,
              "endLine": 190,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 251,
            "startColumn": 27,
            "endLine": 251,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 191,
              "startColumn": 27,
              "endLine": 191,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 252,
            "startColumn": 27,
            "endLine": 252,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToOriginReadTimeout",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 249,
              "startColumn": 26,
              "endLine": 249,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 208,
            "startColumn": 26,
            "endLine": 208,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 250,
              "startColumn": 32,
              "endLine": 250,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 209,
            "startColumn": 32,
            "endLine": 209,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 251,
              "startColumn": 27,
              "endLine": 251,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 210,
            "startColumn": 27,
            "endLine": 210,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 252,
              "startColumn": 27,
              "endLine": 252,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 211,
            "startColumn": 27,
            "endLine": 211,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "blockRequestWithMultipleHostHeaders",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 375,
              "startColumn": 26,
              "endLine": 375,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 208,
            "startColumn": 26,
            "endLine": 208,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 376,
              "startColumn": 32,
              "endLine": 376,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 209,
            "startColumn": 32,
            "endLine": 209,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 377,
              "startColumn": 27,
              "endLine": 377,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 210,
            "startColumn": 27,
            "endLine": 210,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 378,
              "startColumn": 27,
              "endLine": 378,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 211,
            "startColumn": 27,
            "endLine": 211,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 291,
              "startColumn": 26,
              "endLine": 291,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 208,
            "startColumn": 26,
            "endLine": 208,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 292,
              "startColumn": 32,
              "endLine": 292,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 209,
            "startColumn": 32,
            "endLine": 209,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 293,
              "startColumn": 27,
              "endLine": 293,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 210,
            "startColumn": 27,
            "endLine": 210,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 294,
              "startColumn": 27,
              "endLine": 294,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 211,
            "startColumn": 27,
            "endLine": 211,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGet_ServerChunkedDribbleDelay",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 351,
              "startColumn": 26,
              "endLine": 351,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 208,
            "startColumn": 26,
            "endLine": 208,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 352,
              "startColumn": 32,
              "endLine": 352,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 209,
            "startColumn": 32,
            "endLine": 209,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 353,
              "startColumn": 27,
              "endLine": 353,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 210,
            "startColumn": 27,
            "endLine": 210,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 354,
              "startColumn": 27,
              "endLine": 354,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 211,
            "startColumn": 27,
            "endLine": 211,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostWithInvalidHostHeader",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 26,
              "endLine": 228,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 208,
            "startColumn": 26,
            "endLine": 208,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 229,
              "startColumn": 32,
              "endLine": 229,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 209,
            "startColumn": 32,
            "endLine": 209,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 27,
              "endLine": 230,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 210,
            "startColumn": 27,
            "endLine": 210,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 27,
              "endLine": 231,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 211,
            "startColumn": 27,
            "endLine": 211,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 311,
              "startColumn": 26,
              "endLine": 311,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 208,
            "startColumn": 26,
            "endLine": 208,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 312,
              "startColumn": 32,
              "endLine": 312,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 209,
            "startColumn": 32,
            "endLine": 209,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 313,
              "startColumn": 27,
              "endLine": 313,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 210,
            "startColumn": 27,
            "endLine": 210,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 314,
              "startColumn": 27,
              "endLine": 314,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 211,
            "startColumn": 27,
            "endLine": 211,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 331,
              "startColumn": 26,
              "endLine": 331,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 208,
            "startColumn": 26,
            "endLine": 208,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 332,
              "startColumn": 32,
              "endLine": 332,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 209,
            "startColumn": 32,
            "endLine": 209,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 333,
              "startColumn": 27,
              "endLine": 333,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 210,
            "startColumn": 27,
            "endLine": 210,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 334,
              "startColumn": 27,
              "endLine": 334,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 211,
            "startColumn": 27,
            "endLine": 211,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 271,
              "startColumn": 26,
              "endLine": 271,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 208,
            "startColumn": 26,
            "endLine": 208,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 272,
              "startColumn": 32,
              "endLine": 272,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 209,
            "startColumn": 32,
            "endLine": 209,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 273,
              "startColumn": 27,
              "endLine": 273,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 210,
            "startColumn": 27,
            "endLine": 210,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 274,
              "startColumn": 27,
              "endLine": 274,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 211,
            "startColumn": 27,
            "endLine": 211,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 188,
              "startColumn": 26,
              "endLine": 188,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 208,
            "startColumn": 26,
            "endLine": 208,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 32,
              "endLine": 189,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 209,
            "startColumn": 32,
            "endLine": 209,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 190,
              "startColumn": 27,
              "endLine": 190,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 210,
            "startColumn": 27,
            "endLine": 210,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 191,
              "startColumn": 27,
              "endLine": 191,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 211,
            "startColumn": 27,
            "endLine": 211,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "blockRequestWithMultipleHostHeaders",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToOriginReadTimeout",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 249,
              "startColumn": 26,
              "endLine": 249,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 375,
            "startColumn": 26,
            "endLine": 375,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 250,
              "startColumn": 32,
              "endLine": 250,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 376,
            "startColumn": 32,
            "endLine": 376,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 251,
              "startColumn": 27,
              "endLine": 251,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 377,
            "startColumn": 27,
            "endLine": 377,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 252,
              "startColumn": 27,
              "endLine": 252,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 378,
            "startColumn": 27,
            "endLine": 378,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "blockRequestWithMultipleHostHeaders",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 208,
              "startColumn": 26,
              "endLine": 208,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 375,
            "startColumn": 26,
            "endLine": 375,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 376,
            "startColumn": 32,
            "endLine": 376,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 210,
              "startColumn": 27,
              "endLine": 210,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 377,
            "startColumn": 27,
            "endLine": 377,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 211,
              "startColumn": 27,
              "endLine": 211,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 378,
            "startColumn": 27,
            "endLine": 378,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "blockRequestWithMultipleHostHeaders",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 291,
              "startColumn": 26,
              "endLine": 291,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 375,
            "startColumn": 26,
            "endLine": 375,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 292,
              "startColumn": 32,
              "endLine": 292,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 376,
            "startColumn": 32,
            "endLine": 376,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 293,
              "startColumn": 27,
              "endLine": 293,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 377,
            "startColumn": 27,
            "endLine": 377,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 294,
              "startColumn": 27,
              "endLine": 294,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 378,
            "startColumn": 27,
            "endLine": 378,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "blockRequestWithMultipleHostHeaders",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGet_ServerChunkedDribbleDelay",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 351,
              "startColumn": 26,
              "endLine": 351,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 375,
            "startColumn": 26,
            "endLine": 375,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 352,
              "startColumn": 32,
              "endLine": 352,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 376,
            "startColumn": 32,
            "endLine": 376,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 353,
              "startColumn": 27,
              "endLine": 353,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 377,
            "startColumn": 27,
            "endLine": 377,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 354,
              "startColumn": 27,
              "endLine": 354,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 378,
            "startColumn": 27,
            "endLine": 378,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "blockRequestWithMultipleHostHeaders",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostWithInvalidHostHeader",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 26,
              "endLine": 228,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 375,
            "startColumn": 26,
            "endLine": 375,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 229,
              "startColumn": 32,
              "endLine": 229,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 376,
            "startColumn": 32,
            "endLine": 376,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 27,
              "endLine": 230,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 377,
            "startColumn": 27,
            "endLine": 377,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 27,
              "endLine": 231,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 378,
            "startColumn": 27,
            "endLine": 378,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "blockRequestWithMultipleHostHeaders",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 311,
              "startColumn": 26,
              "endLine": 311,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 375,
            "startColumn": 26,
            "endLine": 375,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 312,
              "startColumn": 32,
              "endLine": 312,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 376,
            "startColumn": 32,
            "endLine": 376,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 313,
              "startColumn": 27,
              "endLine": 313,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 377,
            "startColumn": 27,
            "endLine": 377,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 314,
              "startColumn": 27,
              "endLine": 314,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 378,
            "startColumn": 27,
            "endLine": 378,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "blockRequestWithMultipleHostHeaders",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 331,
              "startColumn": 26,
              "endLine": 331,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 375,
            "startColumn": 26,
            "endLine": 375,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 332,
              "startColumn": 32,
              "endLine": 332,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 376,
            "startColumn": 32,
            "endLine": 376,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 333,
              "startColumn": 27,
              "endLine": 333,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 377,
            "startColumn": 27,
            "endLine": 377,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 334,
              "startColumn": 27,
              "endLine": 334,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 378,
            "startColumn": 27,
            "endLine": 378,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "blockRequestWithMultipleHostHeaders",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 271,
              "startColumn": 26,
              "endLine": 271,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 375,
            "startColumn": 26,
            "endLine": 375,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 272,
              "startColumn": 32,
              "endLine": 272,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 376,
            "startColumn": 32,
            "endLine": 376,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 273,
              "startColumn": 27,
              "endLine": 273,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 377,
            "startColumn": 27,
            "endLine": 377,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 274,
              "startColumn": 27,
              "endLine": 274,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 378,
            "startColumn": 27,
            "endLine": 378,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "blockRequestWithMultipleHostHeaders",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 188,
              "startColumn": 26,
              "endLine": 188,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 375,
            "startColumn": 26,
            "endLine": 375,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 32,
              "endLine": 189,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 376,
            "startColumn": 32,
            "endLine": 376,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 190,
              "startColumn": 27,
              "endLine": 190,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 377,
            "startColumn": 27,
            "endLine": 377,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 191,
              "startColumn": 27,
              "endLine": 191,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 378,
            "startColumn": 27,
            "endLine": 378,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToOriginReadTimeout",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 249,
              "startColumn": 26,
              "endLine": 249,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 291,
            "startColumn": 26,
            "endLine": 291,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 250,
              "startColumn": 32,
              "endLine": 250,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 292,
            "startColumn": 32,
            "endLine": 292,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 251,
              "startColumn": 27,
              "endLine": 251,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 293,
            "startColumn": 27,
            "endLine": 293,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 252,
              "startColumn": 27,
              "endLine": 252,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 294,
            "startColumn": 27,
            "endLine": 294,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 208,
              "startColumn": 26,
              "endLine": 208,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 291,
            "startColumn": 26,
            "endLine": 291,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 292,
            "startColumn": 32,
            "endLine": 292,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 210,
              "startColumn": 27,
              "endLine": 210,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 293,
            "startColumn": 27,
            "endLine": 293,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 211,
              "startColumn": 27,
              "endLine": 211,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 294,
            "startColumn": 27,
            "endLine": 294,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "blockRequestWithMultipleHostHeaders",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 375,
              "startColumn": 26,
              "endLine": 375,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 291,
            "startColumn": 26,
            "endLine": 291,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 376,
              "startColumn": 32,
              "endLine": 376,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 292,
            "startColumn": 32,
            "endLine": 292,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 377,
              "startColumn": 27,
              "endLine": 377,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 293,
            "startColumn": 27,
            "endLine": 293,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 378,
              "startColumn": 27,
              "endLine": 378,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 294,
            "startColumn": 27,
            "endLine": 294,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGet_ServerChunkedDribbleDelay",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 351,
              "startColumn": 26,
              "endLine": 351,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 291,
            "startColumn": 26,
            "endLine": 291,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 352,
              "startColumn": 32,
              "endLine": 352,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 292,
            "startColumn": 32,
            "endLine": 292,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 353,
              "startColumn": 27,
              "endLine": 353,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 293,
            "startColumn": 27,
            "endLine": 293,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 354,
              "startColumn": 27,
              "endLine": 354,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 294,
            "startColumn": 27,
            "endLine": 294,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostWithInvalidHostHeader",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 26,
              "endLine": 228,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 291,
            "startColumn": 26,
            "endLine": 291,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 229,
              "startColumn": 32,
              "endLine": 229,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 292,
            "startColumn": 32,
            "endLine": 292,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 27,
              "endLine": 230,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 293,
            "startColumn": 27,
            "endLine": 293,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 27,
              "endLine": 231,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 294,
            "startColumn": 27,
            "endLine": 294,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 311,
              "startColumn": 26,
              "endLine": 311,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 291,
            "startColumn": 26,
            "endLine": 291,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 312,
              "startColumn": 32,
              "endLine": 312,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 292,
            "startColumn": 32,
            "endLine": 292,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 313,
              "startColumn": 27,
              "endLine": 313,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 293,
            "startColumn": 27,
            "endLine": 293,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 314,
              "startColumn": 27,
              "endLine": 314,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 294,
            "startColumn": 27,
            "endLine": 294,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 331,
              "startColumn": 26,
              "endLine": 331,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 291,
            "startColumn": 26,
            "endLine": 291,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 332,
              "startColumn": 32,
              "endLine": 332,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 292,
            "startColumn": 32,
            "endLine": 292,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 333,
              "startColumn": 27,
              "endLine": 333,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 293,
            "startColumn": 27,
            "endLine": 293,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 334,
              "startColumn": 27,
              "endLine": 334,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 294,
            "startColumn": 27,
            "endLine": 294,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 271,
              "startColumn": 26,
              "endLine": 271,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 291,
            "startColumn": 26,
            "endLine": 291,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 272,
              "startColumn": 32,
              "endLine": 272,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 292,
            "startColumn": 32,
            "endLine": 292,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 273,
              "startColumn": 27,
              "endLine": 273,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 293,
            "startColumn": 27,
            "endLine": 293,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 274,
              "startColumn": 27,
              "endLine": 274,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 294,
            "startColumn": 27,
            "endLine": 294,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 188,
              "startColumn": 26,
              "endLine": 188,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 291,
            "startColumn": 26,
            "endLine": 291,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 32,
              "endLine": 189,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 292,
            "startColumn": 32,
            "endLine": 292,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 190,
              "startColumn": 27,
              "endLine": 190,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 293,
            "startColumn": 27,
            "endLine": 293,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 191,
              "startColumn": 27,
              "endLine": 191,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 294,
            "startColumn": 27,
            "endLine": 294,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGet_ServerChunkedDribbleDelay",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToOriginReadTimeout",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 249,
              "startColumn": 26,
              "endLine": 249,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 351,
            "startColumn": 26,
            "endLine": 351,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 250,
              "startColumn": 32,
              "endLine": 250,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 352,
            "startColumn": 32,
            "endLine": 352,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 251,
              "startColumn": 27,
              "endLine": 251,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 353,
            "startColumn": 27,
            "endLine": 353,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 252,
              "startColumn": 27,
              "endLine": 252,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 354,
            "startColumn": 27,
            "endLine": 354,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGet_ServerChunkedDribbleDelay",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 208,
              "startColumn": 26,
              "endLine": 208,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 351,
            "startColumn": 26,
            "endLine": 351,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 352,
            "startColumn": 32,
            "endLine": 352,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 210,
              "startColumn": 27,
              "endLine": 210,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 353,
            "startColumn": 27,
            "endLine": 353,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 211,
              "startColumn": 27,
              "endLine": 211,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 354,
            "startColumn": 27,
            "endLine": 354,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGet_ServerChunkedDribbleDelay",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "blockRequestWithMultipleHostHeaders",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 375,
              "startColumn": 26,
              "endLine": 375,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 351,
            "startColumn": 26,
            "endLine": 351,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 376,
              "startColumn": 32,
              "endLine": 376,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 352,
            "startColumn": 32,
            "endLine": 352,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 377,
              "startColumn": 27,
              "endLine": 377,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 353,
            "startColumn": 27,
            "endLine": 353,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 378,
              "startColumn": 27,
              "endLine": 378,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 354,
            "startColumn": 27,
            "endLine": 354,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGet_ServerChunkedDribbleDelay",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 291,
              "startColumn": 26,
              "endLine": 291,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 351,
            "startColumn": 26,
            "endLine": 351,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 292,
              "startColumn": 32,
              "endLine": 292,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 352,
            "startColumn": 32,
            "endLine": 352,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 293,
              "startColumn": 27,
              "endLine": 293,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 353,
            "startColumn": 27,
            "endLine": 353,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 294,
              "startColumn": 27,
              "endLine": 294,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 354,
            "startColumn": 27,
            "endLine": 354,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGet_ServerChunkedDribbleDelay",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostWithInvalidHostHeader",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 26,
              "endLine": 228,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 351,
            "startColumn": 26,
            "endLine": 351,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 229,
              "startColumn": 32,
              "endLine": 229,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 352,
            "startColumn": 32,
            "endLine": 352,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 27,
              "endLine": 230,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 353,
            "startColumn": 27,
            "endLine": 353,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 27,
              "endLine": 231,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 354,
            "startColumn": 27,
            "endLine": 354,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGet_ServerChunkedDribbleDelay",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 311,
              "startColumn": 26,
              "endLine": 311,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 351,
            "startColumn": 26,
            "endLine": 351,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 312,
              "startColumn": 32,
              "endLine": 312,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 352,
            "startColumn": 32,
            "endLine": 352,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 313,
              "startColumn": 27,
              "endLine": 313,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 353,
            "startColumn": 27,
            "endLine": 353,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 314,
              "startColumn": 27,
              "endLine": 314,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 354,
            "startColumn": 27,
            "endLine": 354,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGet_ServerChunkedDribbleDelay",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 331,
              "startColumn": 26,
              "endLine": 331,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 351,
            "startColumn": 26,
            "endLine": 351,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 332,
              "startColumn": 32,
              "endLine": 332,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 352,
            "startColumn": 32,
            "endLine": 352,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 333,
              "startColumn": 27,
              "endLine": 333,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 353,
            "startColumn": 27,
            "endLine": 353,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 334,
              "startColumn": 27,
              "endLine": 334,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 354,
            "startColumn": 27,
            "endLine": 354,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGet_ServerChunkedDribbleDelay",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 271,
              "startColumn": 26,
              "endLine": 271,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 351,
            "startColumn": 26,
            "endLine": 351,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 272,
              "startColumn": 32,
              "endLine": 272,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 352,
            "startColumn": 32,
            "endLine": 352,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 273,
              "startColumn": 27,
              "endLine": 273,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 353,
            "startColumn": 27,
            "endLine": 353,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 274,
              "startColumn": 27,
              "endLine": 274,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 354,
            "startColumn": 27,
            "endLine": 354,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGet_ServerChunkedDribbleDelay",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 188,
              "startColumn": 26,
              "endLine": 188,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 351,
            "startColumn": 26,
            "endLine": 351,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 32,
              "endLine": 189,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 352,
            "startColumn": 32,
            "endLine": 352,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 190,
              "startColumn": 27,
              "endLine": 190,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 353,
            "startColumn": 27,
            "endLine": 353,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 191,
              "startColumn": 27,
              "endLine": 191,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 354,
            "startColumn": 27,
            "endLine": 354,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostWithInvalidHostHeader",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToOriginReadTimeout",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 249,
              "startColumn": 26,
              "endLine": 249,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 26,
            "endLine": 228,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 250,
              "startColumn": 32,
              "endLine": 250,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 229,
            "startColumn": 32,
            "endLine": 229,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 251,
              "startColumn": 27,
              "endLine": 251,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 27,
            "endLine": 230,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 252,
              "startColumn": 27,
              "endLine": 252,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 27,
            "endLine": 231,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostWithInvalidHostHeader",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 208,
              "startColumn": 26,
              "endLine": 208,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 26,
            "endLine": 228,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 229,
            "startColumn": 32,
            "endLine": 229,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 210,
              "startColumn": 27,
              "endLine": 210,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 27,
            "endLine": 230,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 211,
              "startColumn": 27,
              "endLine": 211,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 27,
            "endLine": 231,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostWithInvalidHostHeader",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "blockRequestWithMultipleHostHeaders",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 375,
              "startColumn": 26,
              "endLine": 375,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 26,
            "endLine": 228,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 376,
              "startColumn": 32,
              "endLine": 376,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 229,
            "startColumn": 32,
            "endLine": 229,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 377,
              "startColumn": 27,
              "endLine": 377,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 27,
            "endLine": 230,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 378,
              "startColumn": 27,
              "endLine": 378,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 27,
            "endLine": 231,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostWithInvalidHostHeader",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 291,
              "startColumn": 26,
              "endLine": 291,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 26,
            "endLine": 228,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 292,
              "startColumn": 32,
              "endLine": 292,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 229,
            "startColumn": 32,
            "endLine": 229,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 293,
              "startColumn": 27,
              "endLine": 293,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 27,
            "endLine": 230,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 294,
              "startColumn": 27,
              "endLine": 294,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 27,
            "endLine": 231,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostWithInvalidHostHeader",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGet_ServerChunkedDribbleDelay",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 351,
              "startColumn": 26,
              "endLine": 351,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 26,
            "endLine": 228,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 352,
              "startColumn": 32,
              "endLine": 352,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 229,
            "startColumn": 32,
            "endLine": 229,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 353,
              "startColumn": 27,
              "endLine": 353,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 27,
            "endLine": 230,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 354,
              "startColumn": 27,
              "endLine": 354,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 27,
            "endLine": 231,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostWithInvalidHostHeader",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 311,
              "startColumn": 26,
              "endLine": 311,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 26,
            "endLine": 228,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 312,
              "startColumn": 32,
              "endLine": 312,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 229,
            "startColumn": 32,
            "endLine": 229,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 313,
              "startColumn": 27,
              "endLine": 313,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 27,
            "endLine": 230,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 314,
              "startColumn": 27,
              "endLine": 314,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 27,
            "endLine": 231,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostWithInvalidHostHeader",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 331,
              "startColumn": 26,
              "endLine": 331,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 26,
            "endLine": 228,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 332,
              "startColumn": 32,
              "endLine": 332,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 229,
            "startColumn": 32,
            "endLine": 229,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 333,
              "startColumn": 27,
              "endLine": 333,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 27,
            "endLine": 230,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 334,
              "startColumn": 27,
              "endLine": 334,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 27,
            "endLine": 231,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostWithInvalidHostHeader",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 271,
              "startColumn": 26,
              "endLine": 271,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 26,
            "endLine": 228,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 272,
              "startColumn": 32,
              "endLine": 272,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 229,
            "startColumn": 32,
            "endLine": 229,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 273,
              "startColumn": 27,
              "endLine": 273,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 27,
            "endLine": 230,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 274,
              "startColumn": 27,
              "endLine": 274,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 27,
            "endLine": 231,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpPostWithInvalidHostHeader",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 188,
              "startColumn": 26,
              "endLine": 188,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 228,
            "startColumn": 26,
            "endLine": 228,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 32,
              "endLine": 189,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 229,
            "startColumn": 32,
            "endLine": 229,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 190,
              "startColumn": 27,
              "endLine": 190,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 230,
            "startColumn": 27,
            "endLine": 230,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 191,
              "startColumn": 27,
              "endLine": 191,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 231,
            "startColumn": 27,
            "endLine": 231,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToOriginReadTimeout",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 249,
              "startColumn": 26,
              "endLine": 249,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 311,
            "startColumn": 26,
            "endLine": 311,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 250,
              "startColumn": 32,
              "endLine": 250,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 312,
            "startColumn": 32,
            "endLine": 312,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 251,
              "startColumn": 27,
              "endLine": 251,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 313,
            "startColumn": 27,
            "endLine": 313,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 252,
              "startColumn": 27,
              "endLine": 252,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 314,
            "startColumn": 27,
            "endLine": 314,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 208,
              "startColumn": 26,
              "endLine": 208,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 311,
            "startColumn": 26,
            "endLine": 311,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 312,
            "startColumn": 32,
            "endLine": 312,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 210,
              "startColumn": 27,
              "endLine": 210,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 313,
            "startColumn": 27,
            "endLine": 313,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 211,
              "startColumn": 27,
              "endLine": 211,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 314,
            "startColumn": 27,
            "endLine": 314,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "blockRequestWithMultipleHostHeaders",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 375,
              "startColumn": 26,
              "endLine": 375,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 311,
            "startColumn": 26,
            "endLine": 311,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 376,
              "startColumn": 32,
              "endLine": 376,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 312,
            "startColumn": 32,
            "endLine": 312,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 377,
              "startColumn": 27,
              "endLine": 377,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 313,
            "startColumn": 27,
            "endLine": 313,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 378,
              "startColumn": 27,
              "endLine": 378,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 314,
            "startColumn": 27,
            "endLine": 314,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 291,
              "startColumn": 26,
              "endLine": 291,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 311,
            "startColumn": 26,
            "endLine": 311,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 292,
              "startColumn": 32,
              "endLine": 292,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 312,
            "startColumn": 32,
            "endLine": 312,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 293,
              "startColumn": 27,
              "endLine": 293,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 313,
            "startColumn": 27,
            "endLine": 313,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 294,
              "startColumn": 27,
              "endLine": 294,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 314,
            "startColumn": 27,
            "endLine": 314,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGet_ServerChunkedDribbleDelay",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 351,
              "startColumn": 26,
              "endLine": 351,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 311,
            "startColumn": 26,
            "endLine": 311,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 352,
              "startColumn": 32,
              "endLine": 352,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 312,
            "startColumn": 32,
            "endLine": 312,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 353,
              "startColumn": 27,
              "endLine": 353,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 313,
            "startColumn": 27,
            "endLine": 313,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 354,
              "startColumn": 27,
              "endLine": 354,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 314,
            "startColumn": 27,
            "endLine": 314,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostWithInvalidHostHeader",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 26,
              "endLine": 228,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 311,
            "startColumn": 26,
            "endLine": 311,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 229,
              "startColumn": 32,
              "endLine": 229,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 312,
            "startColumn": 32,
            "endLine": 312,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 27,
              "endLine": 230,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 313,
            "startColumn": 27,
            "endLine": 313,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 27,
              "endLine": 231,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 314,
            "startColumn": 27,
            "endLine": 314,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 331,
              "startColumn": 26,
              "endLine": 331,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 311,
            "startColumn": 26,
            "endLine": 311,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 332,
              "startColumn": 32,
              "endLine": 332,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 312,
            "startColumn": 32,
            "endLine": 312,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 333,
              "startColumn": 27,
              "endLine": 333,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 313,
            "startColumn": 27,
            "endLine": 313,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 334,
              "startColumn": 27,
              "endLine": 334,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 314,
            "startColumn": 27,
            "endLine": 314,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 271,
              "startColumn": 26,
              "endLine": 271,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 311,
            "startColumn": 26,
            "endLine": 311,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 272,
              "startColumn": 32,
              "endLine": 272,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 312,
            "startColumn": 32,
            "endLine": 312,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 273,
              "startColumn": 27,
              "endLine": 273,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 313,
            "startColumn": 27,
            "endLine": 313,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 274,
              "startColumn": 27,
              "endLine": 274,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 314,
            "startColumn": 27,
            "endLine": 314,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 188,
              "startColumn": 26,
              "endLine": 188,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 311,
            "startColumn": 26,
            "endLine": 311,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 32,
              "endLine": 189,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 312,
            "startColumn": 32,
            "endLine": 312,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 190,
              "startColumn": 27,
              "endLine": 190,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 313,
            "startColumn": 27,
            "endLine": 313,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 191,
              "startColumn": 27,
              "endLine": 191,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 314,
            "startColumn": 27,
            "endLine": 314,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToOriginReadTimeout",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 249,
              "startColumn": 26,
              "endLine": 249,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 331,
            "startColumn": 26,
            "endLine": 331,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 250,
              "startColumn": 32,
              "endLine": 250,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 332,
            "startColumn": 32,
            "endLine": 332,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 251,
              "startColumn": 27,
              "endLine": 251,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 333,
            "startColumn": 27,
            "endLine": 333,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 252,
              "startColumn": 27,
              "endLine": 252,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 334,
            "startColumn": 27,
            "endLine": 334,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 208,
              "startColumn": 26,
              "endLine": 208,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 331,
            "startColumn": 26,
            "endLine": 331,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 332,
            "startColumn": 32,
            "endLine": 332,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 210,
              "startColumn": 27,
              "endLine": 210,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 333,
            "startColumn": 27,
            "endLine": 333,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 211,
              "startColumn": 27,
              "endLine": 211,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 334,
            "startColumn": 27,
            "endLine": 334,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "blockRequestWithMultipleHostHeaders",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 375,
              "startColumn": 26,
              "endLine": 375,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 331,
            "startColumn": 26,
            "endLine": 331,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 376,
              "startColumn": 32,
              "endLine": 376,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 332,
            "startColumn": 32,
            "endLine": 332,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 377,
              "startColumn": 27,
              "endLine": 377,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 333,
            "startColumn": 27,
            "endLine": 333,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 378,
              "startColumn": 27,
              "endLine": 378,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 334,
            "startColumn": 27,
            "endLine": 334,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 291,
              "startColumn": 26,
              "endLine": 291,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 331,
            "startColumn": 26,
            "endLine": 331,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 292,
              "startColumn": 32,
              "endLine": 292,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 332,
            "startColumn": 32,
            "endLine": 332,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 293,
              "startColumn": 27,
              "endLine": 293,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 333,
            "startColumn": 27,
            "endLine": 333,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 294,
              "startColumn": 27,
              "endLine": 294,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 334,
            "startColumn": 27,
            "endLine": 334,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGet_ServerChunkedDribbleDelay",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 351,
              "startColumn": 26,
              "endLine": 351,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 331,
            "startColumn": 26,
            "endLine": 331,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 352,
              "startColumn": 32,
              "endLine": 352,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 332,
            "startColumn": 32,
            "endLine": 332,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 353,
              "startColumn": 27,
              "endLine": 353,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 333,
            "startColumn": 27,
            "endLine": 333,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 354,
              "startColumn": 27,
              "endLine": 354,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 334,
            "startColumn": 27,
            "endLine": 334,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostWithInvalidHostHeader",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 26,
              "endLine": 228,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 331,
            "startColumn": 26,
            "endLine": 331,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 229,
              "startColumn": 32,
              "endLine": 229,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 332,
            "startColumn": 32,
            "endLine": 332,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 27,
              "endLine": 230,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 333,
            "startColumn": 27,
            "endLine": 333,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 27,
              "endLine": 231,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 334,
            "startColumn": 27,
            "endLine": 334,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 311,
              "startColumn": 26,
              "endLine": 311,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 331,
            "startColumn": 26,
            "endLine": 331,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 312,
              "startColumn": 32,
              "endLine": 312,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 332,
            "startColumn": 32,
            "endLine": 332,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 313,
              "startColumn": 27,
              "endLine": 313,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 333,
            "startColumn": 27,
            "endLine": 333,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 314,
              "startColumn": 27,
              "endLine": 314,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 334,
            "startColumn": 27,
            "endLine": 334,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 271,
              "startColumn": 26,
              "endLine": 271,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 331,
            "startColumn": 26,
            "endLine": 331,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 272,
              "startColumn": 32,
              "endLine": 272,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 332,
            "startColumn": 32,
            "endLine": 332,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 273,
              "startColumn": 27,
              "endLine": 273,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 333,
            "startColumn": 27,
            "endLine": 333,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 274,
              "startColumn": 27,
              "endLine": 274,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 334,
            "startColumn": 27,
            "endLine": 334,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 188,
              "startColumn": 26,
              "endLine": 188,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 331,
            "startColumn": 26,
            "endLine": 331,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 32,
              "endLine": 189,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 332,
            "startColumn": 32,
            "endLine": 332,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 190,
              "startColumn": 27,
              "endLine": 190,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 333,
            "startColumn": 27,
            "endLine": 333,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 191,
              "startColumn": 27,
              "endLine": 191,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 334,
            "startColumn": 27,
            "endLine": 334,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToOriginReadTimeout",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 249,
              "startColumn": 26,
              "endLine": 249,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 271,
            "startColumn": 26,
            "endLine": 271,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 250,
              "startColumn": 32,
              "endLine": 250,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 272,
            "startColumn": 32,
            "endLine": 272,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 251,
              "startColumn": 27,
              "endLine": 251,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 273,
            "startColumn": 27,
            "endLine": 273,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 252,
              "startColumn": 27,
              "endLine": 252,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 274,
            "startColumn": 27,
            "endLine": 274,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 208,
              "startColumn": 26,
              "endLine": 208,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 271,
            "startColumn": 26,
            "endLine": 271,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 272,
            "startColumn": 32,
            "endLine": 272,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 210,
              "startColumn": 27,
              "endLine": 210,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 273,
            "startColumn": 27,
            "endLine": 273,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 211,
              "startColumn": 27,
              "endLine": 211,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 274,
            "startColumn": 27,
            "endLine": 274,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "blockRequestWithMultipleHostHeaders",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 375,
              "startColumn": 26,
              "endLine": 375,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 271,
            "startColumn": 26,
            "endLine": 271,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 376,
              "startColumn": 32,
              "endLine": 376,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 272,
            "startColumn": 32,
            "endLine": 272,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 377,
              "startColumn": 27,
              "endLine": 377,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 273,
            "startColumn": 27,
            "endLine": 273,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 378,
              "startColumn": 27,
              "endLine": 378,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 274,
            "startColumn": 27,
            "endLine": 274,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 291,
              "startColumn": 26,
              "endLine": 291,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 271,
            "startColumn": 26,
            "endLine": 271,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 292,
              "startColumn": 32,
              "endLine": 292,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 272,
            "startColumn": 32,
            "endLine": 272,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 293,
              "startColumn": 27,
              "endLine": 293,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 273,
            "startColumn": 27,
            "endLine": 273,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 294,
              "startColumn": 27,
              "endLine": 294,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 274,
            "startColumn": 27,
            "endLine": 274,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGet_ServerChunkedDribbleDelay",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 351,
              "startColumn": 26,
              "endLine": 351,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 271,
            "startColumn": 26,
            "endLine": 271,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 352,
              "startColumn": 32,
              "endLine": 352,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 272,
            "startColumn": 32,
            "endLine": 272,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 353,
              "startColumn": 27,
              "endLine": 353,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 273,
            "startColumn": 27,
            "endLine": 273,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 354,
              "startColumn": 27,
              "endLine": 354,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 274,
            "startColumn": 27,
            "endLine": 274,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostWithInvalidHostHeader",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 26,
              "endLine": 228,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 271,
            "startColumn": 26,
            "endLine": 271,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 229,
              "startColumn": 32,
              "endLine": 229,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 272,
            "startColumn": 32,
            "endLine": 272,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 27,
              "endLine": 230,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 273,
            "startColumn": 27,
            "endLine": 273,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 27,
              "endLine": 231,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 274,
            "startColumn": 27,
            "endLine": 274,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 311,
              "startColumn": 26,
              "endLine": 311,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 271,
            "startColumn": 26,
            "endLine": 271,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 312,
              "startColumn": 32,
              "endLine": 312,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 272,
            "startColumn": 32,
            "endLine": 272,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 313,
              "startColumn": 27,
              "endLine": 313,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 273,
            "startColumn": 27,
            "endLine": 273,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 314,
              "startColumn": 27,
              "endLine": 314,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 274,
            "startColumn": 27,
            "endLine": 274,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 331,
              "startColumn": 26,
              "endLine": 331,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 271,
            "startColumn": 26,
            "endLine": 271,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 332,
              "startColumn": 32,
              "endLine": 332,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 272,
            "startColumn": 32,
            "endLine": 272,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 333,
              "startColumn": 27,
              "endLine": 333,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 273,
            "startColumn": 27,
            "endLine": 273,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 334,
              "startColumn": 27,
              "endLine": 334,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 274,
            "startColumn": 27,
            "endLine": 274,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 188,
              "startColumn": 26,
              "endLine": 188,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 271,
            "startColumn": 26,
            "endLine": 271,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 32,
              "endLine": 189,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 272,
            "startColumn": 32,
            "endLine": 272,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 190,
              "startColumn": 27,
              "endLine": 190,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 273,
            "startColumn": 27,
            "endLine": 273,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 191,
              "startColumn": 27,
              "endLine": 191,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 274,
            "startColumn": 27,
            "endLine": 274,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToOriginReadTimeout",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 249,
              "startColumn": 26,
              "endLine": 249,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 188,
            "startColumn": 26,
            "endLine": 188,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 250,
              "startColumn": 32,
              "endLine": 250,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 32,
            "endLine": 189,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 251,
              "startColumn": 27,
              "endLine": 251,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 190,
            "startColumn": 27,
            "endLine": 190,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToOriginReadTimeout(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 252,
              "startColumn": 27,
              "endLine": 252,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 191,
            "startColumn": 27,
            "endLine": 191,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostHappyPath",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 208,
              "startColumn": 26,
              "endLine": 208,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 188,
            "startColumn": 26,
            "endLine": 188,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 209,
              "startColumn": 32,
              "endLine": 209,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 32,
            "endLine": 189,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 210,
              "startColumn": 27,
              "endLine": 210,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 190,
            "startColumn": 27,
            "endLine": 190,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 211,
              "startColumn": 27,
              "endLine": 211,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 191,
            "startColumn": 27,
            "endLine": 191,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "blockRequestWithMultipleHostHeaders",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 375,
              "startColumn": 26,
              "endLine": 375,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 188,
            "startColumn": 26,
            "endLine": 188,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 376,
              "startColumn": 32,
              "endLine": 376,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 32,
            "endLine": 189,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 377,
              "startColumn": 27,
              "endLine": 377,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 190,
            "startColumn": 27,
            "endLine": 190,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/blockRequestWithMultipleHostHeaders(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 378,
              "startColumn": 27,
              "endLine": 378,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 191,
            "startColumn": 27,
            "endLine": 191,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns500",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 291,
              "startColumn": 26,
              "endLine": 291,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 188,
            "startColumn": 26,
            "endLine": 188,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 292,
              "startColumn": 32,
              "endLine": 292,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 32,
            "endLine": 189,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 293,
              "startColumn": 27,
              "endLine": 293,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 190,
            "startColumn": 27,
            "endLine": 190,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns500(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 294,
              "startColumn": 27,
              "endLine": 294,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 191,
            "startColumn": 27,
            "endLine": 191,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGet_ServerChunkedDribbleDelay",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 351,
              "startColumn": 26,
              "endLine": 351,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 188,
            "startColumn": 26,
            "endLine": 188,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 352,
              "startColumn": 32,
              "endLine": 352,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 32,
            "endLine": 189,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 353,
              "startColumn": 27,
              "endLine": 353,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 190,
            "startColumn": 27,
            "endLine": 190,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGet_ServerChunkedDribbleDelay(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 354,
              "startColumn": 27,
              "endLine": 354,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 191,
            "startColumn": 27,
            "endLine": 191,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpPostWithInvalidHostHeader",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 228,
              "startColumn": 26,
              "endLine": 228,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 188,
            "startColumn": 26,
            "endLine": 188,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 229,
              "startColumn": 32,
              "endLine": 229,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 32,
            "endLine": 189,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 230,
              "startColumn": 27,
              "endLine": 230,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 190,
            "startColumn": 27,
            "endLine": 190,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpPostWithInvalidHostHeader(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 27,
              "endLine": 231,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 191,
            "startColumn": 27,
            "endLine": 191,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "zuulWillRetryHttpGetWhenOriginReturns503",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 311,
              "startColumn": 26,
              "endLine": 311,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 188,
            "startColumn": 26,
            "endLine": 188,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 312,
              "startColumn": 32,
              "endLine": 312,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 32,
            "endLine": 189,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 313,
              "startColumn": 27,
              "endLine": 313,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 190,
            "startColumn": 27,
            "endLine": 190,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/zuulWillRetryHttpGetWhenOriginReturns503(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 314,
              "startColumn": 27,
              "endLine": 314,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 191,
            "startColumn": 27,
            "endLine": 191,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetReturnsStatus500DueToConnectionResetByPeer",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 331,
              "startColumn": 26,
              "endLine": 331,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 188,
            "startColumn": 26,
            "endLine": 188,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 332,
              "startColumn": 32,
              "endLine": 332,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 32,
            "endLine": 189,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 333,
              "startColumn": 27,
              "endLine": 333,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 190,
            "startColumn": 27,
            "endLine": 190,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetReturnsStatus500DueToConnectionResetByPeer(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 334,
              "startColumn": 27,
              "endLine": 334,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 191,
            "startColumn": 27,
            "endLine": 191,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java-com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)-descriptionokHttprequestBodyBufferingresponseBodyBuffering",
      "probability": 1,
      "from_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "from_class_or_interface_name": "IntegrationTest",
      "from_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "from_method_name": "httpGetHappyPath",
      "from_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "to_file_path": "zuul-integration-test/src/test/java/com/netflix/zuul/integration/IntegrationTest.java",
      "to_class_or_interface_name": "IntegrationTest",
      "to_class_or_interface_key": "com.netflix.zuul.integration.IntegrationTest",
      "to_method_name": "httpGetFailsDueToMalformedResponseChunk",
      "to_method_key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
          "name": "description",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/description",
            "name": "description",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 271,
              "startColumn": 26,
              "endLine": 271,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 188,
            "startColumn": 26,
            "endLine": 188,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
          "name": "okHttp",
          "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
          "displayedType": "OkHttpClient",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/okHttp",
            "name": "okHttp",
            "type": "com.netflix.zuul.integration.okhttp3.OkHttpClient",
            "displayedType": "OkHttpClient",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 272,
              "startColumn": 32,
              "endLine": 272,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 32,
            "endLine": 189,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
          "name": "requestBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/requestBodyBuffering",
            "name": "requestBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 273,
              "startColumn": 27,
              "endLine": 273,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 190,
            "startColumn": 27,
            "endLine": 190,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering": {
          "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetHappyPath(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
          "name": "responseBodyBuffering",
          "type": "boolean",
          "displayedType": "boolean",
          "probability": 1,
          "modifiers": [
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.integration.IntegrationTest/method/httpGetFailsDueToMalformedResponseChunk(java.lang.String description, com.netflix.zuul.integration.okhttp3.OkHttpClient okHttp, boolean requestBodyBuffering, boolean responseBodyBuffering)/parameter/responseBodyBuffering",
            "name": "responseBodyBuffering",
            "type": "boolean",
            "displayedType": "boolean",
            "modifiers": [
              "FINAL"
            ],
            "position": {
              "startLine": 274,
              "startColumn": 27,
              "endLine": 274,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 191,
            "startColumn": 27,
            "endLine": 191,
            "endColumn": 48
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "from_class_or_interface_name": "Headers",
      "from_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "from_method_name": "addNormal",
      "from_method_key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "to_class_or_interface_name": "Headers",
      "to_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "to_method_name": "setNormal",
      "to_method_key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName": {
          "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
          "name": "originalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
            "name": "originalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 246,
              "startColumn": 35,
              "endLine": 246,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 626,
            "startColumn": 35,
            "endLine": 626,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName": {
          "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
          "name": "normalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
            "name": "normalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 246,
              "startColumn": 56,
              "endLine": 246,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 626,
            "startColumn": 56,
            "endLine": 626,
            "endColumn": 66
          }
        },
        "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value": {
          "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
          "name": "value",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
            "name": "value",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 246,
              "startColumn": 85,
              "endLine": 246,
              "endColumn": 90
            }
          },
          "position": {
            "startLine": 626,
            "startColumn": 75,
            "endLine": 626,
            "endColumn": 80
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "from_class_or_interface_name": "Headers",
      "from_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "from_method_name": "addNormal",
      "from_method_key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "to_class_or_interface_name": "Headers",
      "to_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "to_method_name": "setIfAbsentNormal",
      "to_method_key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName": {
          "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
          "name": "originalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
            "name": "originalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 319,
              "startColumn": 46,
              "endLine": 319,
              "endColumn": 58
            }
          },
          "position": {
            "startLine": 626,
            "startColumn": 35,
            "endLine": 626,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName": {
          "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
          "name": "normalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
            "name": "normalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 319,
              "startColumn": 67,
              "endLine": 319,
              "endColumn": 77
            }
          },
          "position": {
            "startLine": 626,
            "startColumn": 56,
            "endLine": 626,
            "endColumn": 66
          }
        },
        "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value": {
          "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
          "name": "value",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
            "name": "value",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 319,
              "startColumn": 86,
              "endLine": 319,
              "endColumn": 91
            }
          },
          "position": {
            "startLine": 626,
            "startColumn": 75,
            "endLine": 626,
            "endColumn": 80
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "from_class_or_interface_name": "Headers",
      "from_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "from_method_name": "setNormal",
      "from_method_key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "to_class_or_interface_name": "Headers",
      "to_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "to_method_name": "addNormal",
      "to_method_key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName": {
          "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
          "name": "originalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
            "name": "originalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 626,
              "startColumn": 35,
              "endLine": 626,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 246,
            "startColumn": 35,
            "endLine": 246,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName": {
          "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
          "name": "normalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
            "name": "normalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 626,
              "startColumn": 56,
              "endLine": 626,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 246,
            "startColumn": 56,
            "endLine": 246,
            "endColumn": 66
          }
        },
        "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value": {
          "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
          "name": "value",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
            "name": "value",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 626,
              "startColumn": 75,
              "endLine": 626,
              "endColumn": 80
            }
          },
          "position": {
            "startLine": 246,
            "startColumn": 85,
            "endLine": 246,
            "endColumn": 90
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "from_class_or_interface_name": "Headers",
      "from_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "from_method_name": "setNormal",
      "from_method_key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "to_class_or_interface_name": "Headers",
      "to_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "to_method_name": "setIfAbsentNormal",
      "to_method_key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName": {
          "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
          "name": "originalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
            "name": "originalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 319,
              "startColumn": 46,
              "endLine": 319,
              "endColumn": 58
            }
          },
          "position": {
            "startLine": 246,
            "startColumn": 35,
            "endLine": 246,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName": {
          "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
          "name": "normalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
            "name": "normalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 319,
              "startColumn": 67,
              "endLine": 319,
              "endColumn": 77
            }
          },
          "position": {
            "startLine": 246,
            "startColumn": 56,
            "endLine": 246,
            "endColumn": 66
          }
        },
        "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value": {
          "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
          "name": "value",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
            "name": "value",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 319,
              "startColumn": 86,
              "endLine": 319,
              "endColumn": 91
            }
          },
          "position": {
            "startLine": 246,
            "startColumn": 85,
            "endLine": 246,
            "endColumn": 90
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "from_class_or_interface_name": "Headers",
      "from_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "from_method_name": "setIfAbsentNormal",
      "from_method_key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "to_class_or_interface_name": "Headers",
      "to_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "to_method_name": "addNormal",
      "to_method_key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName": {
          "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
          "name": "originalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
            "name": "originalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 626,
              "startColumn": 35,
              "endLine": 626,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 319,
            "startColumn": 46,
            "endLine": 319,
            "endColumn": 58
          }
        },
        "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName": {
          "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
          "name": "normalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
            "name": "normalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 626,
              "startColumn": 56,
              "endLine": 626,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 319,
            "startColumn": 67,
            "endLine": 319,
            "endColumn": 77
          }
        },
        "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value": {
          "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
          "name": "value",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/addNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
            "name": "value",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 626,
              "startColumn": 75,
              "endLine": 626,
              "endColumn": 80
            }
          },
          "position": {
            "startLine": 319,
            "startColumn": 86,
            "endLine": 319,
            "endColumn": 91
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/Headers.java-com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)-originalNamenormalNamevalue",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "from_class_or_interface_name": "Headers",
      "from_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "from_method_name": "setIfAbsentNormal",
      "from_method_key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/Headers.java",
      "to_class_or_interface_name": "Headers",
      "to_class_or_interface_key": "com.netflix.zuul.message.Headers",
      "to_method_name": "setNormal",
      "to_method_key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName": {
          "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
          "name": "originalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/originalName",
            "name": "originalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 246,
              "startColumn": 35,
              "endLine": 246,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 319,
            "startColumn": 46,
            "endLine": 319,
            "endColumn": 58
          }
        },
        "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName": {
          "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
          "name": "normalName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/normalName",
            "name": "normalName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 246,
              "startColumn": 56,
              "endLine": 246,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 319,
            "startColumn": 67,
            "endLine": 319,
            "endColumn": 77
          }
        },
        "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value": {
          "key": "com.netflix.zuul.message.Headers/method/setIfAbsentNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
          "name": "value",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.Headers/method/setNormal(java.lang.String originalName, java.lang.String normalName, java.lang.String value)/parameter/value",
            "name": "value",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 246,
              "startColumn": 85,
              "endLine": 246,
              "endColumn": 90
            }
          },
          "position": {
            "startLine": 319,
            "startColumn": 86,
            "endLine": 319,
            "endColumn": 91
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java-com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-chanregistrymetricBase": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java-com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-chanregistrymetricBase",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java",
      "from_class_or_interface_name": "ConnCounter",
      "from_class_or_interface_key": "com.netflix.zuul.monitoring.ConnCounter",
      "from_method_name": "install",
      "from_method_key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java",
      "to_class_or_interface_name": "ConnTimer",
      "to_class_or_interface_key": "com.netflix.zuul.monitoring.ConnTimer",
      "to_method_name": "install",
      "to_method_key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan",
          "name": "chan",
          "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
          "displayedType": "Channel",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan",
            "name": "chan",
            "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
            "displayedType": "Channel",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 72,
              "startColumn": 45,
              "endLine": 72,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 47,
            "endLine": 75,
            "endColumn": 51
          }
        },
        "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry",
          "name": "registry",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry",
            "name": "registry",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 72,
              "startColumn": 60,
              "endLine": 72,
              "endColumn": 68
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 62,
            "endLine": 75,
            "endColumn": 70
          }
        },
        "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase",
          "name": "metricBase",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
          "displayedType": "Id",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase",
            "name": "metricBase",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
            "displayedType": "Id",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 72,
              "startColumn": 73,
              "endLine": 72,
              "endColumn": 83
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 75,
            "endLine": 75,
            "endColumn": 85
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java-com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnCounter-chanregistrymetricBase": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java-com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnCounter-chanregistrymetricBase",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java",
      "from_class_or_interface_name": "ConnCounter",
      "from_class_or_interface_key": "com.netflix.zuul.monitoring.ConnCounter",
      "from_method_name": "install",
      "from_method_key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java",
      "to_class_or_interface_name": "ConnCounter",
      "to_class_or_interface_key": "com.netflix.zuul.monitoring.ConnCounter",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan",
          "name": "chan",
          "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
          "displayedType": "Channel",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/chan",
            "name": "chan",
            "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
            "displayedType": "Channel",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 62,
              "startColumn": 27,
              "endLine": 62,
              "endColumn": 31
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 47,
            "endLine": 75,
            "endColumn": 51
          }
        },
        "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry",
          "name": "registry",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 61,
              "startColumn": 28,
              "endLine": 61,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 62,
            "endLine": 75,
            "endColumn": 70
          }
        },
        "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase",
          "name": "metricBase",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
          "displayedType": "Id",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/metricBase",
            "name": "metricBase",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
            "displayedType": "Id",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 63,
              "startColumn": 22,
              "endLine": 63,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 75,
            "endLine": 75,
            "endColumn": 85
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java-com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnTimer-chanregistrymetricBase": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java-com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnTimer-chanregistrymetricBase",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java",
      "from_class_or_interface_name": "ConnCounter",
      "from_class_or_interface_key": "com.netflix.zuul.monitoring.ConnCounter",
      "from_method_name": "install",
      "from_method_key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java",
      "to_class_or_interface_name": "ConnTimer",
      "to_class_or_interface_key": "com.netflix.zuul.monitoring.ConnTimer",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan",
          "name": "chan",
          "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
          "displayedType": "Channel",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/chan",
            "name": "chan",
            "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
            "displayedType": "Channel",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 52,
              "startColumn": 27,
              "endLine": 52,
              "endColumn": 31
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 47,
            "endLine": 75,
            "endColumn": 51
          }
        },
        "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry",
          "name": "registry",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 28,
              "endLine": 51,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 62,
            "endLine": 75,
            "endColumn": 70
          }
        },
        "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase",
          "name": "metricBase",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
          "displayedType": "Id",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/metricBase",
            "name": "metricBase",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
            "displayedType": "Id",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 54,
              "startColumn": 22,
              "endLine": 54,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 75,
            "endLine": 75,
            "endColumn": 85
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java-com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-chanregistrymetricBase": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java-com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-chanregistrymetricBase",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java",
      "from_class_or_interface_name": "ConnTimer",
      "from_class_or_interface_key": "com.netflix.zuul.monitoring.ConnTimer",
      "from_method_name": "install",
      "from_method_key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java",
      "to_class_or_interface_name": "ConnCounter",
      "to_class_or_interface_key": "com.netflix.zuul.monitoring.ConnCounter",
      "to_method_name": "install",
      "to_method_key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan",
          "name": "chan",
          "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
          "displayedType": "Channel",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan",
            "name": "chan",
            "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
            "displayedType": "Channel",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 75,
              "startColumn": 47,
              "endLine": 75,
              "endColumn": 51
            }
          },
          "position": {
            "startLine": 72,
            "startColumn": 45,
            "endLine": 72,
            "endColumn": 49
          }
        },
        "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry",
          "name": "registry",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry",
            "name": "registry",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 75,
              "startColumn": 62,
              "endLine": 75,
              "endColumn": 70
            }
          },
          "position": {
            "startLine": 72,
            "startColumn": 60,
            "endLine": 72,
            "endColumn": 68
          }
        },
        "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase",
          "name": "metricBase",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
          "displayedType": "Id",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase",
            "name": "metricBase",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
            "displayedType": "Id",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 75,
              "startColumn": 75,
              "endLine": 75,
              "endColumn": 85
            }
          },
          "position": {
            "startLine": 72,
            "startColumn": 73,
            "endLine": 72,
            "endColumn": 83
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java-com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnCounter-chanregistrymetricBase": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java-com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnCounter-chanregistrymetricBase",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java",
      "from_class_or_interface_name": "ConnTimer",
      "from_class_or_interface_key": "com.netflix.zuul.monitoring.ConnTimer",
      "from_method_name": "install",
      "from_method_key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java",
      "to_class_or_interface_name": "ConnCounter",
      "to_class_or_interface_key": "com.netflix.zuul.monitoring.ConnCounter",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan",
          "name": "chan",
          "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
          "displayedType": "Channel",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/chan",
            "name": "chan",
            "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
            "displayedType": "Channel",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 62,
              "startColumn": 27,
              "endLine": 62,
              "endColumn": 31
            }
          },
          "position": {
            "startLine": 72,
            "startColumn": 45,
            "endLine": 72,
            "endColumn": 49
          }
        },
        "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry",
          "name": "registry",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 61,
              "startColumn": 28,
              "endLine": 61,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 72,
            "startColumn": 60,
            "endLine": 72,
            "endColumn": 68
          }
        },
        "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase",
          "name": "metricBase",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
          "displayedType": "Id",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/metricBase",
            "name": "metricBase",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
            "displayedType": "Id",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 63,
              "startColumn": 22,
              "endLine": 63,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 72,
            "startColumn": 73,
            "endLine": 72,
            "endColumn": 83
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java-com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnTimer-chanregistrymetricBase": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java-com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)-com.netflix.zuul.monitoring.ConnTimer-chanregistrymetricBase",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java",
      "from_class_or_interface_name": "ConnTimer",
      "from_class_or_interface_key": "com.netflix.zuul.monitoring.ConnTimer",
      "from_method_name": "install",
      "from_method_key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java",
      "to_class_or_interface_name": "ConnTimer",
      "to_class_or_interface_key": "com.netflix.zuul.monitoring.ConnTimer",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/chan",
          "name": "chan",
          "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
          "displayedType": "Channel",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/chan",
            "name": "chan",
            "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
            "displayedType": "Channel",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 52,
              "startColumn": 27,
              "endLine": 52,
              "endColumn": 31
            }
          },
          "position": {
            "startLine": 72,
            "startColumn": 45,
            "endLine": 72,
            "endColumn": 49
          }
        },
        "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/registry",
          "name": "registry",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 28,
              "endLine": 51,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 72,
            "startColumn": 60,
            "endLine": 72,
            "endColumn": 68
          }
        },
        "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/method/install(com.netflix.zuul.monitoring.io.netty.channel.Channel chan, com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry registry, com.netflix.zuul.monitoring.com.netflix.spectator.api.Id metricBase)/parameter/metricBase",
          "name": "metricBase",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
          "displayedType": "Id",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/metricBase",
            "name": "metricBase",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
            "displayedType": "Id",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 54,
              "startColumn": 22,
              "endLine": 54,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 72,
            "startColumn": 73,
            "endLine": 72,
            "endColumn": 83
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-nameidnumber": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-nameidnumber",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "from_class_or_interface_name": "SpectatorUtils",
      "from_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "from_method_name": "newGauge",
      "from_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "to_class_or_interface_name": "SpectatorUtils",
      "to_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "to_method_name": "newGauge",
      "to_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)/parameter/name": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)/parameter/name",
          "name": "name",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/name",
            "name": "name",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 56,
              "endLine": 51,
              "endColumn": 60
            }
          },
          "position": {
            "startLine": 45,
            "startColumn": 56,
            "endLine": 45,
            "endColumn": 60
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)/parameter/id": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)/parameter/id",
          "name": "id",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/id",
            "name": "id",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 69,
              "endLine": 51,
              "endColumn": 71
            }
          },
          "position": {
            "startLine": 45,
            "startColumn": 69,
            "endLine": 45,
            "endColumn": 71
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)/parameter/number": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)/parameter/number",
          "name": "number",
          "type": "T",
          "displayedType": "T",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/number",
            "name": "number",
            "type": "T",
            "displayedType": "T",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 75,
              "endLine": 51,
              "endColumn": 81
            }
          },
          "position": {
            "startLine": 45,
            "startColumn": 75,
            "endLine": 45,
            "endColumn": 81
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)-nameidtags": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)-nameidtags",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "from_class_or_interface_name": "SpectatorUtils",
      "from_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "from_method_name": "newCounter",
      "from_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "to_class_or_interface_name": "SpectatorUtils",
      "to_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "to_method_name": "newTimer",
      "to_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name",
          "name": "name",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name",
            "name": "name",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 41,
              "startColumn": 41,
              "endLine": 41,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 32,
            "startColumn": 45,
            "endLine": 32,
            "endColumn": 49
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id",
          "name": "id",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id",
            "name": "id",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 41,
              "startColumn": 54,
              "endLine": 41,
              "endColumn": 56
            }
          },
          "position": {
            "startLine": 32,
            "startColumn": 58,
            "endLine": 32,
            "endColumn": 60
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags",
          "name": "tags",
          "type": "java.lang.String[]",
          "displayedType": "String[]",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags",
            "name": "tags",
            "type": "java.lang.String[]",
            "displayedType": "String[]",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 41,
              "startColumn": 68,
              "endLine": 41,
              "endColumn": 72
            }
          },
          "position": {
            "startLine": 32,
            "startColumn": 72,
            "endLine": 32,
            "endColumn": 76
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-nameidtags": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-nameidtags",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "from_class_or_interface_name": "SpectatorUtils",
      "from_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "from_method_name": "newCounter",
      "from_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "to_class_or_interface_name": "SpectatorUtils",
      "to_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "to_method_name": "newGauge",
      "to_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name",
          "name": "name",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/name",
            "name": "name",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 56,
              "endLine": 51,
              "endColumn": 60
            }
          },
          "position": {
            "startLine": 32,
            "startColumn": 45,
            "endLine": 32,
            "endColumn": 49
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id",
          "name": "id",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/id",
            "name": "id",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 69,
              "endLine": 51,
              "endColumn": 71
            }
          },
          "position": {
            "startLine": 32,
            "startColumn": 58,
            "endLine": 32,
            "endColumn": 60
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags",
          "name": "tags",
          "type": "java.lang.String[]",
          "displayedType": "String[]",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/tags",
            "name": "tags",
            "type": "java.lang.String[]",
            "displayedType": "String[]",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 93,
              "endLine": 51,
              "endColumn": 97
            }
          },
          "position": {
            "startLine": 32,
            "startColumn": 72,
            "endLine": 32,
            "endColumn": 76
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)-nameidtags": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)-nameidtags",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "from_class_or_interface_name": "SpectatorUtils",
      "from_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "from_method_name": "newTimer",
      "from_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "to_class_or_interface_name": "SpectatorUtils",
      "to_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "to_method_name": "newCounter",
      "to_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name",
          "name": "name",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name",
            "name": "name",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 32,
              "startColumn": 45,
              "endLine": 32,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 41,
            "startColumn": 41,
            "endLine": 41,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id",
          "name": "id",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id",
            "name": "id",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 32,
              "startColumn": 58,
              "endLine": 32,
              "endColumn": 60
            }
          },
          "position": {
            "startLine": 41,
            "startColumn": 54,
            "endLine": 41,
            "endColumn": 56
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags",
          "name": "tags",
          "type": "java.lang.String[]",
          "displayedType": "String[]",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags",
            "name": "tags",
            "type": "java.lang.String[]",
            "displayedType": "String[]",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 32,
              "startColumn": 72,
              "endLine": 32,
              "endColumn": 76
            }
          },
          "position": {
            "startLine": 41,
            "startColumn": 68,
            "endLine": 41,
            "endColumn": 72
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-nameidtags": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-nameidtags",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "from_class_or_interface_name": "SpectatorUtils",
      "from_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "from_method_name": "newTimer",
      "from_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "to_class_or_interface_name": "SpectatorUtils",
      "to_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "to_method_name": "newGauge",
      "to_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name",
          "name": "name",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/name",
            "name": "name",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 56,
              "endLine": 51,
              "endColumn": 60
            }
          },
          "position": {
            "startLine": 41,
            "startColumn": 41,
            "endLine": 41,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id",
          "name": "id",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/id",
            "name": "id",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 69,
              "endLine": 51,
              "endColumn": 71
            }
          },
          "position": {
            "startLine": 41,
            "startColumn": 54,
            "endLine": 41,
            "endColumn": 56
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags",
          "name": "tags",
          "type": "java.lang.String[]",
          "displayedType": "String[]",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/tags",
            "name": "tags",
            "type": "java.lang.String[]",
            "displayedType": "String[]",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 93,
              "endLine": 51,
              "endColumn": 97
            }
          },
          "position": {
            "startLine": 41,
            "startColumn": 68,
            "endLine": 41,
            "endColumn": 72
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)-nameidnumber": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)-nameidnumber",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "from_class_or_interface_name": "SpectatorUtils",
      "from_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "from_method_name": "newGauge",
      "from_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "to_class_or_interface_name": "SpectatorUtils",
      "to_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "to_method_name": "newGauge",
      "to_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/name": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/name",
          "name": "name",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)/parameter/name",
            "name": "name",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 45,
              "startColumn": 56,
              "endLine": 45,
              "endColumn": 60
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 56,
            "endLine": 51,
            "endColumn": 60
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/id": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/id",
          "name": "id",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)/parameter/id",
            "name": "id",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 45,
              "startColumn": 69,
              "endLine": 45,
              "endColumn": 71
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 69,
            "endLine": 51,
            "endColumn": 71
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/number": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/number",
          "name": "number",
          "type": "T",
          "displayedType": "T",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number)/parameter/number",
            "name": "number",
            "type": "T",
            "displayedType": "T",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 45,
              "startColumn": 75,
              "endLine": 45,
              "endColumn": 81
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 75,
            "endLine": 51,
            "endColumn": 81
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)-nameidtags": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)-nameidtags",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "from_class_or_interface_name": "SpectatorUtils",
      "from_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "from_method_name": "newGauge",
      "from_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "to_class_or_interface_name": "SpectatorUtils",
      "to_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "to_method_name": "newCounter",
      "to_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/name": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/name",
          "name": "name",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name",
            "name": "name",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 32,
              "startColumn": 45,
              "endLine": 32,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 56,
            "endLine": 51,
            "endColumn": 60
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/id": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/id",
          "name": "id",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id",
            "name": "id",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 32,
              "startColumn": 58,
              "endLine": 32,
              "endColumn": 60
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 69,
            "endLine": 51,
            "endColumn": 71
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/tags": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/tags",
          "name": "tags",
          "type": "java.lang.String[]",
          "displayedType": "String[]",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newCounter(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags",
            "name": "tags",
            "type": "java.lang.String[]",
            "displayedType": "String[]",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 32,
              "startColumn": 72,
              "endLine": 32,
              "endColumn": 76
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 93,
            "endLine": 51,
            "endColumn": 97
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)-nameidtags": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java-com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)-com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)-nameidtags",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "from_class_or_interface_name": "SpectatorUtils",
      "from_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "from_method_name": "newGauge",
      "from_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/SpectatorUtils.java",
      "to_class_or_interface_name": "SpectatorUtils",
      "to_class_or_interface_key": "com.netflix.zuul.netty.SpectatorUtils",
      "to_method_name": "newTimer",
      "to_method_key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/name": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/name",
          "name": "name",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/name",
            "name": "name",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 41,
              "startColumn": 41,
              "endLine": 41,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 56,
            "endLine": 51,
            "endColumn": 60
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/id": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/id",
          "name": "id",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/id",
            "name": "id",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 41,
              "startColumn": 54,
              "endLine": 41,
              "endColumn": 56
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 69,
            "endLine": 51,
            "endColumn": 71
          }
        },
        "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/tags": {
          "key": "com.netflix.zuul.netty.SpectatorUtils/method/newGauge(java.lang.String name, java.lang.String id, T number, java.lang.String[] tags)/parameter/tags",
          "name": "tags",
          "type": "java.lang.String[]",
          "displayedType": "String[]",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.SpectatorUtils/method/newTimer(java.lang.String name, java.lang.String id, java.lang.String[] tags)/parameter/tags",
            "name": "tags",
            "type": "java.lang.String[]",
            "displayedType": "String[]",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 41,
              "startColumn": 68,
              "endLine": 41,
              "endColumn": 72
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 93,
            "endLine": 51,
            "endColumn": 97
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java-com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java-com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java",
      "from_class_or_interface_name": "ClientChannelManager",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager",
      "from_method_name": "acquire",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/IConnectionPool.java",
      "to_class_or_interface_name": "IConnectionPool",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.IConnectionPool",
      "to_method_name": "acquire",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop": {
          "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
          "name": "eventLoop",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
          "displayedType": "EventLoop",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
            "name": "eventLoop",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
            "displayedType": "EventLoop",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 33,
              "startColumn": 23,
              "endLine": 33,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 50,
            "startColumn": 23,
            "endLine": 50,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 33,
              "startColumn": 50,
              "endLine": 33,
              "endColumn": 58
            }
          },
          "position": {
            "startLine": 52,
            "startColumn": 29,
            "endLine": 52,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr": {
          "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
          "name": "selectedHostAddr",
          "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
          "displayedType": "AtomicReference<? super InetAddress>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
            "name": "selectedHostAddr",
            "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
            "displayedType": "AtomicReference<? super InetAddress>",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 33,
              "startColumn": 97,
              "endLine": 33,
              "endColumn": 113
            }
          },
          "position": {
            "startLine": 54,
            "startColumn": 50,
            "endLine": 54,
            "endColumn": 66
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java-com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java-com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java",
      "from_class_or_interface_name": "ClientChannelManager",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager",
      "from_method_name": "acquire",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "to_class_or_interface_name": "PerServerConnectionPool",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "to_method_name": "acquire",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop": {
          "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
          "name": "eventLoop",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
          "displayedType": "EventLoop",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
            "name": "eventLoop",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
            "displayedType": "EventLoop",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 155,
              "startColumn": 23,
              "endLine": 155,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 50,
            "startColumn": 23,
            "endLine": 50,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 155,
              "startColumn": 50,
              "endLine": 155,
              "endColumn": 58
            }
          },
          "position": {
            "startLine": 52,
            "startColumn": 29,
            "endLine": 52,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr": {
          "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
          "name": "selectedHostAddr",
          "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
          "displayedType": "AtomicReference<? super InetAddress>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
            "name": "selectedHostAddr",
            "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
            "displayedType": "AtomicReference<? super InetAddress>",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 155,
              "startColumn": 97,
              "endLine": 155,
              "endColumn": 113
            }
          },
          "position": {
            "startLine": 54,
            "startColumn": 50,
            "endLine": 54,
            "endColumn": 66
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java-com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java-com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java",
      "from_class_or_interface_name": "ClientChannelManager",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager",
      "from_method_name": "acquire",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "to_class_or_interface_name": "PerServerConnectionPool",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "to_method_name": "tryMakingNewConnection",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop": {
          "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
          "name": "eventLoop",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
          "displayedType": "EventLoop",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
            "name": "eventLoop",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
            "displayedType": "EventLoop",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 232,
              "startColumn": 23,
              "endLine": 232,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 50,
            "startColumn": 23,
            "endLine": 50,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 234,
              "startColumn": 29,
              "endLine": 234,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 52,
            "startColumn": 29,
            "endLine": 52,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr": {
          "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
          "name": "selectedHostAddr",
          "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
          "displayedType": "AtomicReference<? super InetAddress>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
            "name": "selectedHostAddr",
            "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
            "displayedType": "AtomicReference<? super InetAddress>",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 235,
              "startColumn": 50,
              "endLine": 235,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 54,
            "startColumn": 50,
            "endLine": 54,
            "endColumn": 66
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createChannelInitializer(com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry registry)-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-clientConfigconnPoolConfigregistry": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createChannelInitializer(com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry registry)-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-clientConfigconnPoolConfigregistry",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "from_class_or_interface_name": "DefaultClientChannelManager",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "from_method_name": "createChannelInitializer",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createChannelInitializer(com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry registry)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "to_class_or_interface_name": "DefaultClientChannelManager",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createChannelInitializer(com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry registry)/parameter/clientConfig": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createChannelInitializer(com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry registry)/parameter/clientConfig",
          "name": "clientConfig",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig",
          "displayedType": "IClientConfig",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/clientConfig",
            "name": "clientConfig",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig",
            "displayedType": "IClientConfig",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 70,
              "startColumn": 33,
              "endLine": 70,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 153,
            "startColumn": 27,
            "endLine": 153,
            "endColumn": 39
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createChannelInitializer(com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry registry)/parameter/connPoolConfig": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createChannelInitializer(com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry registry)/parameter/connPoolConfig",
          "name": "connPoolConfig",
          "type": "com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig",
          "displayedType": "ConnectionPoolConfig",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connPoolConfig",
            "name": "connPoolConfig",
            "type": "com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig",
            "displayedType": "ConnectionPoolConfig",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 69,
              "startColumn": 40,
              "endLine": 69,
              "endColumn": 54
            }
          },
          "position": {
            "startLine": 153,
            "startColumn": 62,
            "endLine": 153,
            "endColumn": 76
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createChannelInitializer(com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry registry)/parameter/registry": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createChannelInitializer(com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry registry)/parameter/registry",
          "name": "registry",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 71,
              "startColumn": 28,
              "endLine": 71,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 153,
            "startColumn": 87,
            "endLine": 153,
            "endColumn": 95
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-clientConnFactoryconnPoolConfigclientConfigcreateNewConnCountercreateConnSucceededCountercreateConnFailedCounterrequestConnCounterreuseConnCounterconnTakenFromPoolIsNotOpencloseAbovePoolHighWaterMarkCountermaxConnsPerHostExceededCounterconnEstablishTimerconnsInPoolconnsInUse": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-clientConnFactoryconnPoolConfigclientConfigcreateNewConnCountercreateConnSucceededCountercreateConnFailedCounterrequestConnCounterreuseConnCounterconnTakenFromPoolIsNotOpencloseAbovePoolHighWaterMarkCountermaxConnsPerHostExceededCounterconnEstablishTimerconnsInPoolconnsInUse",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "from_class_or_interface_name": "DefaultClientChannelManager",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "from_method_name": "createConnectionPool",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "to_class_or_interface_name": "DefaultClientChannelManager",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/clientConnFactory": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/clientConnFactory",
          "name": "clientConnFactory",
          "type": "com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory",
          "displayedType": "NettyClientConnectionFactory",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/clientConnFactory",
            "name": "clientConnFactory",
            "type": "com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory",
            "displayedType": "NettyClientConnectionFactory",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 101,
              "startColumn": 42,
              "endLine": 101,
              "endColumn": 59
            }
          },
          "position": {
            "startLine": 394,
            "startColumn": 42,
            "endLine": 394,
            "endColumn": 59
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connPoolConfig": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connPoolConfig",
          "name": "connPoolConfig",
          "type": "com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig",
          "displayedType": "ConnectionPoolConfig",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connPoolConfig",
            "name": "connPoolConfig",
            "type": "com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig",
            "displayedType": "ConnectionPoolConfig",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 69,
              "startColumn": 40,
              "endLine": 69,
              "endColumn": 54
            }
          },
          "position": {
            "startLine": 396,
            "startColumn": 34,
            "endLine": 396,
            "endColumn": 48
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/clientConfig": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/clientConfig",
          "name": "clientConfig",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig",
          "displayedType": "IClientConfig",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/clientConfig",
            "name": "clientConfig",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig",
            "displayedType": "IClientConfig",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 70,
              "startColumn": 33,
              "endLine": 70,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 397,
            "startColumn": 27,
            "endLine": 397,
            "endColumn": 39
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createNewConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createNewConnCounter",
          "name": "createNewConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createNewConnCounter",
            "name": "createNewConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 79,
              "startColumn": 27,
              "endLine": 79,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 398,
            "startColumn": 21,
            "endLine": 398,
            "endColumn": 41
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnSucceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnSucceededCounter",
          "name": "createConnSucceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnSucceededCounter",
            "name": "createConnSucceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 80,
              "startColumn": 27,
              "endLine": 80,
              "endColumn": 53
            }
          },
          "position": {
            "startLine": 399,
            "startColumn": 21,
            "endLine": 399,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnFailedCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnFailedCounter",
          "name": "createConnFailedCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnFailedCounter",
            "name": "createConnFailedCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 81,
              "startColumn": 27,
              "endLine": 81,
              "endColumn": 50
            }
          },
          "position": {
            "startLine": 400,
            "startColumn": 21,
            "endLine": 400,
            "endColumn": 44
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/requestConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/requestConnCounter",
          "name": "requestConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/requestConnCounter",
            "name": "requestConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 84,
              "startColumn": 27,
              "endLine": 84,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 401,
            "startColumn": 21,
            "endLine": 401,
            "endColumn": 39
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/reuseConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/reuseConnCounter",
          "name": "reuseConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/reuseConnCounter",
            "name": "reuseConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 87,
              "startColumn": 27,
              "endLine": 87,
              "endColumn": 43
            }
          },
          "position": {
            "startLine": 402,
            "startColumn": 21,
            "endLine": 402,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connTakenFromPoolIsNotOpen": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connTakenFromPoolIsNotOpen",
          "name": "connTakenFromPoolIsNotOpen",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connTakenFromPoolIsNotOpen",
            "name": "connTakenFromPoolIsNotOpen",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 90,
              "startColumn": 27,
              "endLine": 90,
              "endColumn": 53
            }
          },
          "position": {
            "startLine": 403,
            "startColumn": 21,
            "endLine": 403,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/closeAbovePoolHighWaterMarkCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/closeAbovePoolHighWaterMarkCounter",
          "name": "closeAbovePoolHighWaterMarkCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/closeAbovePoolHighWaterMarkCounter",
            "name": "closeAbovePoolHighWaterMarkCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 85,
              "startColumn": 27,
              "endLine": 85,
              "endColumn": 61
            }
          },
          "position": {
            "startLine": 404,
            "startColumn": 21,
            "endLine": 404,
            "endColumn": 55
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/maxConnsPerHostExceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/maxConnsPerHostExceededCounter",
          "name": "maxConnsPerHostExceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/maxConnsPerHostExceededCounter",
            "name": "maxConnsPerHostExceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 91,
              "startColumn": 27,
              "endLine": 91,
              "endColumn": 57
            }
          },
          "position": {
            "startLine": 405,
            "startColumn": 21,
            "endLine": 405,
            "endColumn": 51
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connEstablishTimer": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connEstablishTimer",
          "name": "connEstablishTimer",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer",
          "displayedType": "PercentileTimer",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connEstablishTimer",
            "name": "connEstablishTimer",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer",
            "displayedType": "PercentileTimer",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 95,
              "startColumn": 35,
              "endLine": 95,
              "endColumn": 53
            }
          },
          "position": {
            "startLine": 406,
            "startColumn": 29,
            "endLine": 406,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInPool": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInPool",
          "name": "connsInPool",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInPool",
            "name": "connsInPool",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 96,
              "startColumn": 33,
              "endLine": 96,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 407,
            "startColumn": 27,
            "endLine": 407,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInUse": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInUse",
          "name": "connsInUse",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInUse",
            "name": "connsInUse",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 97,
              "startColumn": 33,
              "endLine": 97,
              "endColumn": 43
            }
          },
          "position": {
            "startLine": 408,
            "startColumn": 27,
            "endLine": 408,
            "endColumn": 37
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool-serverAddrcreateNewConnCountercreateConnSucceededCountercreateConnFailedCounterrequestConnCounterreuseConnCounterconnTakenFromPoolIsNotOpenmaxConnsPerHostExceededCounterconnsInPoolconnsInUse": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool-serverAddrcreateNewConnCountercreateConnSucceededCountercreateConnFailedCounterrequestConnCounterreuseConnCounterconnTakenFromPoolIsNotOpenmaxConnsPerHostExceededCounterconnsInPoolconnsInUse",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "from_class_or_interface_name": "DefaultClientChannelManager",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "from_method_name": "createConnectionPool",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "to_class_or_interface_name": "PerServerConnectionPool",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/serverAddr": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/serverAddr",
          "name": "serverAddr",
          "type": "java.net.SocketAddress",
          "displayedType": "SocketAddress",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/serverAddr",
            "name": "serverAddr",
            "type": "java.net.SocketAddress",
            "displayedType": "SocketAddress",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 35,
              "endLine": 58,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 393,
            "startColumn": 27,
            "endLine": 393,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createNewConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createNewConnCounter",
          "name": "createNewConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createNewConnCounter",
            "name": "createNewConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 63,
              "startColumn": 29,
              "endLine": 63,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 398,
            "startColumn": 21,
            "endLine": 398,
            "endColumn": 41
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnSucceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnSucceededCounter",
          "name": "createConnSucceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnSucceededCounter",
            "name": "createConnSucceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 64,
              "startColumn": 29,
              "endLine": 64,
              "endColumn": 55
            }
          },
          "position": {
            "startLine": 399,
            "startColumn": 21,
            "endLine": 399,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnFailedCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnFailedCounter",
          "name": "createConnFailedCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnFailedCounter",
            "name": "createConnFailedCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 65,
              "startColumn": 29,
              "endLine": 65,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 400,
            "startColumn": 21,
            "endLine": 400,
            "endColumn": 44
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/requestConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/requestConnCounter",
          "name": "requestConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/requestConnCounter",
            "name": "requestConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 29,
              "endLine": 67,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 401,
            "startColumn": 21,
            "endLine": 401,
            "endColumn": 39
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/reuseConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/reuseConnCounter",
          "name": "reuseConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/reuseConnCounter",
            "name": "reuseConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 68,
              "startColumn": 29,
              "endLine": 68,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 402,
            "startColumn": 21,
            "endLine": 402,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connTakenFromPoolIsNotOpen": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connTakenFromPoolIsNotOpen",
          "name": "connTakenFromPoolIsNotOpen",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connTakenFromPoolIsNotOpen",
            "name": "connTakenFromPoolIsNotOpen",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 69,
              "startColumn": 29,
              "endLine": 69,
              "endColumn": 55
            }
          },
          "position": {
            "startLine": 403,
            "startColumn": 21,
            "endLine": 403,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/maxConnsPerHostExceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/maxConnsPerHostExceededCounter",
          "name": "maxConnsPerHostExceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/maxConnsPerHostExceededCounter",
            "name": "maxConnsPerHostExceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 70,
              "startColumn": 29,
              "endLine": 70,
              "endColumn": 59
            }
          },
          "position": {
            "startLine": 405,
            "startColumn": 21,
            "endLine": 405,
            "endColumn": 51
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInPool": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInPool",
          "name": "connsInPool",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInPool",
            "name": "connsInPool",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 73,
              "startColumn": 35,
              "endLine": 73,
              "endColumn": 46
            }
          },
          "position": {
            "startLine": 407,
            "startColumn": 27,
            "endLine": 407,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInUse": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInUse",
          "name": "connsInUse",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInUse",
            "name": "connsInUse",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 74,
              "startColumn": 35,
              "endLine": 74,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 408,
            "startColumn": 27,
            "endLine": 408,
            "endColumn": 37
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest-discoveryResultcreateNewConnCountercreateConnSucceededCountercreateConnFailedCounterrequestConnCounterreuseConnCounterconnTakenFromPoolIsNotOpenmaxConnsPerHostExceededCounterconnsInPoolconnsInUse": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest-discoveryResultcreateNewConnCountercreateConnSucceededCountercreateConnFailedCounterrequestConnCounterreuseConnCounterconnTakenFromPoolIsNotOpenmaxConnsPerHostExceededCounterconnsInPoolconnsInUse",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "from_class_or_interface_name": "DefaultClientChannelManager",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "from_method_name": "createConnectionPool",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)",
      "to_file_path": "zuul-core/src/test/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPoolTest.java",
      "to_class_or_interface_name": "PerServerConnectionPoolTest",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 85,
              "startColumn": 29,
              "endLine": 85,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 392,
            "startColumn": 29,
            "endLine": 392,
            "endColumn": 44
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createNewConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createNewConnCounter",
          "name": "createNewConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createNewConnCounter",
            "name": "createNewConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 90,
              "startColumn": 21,
              "endLine": 90,
              "endColumn": 41
            }
          },
          "position": {
            "startLine": 398,
            "startColumn": 21,
            "endLine": 398,
            "endColumn": 41
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnSucceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnSucceededCounter",
          "name": "createConnSucceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnSucceededCounter",
            "name": "createConnSucceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 91,
              "startColumn": 21,
              "endLine": 91,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 399,
            "startColumn": 21,
            "endLine": 399,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnFailedCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/createConnFailedCounter",
          "name": "createConnFailedCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnFailedCounter",
            "name": "createConnFailedCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 92,
              "startColumn": 21,
              "endLine": 92,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 400,
            "startColumn": 21,
            "endLine": 400,
            "endColumn": 44
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/requestConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/requestConnCounter",
          "name": "requestConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/requestConnCounter",
            "name": "requestConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 93,
              "startColumn": 21,
              "endLine": 93,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 401,
            "startColumn": 21,
            "endLine": 401,
            "endColumn": 39
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/reuseConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/reuseConnCounter",
          "name": "reuseConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/reuseConnCounter",
            "name": "reuseConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 94,
              "startColumn": 21,
              "endLine": 94,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 402,
            "startColumn": 21,
            "endLine": 402,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connTakenFromPoolIsNotOpen": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connTakenFromPoolIsNotOpen",
          "name": "connTakenFromPoolIsNotOpen",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connTakenFromPoolIsNotOpen",
            "name": "connTakenFromPoolIsNotOpen",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 95,
              "startColumn": 21,
              "endLine": 95,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 403,
            "startColumn": 21,
            "endLine": 403,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/maxConnsPerHostExceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/maxConnsPerHostExceededCounter",
          "name": "maxConnsPerHostExceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/maxConnsPerHostExceededCounter",
            "name": "maxConnsPerHostExceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 97,
              "startColumn": 21,
              "endLine": 97,
              "endColumn": 51
            }
          },
          "position": {
            "startLine": 405,
            "startColumn": 21,
            "endLine": 405,
            "endColumn": 51
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInPool": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInPool",
          "name": "connsInPool",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInPool",
            "name": "connsInPool",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 99,
              "startColumn": 27,
              "endLine": 99,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 407,
            "startColumn": 27,
            "endLine": 407,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInUse": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/createConnectionPool(com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, java.net.SocketAddress serverAddr, com.netflix.zuul.netty.connectionpool.NettyClientConnectionFactory clientConnFactory, com.netflix.zuul.netty.connectionpool.PooledConnectionFactory pcf, com.netflix.zuul.netty.connectionpool.ConnectionPoolConfig connPoolConfig, com.netflix.zuul.netty.connectionpool.com.netflix.client.config.IClientConfig clientConfig, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createNewConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnSucceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter createConnFailedCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter requestConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter reuseConnCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter connTakenFromPoolIsNotOpen, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter closeAbovePoolHighWaterMarkCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter maxConnsPerHostExceededCounter, com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.histogram.PercentileTimer connEstablishTimer, java.util.concurrent.atomic.AtomicInteger connsInPool, java.util.concurrent.atomic.AtomicInteger connsInUse)/parameter/connsInUse",
          "name": "connsInUse",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInUse",
            "name": "connsInUse",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 100,
              "startColumn": 27,
              "endLine": 100,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 408,
            "startColumn": 27,
            "endLine": 408,
            "endColumn": 37
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/IConnectionPool.java-com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/IConnectionPool.java-com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/IConnectionPool.java",
      "from_class_or_interface_name": "IConnectionPool",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.IConnectionPool",
      "from_method_name": "acquire",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java",
      "to_class_or_interface_name": "ClientChannelManager",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager",
      "to_method_name": "acquire",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop": {
          "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
          "name": "eventLoop",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
          "displayedType": "EventLoop",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
            "name": "eventLoop",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
            "displayedType": "EventLoop",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 50,
              "startColumn": 23,
              "endLine": 50,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 33,
            "startColumn": 23,
            "endLine": 33,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 52,
              "startColumn": 29,
              "endLine": 52,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 33,
            "startColumn": 50,
            "endLine": 33,
            "endColumn": 58
          }
        },
        "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr": {
          "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
          "name": "selectedHostAddr",
          "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
          "displayedType": "AtomicReference<? super InetAddress>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
            "name": "selectedHostAddr",
            "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
            "displayedType": "AtomicReference<? super InetAddress>",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 54,
              "startColumn": 50,
              "endLine": 54,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 33,
            "startColumn": 97,
            "endLine": 33,
            "endColumn": 113
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/IConnectionPool.java-com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/IConnectionPool.java-com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/IConnectionPool.java",
      "from_class_or_interface_name": "IConnectionPool",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.IConnectionPool",
      "from_method_name": "acquire",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "to_class_or_interface_name": "DefaultClientChannelManager",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "to_method_name": "acquire",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop": {
          "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
          "name": "eventLoop",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
          "displayedType": "EventLoop",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
            "name": "eventLoop",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
            "displayedType": "EventLoop",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 327,
              "startColumn": 23,
              "endLine": 327,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 33,
            "startColumn": 23,
            "endLine": 33,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 329,
              "startColumn": 29,
              "endLine": 329,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 33,
            "startColumn": 50,
            "endLine": 33,
            "endColumn": 58
          }
        },
        "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr": {
          "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
          "name": "selectedHostAddr",
          "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
          "displayedType": "AtomicReference<? super InetAddress>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
            "name": "selectedHostAddr",
            "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
            "displayedType": "AtomicReference<? super InetAddress>",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 331,
              "startColumn": 50,
              "endLine": 331,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 33,
            "startColumn": 97,
            "endLine": 33,
            "endColumn": 113
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/IConnectionPool.java-com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/IConnectionPool.java-com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/IConnectionPool.java",
      "from_class_or_interface_name": "IConnectionPool",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.IConnectionPool",
      "from_method_name": "acquire",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "to_class_or_interface_name": "PerServerConnectionPool",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "to_method_name": "tryMakingNewConnection",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop": {
          "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
          "name": "eventLoop",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
          "displayedType": "EventLoop",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
            "name": "eventLoop",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
            "displayedType": "EventLoop",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 232,
              "startColumn": 23,
              "endLine": 232,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 33,
            "startColumn": 23,
            "endLine": 33,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 234,
              "startColumn": 29,
              "endLine": 234,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 33,
            "startColumn": 50,
            "endLine": 33,
            "endColumn": 58
          }
        },
        "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr": {
          "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
          "name": "selectedHostAddr",
          "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
          "displayedType": "AtomicReference<? super InetAddress>",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
            "name": "selectedHostAddr",
            "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
            "displayedType": "AtomicReference<? super InetAddress>",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 235,
              "startColumn": 50,
              "endLine": 235,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 33,
            "startColumn": 97,
            "endLine": 33,
            "endColumn": 113
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)-cfcallerPromisepassport": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)-cfcallerPromisepassport",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "from_class_or_interface_name": "PerServerConnectionPool",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "from_method_name": "handleConnectCompletion",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "to_class_or_interface_name": "PerServerConnectionPool",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "to_method_name": "createConnection",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/cf": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/cf",
          "name": "cf",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture",
          "displayedType": "ChannelFuture",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/cf",
            "name": "cf",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture",
            "displayedType": "ChannelFuture",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 324,
              "startColumn": 27,
              "endLine": 324,
              "endColumn": 29
            }
          },
          "position": {
            "startLine": 290,
            "startColumn": 27,
            "endLine": 290,
            "endColumn": 29
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/callerPromise": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/callerPromise",
          "name": "callerPromise",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection>",
          "displayedType": "Promise<PooledConnection>",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/callerPromise",
            "name": "callerPromise",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection>",
            "displayedType": "Promise<PooledConnection>",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 324,
              "startColumn": 57,
              "endLine": 324,
              "endColumn": 70
            }
          },
          "position": {
            "startLine": 290,
            "startColumn": 57,
            "endLine": 290,
            "endColumn": 70
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 324,
              "startColumn": 88,
              "endLine": 324,
              "endColumn": 96
            }
          },
          "position": {
            "startLine": 290,
            "startColumn": 88,
            "endLine": 290,
            "endColumn": 96
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "from_class_or_interface_name": "PerServerConnectionPool",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "from_method_name": "tryMakingNewConnection",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java",
      "to_class_or_interface_name": "ClientChannelManager",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager",
      "to_method_name": "acquire",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
          "name": "eventLoop",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
          "displayedType": "EventLoop",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
            "name": "eventLoop",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
            "displayedType": "EventLoop",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 50,
              "startColumn": 23,
              "endLine": 50,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 232,
            "startColumn": 23,
            "endLine": 232,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 52,
              "startColumn": 29,
              "endLine": 52,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 234,
            "startColumn": 29,
            "endLine": 234,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
          "name": "selectedHostAddr",
          "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
          "displayedType": "AtomicReference<? super InetAddress>",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.ClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
            "name": "selectedHostAddr",
            "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
            "displayedType": "AtomicReference<? super InetAddress>",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 54,
              "startColumn": 50,
              "endLine": 54,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 235,
            "startColumn": 50,
            "endLine": 235,
            "endColumn": 66
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "from_class_or_interface_name": "PerServerConnectionPool",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "from_method_name": "tryMakingNewConnection",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "to_class_or_interface_name": "DefaultClientChannelManager",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "to_method_name": "acquire",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
          "name": "eventLoop",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
          "displayedType": "EventLoop",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
            "name": "eventLoop",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
            "displayedType": "EventLoop",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 327,
              "startColumn": 23,
              "endLine": 327,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 232,
            "startColumn": 23,
            "endLine": 232,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 329,
              "startColumn": 29,
              "endLine": 329,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 234,
            "startColumn": 29,
            "endLine": 234,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
          "name": "selectedHostAddr",
          "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
          "displayedType": "AtomicReference<? super InetAddress>",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, java.lang.Object key, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<com.netflix.zuul.netty.connectionpool.com.netflix.zuul.discovery.DiscoveryResult> selectedServer, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
            "name": "selectedHostAddr",
            "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
            "displayedType": "AtomicReference<? super InetAddress>",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 331,
              "startColumn": 50,
              "endLine": 331,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 235,
            "startColumn": 50,
            "endLine": 235,
            "endColumn": 66
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "from_class_or_interface_name": "PerServerConnectionPool",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "from_method_name": "tryMakingNewConnection",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/IConnectionPool.java",
      "to_class_or_interface_name": "IConnectionPool",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.IConnectionPool",
      "to_method_name": "acquire",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
          "name": "eventLoop",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
          "displayedType": "EventLoop",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
            "name": "eventLoop",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
            "displayedType": "EventLoop",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 33,
              "startColumn": 23,
              "endLine": 33,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 232,
            "startColumn": 23,
            "endLine": 232,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 33,
              "startColumn": 50,
              "endLine": 33,
              "endColumn": 58
            }
          },
          "position": {
            "startLine": 234,
            "startColumn": 29,
            "endLine": 234,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
          "name": "selectedHostAddr",
          "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
          "displayedType": "AtomicReference<? super InetAddress>",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.IConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
            "name": "selectedHostAddr",
            "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
            "displayedType": "AtomicReference<? super InetAddress>",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 33,
              "startColumn": 97,
              "endLine": 33,
              "endColumn": 113
            }
          },
          "position": {
            "startLine": 235,
            "startColumn": 50,
            "endLine": 235,
            "endColumn": 66
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)-eventLooppassportselectedHostAddr",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "from_class_or_interface_name": "PerServerConnectionPool",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "from_method_name": "tryMakingNewConnection",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "to_class_or_interface_name": "PerServerConnectionPool",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "to_method_name": "acquire",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
          "name": "eventLoop",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
          "displayedType": "EventLoop",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/eventLoop",
            "name": "eventLoop",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop",
            "displayedType": "EventLoop",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 155,
              "startColumn": 23,
              "endLine": 155,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 232,
            "startColumn": 23,
            "endLine": 232,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 155,
              "startColumn": 50,
              "endLine": 155,
              "endColumn": 58
            }
          },
          "position": {
            "startLine": 234,
            "startColumn": 29,
            "endLine": 234,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/tryMakingNewConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> promise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
          "name": "selectedHostAddr",
          "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
          "displayedType": "AtomicReference<? super InetAddress>",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/acquire(com.netflix.zuul.netty.connectionpool.io.netty.channel.EventLoop eventLoop, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport, java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress> selectedHostAddr)/parameter/selectedHostAddr",
            "name": "selectedHostAddr",
            "type": "java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>",
            "displayedType": "AtomicReference<? super InetAddress>",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 155,
              "startColumn": 97,
              "endLine": 155,
              "endColumn": 113
            }
          },
          "position": {
            "startLine": 235,
            "startColumn": 50,
            "endLine": 235,
            "endColumn": 66
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)-cfcallerPromisepassport": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)-cfcallerPromisepassport",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "from_class_or_interface_name": "PerServerConnectionPool",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "from_method_name": "createConnection",
      "from_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "to_class_or_interface_name": "PerServerConnectionPool",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "to_method_name": "handleConnectCompletion",
      "to_method_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/cf": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/cf",
          "name": "cf",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture",
          "displayedType": "ChannelFuture",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/cf",
            "name": "cf",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture",
            "displayedType": "ChannelFuture",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 290,
              "startColumn": 27,
              "endLine": 290,
              "endColumn": 29
            }
          },
          "position": {
            "startLine": 324,
            "startColumn": 27,
            "endLine": 324,
            "endColumn": 29
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/callerPromise": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/callerPromise",
          "name": "callerPromise",
          "type": "com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection>",
          "displayedType": "Promise<PooledConnection>",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/callerPromise",
            "name": "callerPromise",
            "type": "com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection>",
            "displayedType": "Promise<PooledConnection>",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 290,
              "startColumn": 57,
              "endLine": 290,
              "endColumn": 70
            }
          },
          "position": {
            "startLine": 324,
            "startColumn": 57,
            "endLine": 324,
            "endColumn": 70
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/passport": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/createConnection(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/passport",
          "name": "passport",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
          "displayedType": "CurrentPassport",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/method/handleConnectCompletion(com.netflix.zuul.netty.connectionpool.io.netty.channel.ChannelFuture cf, com.netflix.zuul.netty.connectionpool.io.netty.util.concurrent.Promise<com.netflix.zuul.netty.connectionpool.PooledConnection> callerPromise, com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport passport)/parameter/passport",
            "name": "passport",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.passport.CurrentPassport",
            "displayedType": "CurrentPassport",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 290,
              "startColumn": 88,
              "endLine": 290,
              "endColumn": 96
            }
          },
          "position": {
            "startLine": 324,
            "startColumn": 88,
            "endLine": 324,
            "endColumn": 96
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/ClientRequestReceiver.java-com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)-com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)-requestPartcausectx": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/ClientRequestReceiver.java-com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)-com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)-requestPartcausectx",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/ClientRequestReceiver.java",
      "from_class_or_interface_name": "ClientRequestReceiver",
      "from_class_or_interface_key": "com.netflix.zuul.netty.server.ClientRequestReceiver",
      "from_method_name": "fireWriteError",
      "from_method_key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java",
      "to_class_or_interface_name": "OriginResponseReceiver",
      "to_class_or_interface_key": "com.netflix.zuul.netty.server.OriginResponseReceiver",
      "to_method_name": "fireWriteError",
      "to_method_key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/requestPart": {
          "key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/requestPart",
          "name": "requestPart",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/requestPart",
            "name": "requestPart",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 248,
              "startColumn": 40,
              "endLine": 248,
              "endColumn": 51
            }
          },
          "position": {
            "startLine": 479,
            "startColumn": 40,
            "endLine": 479,
            "endColumn": 51
          }
        },
        "com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/cause": {
          "key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/cause",
          "name": "cause",
          "type": "java.lang.Throwable",
          "displayedType": "Throwable",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/cause",
            "name": "cause",
            "type": "java.lang.Throwable",
            "displayedType": "Throwable",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 248,
              "startColumn": 63,
              "endLine": 248,
              "endColumn": 68
            }
          },
          "position": {
            "startLine": 479,
            "startColumn": 63,
            "endLine": 479,
            "endColumn": 68
          }
        },
        "com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/ctx": {
          "key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 248,
              "startColumn": 92,
              "endLine": 248,
              "endColumn": 95
            }
          },
          "position": {
            "startLine": 479,
            "startColumn": 92,
            "endLine": 479,
            "endColumn": 95
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java-com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)-com.netflix.zuul.netty.server.ClientRequestReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)-ctxmsgpromise": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java-com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)-com.netflix.zuul.netty.server.ClientRequestReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)-ctxmsgpromise",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java",
      "from_class_or_interface_name": "OriginResponseReceiver",
      "from_class_or_interface_key": "com.netflix.zuul.netty.server.OriginResponseReceiver",
      "from_method_name": "writeInternal",
      "from_method_key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/ClientRequestReceiver.java",
      "to_class_or_interface_name": "ClientRequestReceiver",
      "to_class_or_interface_key": "com.netflix.zuul.netty.server.ClientRequestReceiver",
      "to_method_name": "write",
      "to_method_key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/ctx": {
          "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 452,
              "startColumn": 45,
              "endLine": 452,
              "endColumn": 48
            }
          },
          "position": {
            "startLine": 195,
            "startColumn": 54,
            "endLine": 195,
            "endColumn": 57
          }
        },
        "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/msg": {
          "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/msg",
          "name": "msg",
          "type": "java.lang.Object",
          "displayedType": "Object",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/msg",
            "name": "msg",
            "type": "java.lang.Object",
            "displayedType": "Object",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 452,
              "startColumn": 57,
              "endLine": 452,
              "endColumn": 60
            }
          },
          "position": {
            "startLine": 195,
            "startColumn": 66,
            "endLine": 195,
            "endColumn": 69
          }
        },
        "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/promise": {
          "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/promise",
          "name": "promise",
          "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise",
          "displayedType": "ChannelPromise",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/promise",
            "name": "promise",
            "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise",
            "displayedType": "ChannelPromise",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 452,
              "startColumn": 77,
              "endLine": 452,
              "endColumn": 84
            }
          },
          "position": {
            "startLine": 195,
            "startColumn": 86,
            "endLine": 195,
            "endColumn": 93
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java-com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)-com.netflix.zuul.netty.server.OriginResponseReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)-ctxmsgpromise": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java-com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)-com.netflix.zuul.netty.server.OriginResponseReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)-ctxmsgpromise",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java",
      "from_class_or_interface_name": "OriginResponseReceiver",
      "from_class_or_interface_key": "com.netflix.zuul.netty.server.OriginResponseReceiver",
      "from_method_name": "writeInternal",
      "from_method_key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java",
      "to_class_or_interface_name": "OriginResponseReceiver",
      "to_class_or_interface_key": "com.netflix.zuul.netty.server.OriginResponseReceiver",
      "to_method_name": "write",
      "to_method_key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/ctx": {
          "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PUBLIC",
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 51,
              "endLine": 189,
              "endColumn": 54
            }
          },
          "position": {
            "startLine": 195,
            "startColumn": 54,
            "endLine": 195,
            "endColumn": 57
          }
        },
        "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/msg": {
          "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/msg",
          "name": "msg",
          "type": "java.lang.Object",
          "displayedType": "Object",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/msg",
            "name": "msg",
            "type": "java.lang.Object",
            "displayedType": "Object",
            "modifiers": [
              "PUBLIC",
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 63,
              "endLine": 189,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 195,
            "startColumn": 66,
            "endLine": 195,
            "endColumn": 69
          }
        },
        "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/promise": {
          "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/writeInternal(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/promise",
          "name": "promise",
          "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise",
          "displayedType": "ChannelPromise",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/write(com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx, java.lang.Object msg, com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise promise)/parameter/promise",
            "name": "promise",
            "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelPromise",
            "displayedType": "ChannelPromise",
            "modifiers": [
              "PUBLIC",
              "FINAL"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 83,
              "endLine": 189,
              "endColumn": 90
            }
          },
          "position": {
            "startLine": 195,
            "startColumn": 86,
            "endLine": 195,
            "endColumn": 93
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java-com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)-com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)-requestPartcausectx": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java-com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)-com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)-requestPartcausectx",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java",
      "from_class_or_interface_name": "OriginResponseReceiver",
      "from_class_or_interface_key": "com.netflix.zuul.netty.server.OriginResponseReceiver",
      "from_method_name": "fireWriteError",
      "from_method_key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/ClientRequestReceiver.java",
      "to_class_or_interface_name": "ClientRequestReceiver",
      "to_class_or_interface_key": "com.netflix.zuul.netty.server.ClientRequestReceiver",
      "to_method_name": "fireWriteError",
      "to_method_key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/requestPart": {
          "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/requestPart",
          "name": "requestPart",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/requestPart",
            "name": "requestPart",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 479,
              "startColumn": 40,
              "endLine": 479,
              "endColumn": 51
            }
          },
          "position": {
            "startLine": 248,
            "startColumn": 40,
            "endLine": 248,
            "endColumn": 51
          }
        },
        "com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/cause": {
          "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/cause",
          "name": "cause",
          "type": "java.lang.Throwable",
          "displayedType": "Throwable",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/cause",
            "name": "cause",
            "type": "java.lang.Throwable",
            "displayedType": "Throwable",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 479,
              "startColumn": 63,
              "endLine": 479,
              "endColumn": 68
            }
          },
          "position": {
            "startLine": 248,
            "startColumn": 63,
            "endLine": 248,
            "endColumn": 68
          }
        },
        "com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/ctx": {
          "key": "com.netflix.zuul.netty.server.OriginResponseReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext",
          "displayedType": "ChannelHandlerContext",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.ClientRequestReceiver/method/fireWriteError(java.lang.String requestPart, java.lang.Throwable cause, com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext ctx)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.zuul.netty.server.io.netty.channel.ChannelHandlerContext",
            "displayedType": "ChannelHandlerContext",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 479,
              "startColumn": 92,
              "endLine": 479,
              "endColumn": 95
            }
          },
          "position": {
            "startLine": 248,
            "startColumn": 92,
            "endLine": 248,
            "endColumn": 95
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushMessageSender.java-com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)-com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)-requeststatususerAuth": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushMessageSender.java-com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)-com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)-requeststatususerAuth",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushMessageSender.java",
      "from_class_or_interface_name": "PushMessageSender",
      "from_class_or_interface_key": "com.netflix.zuul.netty.server.push.PushMessageSender",
      "from_method_name": "sendHttpResponse",
      "from_method_key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushMessageSender.java",
      "to_class_or_interface_name": "PushMessageSender",
      "to_class_or_interface_key": "com.netflix.zuul.netty.server.push.PushMessageSender",
      "to_method_name": "logPushEvent",
      "to_method_key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/request": {
          "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/request",
          "name": "request",
          "type": "com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest",
          "displayedType": "FullHttpRequest",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/request",
            "name": "request",
            "type": "com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest",
            "displayedType": "FullHttpRequest",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 49,
              "endLine": 189,
              "endColumn": 56
            }
          },
          "position": {
            "startLine": 61,
            "startColumn": 56,
            "endLine": 61,
            "endColumn": 63
          }
        },
        "com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/status": {
          "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/status",
          "name": "status",
          "type": "com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/status",
            "name": "status",
            "type": "com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 77,
              "endLine": 189,
              "endColumn": 83
            }
          },
          "position": {
            "startLine": 61,
            "startColumn": 84,
            "endLine": 61,
            "endColumn": 90
          }
        },
        "com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/userAuth": {
          "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/userAuth",
          "name": "userAuth",
          "type": "com.netflix.zuul.netty.server.push.PushUserAuth",
          "displayedType": "PushUserAuth",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/userAuth",
            "name": "userAuth",
            "type": "com.netflix.zuul.netty.server.push.PushUserAuth",
            "displayedType": "PushUserAuth",
            "modifiers": [
              "PROTECTED"
            ],
            "position": {
              "startLine": 189,
              "startColumn": 98,
              "endLine": 189,
              "endColumn": 106
            }
          },
          "position": {
            "startLine": 61,
            "startColumn": 105,
            "endLine": 61,
            "endColumn": 113
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushMessageSender.java-com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)-com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)-requeststatususerAuth": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushMessageSender.java-com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)-com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)-requeststatususerAuth",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushMessageSender.java",
      "from_class_or_interface_name": "PushMessageSender",
      "from_class_or_interface_key": "com.netflix.zuul.netty.server.push.PushMessageSender",
      "from_method_name": "logPushEvent",
      "from_method_key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushMessageSender.java",
      "to_class_or_interface_name": "PushMessageSender",
      "to_class_or_interface_key": "com.netflix.zuul.netty.server.push.PushMessageSender",
      "to_method_name": "sendHttpResponse",
      "to_method_key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/request": {
          "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/request",
          "name": "request",
          "type": "com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest",
          "displayedType": "FullHttpRequest",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/request",
            "name": "request",
            "type": "com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest",
            "displayedType": "FullHttpRequest",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 61,
              "startColumn": 56,
              "endLine": 61,
              "endColumn": 63
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 49,
            "endLine": 189,
            "endColumn": 56
          }
        },
        "com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/status": {
          "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/status",
          "name": "status",
          "type": "com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus",
          "displayedType": "HttpResponseStatus",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/status",
            "name": "status",
            "type": "com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus",
            "displayedType": "HttpResponseStatus",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 61,
              "startColumn": 84,
              "endLine": 61,
              "endColumn": 90
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 77,
            "endLine": 189,
            "endColumn": 83
          }
        },
        "com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/userAuth": {
          "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/logPushEvent(com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/userAuth",
          "name": "userAuth",
          "type": "com.netflix.zuul.netty.server.push.PushUserAuth",
          "displayedType": "PushUserAuth",
          "probability": 1,
          "modifiers": [
            "PROTECTED"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.push.PushMessageSender/method/sendHttpResponse(com.netflix.zuul.netty.server.push.io.netty.channel.ChannelHandlerContext ctx, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.FullHttpRequest request, com.netflix.zuul.netty.server.push.io.netty.handler.codec.http.HttpResponseStatus status, com.netflix.zuul.netty.server.push.PushUserAuth userAuth)/parameter/userAuth",
            "name": "userAuth",
            "type": "com.netflix.zuul.netty.server.push.PushUserAuth",
            "displayedType": "PushUserAuth",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 61,
              "startColumn": 105,
              "endLine": 61,
              "endColumn": 113
            }
          },
          "position": {
            "startLine": 189,
            "startColumn": 98,
            "endLine": 189,
            "endColumn": 106
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionSuccess",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestExecutionFailed",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 238,
              "startColumn": 32,
              "endLine": 238,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 61,
            "startColumn": 38,
            "endLine": 61,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 238,
              "startColumn": 57,
              "endLine": 238,
              "endColumn": 72
            }
          },
          "position": {
            "startLine": 63,
            "startColumn": 35,
            "endLine": 63,
            "endColumn": 50
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 238,
              "startColumn": 78,
              "endLine": 238,
              "endColumn": 88
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 23,
            "endLine": 64,
            "endColumn": 33
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionSuccess",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestStartWithServer",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 223,
              "startColumn": 61,
              "endLine": 223,
              "endColumn": 68
            }
          },
          "position": {
            "startLine": 61,
            "startColumn": 38,
            "endLine": 61,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 223,
              "startColumn": 86,
              "endLine": 223,
              "endColumn": 101
            }
          },
          "position": {
            "startLine": 63,
            "startColumn": 35,
            "endLine": 63,
            "endColumn": 50
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 223,
              "startColumn": 107,
              "endLine": 223,
              "endColumn": 117
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 23,
            "endLine": 64,
            "endColumn": 33
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionSuccess",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestExceptionWithServer",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 227,
              "startColumn": 32,
              "endLine": 227,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 61,
            "startColumn": 38,
            "endLine": 61,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 227,
              "startColumn": 57,
              "endLine": 227,
              "endColumn": 72
            }
          },
          "position": {
            "startLine": 63,
            "startColumn": 35,
            "endLine": 63,
            "endColumn": 50
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 227,
              "startColumn": 78,
              "endLine": 227,
              "endColumn": 88
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 23,
            "endLine": 64,
            "endColumn": 33
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionSuccess",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestExecutionFailed",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 38,
              "endLine": 67,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 61,
            "startColumn": 38,
            "endLine": 61,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 69,
              "endLine": 67,
              "endColumn": 84
            }
          },
          "position": {
            "startLine": 63,
            "startColumn": 35,
            "endLine": 63,
            "endColumn": 50
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 96,
              "endLine": 67,
              "endColumn": 106
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 23,
            "endLine": 64,
            "endColumn": 33
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionSuccess",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestExceptionWithServer",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 38,
              "endLine": 58,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 61,
            "startColumn": 38,
            "endLine": 61,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 69,
              "endLine": 58,
              "endColumn": 84
            }
          },
          "position": {
            "startLine": 63,
            "startColumn": 35,
            "endLine": 63,
            "endColumn": 50
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 96,
              "endLine": 58,
              "endColumn": 106
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 23,
            "endLine": 64,
            "endColumn": 33
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionSuccess",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestStartWithServer",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 55,
              "startColumn": 38,
              "endLine": 55,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 61,
            "startColumn": 38,
            "endLine": 61,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 55,
              "startColumn": 69,
              "endLine": 55,
              "endColumn": 84
            }
          },
          "position": {
            "startLine": 63,
            "startColumn": 35,
            "endLine": 63,
            "endColumn": 50
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 55,
              "startColumn": 90,
              "endLine": 55,
              "endColumn": 100
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 23,
            "endLine": 64,
            "endColumn": 33
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionFailed",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestExecutionSuccess",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 32,
              "endLine": 231,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 38,
            "endLine": 67,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 233,
              "startColumn": 29,
              "endLine": 233,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 69,
            "endLine": 67,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 234,
              "startColumn": 17,
              "endLine": 234,
              "endColumn": 27
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 96,
            "endLine": 67,
            "endColumn": 106
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionFailed",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestStartWithServer",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 223,
              "startColumn": 61,
              "endLine": 223,
              "endColumn": 68
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 38,
            "endLine": 67,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 223,
              "startColumn": 86,
              "endLine": 223,
              "endColumn": 101
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 69,
            "endLine": 67,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 223,
              "startColumn": 107,
              "endLine": 223,
              "endColumn": 117
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 96,
            "endLine": 67,
            "endColumn": 106
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNumt": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNumt",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionFailed",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestExceptionWithServer",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 227,
              "startColumn": 32,
              "endLine": 227,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 38,
            "endLine": 67,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 227,
              "startColumn": 57,
              "endLine": 227,
              "endColumn": 72
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 69,
            "endLine": 67,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 227,
              "startColumn": 78,
              "endLine": 227,
              "endColumn": 88
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 96,
            "endLine": 67,
            "endColumn": 106
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t",
          "name": "t",
          "type": "java.lang.Throwable",
          "displayedType": "Throwable",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t",
            "name": "t",
            "type": "java.lang.Throwable",
            "displayedType": "Throwable",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 227,
              "startColumn": 100,
              "endLine": 227,
              "endColumn": 101
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 118,
            "endLine": 67,
            "endColumn": 119
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionFailed",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestExecutionSuccess",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 61,
              "startColumn": 38,
              "endLine": 61,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 38,
            "endLine": 67,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 63,
              "startColumn": 35,
              "endLine": 63,
              "endColumn": 50
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 69,
            "endLine": 67,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 64,
              "startColumn": 23,
              "endLine": 64,
              "endColumn": 33
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 96,
            "endLine": 67,
            "endColumn": 106
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNumt": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNumt",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionFailed",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestExceptionWithServer",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 38,
              "endLine": 58,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 38,
            "endLine": 67,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 69,
              "endLine": 58,
              "endColumn": 84
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 69,
            "endLine": 67,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 96,
              "endLine": 58,
              "endColumn": 106
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 96,
            "endLine": 67,
            "endColumn": 106
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t",
          "name": "t",
          "type": "java.lang.Throwable",
          "displayedType": "Throwable",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t",
            "name": "t",
            "type": "java.lang.Throwable",
            "displayedType": "Throwable",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 118,
              "endLine": 58,
              "endColumn": 119
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 118,
            "endLine": 67,
            "endColumn": 119
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExecutionFailed",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestStartWithServer",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 55,
              "startColumn": 38,
              "endLine": 55,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 38,
            "endLine": 67,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 55,
              "startColumn": 69,
              "endLine": 55,
              "endColumn": 84
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 69,
            "endLine": 67,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 55,
              "startColumn": 90,
              "endLine": 55,
              "endColumn": 100
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 96,
            "endLine": 67,
            "endColumn": 106
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNumt": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNumt",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExceptionWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestExecutionFailed",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 238,
              "startColumn": 32,
              "endLine": 238,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 38,
            "endLine": 58,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 238,
              "startColumn": 57,
              "endLine": 238,
              "endColumn": 72
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 69,
            "endLine": 58,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 238,
              "startColumn": 78,
              "endLine": 238,
              "endColumn": 88
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 96,
            "endLine": 58,
            "endColumn": 106
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t",
          "name": "t",
          "type": "java.lang.Throwable",
          "displayedType": "Throwable",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t",
            "name": "t",
            "type": "java.lang.Throwable",
            "displayedType": "Throwable",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 238,
              "startColumn": 100,
              "endLine": 238,
              "endColumn": 101
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 118,
            "endLine": 58,
            "endColumn": 119
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExceptionWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestExecutionSuccess",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 32,
              "endLine": 231,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 38,
            "endLine": 58,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 233,
              "startColumn": 29,
              "endLine": 233,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 69,
            "endLine": 58,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 234,
              "startColumn": 17,
              "endLine": 234,
              "endColumn": 27
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 96,
            "endLine": 58,
            "endColumn": 106
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExceptionWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestStartWithServer",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 223,
              "startColumn": 61,
              "endLine": 223,
              "endColumn": 68
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 38,
            "endLine": 58,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 223,
              "startColumn": 86,
              "endLine": 223,
              "endColumn": 101
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 69,
            "endLine": 58,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 223,
              "startColumn": 107,
              "endLine": 223,
              "endColumn": 117
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 96,
            "endLine": 58,
            "endColumn": 106
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExceptionWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestExecutionSuccess",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 61,
              "startColumn": 38,
              "endLine": 61,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 38,
            "endLine": 58,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 63,
              "startColumn": 35,
              "endLine": 63,
              "endColumn": 50
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 69,
            "endLine": 58,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 64,
              "startColumn": 23,
              "endLine": 64,
              "endColumn": 33
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 96,
            "endLine": 58,
            "endColumn": 106
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNumt": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNumt",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExceptionWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestExecutionFailed",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 38,
              "endLine": 67,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 38,
            "endLine": 58,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 69,
              "endLine": 67,
              "endColumn": 84
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 69,
            "endLine": 58,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 96,
              "endLine": 67,
              "endColumn": 106
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 96,
            "endLine": 58,
            "endColumn": 106
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t",
          "name": "t",
          "type": "java.lang.Throwable",
          "displayedType": "Throwable",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/t",
            "name": "t",
            "type": "java.lang.Throwable",
            "displayedType": "Throwable",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 118,
              "endLine": 67,
              "endColumn": 119
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 118,
            "endLine": 58,
            "endColumn": 119
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestExceptionWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestStartWithServer",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 55,
              "startColumn": 38,
              "endLine": 55,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 38,
            "endLine": 58,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 55,
              "startColumn": 69,
              "endLine": 55,
              "endColumn": 84
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 69,
            "endLine": 58,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 55,
              "startColumn": 90,
              "endLine": 55,
              "endColumn": 100
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 96,
            "endLine": 58,
            "endColumn": 106
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestStartWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestExecutionFailed",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 238,
              "startColumn": 32,
              "endLine": 238,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 38,
            "endLine": 55,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 238,
              "startColumn": 57,
              "endLine": 238,
              "endColumn": 72
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 69,
            "endLine": 55,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 238,
              "startColumn": 78,
              "endLine": 238,
              "endColumn": 88
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 90,
            "endLine": 55,
            "endColumn": 100
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestStartWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestExecutionSuccess",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 231,
              "startColumn": 32,
              "endLine": 231,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 38,
            "endLine": 55,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 233,
              "startColumn": 29,
              "endLine": 233,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 69,
            "endLine": 55,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 234,
              "startColumn": 17,
              "endLine": 234,
              "endColumn": 27
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 90,
            "endLine": 55,
            "endColumn": 100
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestStartWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java",
      "to_class_or_interface_name": "BasicNettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOrigin",
      "to_method_name": "onRequestExceptionWithServer",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 227,
              "startColumn": 32,
              "endLine": 227,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 38,
            "endLine": 55,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 227,
              "startColumn": 57,
              "endLine": 227,
              "endColumn": 72
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 69,
            "endLine": 55,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 227,
              "startColumn": 78,
              "endLine": 227,
              "endColumn": 88
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 90,
            "endLine": 55,
            "endColumn": 100
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestStartWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestExecutionSuccess",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 61,
              "startColumn": 38,
              "endLine": 61,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 38,
            "endLine": 55,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 63,
              "startColumn": 35,
              "endLine": 63,
              "endColumn": 50
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 69,
            "endLine": 55,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionSuccess(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpResponseMessage zuulResp, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 64,
              "startColumn": 23,
              "endLine": 64,
              "endColumn": 33
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 90,
            "endLine": 55,
            "endColumn": 100
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestStartWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestExecutionFailed",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 38,
              "endLine": 67,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 38,
            "endLine": 55,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 69,
              "endLine": 67,
              "endColumn": 84
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 69,
            "endLine": 55,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExecutionFailed(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 96,
              "endLine": 67,
              "endColumn": 106
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 90,
            "endLine": 55,
            "endColumn": 100
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java-com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)-com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)-zuulReqdiscoveryResultattemptNum",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "from_class_or_interface_name": "NettyOrigin",
      "from_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "from_method_name": "onRequestStartWithServer",
      "from_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java",
      "to_class_or_interface_name": "NettyOrigin",
      "to_class_or_interface_key": "com.netflix.zuul.origins.NettyOrigin",
      "to_method_name": "onRequestExceptionWithServer",
      "to_method_key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/zuulReq",
          "name": "zuulReq",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
          "displayedType": "HttpRequestMessage",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/zuulReq",
            "name": "zuulReq",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage",
            "displayedType": "HttpRequestMessage",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 38,
              "endLine": 58,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 38,
            "endLine": 55,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/discoveryResult",
          "name": "discoveryResult",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
          "displayedType": "DiscoveryResult",
          "probability": 1,
          "modifiers": [
            "FINAL",
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/discoveryResult",
            "name": "discoveryResult",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult",
            "displayedType": "DiscoveryResult",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 69,
              "endLine": 58,
              "endColumn": 84
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 69,
            "endLine": 55,
            "endColumn": 84
          }
        },
        "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum": {
          "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestStartWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum)/parameter/attemptNum",
          "name": "attemptNum",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.NettyOrigin/method/onRequestExceptionWithServer(com.netflix.zuul.origins.com.netflix.zuul.message.http.HttpRequestMessage zuulReq, com.netflix.zuul.origins.com.netflix.zuul.discovery.DiscoveryResult discoveryResult, int attemptNum, java.lang.Throwable t)/parameter/attemptNum",
            "name": "attemptNum",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "FINAL",
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 96,
              "endLine": 58,
              "endColumn": 106
            }
          },
          "position": {
            "startLine": 55,
            "startColumn": 90,
            "endLine": 55,
            "endColumn": 100
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java-com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-com.netflix.zuul.origins.BasicNettyOriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-originNameurictx": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java-com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-com.netflix.zuul.origins.BasicNettyOriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-originNameurictx",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java",
      "from_class_or_interface_name": "OriginManager",
      "from_class_or_interface_key": "com.netflix.zuul.origins.OriginManager",
      "from_method_name": "getOrigin",
      "from_method_key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOriginManager.java",
      "to_class_or_interface_name": "BasicNettyOriginManager",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOriginManager",
      "to_method_name": "createOrigin",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName": {
          "key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName",
          "name": "originName",
          "type": "com.netflix.zuul.origins.OriginName",
          "displayedType": "OriginName",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName",
            "name": "originName",
            "type": "com.netflix.zuul.origins.OriginName",
            "displayedType": "OriginName",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 53,
              "endLine": 51,
              "endColumn": 63
            }
          },
          "position": {
            "startLine": 27,
            "startColumn": 28,
            "endLine": 27,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri": {
          "key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri",
          "name": "uri",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri",
            "name": "uri",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 72,
              "endLine": 51,
              "endColumn": 75
            }
          },
          "position": {
            "startLine": 27,
            "startColumn": 47,
            "endLine": 27,
            "endColumn": 50
          }
        },
        "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx": {
          "key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext",
          "displayedType": "SessionContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext",
            "displayedType": "SessionContext",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 92,
              "endLine": 51,
              "endColumn": 95
            }
          },
          "position": {
            "startLine": 27,
            "startColumn": 67,
            "endLine": 27,
            "endColumn": 70
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java-com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-originNameurictx": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java-com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-originNameurictx",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java",
      "from_class_or_interface_name": "OriginManager",
      "from_class_or_interface_key": "com.netflix.zuul.origins.OriginManager",
      "from_method_name": "getOrigin",
      "from_method_key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java",
      "to_class_or_interface_name": "OriginManager",
      "to_class_or_interface_key": "com.netflix.zuul.origins.OriginManager",
      "to_method_name": "createOrigin",
      "to_method_key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName": {
          "key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName",
          "name": "originName",
          "type": "com.netflix.zuul.origins.OriginName",
          "displayedType": "OriginName",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName",
            "name": "originName",
            "type": "com.netflix.zuul.origins.OriginName",
            "displayedType": "OriginName",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 29,
              "startColumn": 31,
              "endLine": 29,
              "endColumn": 41
            }
          },
          "position": {
            "startLine": 27,
            "startColumn": 28,
            "endLine": 27,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri": {
          "key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri",
          "name": "uri",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri",
            "name": "uri",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 29,
              "startColumn": 50,
              "endLine": 29,
              "endColumn": 53
            }
          },
          "position": {
            "startLine": 27,
            "startColumn": 47,
            "endLine": 27,
            "endColumn": 50
          }
        },
        "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx": {
          "key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext",
          "displayedType": "SessionContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext",
            "displayedType": "SessionContext",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 29,
              "startColumn": 70,
              "endLine": 29,
              "endColumn": 73
            }
          },
          "position": {
            "startLine": 27,
            "startColumn": 67,
            "endLine": 27,
            "endColumn": 70
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java-com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-com.netflix.zuul.origins.BasicNettyOriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-originNameurictx": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java-com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-com.netflix.zuul.origins.BasicNettyOriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-originNameurictx",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java",
      "from_class_or_interface_name": "OriginManager",
      "from_class_or_interface_key": "com.netflix.zuul.origins.OriginManager",
      "from_method_name": "createOrigin",
      "from_method_key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOriginManager.java",
      "to_class_or_interface_name": "BasicNettyOriginManager",
      "to_class_or_interface_key": "com.netflix.zuul.origins.BasicNettyOriginManager",
      "to_method_name": "getOrigin",
      "to_method_key": "com.netflix.zuul.origins.BasicNettyOriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName": {
          "key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName",
          "name": "originName",
          "type": "com.netflix.zuul.origins.OriginName",
          "displayedType": "OriginName",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName",
            "name": "originName",
            "type": "com.netflix.zuul.origins.OriginName",
            "displayedType": "OriginName",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 46,
              "startColumn": 50,
              "endLine": 46,
              "endColumn": 60
            }
          },
          "position": {
            "startLine": 29,
            "startColumn": 31,
            "endLine": 29,
            "endColumn": 41
          }
        },
        "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri": {
          "key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri",
          "name": "uri",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri",
            "name": "uri",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 46,
              "startColumn": 69,
              "endLine": 46,
              "endColumn": 72
            }
          },
          "position": {
            "startLine": 29,
            "startColumn": 50,
            "endLine": 29,
            "endColumn": 53
          }
        },
        "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx": {
          "key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext",
          "displayedType": "SessionContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.BasicNettyOriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext",
            "displayedType": "SessionContext",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 46,
              "startColumn": 89,
              "endLine": 46,
              "endColumn": 92
            }
          },
          "position": {
            "startLine": 29,
            "startColumn": 70,
            "endLine": 29,
            "endColumn": 73
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java-com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-originNameurictx": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java-com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)-originNameurictx",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java",
      "from_class_or_interface_name": "OriginManager",
      "from_class_or_interface_key": "com.netflix.zuul.origins.OriginManager",
      "from_method_name": "createOrigin",
      "from_method_key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/origins/OriginManager.java",
      "to_class_or_interface_name": "OriginManager",
      "to_class_or_interface_key": "com.netflix.zuul.origins.OriginManager",
      "to_method_name": "getOrigin",
      "to_method_key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName": {
          "key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName",
          "name": "originName",
          "type": "com.netflix.zuul.origins.OriginName",
          "displayedType": "OriginName",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/originName",
            "name": "originName",
            "type": "com.netflix.zuul.origins.OriginName",
            "displayedType": "OriginName",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 27,
              "startColumn": 28,
              "endLine": 27,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 29,
            "startColumn": 31,
            "endLine": 29,
            "endColumn": 41
          }
        },
        "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri": {
          "key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri",
          "name": "uri",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/uri",
            "name": "uri",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 27,
              "startColumn": 47,
              "endLine": 27,
              "endColumn": 50
            }
          },
          "position": {
            "startLine": 29,
            "startColumn": 50,
            "endLine": 29,
            "endColumn": 53
          }
        },
        "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx": {
          "key": "com.netflix.zuul.origins.OriginManager/method/createOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext",
          "displayedType": "SessionContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "ABSTRACT"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.origins.OriginManager/method/getOrigin(com.netflix.zuul.origins.OriginName originName, java.lang.String uri, com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext ctx)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.zuul.origins.com.netflix.zuul.context.SessionContext",
            "displayedType": "SessionContext",
            "modifiers": [
              "PUBLIC",
              "ABSTRACT"
            ],
            "position": {
              "startLine": 27,
              "startColumn": 67,
              "endLine": 27,
              "endColumn": 70
            }
          },
          "position": {
            "startLine": 29,
            "startColumn": 70,
            "endLine": 29,
            "endColumn": 73
          }
        }
      }
    },
    "parameters_to_fields_data_clump-zuul-groovy/src/main/java/com/netflix/zuul/scriptManager/FilterInfo.java-com.netflix.zuul.scriptManager.FilterInfo/method/buildFilterID(java.lang.String application_name, com.netflix.zuul.scriptManager.com.netflix.zuul.filters.FilterType filter_type, java.lang.String filter_name)-com.netflix.zuul.scriptManager.FilterInfo-application_namefilter_typefilter_name": {
      "type": "data_clump",
      "key": "parameters_to_fields_data_clump-zuul-groovy/src/main/java/com/netflix/zuul/scriptManager/FilterInfo.java-com.netflix.zuul.scriptManager.FilterInfo/method/buildFilterID(java.lang.String application_name, com.netflix.zuul.scriptManager.com.netflix.zuul.filters.FilterType filter_type, java.lang.String filter_name)-com.netflix.zuul.scriptManager.FilterInfo-application_namefilter_typefilter_name",
      "probability": 1,
      "from_file_path": "zuul-groovy/src/main/java/com/netflix/zuul/scriptManager/FilterInfo.java",
      "from_class_or_interface_name": "FilterInfo",
      "from_class_or_interface_key": "com.netflix.zuul.scriptManager.FilterInfo",
      "from_method_name": "buildFilterID",
      "from_method_key": "com.netflix.zuul.scriptManager.FilterInfo/method/buildFilterID(java.lang.String application_name, com.netflix.zuul.scriptManager.com.netflix.zuul.filters.FilterType filter_type, java.lang.String filter_name)",
      "to_file_path": "zuul-groovy/src/main/java/com/netflix/zuul/scriptManager/FilterInfo.java",
      "to_class_or_interface_name": "FilterInfo",
      "to_class_or_interface_key": "com.netflix.zuul.scriptManager.FilterInfo",
      "to_method_name": null,
      "to_method_key": null,
      "data_clump_type": "parameters_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.scriptManager.FilterInfo/method/buildFilterID(java.lang.String application_name, com.netflix.zuul.scriptManager.com.netflix.zuul.filters.FilterType filter_type, java.lang.String filter_name)/parameter/application_name": {
          "key": "com.netflix.zuul.scriptManager.FilterInfo/method/buildFilterID(java.lang.String application_name, com.netflix.zuul.scriptManager.com.netflix.zuul.filters.FilterType filter_type, java.lang.String filter_name)/parameter/application_name",
          "name": "application_name",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.scriptManager.FilterInfo/memberField/application_name",
            "name": "application_name",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 36,
              "startColumn": 26,
              "endLine": 36,
              "endColumn": 42
            }
          },
          "position": {
            "startLine": 194,
            "startColumn": 47,
            "endLine": 194,
            "endColumn": 63
          }
        },
        "com.netflix.zuul.scriptManager.FilterInfo/method/buildFilterID(java.lang.String application_name, com.netflix.zuul.scriptManager.com.netflix.zuul.filters.FilterType filter_type, java.lang.String filter_name)/parameter/filter_type": {
          "key": "com.netflix.zuul.scriptManager.FilterInfo/method/buildFilterID(java.lang.String application_name, com.netflix.zuul.scriptManager.com.netflix.zuul.filters.FilterType filter_type, java.lang.String filter_name)/parameter/filter_type",
          "name": "filter_type",
          "type": "com.netflix.zuul.scriptManager.com.netflix.zuul.filters.FilterType",
          "displayedType": "FilterType",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.scriptManager.FilterInfo/memberField/filter_type",
            "name": "filter_type",
            "type": "com.netflix.zuul.scriptManager.com.netflix.zuul.filters.FilterType",
            "displayedType": "FilterType",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 33,
              "startColumn": 30,
              "endLine": 33,
              "endColumn": 41
            }
          },
          "position": {
            "startLine": 194,
            "startColumn": 76,
            "endLine": 194,
            "endColumn": 87
          }
        },
        "com.netflix.zuul.scriptManager.FilterInfo/method/buildFilterID(java.lang.String application_name, com.netflix.zuul.scriptManager.com.netflix.zuul.filters.FilterType filter_type, java.lang.String filter_name)/parameter/filter_name": {
          "key": "com.netflix.zuul.scriptManager.FilterInfo/method/buildFilterID(java.lang.String application_name, com.netflix.zuul.scriptManager.com.netflix.zuul.filters.FilterType filter_type, java.lang.String filter_name)/parameter/filter_name",
          "name": "filter_name",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [],
          "to_variable": {
            "key": "com.netflix.zuul.scriptManager.FilterInfo/memberField/filter_name",
            "name": "filter_name",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 31,
              "startColumn": 26,
              "endLine": 31,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 194,
            "startColumn": 96,
            "endLine": 194,
            "endColumn": 107
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java-com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)-com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)-ctxstatusCategoryreason": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java-com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)-com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)-ctxstatusCategoryreason",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java",
      "from_class_or_interface_name": "StatusCategoryUtils",
      "from_class_or_interface_key": "com.netflix.zuul.stats.status.StatusCategoryUtils",
      "from_method_name": "setStatusCategory",
      "from_method_key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java",
      "to_class_or_interface_name": "StatusCategoryUtils",
      "to_class_or_interface_key": "com.netflix.zuul.stats.status.StatusCategoryUtils",
      "to_method_name": "setOriginStatusCategory",
      "to_method_key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/ctx": {
          "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext",
          "displayedType": "SessionContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext",
            "displayedType": "SessionContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 75,
              "startColumn": 63,
              "endLine": 75,
              "endColumn": 66
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 57,
            "endLine": 51,
            "endColumn": 60
          }
        },
        "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/statusCategory": {
          "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/statusCategory",
          "name": "statusCategory",
          "type": "com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/statusCategory",
            "name": "statusCategory",
            "type": "com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 75,
              "startColumn": 83,
              "endLine": 75,
              "endColumn": 97
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 77,
            "endLine": 51,
            "endColumn": 91
          }
        },
        "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/reason": {
          "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 75,
              "startColumn": 106,
              "endLine": 75,
              "endColumn": 112
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 100,
            "endLine": 51,
            "endColumn": 106
          }
        }
      }
    },
    "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java-com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)-com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)-ctxstatusCategoryreason": {
      "type": "data_clump",
      "key": "parameters_to_parameters_data_clump-zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java-com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)-com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)-ctxstatusCategoryreason",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java",
      "from_class_or_interface_name": "StatusCategoryUtils",
      "from_class_or_interface_key": "com.netflix.zuul.stats.status.StatusCategoryUtils",
      "from_method_name": "setOriginStatusCategory",
      "from_method_key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)",
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java",
      "to_class_or_interface_name": "StatusCategoryUtils",
      "to_class_or_interface_key": "com.netflix.zuul.stats.status.StatusCategoryUtils",
      "to_method_name": "setStatusCategory",
      "to_method_key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)",
      "data_clump_type": "parameters_to_parameters_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/ctx": {
          "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/ctx",
          "name": "ctx",
          "type": "com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext",
          "displayedType": "SessionContext",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/ctx",
            "name": "ctx",
            "type": "com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext",
            "displayedType": "SessionContext",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 57,
              "endLine": 51,
              "endColumn": 60
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 63,
            "endLine": 75,
            "endColumn": 66
          }
        },
        "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/statusCategory": {
          "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/statusCategory",
          "name": "statusCategory",
          "type": "com.netflix.zuul.stats.status.StatusCategory",
          "displayedType": "StatusCategory",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/statusCategory",
            "name": "statusCategory",
            "type": "com.netflix.zuul.stats.status.StatusCategory",
            "displayedType": "StatusCategory",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 77,
              "endLine": 51,
              "endColumn": 91
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 83,
            "endLine": 75,
            "endColumn": 97
          }
        },
        "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/reason": {
          "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setOriginStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/reason",
          "name": "reason",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.stats.status.StatusCategoryUtils/method/setStatusCategory(com.netflix.zuul.stats.status.com.netflix.zuul.context.SessionContext ctx, com.netflix.zuul.stats.status.StatusCategory statusCategory, java.lang.String reason)/parameter/reason",
            "name": "reason",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 100,
              "endLine": 51,
              "endColumn": 106
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 106,
            "endLine": 75,
            "endColumn": 112
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound-registryframeCounterNamemetricIderrorCounterName": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound-registryframeCounterNamemetricIderrorCounterName",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java",
      "from_class_or_interface_name": "Outbound",
      "from_class_or_interface_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java",
      "to_class_or_interface_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound",
      "to_class_or_interface_name": "Inbound",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/registry": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/registry",
          "name": "registry",
          "type": "com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/registry",
            "name": "registry",
            "type": "com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 72,
              "startColumn": 32,
              "endLine": 72,
              "endColumn": 40
            }
          },
          "position": {
            "startLine": 120,
            "startColumn": 32,
            "endLine": 120,
            "endColumn": 40
          }
        },
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/frameCounterName": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/frameCounterName",
          "name": "frameCounterName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/frameCounterName",
            "name": "frameCounterName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 74,
              "startColumn": 30,
              "endLine": 74,
              "endColumn": 46
            }
          },
          "position": {
            "startLine": 122,
            "startColumn": 30,
            "endLine": 122,
            "endColumn": 46
          }
        },
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/metricId": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/metricId",
          "name": "metricId",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/metricId",
            "name": "metricId",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 73,
              "startColumn": 30,
              "endLine": 73,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 121,
            "startColumn": 30,
            "endLine": 121,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/errorCounterName": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/errorCounterName",
          "name": "errorCounterName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/errorCounterName",
            "name": "errorCounterName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 75,
              "startColumn": 30,
              "endLine": 75,
              "endColumn": 46
            }
          },
          "position": {
            "startLine": 123,
            "startColumn": 30,
            "endLine": 123,
            "endColumn": 46
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound-metricIderrorCounterNameframeCounterNameregistry": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound-com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound-metricIderrorCounterNameframeCounterNameregistry",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java",
      "from_class_or_interface_name": "Inbound",
      "from_class_or_interface_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/netty/common/metrics/Http2MetricsChannelHandlers.java",
      "to_class_or_interface_key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound",
      "to_class_or_interface_name": "Outbound",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/metricId": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/metricId",
          "name": "metricId",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/metricId",
            "name": "metricId",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 121,
              "startColumn": 30,
              "endLine": 121,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 73,
            "startColumn": 30,
            "endLine": 73,
            "endColumn": 38
          }
        },
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/errorCounterName": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/errorCounterName",
          "name": "errorCounterName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/errorCounterName",
            "name": "errorCounterName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 123,
              "startColumn": 30,
              "endLine": 123,
              "endColumn": 46
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 30,
            "endLine": 75,
            "endColumn": 46
          }
        },
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/frameCounterName": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/frameCounterName",
          "name": "frameCounterName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/frameCounterName",
            "name": "frameCounterName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 122,
              "startColumn": 30,
              "endLine": 122,
              "endColumn": 46
            }
          },
          "position": {
            "startLine": 74,
            "startColumn": 30,
            "endLine": 74,
            "endColumn": 46
          }
        },
        "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/registry": {
          "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Inbound/memberField/registry",
          "name": "registry",
          "type": "com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.netty.common.metrics.Http2MetricsChannelHandlers.Outbound/memberField/registry",
            "name": "registry",
            "type": "com.netflix.netty.common.metrics.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 120,
              "startColumn": 32,
              "endLine": 120,
              "endColumn": 40
            }
          },
          "position": {
            "startLine": 72,
            "startColumn": 32,
            "endLine": 72,
            "endColumn": 40
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/jmh/java/com/netflix/zuul/message/HeadersBenchmark.java-com.netflix.zuul.message.HeadersBenchmark.AddHeaders-com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders-nameLengthnamescountvaluesstringNames": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/jmh/java/com/netflix/zuul/message/HeadersBenchmark.java-com.netflix.zuul.message.HeadersBenchmark.AddHeaders-com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders-nameLengthnamescountvaluesstringNames",
      "probability": 1,
      "from_file_path": "zuul-core/src/jmh/java/com/netflix/zuul/message/HeadersBenchmark.java",
      "from_class_or_interface_name": "AddHeaders",
      "from_class_or_interface_key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/jmh/java/com/netflix/zuul/message/HeadersBenchmark.java",
      "to_class_or_interface_key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders",
      "to_class_or_interface_name": "GetSetHeaders",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/nameLength": {
          "key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/nameLength",
          "name": "nameLength",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PUBLIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/nameLength",
            "name": "nameLength",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 95,
              "startColumn": 20,
              "endLine": 95,
              "endColumn": 30
            }
          },
          "position": {
            "startLine": 42,
            "startColumn": 20,
            "endLine": 42,
            "endColumn": 30
          }
        },
        "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/names": {
          "key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/names",
          "name": "names",
          "type": "com.netflix.zuul.message.HeaderName[]",
          "displayedType": "HeaderName[]",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/names",
            "name": "names",
            "type": "com.netflix.zuul.message.HeaderName[]",
            "displayedType": "HeaderName[]",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 98,
              "startColumn": 30,
              "endLine": 98,
              "endColumn": 35
            }
          },
          "position": {
            "startLine": 45,
            "startColumn": 30,
            "endLine": 45,
            "endColumn": 35
          }
        },
        "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/count": {
          "key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/count",
          "name": "count",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PUBLIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/count",
            "name": "count",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 92,
              "startColumn": 20,
              "endLine": 92,
              "endColumn": 25
            }
          },
          "position": {
            "startLine": 39,
            "startColumn": 20,
            "endLine": 39,
            "endColumn": 25
          }
        },
        "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/values": {
          "key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/values",
          "name": "values",
          "type": "java.lang.String[]",
          "displayedType": "String[]",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/values",
            "name": "values",
            "type": "java.lang.String[]",
            "displayedType": "String[]",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 99,
              "startColumn": 26,
              "endLine": 99,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 46,
            "startColumn": 26,
            "endLine": 46,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/stringNames": {
          "key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/stringNames",
          "name": "stringNames",
          "type": "java.lang.String[]",
          "displayedType": "String[]",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/stringNames",
            "name": "stringNames",
            "type": "java.lang.String[]",
            "displayedType": "String[]",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 97,
              "startColumn": 26,
              "endLine": 97,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 44,
            "startColumn": 26,
            "endLine": 44,
            "endColumn": 37
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/jmh/java/com/netflix/zuul/message/HeadersBenchmark.java-com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders-com.netflix.zuul.message.HeadersBenchmark.AddHeaders-nameLengthstringNamesvaluescountnames": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/jmh/java/com/netflix/zuul/message/HeadersBenchmark.java-com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders-com.netflix.zuul.message.HeadersBenchmark.AddHeaders-nameLengthstringNamesvaluescountnames",
      "probability": 1,
      "from_file_path": "zuul-core/src/jmh/java/com/netflix/zuul/message/HeadersBenchmark.java",
      "from_class_or_interface_name": "GetSetHeaders",
      "from_class_or_interface_key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/jmh/java/com/netflix/zuul/message/HeadersBenchmark.java",
      "to_class_or_interface_key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders",
      "to_class_or_interface_name": "AddHeaders",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/nameLength": {
          "key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/nameLength",
          "name": "nameLength",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PUBLIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/nameLength",
            "name": "nameLength",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 42,
              "startColumn": 20,
              "endLine": 42,
              "endColumn": 30
            }
          },
          "position": {
            "startLine": 95,
            "startColumn": 20,
            "endLine": 95,
            "endColumn": 30
          }
        },
        "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/stringNames": {
          "key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/stringNames",
          "name": "stringNames",
          "type": "java.lang.String[]",
          "displayedType": "String[]",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/stringNames",
            "name": "stringNames",
            "type": "java.lang.String[]",
            "displayedType": "String[]",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 44,
              "startColumn": 26,
              "endLine": 44,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 97,
            "startColumn": 26,
            "endLine": 97,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/values": {
          "key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/values",
          "name": "values",
          "type": "java.lang.String[]",
          "displayedType": "String[]",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/values",
            "name": "values",
            "type": "java.lang.String[]",
            "displayedType": "String[]",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 46,
              "startColumn": 26,
              "endLine": 46,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 99,
            "startColumn": 26,
            "endLine": 99,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/count": {
          "key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/count",
          "name": "count",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PUBLIC"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/count",
            "name": "count",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PUBLIC"
            ],
            "position": {
              "startLine": 39,
              "startColumn": 20,
              "endLine": 39,
              "endColumn": 25
            }
          },
          "position": {
            "startLine": 92,
            "startColumn": 20,
            "endLine": 92,
            "endColumn": 25
          }
        },
        "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/names": {
          "key": "com.netflix.zuul.message.HeadersBenchmark.GetSetHeaders/memberField/names",
          "name": "names",
          "type": "com.netflix.zuul.message.HeaderName[]",
          "displayedType": "HeaderName[]",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.HeadersBenchmark.AddHeaders/memberField/names",
            "name": "names",
            "type": "com.netflix.zuul.message.HeaderName[]",
            "displayedType": "HeaderName[]",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 45,
              "startColumn": 30,
              "endLine": 45,
              "endColumn": 35
            }
          },
          "position": {
            "startLine": 98,
            "startColumn": 30,
            "endLine": 98,
            "endColumn": 35
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java-com.netflix.zuul.message.http.HttpRequestMessageImpl-com.netflix.zuul.message.util.HttpRequestBuilder-portserverNameprotocolschemeclientIppathmethod": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java-com.netflix.zuul.message.http.HttpRequestMessageImpl-com.netflix.zuul.message.util.HttpRequestBuilder-portserverNameprotocolschemeclientIppathmethod",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java",
      "from_class_or_interface_name": "HttpRequestMessageImpl",
      "from_class_or_interface_key": "com.netflix.zuul.message.http.HttpRequestMessageImpl",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/util/HttpRequestBuilder.java",
      "to_class_or_interface_key": "com.netflix.zuul.message.util.HttpRequestBuilder",
      "to_class_or_interface_name": "HttpRequestBuilder",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/port": {
          "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/port",
          "name": "port",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/port",
            "name": "port",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 53,
              "startColumn": 17,
              "endLine": 53,
              "endColumn": 21
            }
          },
          "position": {
            "startLine": 89,
            "startColumn": 17,
            "endLine": 89,
            "endColumn": 21
          }
        },
        "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/serverName": {
          "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/serverName",
          "name": "serverName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/serverName",
            "name": "serverName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 54,
              "startColumn": 20,
              "endLine": 54,
              "endColumn": 30
            }
          },
          "position": {
            "startLine": 90,
            "startColumn": 20,
            "endLine": 90,
            "endColumn": 30
          }
        },
        "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/protocol": {
          "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/protocol",
          "name": "protocol",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/protocol",
            "name": "protocol",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 46,
              "startColumn": 20,
              "endLine": 46,
              "endColumn": 28
            }
          },
          "position": {
            "startLine": 82,
            "startColumn": 20,
            "endLine": 82,
            "endColumn": 28
          }
        },
        "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/scheme": {
          "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/scheme",
          "name": "scheme",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/scheme",
            "name": "scheme",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 52,
              "startColumn": 20,
              "endLine": 52,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 88,
            "startColumn": 20,
            "endLine": 88,
            "endColumn": 26
          }
        },
        "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/clientIp": {
          "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/clientIp",
          "name": "clientIp",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/clientIp",
            "name": "clientIp",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 20,
              "endLine": 51,
              "endColumn": 28
            }
          },
          "position": {
            "startLine": 87,
            "startColumn": 20,
            "endLine": 87,
            "endColumn": 28
          }
        },
        "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/path": {
          "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/path",
          "name": "path",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/path",
            "name": "path",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 48,
              "startColumn": 20,
              "endLine": 48,
              "endColumn": 24
            }
          },
          "position": {
            "startLine": 84,
            "startColumn": 20,
            "endLine": 84,
            "endColumn": 24
          }
        },
        "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/method": {
          "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/method",
          "name": "method",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/method",
            "name": "method",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 47,
              "startColumn": 20,
              "endLine": 47,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 83,
            "startColumn": 20,
            "endLine": 83,
            "endColumn": 26
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/util/HttpRequestBuilder.java-com.netflix.zuul.message.util.HttpRequestBuilder-com.netflix.zuul.message.http.HttpRequestMessageImpl-methodclientIppathserverNameschemeportprotocol": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/message/util/HttpRequestBuilder.java-com.netflix.zuul.message.util.HttpRequestBuilder-com.netflix.zuul.message.http.HttpRequestMessageImpl-methodclientIppathserverNameschemeportprotocol",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/util/HttpRequestBuilder.java",
      "from_class_or_interface_name": "HttpRequestBuilder",
      "from_class_or_interface_key": "com.netflix.zuul.message.util.HttpRequestBuilder",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java",
      "to_class_or_interface_key": "com.netflix.zuul.message.http.HttpRequestMessageImpl",
      "to_class_or_interface_name": "HttpRequestMessageImpl",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/method": {
          "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/method",
          "name": "method",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/method",
            "name": "method",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 83,
              "startColumn": 20,
              "endLine": 83,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 47,
            "startColumn": 20,
            "endLine": 47,
            "endColumn": 26
          }
        },
        "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/clientIp": {
          "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/clientIp",
          "name": "clientIp",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/clientIp",
            "name": "clientIp",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 87,
              "startColumn": 20,
              "endLine": 87,
              "endColumn": 28
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 20,
            "endLine": 51,
            "endColumn": 28
          }
        },
        "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/path": {
          "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/path",
          "name": "path",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/path",
            "name": "path",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 84,
              "startColumn": 20,
              "endLine": 84,
              "endColumn": 24
            }
          },
          "position": {
            "startLine": 48,
            "startColumn": 20,
            "endLine": 48,
            "endColumn": 24
          }
        },
        "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/serverName": {
          "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/serverName",
          "name": "serverName",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/serverName",
            "name": "serverName",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 90,
              "startColumn": 20,
              "endLine": 90,
              "endColumn": 30
            }
          },
          "position": {
            "startLine": 54,
            "startColumn": 20,
            "endLine": 54,
            "endColumn": 30
          }
        },
        "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/scheme": {
          "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/scheme",
          "name": "scheme",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/scheme",
            "name": "scheme",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 88,
              "startColumn": 20,
              "endLine": 88,
              "endColumn": 26
            }
          },
          "position": {
            "startLine": 52,
            "startColumn": 20,
            "endLine": 52,
            "endColumn": 26
          }
        },
        "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/port": {
          "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/port",
          "name": "port",
          "type": "int",
          "displayedType": "int",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/port",
            "name": "port",
            "type": "int",
            "displayedType": "int",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 89,
              "startColumn": 17,
              "endLine": 89,
              "endColumn": 21
            }
          },
          "position": {
            "startLine": 53,
            "startColumn": 17,
            "endLine": 53,
            "endColumn": 21
          }
        },
        "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/protocol": {
          "key": "com.netflix.zuul.message.util.HttpRequestBuilder/memberField/protocol",
          "name": "protocol",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.message.http.HttpRequestMessageImpl/memberField/protocol",
            "name": "protocol",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 82,
              "startColumn": 20,
              "endLine": 82,
              "endColumn": 28
            }
          },
          "position": {
            "startLine": 46,
            "startColumn": 20,
            "endLine": 46,
            "endColumn": 28
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java-com.netflix.zuul.monitoring.ConnCounter-com.netflix.zuul.monitoring.ConnTimer-registrychanmetricBaseEMPTY": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java-com.netflix.zuul.monitoring.ConnCounter-com.netflix.zuul.monitoring.ConnTimer-registrychanmetricBaseEMPTY",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java",
      "from_class_or_interface_name": "ConnCounter",
      "from_class_or_interface_key": "com.netflix.zuul.monitoring.ConnCounter",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java",
      "to_class_or_interface_key": "com.netflix.zuul.monitoring.ConnTimer",
      "to_class_or_interface_name": "ConnTimer",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.monitoring.ConnCounter/memberField/registry": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/registry",
          "name": "registry",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 28,
              "endLine": 51,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 61,
            "startColumn": 28,
            "endLine": 61,
            "endColumn": 36
          }
        },
        "com.netflix.zuul.monitoring.ConnCounter/memberField/chan": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/chan",
          "name": "chan",
          "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
          "displayedType": "Channel",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/chan",
            "name": "chan",
            "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
            "displayedType": "Channel",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 52,
              "startColumn": 27,
              "endLine": 52,
              "endColumn": 31
            }
          },
          "position": {
            "startLine": 62,
            "startColumn": 27,
            "endLine": 62,
            "endColumn": 31
          }
        },
        "com.netflix.zuul.monitoring.ConnCounter/memberField/metricBase": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/metricBase",
          "name": "metricBase",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
          "displayedType": "Id",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/metricBase",
            "name": "metricBase",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
            "displayedType": "Id",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 54,
              "startColumn": 22,
              "endLine": 54,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 63,
            "startColumn": 22,
            "endLine": 63,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.monitoring.ConnCounter/memberField/EMPTY": {
          "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/EMPTY",
          "name": "EMPTY",
          "type": "com.netflix.zuul.monitoring.com.netflix.zuul.Attrs",
          "displayedType": "Attrs",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/EMPTY",
            "name": "EMPTY",
            "type": "com.netflix.zuul.monitoring.com.netflix.zuul.Attrs",
            "displayedType": "Attrs",
            "modifiers": [
              "PRIVATE",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 49,
              "startColumn": 32,
              "endLine": 49,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 45,
            "startColumn": 32,
            "endLine": 45,
            "endColumn": 37
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java-com.netflix.zuul.monitoring.ConnTimer-com.netflix.zuul.monitoring.ConnCounter-EMPTYmetricBasechanregistry": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java-com.netflix.zuul.monitoring.ConnTimer-com.netflix.zuul.monitoring.ConnCounter-EMPTYmetricBasechanregistry",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnTimer.java",
      "from_class_or_interface_name": "ConnTimer",
      "from_class_or_interface_key": "com.netflix.zuul.monitoring.ConnTimer",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/monitoring/ConnCounter.java",
      "to_class_or_interface_key": "com.netflix.zuul.monitoring.ConnCounter",
      "to_class_or_interface_name": "ConnCounter",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.monitoring.ConnTimer/memberField/EMPTY": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/EMPTY",
          "name": "EMPTY",
          "type": "com.netflix.zuul.monitoring.com.netflix.zuul.Attrs",
          "displayedType": "Attrs",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/EMPTY",
            "name": "EMPTY",
            "type": "com.netflix.zuul.monitoring.com.netflix.zuul.Attrs",
            "displayedType": "Attrs",
            "modifiers": [
              "PRIVATE",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 45,
              "startColumn": 32,
              "endLine": 45,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 49,
            "startColumn": 32,
            "endLine": 49,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.monitoring.ConnTimer/memberField/metricBase": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/metricBase",
          "name": "metricBase",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
          "displayedType": "Id",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/metricBase",
            "name": "metricBase",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Id",
            "displayedType": "Id",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 63,
              "startColumn": 22,
              "endLine": 63,
              "endColumn": 32
            }
          },
          "position": {
            "startLine": 54,
            "startColumn": 22,
            "endLine": 54,
            "endColumn": 32
          }
        },
        "com.netflix.zuul.monitoring.ConnTimer/memberField/chan": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/chan",
          "name": "chan",
          "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
          "displayedType": "Channel",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/chan",
            "name": "chan",
            "type": "com.netflix.zuul.monitoring.io.netty.channel.Channel",
            "displayedType": "Channel",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 62,
              "startColumn": 27,
              "endLine": 62,
              "endColumn": 31
            }
          },
          "position": {
            "startLine": 52,
            "startColumn": 27,
            "endLine": 52,
            "endColumn": 31
          }
        },
        "com.netflix.zuul.monitoring.ConnTimer/memberField/registry": {
          "key": "com.netflix.zuul.monitoring.ConnTimer/memberField/registry",
          "name": "registry",
          "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.monitoring.ConnCounter/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.monitoring.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 61,
              "startColumn": 28,
              "endLine": 61,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 28,
            "endLine": 51,
            "endColumn": 36
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ConnectionPoolHandler.java-com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-originNameMETRIC_PREFIXLOG": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ConnectionPoolHandler.java-com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-originNameMETRIC_PREFIXLOG",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ConnectionPoolHandler.java",
      "from_class_or_interface_name": "ConnectionPoolHandler",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "to_class_or_interface_name": "DefaultClientChannelManager",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler/memberField/originName": {
          "key": "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler/memberField/originName",
          "name": "originName",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.origins.OriginName",
          "displayedType": "OriginName",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/originName",
            "name": "originName",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.origins.OriginName",
            "displayedType": "OriginName",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 73,
              "startColumn": 30,
              "endLine": 73,
              "endColumn": 40
            }
          },
          "position": {
            "startLine": 46,
            "startColumn": 30,
            "endLine": 46,
            "endColumn": 40
          }
        },
        "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler/memberField/METRIC_PREFIX": {
          "key": "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler/memberField/METRIC_PREFIX",
          "name": "METRIC_PREFIX",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/METRIC_PREFIX",
            "name": "METRIC_PREFIX",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 66,
              "startColumn": 32,
              "endLine": 66,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 44,
            "startColumn": 32,
            "endLine": 44,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler/memberField/LOG": {
          "key": "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler/memberField/LOG",
          "name": "LOG",
          "type": "org.slf4j.Logger",
          "displayedType": "Logger",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/LOG",
            "name": "LOG",
            "type": "org.slf4j.Logger",
            "displayedType": "Logger",
            "modifiers": [
              "PRIVATE",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 64,
              "startColumn": 33,
              "endLine": 64,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 42,
            "startColumn": 33,
            "endLine": 42,
            "endColumn": 36
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler-METRIC_PREFIXoriginNameLOG": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler-METRIC_PREFIXoriginNameLOG",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "from_class_or_interface_name": "DefaultClientChannelManager",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ConnectionPoolHandler.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler",
      "to_class_or_interface_name": "ConnectionPoolHandler",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/METRIC_PREFIX": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/METRIC_PREFIX",
          "name": "METRIC_PREFIX",
          "type": "java.lang.String",
          "displayedType": "String",
          "probability": 1,
          "modifiers": [
            "PUBLIC",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler/memberField/METRIC_PREFIX",
            "name": "METRIC_PREFIX",
            "type": "java.lang.String",
            "displayedType": "String",
            "modifiers": [
              "PUBLIC",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 44,
              "startColumn": 32,
              "endLine": 44,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 66,
            "startColumn": 32,
            "endLine": 66,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/originName": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/originName",
          "name": "originName",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.origins.OriginName",
          "displayedType": "OriginName",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler/memberField/originName",
            "name": "originName",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.zuul.origins.OriginName",
            "displayedType": "OriginName",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 46,
              "startColumn": 30,
              "endLine": 46,
              "endColumn": 40
            }
          },
          "position": {
            "startLine": 73,
            "startColumn": 30,
            "endLine": 73,
            "endColumn": 40
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/LOG": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/LOG",
          "name": "LOG",
          "type": "org.slf4j.Logger",
          "displayedType": "Logger",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler/memberField/LOG",
            "name": "LOG",
            "type": "org.slf4j.Logger",
            "displayedType": "Logger",
            "modifiers": [
              "PRIVATE",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 42,
              "startColumn": 33,
              "endLine": 42,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 33,
            "endLine": 64,
            "endColumn": 36
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool-maxConnsPerHostExceededCounterconnsInPoolrequestConnCountercreateConnSucceededCountercreateNewConnCounterconnTakenFromPoolIsNotOpenreuseConnCountercreateConnFailedCounterLOGconnsInUse": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool-maxConnsPerHostExceededCounterconnsInPoolrequestConnCountercreateConnSucceededCountercreateNewConnCounterconnTakenFromPoolIsNotOpenreuseConnCountercreateConnFailedCounterLOGconnsInUse",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "from_class_or_interface_name": "DefaultClientChannelManager",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "to_class_or_interface_name": "PerServerConnectionPool",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/maxConnsPerHostExceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/maxConnsPerHostExceededCounter",
          "name": "maxConnsPerHostExceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/maxConnsPerHostExceededCounter",
            "name": "maxConnsPerHostExceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 70,
              "startColumn": 29,
              "endLine": 70,
              "endColumn": 59
            }
          },
          "position": {
            "startLine": 91,
            "startColumn": 27,
            "endLine": 91,
            "endColumn": 57
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInPool": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInPool",
          "name": "connsInPool",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInPool",
            "name": "connsInPool",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 73,
              "startColumn": 35,
              "endLine": 73,
              "endColumn": 46
            }
          },
          "position": {
            "startLine": 96,
            "startColumn": 33,
            "endLine": 96,
            "endColumn": 44
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/requestConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/requestConnCounter",
          "name": "requestConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/requestConnCounter",
            "name": "requestConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 29,
              "endLine": 67,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 84,
            "startColumn": 27,
            "endLine": 84,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnSucceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnSucceededCounter",
          "name": "createConnSucceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnSucceededCounter",
            "name": "createConnSucceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 64,
              "startColumn": 29,
              "endLine": 64,
              "endColumn": 55
            }
          },
          "position": {
            "startLine": 80,
            "startColumn": 27,
            "endLine": 80,
            "endColumn": 53
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createNewConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createNewConnCounter",
          "name": "createNewConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createNewConnCounter",
            "name": "createNewConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 63,
              "startColumn": 29,
              "endLine": 63,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 79,
            "startColumn": 27,
            "endLine": 79,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connTakenFromPoolIsNotOpen": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connTakenFromPoolIsNotOpen",
          "name": "connTakenFromPoolIsNotOpen",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connTakenFromPoolIsNotOpen",
            "name": "connTakenFromPoolIsNotOpen",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 69,
              "startColumn": 29,
              "endLine": 69,
              "endColumn": 55
            }
          },
          "position": {
            "startLine": 90,
            "startColumn": 27,
            "endLine": 90,
            "endColumn": 53
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/reuseConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/reuseConnCounter",
          "name": "reuseConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/reuseConnCounter",
            "name": "reuseConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 68,
              "startColumn": 29,
              "endLine": 68,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 87,
            "startColumn": 27,
            "endLine": 87,
            "endColumn": 43
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnFailedCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnFailedCounter",
          "name": "createConnFailedCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnFailedCounter",
            "name": "createConnFailedCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 65,
              "startColumn": 29,
              "endLine": 65,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 81,
            "startColumn": 27,
            "endLine": 81,
            "endColumn": 50
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/LOG": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/LOG",
          "name": "LOG",
          "type": "org.slf4j.Logger",
          "displayedType": "Logger",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/LOG",
            "name": "LOG",
            "type": "org.slf4j.Logger",
            "displayedType": "Logger",
            "modifiers": [
              "PRIVATE",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 51,
              "startColumn": 33,
              "endLine": 51,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 33,
            "endLine": 64,
            "endColumn": 36
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInUse": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInUse",
          "name": "connsInUse",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInUse",
            "name": "connsInUse",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 74,
              "startColumn": 35,
              "endLine": 74,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 97,
            "startColumn": 33,
            "endLine": 97,
            "endColumn": 43
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest-maxConnsPerHostExceededCounterconnsInPoolrequestConnCountercreateConnSucceededCountercreateNewConnCounterconnTakenFromPoolIsNotOpenreuseConnCounterregistrycreateConnFailedCounterconnsInUse": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest-maxConnsPerHostExceededCounterconnsInPoolrequestConnCountercreateConnSucceededCountercreateNewConnCounterconnTakenFromPoolIsNotOpenreuseConnCounterregistrycreateConnFailedCounterconnsInUse",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "from_class_or_interface_name": "DefaultClientChannelManager",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/test/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPoolTest.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest",
      "to_class_or_interface_name": "PerServerConnectionPoolTest",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/maxConnsPerHostExceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/maxConnsPerHostExceededCounter",
          "name": "maxConnsPerHostExceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/maxConnsPerHostExceededCounter",
            "name": "maxConnsPerHostExceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 97,
              "startColumn": 21,
              "endLine": 97,
              "endColumn": 51
            }
          },
          "position": {
            "startLine": 91,
            "startColumn": 27,
            "endLine": 91,
            "endColumn": 57
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInPool": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInPool",
          "name": "connsInPool",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInPool",
            "name": "connsInPool",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 99,
              "startColumn": 27,
              "endLine": 99,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 96,
            "startColumn": 33,
            "endLine": 96,
            "endColumn": 44
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/requestConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/requestConnCounter",
          "name": "requestConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/requestConnCounter",
            "name": "requestConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 93,
              "startColumn": 21,
              "endLine": 93,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 84,
            "startColumn": 27,
            "endLine": 84,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnSucceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnSucceededCounter",
          "name": "createConnSucceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnSucceededCounter",
            "name": "createConnSucceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 91,
              "startColumn": 21,
              "endLine": 91,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 80,
            "startColumn": 27,
            "endLine": 80,
            "endColumn": 53
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createNewConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createNewConnCounter",
          "name": "createNewConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createNewConnCounter",
            "name": "createNewConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 90,
              "startColumn": 21,
              "endLine": 90,
              "endColumn": 41
            }
          },
          "position": {
            "startLine": 79,
            "startColumn": 27,
            "endLine": 79,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connTakenFromPoolIsNotOpen": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connTakenFromPoolIsNotOpen",
          "name": "connTakenFromPoolIsNotOpen",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connTakenFromPoolIsNotOpen",
            "name": "connTakenFromPoolIsNotOpen",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 95,
              "startColumn": 21,
              "endLine": 95,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 90,
            "startColumn": 27,
            "endLine": 90,
            "endColumn": 53
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/reuseConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/reuseConnCounter",
          "name": "reuseConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/reuseConnCounter",
            "name": "reuseConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 94,
              "startColumn": 21,
              "endLine": 94,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 87,
            "startColumn": 27,
            "endLine": 87,
            "endColumn": 43
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/registry": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/registry",
          "name": "registry",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 84,
              "startColumn": 22,
              "endLine": 84,
              "endColumn": 30
            }
          },
          "position": {
            "startLine": 71,
            "startColumn": 28,
            "endLine": 71,
            "endColumn": 36
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnFailedCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnFailedCounter",
          "name": "createConnFailedCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnFailedCounter",
            "name": "createConnFailedCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 92,
              "startColumn": 21,
              "endLine": 92,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 81,
            "startColumn": 27,
            "endLine": 81,
            "endColumn": 50
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInUse": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInUse",
          "name": "connsInUse",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInUse",
            "name": "connsInUse",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 100,
              "startColumn": 27,
              "endLine": 100,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 97,
            "startColumn": 33,
            "endLine": 97,
            "endColumn": 43
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-com.netflix.zuul.netty.connectionpool.PooledConnection-LOGcloseConnCountercloseWrtBusyConnCounter": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-com.netflix.zuul.netty.connectionpool.PooledConnection-LOGcloseConnCountercloseWrtBusyConnCounter",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "from_class_or_interface_name": "DefaultClientChannelManager",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PooledConnection.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PooledConnection",
      "to_class_or_interface_name": "PooledConnection",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/LOG": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/LOG",
          "name": "LOG",
          "type": "org.slf4j.Logger",
          "displayedType": "Logger",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PooledConnection/memberField/LOG",
            "name": "LOG",
            "type": "org.slf4j.Logger",
            "displayedType": "Logger",
            "modifiers": [
              "PRIVATE",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 48,
              "startColumn": 33,
              "endLine": 48,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 33,
            "endLine": 64,
            "endColumn": 36
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/closeConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/closeConnCounter",
          "name": "closeConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PooledConnection/memberField/closeConnCounter",
            "name": "closeConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 45,
              "startColumn": 27,
              "endLine": 45,
              "endColumn": 43
            }
          },
          "position": {
            "startLine": 83,
            "startColumn": 27,
            "endLine": 83,
            "endColumn": 43
          }
        },
        "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/closeWrtBusyConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/closeWrtBusyConnCounter",
          "name": "closeWrtBusyConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PooledConnection/memberField/closeWrtBusyConnCounter",
            "name": "closeWrtBusyConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 46,
              "startColumn": 27,
              "endLine": 46,
              "endColumn": 50
            }
          },
          "position": {
            "startLine": 92,
            "startColumn": 27,
            "endLine": 92,
            "endColumn": 50
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-createConnSucceededCounterreuseConnCountermaxConnsPerHostExceededCounterconnsInPoolcreateNewConnCounterconnTakenFromPoolIsNotOpencreateConnFailedCounterLOGrequestConnCounterconnsInUse": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-createConnSucceededCounterreuseConnCountermaxConnsPerHostExceededCounterconnsInPoolcreateNewConnCounterconnTakenFromPoolIsNotOpencreateConnFailedCounterLOGrequestConnCounterconnsInUse",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "from_class_or_interface_name": "PerServerConnectionPool",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "to_class_or_interface_name": "DefaultClientChannelManager",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnSucceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnSucceededCounter",
          "name": "createConnSucceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnSucceededCounter",
            "name": "createConnSucceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 80,
              "startColumn": 27,
              "endLine": 80,
              "endColumn": 53
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 29,
            "endLine": 64,
            "endColumn": 55
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/reuseConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/reuseConnCounter",
          "name": "reuseConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/reuseConnCounter",
            "name": "reuseConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 87,
              "startColumn": 27,
              "endLine": 87,
              "endColumn": 43
            }
          },
          "position": {
            "startLine": 68,
            "startColumn": 29,
            "endLine": 68,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/maxConnsPerHostExceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/maxConnsPerHostExceededCounter",
          "name": "maxConnsPerHostExceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/maxConnsPerHostExceededCounter",
            "name": "maxConnsPerHostExceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 91,
              "startColumn": 27,
              "endLine": 91,
              "endColumn": 57
            }
          },
          "position": {
            "startLine": 70,
            "startColumn": 29,
            "endLine": 70,
            "endColumn": 59
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInPool": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInPool",
          "name": "connsInPool",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInPool",
            "name": "connsInPool",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 96,
              "startColumn": 33,
              "endLine": 96,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 73,
            "startColumn": 35,
            "endLine": 73,
            "endColumn": 46
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createNewConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createNewConnCounter",
          "name": "createNewConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createNewConnCounter",
            "name": "createNewConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 79,
              "startColumn": 27,
              "endLine": 79,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 63,
            "startColumn": 29,
            "endLine": 63,
            "endColumn": 49
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connTakenFromPoolIsNotOpen": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connTakenFromPoolIsNotOpen",
          "name": "connTakenFromPoolIsNotOpen",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connTakenFromPoolIsNotOpen",
            "name": "connTakenFromPoolIsNotOpen",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 90,
              "startColumn": 27,
              "endLine": 90,
              "endColumn": 53
            }
          },
          "position": {
            "startLine": 69,
            "startColumn": 29,
            "endLine": 69,
            "endColumn": 55
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnFailedCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnFailedCounter",
          "name": "createConnFailedCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnFailedCounter",
            "name": "createConnFailedCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 81,
              "startColumn": 27,
              "endLine": 81,
              "endColumn": 50
            }
          },
          "position": {
            "startLine": 65,
            "startColumn": 29,
            "endLine": 65,
            "endColumn": 52
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/LOG": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/LOG",
          "name": "LOG",
          "type": "org.slf4j.Logger",
          "displayedType": "Logger",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/LOG",
            "name": "LOG",
            "type": "org.slf4j.Logger",
            "displayedType": "Logger",
            "modifiers": [
              "PRIVATE",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 64,
              "startColumn": 33,
              "endLine": 64,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 51,
            "startColumn": 33,
            "endLine": 51,
            "endColumn": 36
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/requestConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/requestConnCounter",
          "name": "requestConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/requestConnCounter",
            "name": "requestConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 84,
              "startColumn": 27,
              "endLine": 84,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 29,
            "endLine": 67,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInUse": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInUse",
          "name": "connsInUse",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInUse",
            "name": "connsInUse",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 97,
              "startColumn": 33,
              "endLine": 97,
              "endColumn": 43
            }
          },
          "position": {
            "startLine": 74,
            "startColumn": 35,
            "endLine": 74,
            "endColumn": 45
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool-com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest-createConnSucceededCounterreuseConnCountermaxConnsPerHostExceededCounterconnEstablishTimerconnsInPoolcreateNewConnCounterconnTakenFromPoolIsNotOpencreateConnFailedCounterrequestConnCounterconnsInUsecloseAboveHighWaterMarkCounter": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool-com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest-createConnSucceededCounterreuseConnCountermaxConnsPerHostExceededCounterconnEstablishTimerconnsInPoolcreateNewConnCounterconnTakenFromPoolIsNotOpencreateConnFailedCounterrequestConnCounterconnsInUsecloseAboveHighWaterMarkCounter",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "from_class_or_interface_name": "PerServerConnectionPool",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/test/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPoolTest.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest",
      "to_class_or_interface_name": "PerServerConnectionPoolTest",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnSucceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnSucceededCounter",
          "name": "createConnSucceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnSucceededCounter",
            "name": "createConnSucceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 91,
              "startColumn": 21,
              "endLine": 91,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 29,
            "endLine": 64,
            "endColumn": 55
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/reuseConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/reuseConnCounter",
          "name": "reuseConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/reuseConnCounter",
            "name": "reuseConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 94,
              "startColumn": 21,
              "endLine": 94,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 68,
            "startColumn": 29,
            "endLine": 68,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/maxConnsPerHostExceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/maxConnsPerHostExceededCounter",
          "name": "maxConnsPerHostExceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/maxConnsPerHostExceededCounter",
            "name": "maxConnsPerHostExceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 97,
              "startColumn": 21,
              "endLine": 97,
              "endColumn": 51
            }
          },
          "position": {
            "startLine": 70,
            "startColumn": 29,
            "endLine": 70,
            "endColumn": 59
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connEstablishTimer": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connEstablishTimer",
          "name": "connEstablishTimer",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Timer",
          "displayedType": "Timer",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connEstablishTimer",
            "name": "connEstablishTimer",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Timer",
            "displayedType": "Timer",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 98,
              "startColumn": 19,
              "endLine": 98,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 72,
            "startColumn": 27,
            "endLine": 72,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInPool": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInPool",
          "name": "connsInPool",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInPool",
            "name": "connsInPool",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 99,
              "startColumn": 27,
              "endLine": 99,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 73,
            "startColumn": 35,
            "endLine": 73,
            "endColumn": 46
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createNewConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createNewConnCounter",
          "name": "createNewConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createNewConnCounter",
            "name": "createNewConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 90,
              "startColumn": 21,
              "endLine": 90,
              "endColumn": 41
            }
          },
          "position": {
            "startLine": 63,
            "startColumn": 29,
            "endLine": 63,
            "endColumn": 49
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connTakenFromPoolIsNotOpen": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connTakenFromPoolIsNotOpen",
          "name": "connTakenFromPoolIsNotOpen",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connTakenFromPoolIsNotOpen",
            "name": "connTakenFromPoolIsNotOpen",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 95,
              "startColumn": 21,
              "endLine": 95,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 69,
            "startColumn": 29,
            "endLine": 69,
            "endColumn": 55
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnFailedCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnFailedCounter",
          "name": "createConnFailedCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnFailedCounter",
            "name": "createConnFailedCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 92,
              "startColumn": 21,
              "endLine": 92,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 65,
            "startColumn": 29,
            "endLine": 65,
            "endColumn": 52
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/requestConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/requestConnCounter",
          "name": "requestConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/requestConnCounter",
            "name": "requestConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 93,
              "startColumn": 21,
              "endLine": 93,
              "endColumn": 39
            }
          },
          "position": {
            "startLine": 67,
            "startColumn": 29,
            "endLine": 67,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInUse": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInUse",
          "name": "connsInUse",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInUse",
            "name": "connsInUse",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 100,
              "startColumn": 27,
              "endLine": 100,
              "endColumn": 37
            }
          },
          "position": {
            "startLine": 74,
            "startColumn": 35,
            "endLine": 74,
            "endColumn": 45
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/closeAboveHighWaterMarkCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/closeAboveHighWaterMarkCounter",
          "name": "closeAboveHighWaterMarkCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/closeAboveHighWaterMarkCounter",
            "name": "closeAboveHighWaterMarkCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 96,
              "startColumn": 21,
              "endLine": 96,
              "endColumn": 51
            }
          },
          "position": {
            "startLine": 71,
            "startColumn": 29,
            "endLine": 71,
            "endColumn": 59
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/test/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPoolTest.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-createConnSucceededCounterregistryconnsInUseconnsInPoolmaxConnsPerHostExceededCounterconnTakenFromPoolIsNotOpenrequestConnCountercreateConnFailedCountercreateNewConnCounterreuseConnCounter": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/test/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPoolTest.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-createConnSucceededCounterregistryconnsInUseconnsInPoolmaxConnsPerHostExceededCounterconnTakenFromPoolIsNotOpenrequestConnCountercreateConnFailedCountercreateNewConnCounterreuseConnCounter",
      "probability": 1,
      "from_file_path": "zuul-core/src/test/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPoolTest.java",
      "from_class_or_interface_name": "PerServerConnectionPoolTest",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "to_class_or_interface_name": "DefaultClientChannelManager",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnSucceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnSucceededCounter",
          "name": "createConnSucceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnSucceededCounter",
            "name": "createConnSucceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 80,
              "startColumn": 27,
              "endLine": 80,
              "endColumn": 53
            }
          },
          "position": {
            "startLine": 91,
            "startColumn": 21,
            "endLine": 91,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/registry": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/registry",
          "name": "registry",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 71,
              "startColumn": 28,
              "endLine": 71,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 84,
            "startColumn": 22,
            "endLine": 84,
            "endColumn": 30
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInUse": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInUse",
          "name": "connsInUse",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInUse",
            "name": "connsInUse",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 97,
              "startColumn": 33,
              "endLine": 97,
              "endColumn": 43
            }
          },
          "position": {
            "startLine": 100,
            "startColumn": 27,
            "endLine": 100,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInPool": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInPool",
          "name": "connsInPool",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connsInPool",
            "name": "connsInPool",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 96,
              "startColumn": 33,
              "endLine": 96,
              "endColumn": 44
            }
          },
          "position": {
            "startLine": 99,
            "startColumn": 27,
            "endLine": 99,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/maxConnsPerHostExceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/maxConnsPerHostExceededCounter",
          "name": "maxConnsPerHostExceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/maxConnsPerHostExceededCounter",
            "name": "maxConnsPerHostExceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 91,
              "startColumn": 27,
              "endLine": 91,
              "endColumn": 57
            }
          },
          "position": {
            "startLine": 97,
            "startColumn": 21,
            "endLine": 97,
            "endColumn": 51
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connTakenFromPoolIsNotOpen": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connTakenFromPoolIsNotOpen",
          "name": "connTakenFromPoolIsNotOpen",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/connTakenFromPoolIsNotOpen",
            "name": "connTakenFromPoolIsNotOpen",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 90,
              "startColumn": 27,
              "endLine": 90,
              "endColumn": 53
            }
          },
          "position": {
            "startLine": 95,
            "startColumn": 21,
            "endLine": 95,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/requestConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/requestConnCounter",
          "name": "requestConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/requestConnCounter",
            "name": "requestConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 84,
              "startColumn": 27,
              "endLine": 84,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 93,
            "startColumn": 21,
            "endLine": 93,
            "endColumn": 39
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnFailedCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnFailedCounter",
          "name": "createConnFailedCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createConnFailedCounter",
            "name": "createConnFailedCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 81,
              "startColumn": 27,
              "endLine": 81,
              "endColumn": 50
            }
          },
          "position": {
            "startLine": 92,
            "startColumn": 21,
            "endLine": 92,
            "endColumn": 44
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createNewConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createNewConnCounter",
          "name": "createNewConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/createNewConnCounter",
            "name": "createNewConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 79,
              "startColumn": 27,
              "endLine": 79,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 90,
            "startColumn": 21,
            "endLine": 90,
            "endColumn": 41
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/reuseConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/reuseConnCounter",
          "name": "reuseConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/reuseConnCounter",
            "name": "reuseConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 87,
              "startColumn": 27,
              "endLine": 87,
              "endColumn": 43
            }
          },
          "position": {
            "startLine": 94,
            "startColumn": 21,
            "endLine": 94,
            "endColumn": 37
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/test/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPoolTest.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool-createConnSucceededCounterconnsInUseconnEstablishTimerconnsInPoolmaxConnsPerHostExceededCounterconnTakenFromPoolIsNotOpenrequestConnCountercreateConnFailedCountercloseAboveHighWaterMarkCountercreateNewConnCounterreuseConnCounter": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/test/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPoolTest.java-com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest-com.netflix.zuul.netty.connectionpool.PerServerConnectionPool-createConnSucceededCounterconnsInUseconnEstablishTimerconnsInPoolmaxConnsPerHostExceededCounterconnTakenFromPoolIsNotOpenrequestConnCountercreateConnFailedCountercloseAboveHighWaterMarkCountercreateNewConnCounterreuseConnCounter",
      "probability": 1,
      "from_file_path": "zuul-core/src/test/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPoolTest.java",
      "from_class_or_interface_name": "PerServerConnectionPoolTest",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool",
      "to_class_or_interface_name": "PerServerConnectionPool",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnSucceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnSucceededCounter",
          "name": "createConnSucceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnSucceededCounter",
            "name": "createConnSucceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 64,
              "startColumn": 29,
              "endLine": 64,
              "endColumn": 55
            }
          },
          "position": {
            "startLine": 91,
            "startColumn": 21,
            "endLine": 91,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInUse": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInUse",
          "name": "connsInUse",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInUse",
            "name": "connsInUse",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 74,
              "startColumn": 35,
              "endLine": 74,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 100,
            "startColumn": 27,
            "endLine": 100,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connEstablishTimer": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connEstablishTimer",
          "name": "connEstablishTimer",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Timer",
          "displayedType": "Timer",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connEstablishTimer",
            "name": "connEstablishTimer",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Timer",
            "displayedType": "Timer",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 72,
              "startColumn": 27,
              "endLine": 72,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 98,
            "startColumn": 19,
            "endLine": 98,
            "endColumn": 37
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInPool": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connsInPool",
          "name": "connsInPool",
          "type": "java.util.concurrent.atomic.AtomicInteger",
          "displayedType": "AtomicInteger",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connsInPool",
            "name": "connsInPool",
            "type": "java.util.concurrent.atomic.AtomicInteger",
            "displayedType": "AtomicInteger",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 73,
              "startColumn": 35,
              "endLine": 73,
              "endColumn": 46
            }
          },
          "position": {
            "startLine": 99,
            "startColumn": 27,
            "endLine": 99,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/maxConnsPerHostExceededCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/maxConnsPerHostExceededCounter",
          "name": "maxConnsPerHostExceededCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/maxConnsPerHostExceededCounter",
            "name": "maxConnsPerHostExceededCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 70,
              "startColumn": 29,
              "endLine": 70,
              "endColumn": 59
            }
          },
          "position": {
            "startLine": 97,
            "startColumn": 21,
            "endLine": 97,
            "endColumn": 51
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connTakenFromPoolIsNotOpen": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/connTakenFromPoolIsNotOpen",
          "name": "connTakenFromPoolIsNotOpen",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/connTakenFromPoolIsNotOpen",
            "name": "connTakenFromPoolIsNotOpen",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 69,
              "startColumn": 29,
              "endLine": 69,
              "endColumn": 55
            }
          },
          "position": {
            "startLine": 95,
            "startColumn": 21,
            "endLine": 95,
            "endColumn": 47
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/requestConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/requestConnCounter",
          "name": "requestConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/requestConnCounter",
            "name": "requestConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 67,
              "startColumn": 29,
              "endLine": 67,
              "endColumn": 47
            }
          },
          "position": {
            "startLine": 93,
            "startColumn": 21,
            "endLine": 93,
            "endColumn": 39
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnFailedCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createConnFailedCounter",
          "name": "createConnFailedCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createConnFailedCounter",
            "name": "createConnFailedCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 65,
              "startColumn": 29,
              "endLine": 65,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 92,
            "startColumn": 21,
            "endLine": 92,
            "endColumn": 44
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/closeAboveHighWaterMarkCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/closeAboveHighWaterMarkCounter",
          "name": "closeAboveHighWaterMarkCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/closeAboveHighWaterMarkCounter",
            "name": "closeAboveHighWaterMarkCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 71,
              "startColumn": 29,
              "endLine": 71,
              "endColumn": 59
            }
          },
          "position": {
            "startLine": 96,
            "startColumn": 21,
            "endLine": 96,
            "endColumn": 51
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createNewConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/createNewConnCounter",
          "name": "createNewConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/createNewConnCounter",
            "name": "createNewConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 63,
              "startColumn": 29,
              "endLine": 63,
              "endColumn": 49
            }
          },
          "position": {
            "startLine": 90,
            "startColumn": 21,
            "endLine": 90,
            "endColumn": 41
          }
        },
        "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/reuseConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPoolTest/memberField/reuseConnCounter",
          "name": "reuseConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool/memberField/reuseConnCounter",
            "name": "reuseConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 68,
              "startColumn": 29,
              "endLine": 68,
              "endColumn": 45
            }
          },
          "position": {
            "startLine": 94,
            "startColumn": 21,
            "endLine": 94,
            "endColumn": 37
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PooledConnection.java-com.netflix.zuul.netty.connectionpool.PooledConnection-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-LOGcloseConnCountercloseWrtBusyConnCounter": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PooledConnection.java-com.netflix.zuul.netty.connectionpool.PooledConnection-com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager-LOGcloseConnCountercloseWrtBusyConnCounter",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PooledConnection.java",
      "from_class_or_interface_name": "PooledConnection",
      "from_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.PooledConnection",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager",
      "to_class_or_interface_name": "DefaultClientChannelManager",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.connectionpool.PooledConnection/memberField/LOG": {
          "key": "com.netflix.zuul.netty.connectionpool.PooledConnection/memberField/LOG",
          "name": "LOG",
          "type": "org.slf4j.Logger",
          "displayedType": "Logger",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/LOG",
            "name": "LOG",
            "type": "org.slf4j.Logger",
            "displayedType": "Logger",
            "modifiers": [
              "PRIVATE",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 64,
              "startColumn": 33,
              "endLine": 64,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 48,
            "startColumn": 33,
            "endLine": 48,
            "endColumn": 36
          }
        },
        "com.netflix.zuul.netty.connectionpool.PooledConnection/memberField/closeConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PooledConnection/memberField/closeConnCounter",
          "name": "closeConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/closeConnCounter",
            "name": "closeConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 83,
              "startColumn": 27,
              "endLine": 83,
              "endColumn": 43
            }
          },
          "position": {
            "startLine": 45,
            "startColumn": 27,
            "endLine": 45,
            "endColumn": 43
          }
        },
        "com.netflix.zuul.netty.connectionpool.PooledConnection/memberField/closeWrtBusyConnCounter": {
          "key": "com.netflix.zuul.netty.connectionpool.PooledConnection/memberField/closeWrtBusyConnCounter",
          "name": "closeWrtBusyConnCounter",
          "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
          "displayedType": "Counter",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager/memberField/closeWrtBusyConnCounter",
            "name": "closeWrtBusyConnCounter",
            "type": "com.netflix.zuul.netty.connectionpool.com.netflix.spectator.api.Counter",
            "displayedType": "Counter",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 92,
              "startColumn": 27,
              "endLine": 92,
              "endColumn": 50
            }
          },
          "position": {
            "startLine": 46,
            "startColumn": 27,
            "endLine": 46,
            "endColumn": 50
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseServerStartup.java-com.netflix.zuul.netty.server.BaseServerStartup-com.netflix.zuul.netty.server.BaseZuulChannelInitializer-accessLogPublisherfilterLoaderregistry": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseServerStartup.java-com.netflix.zuul.netty.server.BaseServerStartup-com.netflix.zuul.netty.server.BaseZuulChannelInitializer-accessLogPublisherfilterLoaderregistry",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseServerStartup.java",
      "from_class_or_interface_name": "BaseServerStartup",
      "from_class_or_interface_key": "com.netflix.zuul.netty.server.BaseServerStartup",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseZuulChannelInitializer.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.server.BaseZuulChannelInitializer",
      "to_class_or_interface_name": "BaseZuulChannelInitializer",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.server.BaseServerStartup/memberField/accessLogPublisher": {
          "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/accessLogPublisher",
          "name": "accessLogPublisher",
          "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.accesslog.AccessLogPublisher",
          "displayedType": "AccessLogPublisher",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseZuulChannelInitializer/memberField/accessLogPublisher",
            "name": "accessLogPublisher",
            "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.accesslog.AccessLogPublisher",
            "displayedType": "AccessLogPublisher",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 122,
              "startColumn": 40,
              "endLine": 122,
              "endColumn": 58
            }
          },
          "position": {
            "startLine": 68,
            "startColumn": 40,
            "endLine": 68,
            "endColumn": 58
          }
        },
        "com.netflix.zuul.netty.server.BaseServerStartup/memberField/filterLoader": {
          "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/filterLoader",
          "name": "filterLoader",
          "type": "com.netflix.zuul.netty.server.com.netflix.zuul.FilterLoader",
          "displayedType": "FilterLoader",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseZuulChannelInitializer/memberField/filterLoader",
            "name": "filterLoader",
            "type": "com.netflix.zuul.netty.server.com.netflix.zuul.FilterLoader",
            "displayedType": "FilterLoader",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 134,
              "startColumn": 34,
              "endLine": 134,
              "endColumn": 46
            }
          },
          "position": {
            "startLine": 71,
            "startColumn": 34,
            "endLine": 71,
            "endColumn": 46
          }
        },
        "com.netflix.zuul.netty.server.BaseServerStartup/memberField/registry": {
          "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/registry",
          "name": "registry",
          "type": "com.netflix.zuul.netty.server.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseZuulChannelInitializer/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.netty.server.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 117,
              "startColumn": 30,
              "endLine": 117,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 59,
            "startColumn": 30,
            "endLine": 59,
            "endColumn": 38
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseServerStartup.java-com.netflix.zuul.netty.server.BaseServerStartup-com.netflix.zuul.netty.server.Server-serverStatusManagereventLoopConfigregistryclientConnectionsShutdowneventLoopGroupMetricsLOG": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseServerStartup.java-com.netflix.zuul.netty.server.BaseServerStartup-com.netflix.zuul.netty.server.Server-serverStatusManagereventLoopConfigregistryclientConnectionsShutdowneventLoopGroupMetricsLOG",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseServerStartup.java",
      "from_class_or_interface_name": "BaseServerStartup",
      "from_class_or_interface_key": "com.netflix.zuul.netty.server.BaseServerStartup",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/Server.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.server.Server",
      "to_class_or_interface_name": "Server",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.server.BaseServerStartup/memberField/serverStatusManager": {
          "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/serverStatusManager",
          "name": "serverStatusManager",
          "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.status.ServerStatusManager",
          "displayedType": "ServerStatusManager",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.Server/memberField/serverStatusManager",
            "name": "serverStatusManager",
            "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.status.ServerStatusManager",
            "displayedType": "ServerStatusManager",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 126,
              "startColumn": 39,
              "endLine": 126,
              "endColumn": 58
            }
          },
          "position": {
            "startLine": 58,
            "startColumn": 41,
            "endLine": 58,
            "endColumn": 60
          }
        },
        "com.netflix.zuul.netty.server.BaseServerStartup/memberField/eventLoopConfig": {
          "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/eventLoopConfig",
          "name": "eventLoopConfig",
          "type": "com.netflix.zuul.netty.server.EventLoopConfig",
          "displayedType": "EventLoopConfig",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.Server/memberField/eventLoopConfig",
            "name": "eventLoopConfig",
            "type": "com.netflix.zuul.netty.server.EventLoopConfig",
            "displayedType": "EventLoopConfig",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 133,
              "startColumn": 35,
              "endLine": 133,
              "endColumn": 50
            }
          },
          "position": {
            "startLine": 65,
            "startColumn": 37,
            "endLine": 65,
            "endColumn": 52
          }
        },
        "com.netflix.zuul.netty.server.BaseServerStartup/memberField/registry": {
          "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/registry",
          "name": "registry",
          "type": "com.netflix.zuul.netty.server.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.Server/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.netty.server.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 123,
              "startColumn": 28,
              "endLine": 123,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 59,
            "startColumn": 30,
            "endLine": 59,
            "endColumn": 38
          }
        },
        "com.netflix.zuul.netty.server.BaseServerStartup/memberField/clientConnectionsShutdown": {
          "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/clientConnectionsShutdown",
          "name": "clientConnectionsShutdown",
          "type": "com.netflix.zuul.netty.server.ClientConnectionsShutdown",
          "displayedType": "ClientConnectionsShutdown",
          "probability": 1,
          "modifiers": [
            "PRIVATE"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.Server/memberField/clientConnectionsShutdown",
            "name": "clientConnectionsShutdown",
            "type": "com.netflix.zuul.netty.server.ClientConnectionsShutdown",
            "displayedType": "ClientConnectionsShutdown",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 125,
              "startColumn": 45,
              "endLine": 125,
              "endColumn": 70
            }
          },
          "position": {
            "startLine": 75,
            "startColumn": 39,
            "endLine": 75,
            "endColumn": 64
          }
        },
        "com.netflix.zuul.netty.server.BaseServerStartup/memberField/eventLoopGroupMetrics": {
          "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/eventLoopGroupMetrics",
          "name": "eventLoopGroupMetrics",
          "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.metrics.EventLoopGroupMetrics",
          "displayedType": "EventLoopGroupMetrics",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.Server/memberField/eventLoopGroupMetrics",
            "name": "eventLoopGroupMetrics",
            "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.metrics.EventLoopGroupMetrics",
            "displayedType": "EventLoopGroupMetrics",
            "modifiers": [
              "PRIVATE",
              "FINAL"
            ],
            "position": {
              "startLine": 120,
              "startColumn": 41,
              "endLine": 120,
              "endColumn": 62
            }
          },
          "position": {
            "startLine": 64,
            "startColumn": 43,
            "endLine": 64,
            "endColumn": 64
          }
        },
        "com.netflix.zuul.netty.server.BaseServerStartup/memberField/LOG": {
          "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/LOG",
          "name": "LOG",
          "type": "org.slf4j.Logger",
          "displayedType": "Logger",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.Server/memberField/LOG",
            "name": "LOG",
            "type": "org.slf4j.Logger",
            "displayedType": "Logger",
            "modifiers": [
              "PRIVATE",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 112,
              "startColumn": 33,
              "endLine": 112,
              "endColumn": 36
            }
          },
          "position": {
            "startLine": 56,
            "startColumn": 35,
            "endLine": 56,
            "endColumn": 38
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseZuulChannelInitializer.java-com.netflix.zuul.netty.server.BaseZuulChannelInitializer-com.netflix.zuul.netty.server.BaseServerStartup-accessLogPublisherfilterLoaderregistry": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseZuulChannelInitializer.java-com.netflix.zuul.netty.server.BaseZuulChannelInitializer-com.netflix.zuul.netty.server.BaseServerStartup-accessLogPublisherfilterLoaderregistry",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseZuulChannelInitializer.java",
      "from_class_or_interface_name": "BaseZuulChannelInitializer",
      "from_class_or_interface_key": "com.netflix.zuul.netty.server.BaseZuulChannelInitializer",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseServerStartup.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.server.BaseServerStartup",
      "to_class_or_interface_name": "BaseServerStartup",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.server.BaseZuulChannelInitializer/memberField/accessLogPublisher": {
          "key": "com.netflix.zuul.netty.server.BaseZuulChannelInitializer/memberField/accessLogPublisher",
          "name": "accessLogPublisher",
          "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.accesslog.AccessLogPublisher",
          "displayedType": "AccessLogPublisher",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/accessLogPublisher",
            "name": "accessLogPublisher",
            "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.accesslog.AccessLogPublisher",
            "displayedType": "AccessLogPublisher",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 68,
              "startColumn": 40,
              "endLine": 68,
              "endColumn": 58
            }
          },
          "position": {
            "startLine": 122,
            "startColumn": 40,
            "endLine": 122,
            "endColumn": 58
          }
        },
        "com.netflix.zuul.netty.server.BaseZuulChannelInitializer/memberField/filterLoader": {
          "key": "com.netflix.zuul.netty.server.BaseZuulChannelInitializer/memberField/filterLoader",
          "name": "filterLoader",
          "type": "com.netflix.zuul.netty.server.com.netflix.zuul.FilterLoader",
          "displayedType": "FilterLoader",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/filterLoader",
            "name": "filterLoader",
            "type": "com.netflix.zuul.netty.server.com.netflix.zuul.FilterLoader",
            "displayedType": "FilterLoader",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 71,
              "startColumn": 34,
              "endLine": 71,
              "endColumn": 46
            }
          },
          "position": {
            "startLine": 134,
            "startColumn": 34,
            "endLine": 134,
            "endColumn": 46
          }
        },
        "com.netflix.zuul.netty.server.BaseZuulChannelInitializer/memberField/registry": {
          "key": "com.netflix.zuul.netty.server.BaseZuulChannelInitializer/memberField/registry",
          "name": "registry",
          "type": "com.netflix.zuul.netty.server.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PROTECTED",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.netty.server.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 59,
              "startColumn": 30,
              "endLine": 59,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 117,
            "startColumn": 30,
            "endLine": 117,
            "endColumn": 38
          }
        }
      }
    },
    "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/Server.java-com.netflix.zuul.netty.server.Server-com.netflix.zuul.netty.server.BaseServerStartup-registryserverStatusManagerclientConnectionsShutdowneventLoopGroupMetricseventLoopConfigLOG": {
      "type": "data_clump",
      "key": "fields_to_fields_data_clump-zuul-core/src/main/java/com/netflix/zuul/netty/server/Server.java-com.netflix.zuul.netty.server.Server-com.netflix.zuul.netty.server.BaseServerStartup-registryserverStatusManagerclientConnectionsShutdowneventLoopGroupMetricseventLoopConfigLOG",
      "probability": 1,
      "from_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/Server.java",
      "from_class_or_interface_name": "Server",
      "from_class_or_interface_key": "com.netflix.zuul.netty.server.Server",
      "from_method_name": null,
      "from_method_key": null,
      "to_file_path": "zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseServerStartup.java",
      "to_class_or_interface_key": "com.netflix.zuul.netty.server.BaseServerStartup",
      "to_class_or_interface_name": "BaseServerStartup",
      "to_method_key": null,
      "to_method_name": null,
      "data_clump_type": "fields_to_fields_data_clump",
      "data_clump_data": {
        "com.netflix.zuul.netty.server.Server/memberField/registry": {
          "key": "com.netflix.zuul.netty.server.Server/memberField/registry",
          "name": "registry",
          "type": "com.netflix.zuul.netty.server.com.netflix.spectator.api.Registry",
          "displayedType": "Registry",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/registry",
            "name": "registry",
            "type": "com.netflix.zuul.netty.server.com.netflix.spectator.api.Registry",
            "displayedType": "Registry",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 59,
              "startColumn": 30,
              "endLine": 59,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 123,
            "startColumn": 28,
            "endLine": 123,
            "endColumn": 36
          }
        },
        "com.netflix.zuul.netty.server.Server/memberField/serverStatusManager": {
          "key": "com.netflix.zuul.netty.server.Server/memberField/serverStatusManager",
          "name": "serverStatusManager",
          "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.status.ServerStatusManager",
          "displayedType": "ServerStatusManager",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/serverStatusManager",
            "name": "serverStatusManager",
            "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.status.ServerStatusManager",
            "displayedType": "ServerStatusManager",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 58,
              "startColumn": 41,
              "endLine": 58,
              "endColumn": 60
            }
          },
          "position": {
            "startLine": 126,
            "startColumn": 39,
            "endLine": 126,
            "endColumn": 58
          }
        },
        "com.netflix.zuul.netty.server.Server/memberField/clientConnectionsShutdown": {
          "key": "com.netflix.zuul.netty.server.Server/memberField/clientConnectionsShutdown",
          "name": "clientConnectionsShutdown",
          "type": "com.netflix.zuul.netty.server.ClientConnectionsShutdown",
          "displayedType": "ClientConnectionsShutdown",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/clientConnectionsShutdown",
            "name": "clientConnectionsShutdown",
            "type": "com.netflix.zuul.netty.server.ClientConnectionsShutdown",
            "displayedType": "ClientConnectionsShutdown",
            "modifiers": [
              "PRIVATE"
            ],
            "position": {
              "startLine": 75,
              "startColumn": 39,
              "endLine": 75,
              "endColumn": 64
            }
          },
          "position": {
            "startLine": 125,
            "startColumn": 45,
            "endLine": 125,
            "endColumn": 70
          }
        },
        "com.netflix.zuul.netty.server.Server/memberField/eventLoopGroupMetrics": {
          "key": "com.netflix.zuul.netty.server.Server/memberField/eventLoopGroupMetrics",
          "name": "eventLoopGroupMetrics",
          "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.metrics.EventLoopGroupMetrics",
          "displayedType": "EventLoopGroupMetrics",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/eventLoopGroupMetrics",
            "name": "eventLoopGroupMetrics",
            "type": "com.netflix.zuul.netty.server.com.netflix.netty.common.metrics.EventLoopGroupMetrics",
            "displayedType": "EventLoopGroupMetrics",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 64,
              "startColumn": 43,
              "endLine": 64,
              "endColumn": 64
            }
          },
          "position": {
            "startLine": 120,
            "startColumn": 41,
            "endLine": 120,
            "endColumn": 62
          }
        },
        "com.netflix.zuul.netty.server.Server/memberField/eventLoopConfig": {
          "key": "com.netflix.zuul.netty.server.Server/memberField/eventLoopConfig",
          "name": "eventLoopConfig",
          "type": "com.netflix.zuul.netty.server.EventLoopConfig",
          "displayedType": "EventLoopConfig",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/eventLoopConfig",
            "name": "eventLoopConfig",
            "type": "com.netflix.zuul.netty.server.EventLoopConfig",
            "displayedType": "EventLoopConfig",
            "modifiers": [
              "PROTECTED",
              "FINAL"
            ],
            "position": {
              "startLine": 65,
              "startColumn": 37,
              "endLine": 65,
              "endColumn": 52
            }
          },
          "position": {
            "startLine": 133,
            "startColumn": 35,
            "endLine": 133,
            "endColumn": 50
          }
        },
        "com.netflix.zuul.netty.server.Server/memberField/LOG": {
          "key": "com.netflix.zuul.netty.server.Server/memberField/LOG",
          "name": "LOG",
          "type": "org.slf4j.Logger",
          "displayedType": "Logger",
          "probability": 1,
          "modifiers": [
            "PRIVATE",
            "STATIC",
            "FINAL"
          ],
          "to_variable": {
            "key": "com.netflix.zuul.netty.server.BaseServerStartup/memberField/LOG",
            "name": "LOG",
            "type": "org.slf4j.Logger",
            "displayedType": "Logger",
            "modifiers": [
              "PROTECTED",
              "STATIC",
              "FINAL"
            ],
            "position": {
              "startLine": 56,
              "startColumn": 35,
              "endLine": 56,
              "endColumn": 38
            }
          },
          "position": {
            "startLine": 112,
            "startColumn": 33,
            "endLine": 112,
            "endColumn": 36
          }
        }
      }
    }
  }
}