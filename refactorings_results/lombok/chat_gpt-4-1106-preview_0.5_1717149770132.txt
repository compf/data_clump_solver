{
    "refactorings": {
        "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java": [
            {
                "fromLine": 114,
                "toLine": 122,
                "oldContent": "\tpublic void generateMethods(JavacNode typeNode, JavacNode source, java.util.List<Included<JavacNode, EqualsAndHashCode.Include>> members,\n\t\tBoolean callSuper, boolean whineIfExists, boolean cacheHashCode, FieldAccess fieldAccess, List<JCAnnotation> onParam) {",
                "newContent": "\tpublic void generateMethods(JavacNode typeNode, JavacNode source, GenerationContext context) {"
            },
            {
                "fromLine": 162,
                "toLine": 171,
                "oldContent": "\t\tif (isDirectDescendantOfObject && callSuper) {",
                "newContent": "\t\tif (isDirectDescendantOfObject && context.callSuper) {"
            },
            {
                "fromLine": 173,
                "toLine": 177,
                "oldContent": "\t\t\t\tcallSuper = false;",
                "newContent": "\t\t\t\tcontext.callSuper = false;"
            },
            {
                "fromLine": 185,
                "toLine": 209,
                "oldContent": "\t\tJCMethodDecl equalsMethod = createEquals(typeNode, members, callSuper, fieldAccess, needsCanEqual, source, onParam);",
                "newContent": "\t\tJCMethodDecl equalsMethod = createEquals(typeNode, context.members, context.callSuper, context.fieldAccess, needsCanEqual, source, context.onParam);"
            },
            {
                "fromLine": 423,
                "toLine": 447,
                "oldContent": "\tpublic JCMethodDecl createEquals(JavacNode typeNode, java.util.List<Included<JavacNode, EqualsAndHashCode.Include>> members, boolean callSuper, FieldAccess fieldAccess, boolean needsCanEqual, JavacNode source, List<JCAnnotation> onParam) {",
                "newContent": "\tpublic JCMethodDecl createEquals(JavackNode typeNnode, GenerationContext context, boolean needsCanEqual, JavacNode source) {"
            }
        ]
    },
    "extractedClasses": {
        "src/core/lombok/javac/handlers/GenerationContext.java": "package lombok.javac.handlers;\n\nimport java.util.List;\nimport lombok.javac.JavacNode;\nimport lombok.javac.handlers.HandleEqualsAndHashCode.FieldAccess;\nimport com.sun.tools.javac.tree.JCTree.JCAnnotation;\nimport lombok.javac.handlers.HandleEqualsAndHashCode.Included;\nimport lombok.javac.handlers.HandleEqualsAndHashCode.EqualsAndHashCode;\n\npublic class GenerationContext {\n\tJavacNode typeNode;\n\tList<Included<JavacNode, EqualsAndHashCode.Include>> members;\n\tBoolean callSuper;\n\tboolean whineIfExists;\n\tboolean cacheHashCode;\n\tFieldAccess fieldAccess;\n\tList<JCAnnotation> onParam;\n\n\tpublic GenerationContext(JavacNode typeNode, List<Included<JavacNode, EqualsAndHashCode.Include>> members, Boolean callSuper, boolean whineIfExists, boolean cacheHashCode, FieldAccess fieldAccess, List<JCAnnotation> onParam) {\n\t\tthis.typeNode = typeNode;\n\t\tthis.members = members;\n\t\tthis.callSuper = callSuper;\n\t\tthis.whineIfExists = whineIfExists;\n\t\tthis.cacheHashCode = cacheHashCode;\n\t\tthis.fieldAccess = fieldArrayAccess;\n\t\tthis.onParam = onParam;\n\t}\n}"
    }
}