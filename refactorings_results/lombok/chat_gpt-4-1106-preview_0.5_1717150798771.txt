{
    "refactorings":{
        "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java": [
            {
                "fromLine": 427,
                "toLine": 449,
                "oldContent": "\tpublic JCMethodDecl createEquals(JavacNode typeNode, java.util.List<Included<JavacNode, EqualsAndHashCode.Include>> members, boolean callSuper, FieldAccess fieldAccess, boolean needsCanEqual, JavacNode source, List<JCAnnotation> onParam) {\n\t...",
                "newContent": "\tpublic JCMethodDecl createEquals(EqualsAndHashCodeConfig config) {\n\t..."
            },
            {
                "fromLine": 185,
                "toLine": 185,
                "oldContent": "",
                "newContent": "\t\tEqualsAndHashCodeConfig config = new EqualsAndHashCodeConfig(typeNode, members, callSuper, fieldAccess, needsCanEqual, source, onParam);\n"
            },
            {
                "fromLine": 185,
                "toLine": 209,
                "oldContent": "\t\tJCMethodDecl equalsMethod = createEquals(typeNode, members, callSuper, fieldAccess, needsCanEqual, source, onParam);\n\t\t...",
                "newContent": "\t\tJCMethodDecl equalsMethod = createEquals(config);\n\t\t..."
            }
        ]
    },
    "extractedClasses":{
        "src/core/lombok/javac/handlers/EqualsAndHashCodeConfig.java": "package lombok.javac.handlers;\n\nimport lombok.javac.JavacNode;\nimport lombok.core.handlers.Included;\nimport lombok.EqualsAndHashCode.Include;\nimport com.sun.tools.javac.util.List;\nimport com.sun.tools.javac.code.TypeAnnotations.FieldAccess;\nimport com.sun.tools.javac.tree.JCTree.JCAnnotation;\n\npublic class EqualsAndHashCodeConfig {\n\tpublic final JavacNode typeNode;\n\tpublic final List<Included<JavacNode, Include>> members;\n\tpublic boolean callSuper;\n\tpublic final FieldAccess fieldAccess;\n\tpublic final boolean needsCanEqual;\n\tpublic final JavacNode source;\n\tpublic final List<JCAnnotation> onParam;\n\n\tpublic EqualsAndHashCodeConfig(JavacNode typeNode, List<Included<JavacNode, Include>> members, boolean callSuper, FieldAccess fieldAccess, boolean needsCanEqual, JavacNode source, List<JCAnnotation> onParam) {\n\t\tthis.typeNode = typeNode;\n\t\tthis.members = members;\n\t\tthis.callSuper = callSuper;\n\t\tthis.fieldAccess = fieldAccess;\n\t\tthis.needsCanEqual = needsCanEqual;\n\t\tthis.source = source;\n\t\tthis.onParam = onParam;\n\t}\n}"
    }
}