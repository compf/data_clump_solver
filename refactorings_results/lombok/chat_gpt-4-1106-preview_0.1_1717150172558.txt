{
    "refactorings":{
        "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java": [
            {
                "fromLine": 423,
                "toLine": 457,
                "oldContent": "\tpublic JCMethodDecl createEquals(JavacNode typeNode, java.util.List<Included<JavacNode, EqualsAndHashCode.Include>> members, boolean callSuper, FieldAccess fieldAccess, boolean needsCanEqual, JavacNode source, List<JCAnnotation> onParam) {\n",
                "newContent": "\tpublic JCMethodDecl createEquals(GenerateEqualsAndHashCodeData data) {\n"
            },
            {
                "fromLine": 557,
                "toLine": 561,
                "oldContent": "\t\treturn recursiveSetGeneratedBy(maker.MethodDef(mods, typeNode.toName(\"equals\"), returnType, List.<JCTypeParameter>nil(), params, List.<JCExpression>nil(), body, null), source);\n\t}\n",
                "newContent": "\t\treturn recursiveSetGeneratedBy(maker.MethodDef(mods, data.typeNode.toName(\"equals\"), returnType, List.<JCTypeParameter>nil(), params, List.<JC(Expression>nil(), body, null), data.source);\n\t}\n"
            },
            {
                "fromLine": 185,
                "toLine": 209,
                "oldContent": "\t\tJCMethodDecl equalsMethod = createEquals(typeNode, members, callSuper, fieldAccess, needsCanEqual, source, onParam);\n",
                "newContent": "\t\tGenerateEqualsAndHashCodeData genData = new GenerateEqualsAndHashCodeData(typeNode, members, callSuper, fieldAccess, needsCanEqual, source, onParam);\n\t\tJCMethodDecl equalsMethod = createEquals(genData);\n"
            }
            ]
        },
    "extractedClasses": {
        "src/core/lombok/javac/handlers/GenerateEqualsAndHashCodeData.java": "package lombok.javac.handlers;\n\nimport java.util.List;\nimport com.sun.tools.javac.tree.JCTree.JCAnnotation;\nimport lombok.javac.JavacNode;\nimport lombok.javac.handlers.HandleEqualsAndHashCode.Included;\nimport lombok.core.handlers.HandlerUtil.FieldAccess;\n\npublic class GenerateEqualsAndHashCodeData {\n\tJavacNode typeNode;\n\tList<Included<JavacNode, EqualsAndHashCode.Include>> members;\n\tboolean callSuper;\n\tFieldAccess fieldAccess;\n\tboolean needsCanEqual;\n\tJavacNode source;\n\tList<JCAnnotation> onParam;\n\n\tpublic GenerateEqualsAndHashCodeData(JavacNode typeNode, List<Included<JavacNode, EqualsAndHashCode.Include>> members, boolean callSuper, FieldAccess fieldAccess, boolean needsCanEqual, JavacNode source, List<JCAnnotation> onParam) {\n\t\tthis.typeNode = typeNode;\n\t\tthis.members = members;\n\t\tthis.callSuper = callSuper;\n\t\tthis.fieldAccess = fieldAccess;\n\t\tthis.needsCanEqual = needsCanEqual;\n\t\tthis.source = source;\n\t\tthis.onParam = onParam;\n\t}\n}\n"
    }
}