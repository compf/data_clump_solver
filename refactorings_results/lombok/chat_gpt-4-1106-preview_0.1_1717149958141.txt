{
    "refactorings":{
        "src/core/lombok/javac/handlers/HandleEqualsAndHashCode.java": [
            {
                "fromLine": 423,
                "toLine": 457,
                "oldContent": "\tpublic JCMethodDecl createEquals(JavacNode typeNode, java.util.List<Included<JavacNode, EqualsAndHashCode.Include>> members, boolean callSuper, FieldAccess fieldAccess, boolean needsCanEqual, JavacNode source, List<JCAnnotation> onParam) {\n...",
                "newContent": "\tpublic JCMethodDecl createEquals(EqualsAndHashCodeGenerationContext context) {\n\t\tJavacNode typeNode = context.getTypeNode();\n\t\tjava.util.List<Included<JavacNode, EqualsAndHashCode.Include>> members = context.getMembers();\n\t\tboolean callSuper = context.isCallSuper();\n\t\tFieldAccess fieldAccess = context.getFieldAccess();\n\t\tboolean needsCanEqual = context.isNeedsCanEqual();\n\t\tJavacNode source = context.getSource();\n\t\tList<JCAnnotation> onParam = context.getOnParam();\n..."
            },
            {
                "fromLine": 114,
                "toLine": 209,
                "oldContent": "\tpublic void generateMethods(JavacNode typeNode, JavacNode source, java.util.List<Included<JavacNode, EqualsAndHashCode.Include>> members,\n\t\tBoolean callSuper, boolean whineIfExists, boolean cacheHashCode, FieldAccess fieldAccess, List<JCAnnotation> onParam) {\n...",
                "newContent": "\tpublic void generateMethods(EqualsAndHashCodeGenerationContext context) {\n\t\tJavacNode typeNode = context.getTypeNode();\n\t\tJavacNode source = context.getSource();\n\t\tjava.util.List<Included<JavacNode, EqualsAndHashCode.Include>> members = context.getMembers();\n\t\tboolean callSuper = context.isCallSuper();\n\t\tboolean whineIfExists = context.isWhineIfExists();\n\t\tboolean cacheHashCode = context.isCacheHashCode();\n\t\tFieldAccess fieldAccess = context.getFieldAccess();\n\t\tList<JCAnnotation> onParam = context.getOnParam();\n..."
            }
        ]
    },
    "extractedClasses":{
        "src/core/lombok/javac/handlers/EqualsAndHashCodeGenerationContext.java": "package core.lombok.javac.handlers;\n\nimport java.util.List;\nimport lombok.javac.JavacNode;\nimport lombok.core.handlers.Included;\nimport lombok.javac.handlers.FieldAccess;\n\npublic class EqualsAndHashCodeGenerationContext {\n\n\tprivate final JavacNode typeNode;\n\tprivate final JavacNode source;\n\tprivate final List<Included<JavacNode, EqualsAndHashCode.Include>> members;\n\tprivate final boolean callSuper;\n\tprivate final boolean whineIfExists;\n\tprivate final boolean cacheHashCode;\n\tprivate final FieldAccess fieldAccess;\n\tprivate final List<JCAnnotation> onParam;\n\n\tpublic EqualsAndHashCodeGenerationContext(JavacNode typeNode, JavacNode source, List<Included<JavacNode, EqualsAndHashCode.Include>> members, boolean callSuper, boolean whineIfExists, boolean cacheHashCode, FieldAccess fieldAccess, List<JCAnnotation> onParam) {\n\t\tthis.typeNode = typeNode;\n\t\tthis.source = source;\n\t\tthis.members = members;\n\t\tthis.callSuper = callSuper;\n\t\tthis.whineIfExists = whineIfExists;\n\t\tthis.cacheHashCode = cacheHashCode;\n\t\tthis.fieldAccess = fieldAccess;\n\t\tthis.onParam = onParam;\n\t}\n\n\tpublic JavacNode getTypeNode() {\n\t\treturn typeNode;\n\t}\n\n\tpublic JavacNode getSource() {\n\t\treturn source;\n\t}\n\n\tpublic List<Included<JavacNode, EqualsAndHashCode.Include>> getMembers() {\n\t\treturn members;\n\t}\n\n\tpublic boolean isCallSuper() {\n\t\treturn callSuper;\n\t}\n\n\tpublic boolean isWhineIfExists() {\n\t\treturn whineIfExists;\n\t}\n\n\tpublic boolean isCacheHashCode() {\n\t\treturn cacheHashCode;\n\t}\n\n\tpublic FieldAccess getFieldAccess() {\n\t\treturn fieldAccess;\n\t}\n\n\tpublic List<JCAnnotation> getOnParam() {\n\t\treturn onParam;\n\t}\n\n}"
    }
}