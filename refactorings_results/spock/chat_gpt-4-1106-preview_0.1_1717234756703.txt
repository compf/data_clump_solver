{
    "refactorings": {
        "spock-core/src/main/java/org/spockframework/mock/runtime/DefaultMethodInvoker.java": [
            {
                "fromLine": 15,
                "toLine": 57,
                "oldContent": "\nimport org.spockframework.mock.CannotCreateMockException;\nimport org.spockframework.mock.IMockInvocation;\nimport org.spockframework.mock.IResponseGenerator;\nimport org.spockframework.util.ExceptionUtil;\nimport org.spockframework.util.Nullable;\nimport org.spockframework.util.ReflectionUtil;\nimport org.spockframework.util.ThreadSafe;\n\nimport java.lang.invoke.MethodHandle;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.reflect.Field;\nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\n\n@ThreadSafe\npublic class DefaultMethodInvoker implements IResponseGenerator {\n  @Nullable // Available since Java 17\n  private static final Method INVOKE_DEFAULT = ReflectionUtil.getDeclaredMethodByName(InvocationHandler.class, \"invokeDefault\");\n  private final Object target;\n  private final Method method;\n  private final Object[] arguments;\n\n  public DefaultMethodInvoker(Object target, Method method, Object[] arguments) {\n    this.target = target;\n    this.method = method;\n    this.arguments = arguments;\n  }\n\n  @Override\n  public Object respond(IMockInvocation invocation) {\n    if (INVOKE_DEFAULT == null) {\n      return useInternalMethodHandle();\n    }\n    Object[] args = new Object[]{target, method, arguments};\n    return ReflectionUtil.invokeMethod(null, INVOKE_DEFAULT, args);\n  }\n\n  private Object useInternalMethodHandle() {\n    MethodHandle methodHandle;\n    try {\n      final Field field = MethodHandles.Lookup.class.getDeclaredField(\"IMPL_LOOKUP\");\n      field.setAccessible(true);",
                "newContent": "\nimport org.spockframework.mock.CannotCreateMockException;\nimport org.spockframework.mock.IMockInvocation;\nimport org.spockframework.mock.IResponseGenerator;\nimport org.spockframework.util.ExceptionUtil;\nimport org.spockframework.util.Nullable;\nimport org.spockframework.util.ReflectionUtil;\nimport org.spockframework.util.ThreadSafe;\n\nimport java.lang.invoke.MethodHandle;\nimport java.lang.invoke.MethodHandles;\nimport java.lang.reflect.Field;\nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\n\n@ThreadSafe\npublic class DefaultMethodInvoker implements IResponseGenerator {\n  @Nullable // Available since Java 17\n  private static final Method INVOKE_DEFAULT = ReflectionUtil.getDeclaredMethodByName(InvocationHandler.class, \"invokeDefault\");\n  private final MethodInvocationTarget methodInvocationTarget;\n\n  public DefaultMethodInvoker(MethodInvocationTarget methodInvocationTarget) {\n    this.methodInvocationTarget = methodInvocationTarget;\n  }\n\n  @Override\n  public Object respond(IMockInvocation invocation) {\n    if (INVOKE_DEFAULT == null) {\n      return useInternalMethodHandle();\n    }\n    Object[] args = new Object[]{methodInvocationTarget.getTarget(), methodInvocationTarget.getMethod(), methodInvocationTarget.getArguments()};\n    return ReflectionReadInvoker.invokeMethod(null, INVOKE_DEFAULT, args);\n  }\n\n  private Object useInternalMethodHandle() {\n    MethodHandle methodHandle;\n    try {\n      final Field field = MethodHandles.Lookup.class.getDeclaredField(\"IMPL_LOOKUP\");\n      field.setAccessible(true);"
            }
        ]
    },
    "extractedClasses": {
        "spock-core/src/main/java/org/spockframework/mock/runtime/MethodInvocationTarget.java": "package org.spockframework.mock.runtime;\n\nimport java.lang.reflect.Method;\n\npublic class MethodInvocationTarget {\n  private final Object target;\n  private final Method method;\n  private final Object[] arguments;\n\n  public MethodInvocationTarget(Object target, Method method, Object[] arguments) {\n    this.target = target;\n    this.method = method;\n    this.arguments = arguments;\n  }\n\n  public Object getTarget() {\n    return target;\n  }\n\n  public Method getMethod() {\n    return method;\n  }\n\n  public Object[] getArguments() {\n    return arguments;\n  }\n}\n",
        "spock-core/src/main/java/org/spockframework/util/ReflectionReadInvoker.java": "package org.spockframework.util;\n\nimport java.lang.reflect.Method;\n\npublic class ReflectionReadInvoker {\n  public static Object invokeMethod(Object target, Method method, Object[] args) {\n    return ReflectionUtil.invokeMethod(target, method, args);\n  }\n}\n"
    }
}