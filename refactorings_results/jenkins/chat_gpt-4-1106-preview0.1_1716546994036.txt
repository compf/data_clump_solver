{
    "refactorings": {
        "core/src/main/java/jenkins/util/ScriptListener.java": [
            {
                "fromLine": 66,
                "toLine": 79,
                "oldContent": "    default void onScriptExecution(@CheckForNull String script, @CheckForNull Binding binding, @NonNull Object feature, @CheckForNull Object context, @NonNull String correlationId, @CheckForNull User user) {\n    }\n",
                "newContent": "    default void onScriptExecution(ScriptEventDetails details, @CheckForNull String script, @CheckForNull Binding binding) {\n    }\n"
            },
            {
                "fromLine": 82,
                "toLine": 86,
                "oldContent": "    default void onScriptOutput(@CheckForNull String output, @NonNull Object feature, @CheckForNull Object context, @NonNull String correlationId, @CheckForNull User user) {\n    }\n",
                "newContent": "    default void onScriptOutput(ScriptEventDetails details, @CheckForNull String output) {\n    }\n"
            },
            {
                "fromLine": 94,
                "toLine": 97,
                "oldContent": "    static void fireScriptExecution(@CheckForNull String script, @CheckForNull Binding binding, @NonNull Object feature, @CheckForNull Object context, @NonNull String correlationId, @CheckForNull User user) {\n",
                "newContent": "    static void fireScriptExecution(ScriptEventDetails details, @CheckForNull String script, @CheckForNull Binding binding) {\n"
            },
            {
                "fromLine": 124,
                "toLine": 127,
                "oldContent": "    static void fireScriptOutput(@CheckForNull String output, @NonNull Object feature, @CheckForNull Object context, @NonNull String correlationId, @CheckForNull User user) {\n",
                "newContent": "    static void fireScriptOutput(ScriptEventDetails details, @CheckForNull String output) {\n"
            },
            {
                "fromLine": 136,
                "toLine": 142,
                "oldContent": "        public ListenerWriter(Writer writer, Object feature, Object context, String correlationId, User user) {\n",
                "newContent": "        public ListenerWriter(Writer writer, ScriptEventDetails details) {\n"
            },
            {
                "fromLine": 150,
                "toLine": 150,
                "oldContent": "            ScriptListener.fireScriptOutput(String.copyValueOf(cbuf, off, len), feature, context, correlationId, user);\n",
                "newContent": "            ScriptListener.fireScriptOutput(details, String.copyValueOf(cbuf, off, len));\n"
            },
            {
                "fromLine": 177,
                "toLine": 182,
                "oldContent": "        private final Object feature;\n        private final Object context;\n        private final String correlationId;\n        private final User user;\n",
                "newContent": "        private final ScriptEventDetails details;\n"
            },
            {
                "fromLine": 186,
                "toLine": 191,
                "oldContent": "            this.feature = feature;\n            this.context = context;\n            this.correlationId = correlationId;\n            this.user = user;\n",
                "newContent": "            this.details = new ScriptEventDetails(feature, context, correlationId, user);\n"
            },
            {
                "fromLine": 195,
                "toLine": 195,
                "oldContent": "            ScriptListener.fireScriptOutput(new String(new byte[] { (byte) b }, charset), feature, context, correlationId, user);\n",
                "newContent": "            ScriptListener.fireScriptOutput(details, new String(new byte[] { (byte) b }, charset));\n"
            },
            {
                "fromLine": 202,
                "toLine": 202,
                "oldContent": "            ScriptListener.fireScriptOutput(writtenString, feature, context, correlationId, user);\n",
                "newContent": "            ScriptListener.fireScriptOutput(details, writtenString);\n"
            }
        ],
        "core/src/main/java/jenkins/util/DefaultScriptListener.java": [
            {
                "fromLine": 47,
                "toLine": 47,
                "oldContent": "    public void onScriptExecution(String script, Binding binding, @NonNull Object feature, Object context, @NonNull String correlationId, User user) {\n",
                "newContent": "    public void onScriptExecution(ScriptEventDetails details, String script, Binding binding) {\n"
            },
            {
                "fromLine": 54,
                "toLine": 54,
                "oldContent": "    public void onScriptOutput(String output, @NonNull Object feature, Object context, @NonNull String correlationId, User user) {\n",
                "newContent": "    public void onScriptOutput(ScriptEventDetails details, String output) {\n"
            }
        ],
        "core/src/main/java/hudson/cli/GroovyCommand.java": [
            {
                "fromLine": 79,
                "toLine": 79,
                "oldContent": "        ScriptListener.fireScriptExecution(script, binding, GroovyCommand.class, null, scriptListenerCorrelationId, User.current());\n",
                "newContent": "        ScriptListener.fireScriptExecution(new ScriptEventDetails(GroovyCommand.class, null, scriptListenerCorrelationId, User.current()), script, binding);\n"
            }
        ],
        "core/src/main/java/hudson/cli/GroovyshCommand.java": [
            {
                "fromLine": 87,
                "toLine": 87,
                "oldContent": "        ScriptListener.fireScriptExecution(null, null, GroovyshCommand.class, null, scriptListenerCorrelationId, User.current());\n",
                "newContent": "        ScriptListener.fireScriptExecution(new ScriptEventDetails(GroovyshCommand.class, null, scriptListenerCorrelationId, User.current()), null, null);\n"
            },
            {
                "fromLine": 147,
                "toLine": 147,
                "oldContent": "            ScriptListener.fireScriptExecution(line, binding, GroovyshCommand.class, null, scriptListenerCorrelationId, User.current());\n",
                "newContent": "            ScriptListener.fireScriptExecution(new ScriptEventDetails(GroovyshCommand.class, null, scriptListenerCorrelationId, User.current()), line, binding);\n"
            }
        ],
        "core/src/main/java/hudson/util/RemotingDiagnostics.java": [
            {
                "fromLine": 124,
                "toLine": 124,
                "oldContent": "        ScriptListener.fireScriptOutput(output, RemotingDiagnostics.class, context, correlationId, User.current());\n",
                "newContent": "        ScriptListener.fireScriptOutput(new ScriptEventDetails(RemotingDiagnostics.class, context, correlationId, User.current()), output);\n"
            },
            {
                "fromLine": 126,
                "toLine": 126,
                "oldContent": "        ScriptListener.fireScriptExecution(script, new Binding(), RemotingDiagnostics.class, context, correlationId, User.current());\n",
                "newContent": "        ScriptListener.fireScriptExecution(new ScriptEventDetails(RemotingDiagnostics.class, context, correlationId, User.current()), script, new Binding());\n"
            }
        ],
        "core/src/main/java/jenkins/util/groovy/GroovyHookScript.java": [
            {
                "fromLine": 137,
                "toLine": 137,
                "oldContent": "            ScriptListener.fireScriptExecution(s.getScriptText(), bindings, this.getClass(), s.getFile(), this.getClass().getName() + \":\" + hook, User.current());\n",
                "newContent": "            ScriptListener.fireScriptExecution(new ScriptEventDetails(this.getClass(), s.getFile(), this.getClass().getName() + \":\" + hook, User.current()), s.getScriptText(), bindings);\n"
            }
        ]
    },
    "extractedClasses": {
        "core/src/main/java/jenkins/util/ScriptEventDetails.java": "package jenkins.util;\n\nimport hudson.model.User;\nimport javax.annotation.CheckForNull;\n\npublic class ScriptEventDetails {\n    @NonNull\n    private final Object feature;\n    @CheckForNull\n    private final Object context;\n    @NonNull\n    private final String correlationId;\n    @CheckForNull\n    private final User user;\n\n    public ScriptEventDetails(@NonNull Object feature, @CheckForNull Object context, @NonNull String correlationId, @CheckForNull User user) {\n        this.feature = feature;\n        this.context = context;\n        this.correlationId = correlationId;\n        this.user = user;\n    }\n\n    @NonNull\n    public Object getFeature() {\n        return feature;\n    }\n\n    @CheckForNull\n    public Object getContext() {\n        return context;\n    }\n\n    @NonNull\n    public String getCorrelationId() {\n        return correlationId;\n    }\n\n    @CheckForNull\n    public User getUser() {\n        return user;\n    }\n}\n"
    }
}