{
    "refactorings": {
        "core/src/main/java/jenkins/util/ScriptListener.java": [
            {
                "fromLine": 66,
                "toLine": 79,
                "oldContent": "default void onScriptExecution(@CheckForNull String script, @CheckForNull Binding binding, @NonNull Object feature, @CheckForNull Object context, @NonNull String correlationId, @CheckForNull User user) {\n    }\n",
                "newContent": "default void onScriptExecution(@CheckForNull String script, @CheckForNull Binding binding, ScriptEventDetails details) {\n    }\n"
            },
            {
                "fromLine": 82,
                "toLine": 133,
                "oldContent": "default void onScriptOutput(@CheckForNull String output, @NonNull Object feature, @CheckForNull Object context, @NonNull String correlationId, @CheckForNull User user) {\n    }\n\n    static void fireScriptExecution(...) {\n        ...\n    }\n\n    static void fireScriptOutput(...) {\n        ...\n    }\n",
                "newContent": "default void onScriptOutput(@CheckForNull String output, ScriptEventDetails details) {\n    }\n\n    static void fireScriptExecution(...) {\n        ...\n    }\n\n    static void fireScriptOutput(...) {\n        ...\n    }\n"
            },
            {
                "fromLine": 136,
                "toLine": 156,
                "oldContent": "public ListenerWriter(Writer writer, Object feature, Object context, String correlationId, User user) {\n            this.writer = writer;\n            this.feature = feature;\n            this.context = context;\n            this.correlationId = correlationId;\n            this.user = user;\n        }\n",
                "newContent": "public ListenerWriter(Writer writer, ScriptEventDetails details) {\n            this.writer = writer;\n            this.details = details;\n        }\n"
            },
            {
                "fromLine": 168,
                "toLine": 172,
                "oldContent": "that calls{@link #fireScriptOutput(String, Object, Object, String, hudson.model.User)} with\n     * the output it writes to the wrapped {@link java.io.OutputStream}, and otherwise just forwards {@link #flush()}\n     * and {@link #close()}.",
                "newContent": "that calls{@link #fireScriptOutput(String, ScriptEventDetails)} with\n     * the output it writes to the wrapped {@link java.io.OutputStream}, and otherwise just forwards {@link #flush()}\n     * and {@link #close()}."
            },
            {
                "fromLine": 177,
                "toLine": 184,
                "oldContent": "private final Object feature;\n        private final Object context;\n        private final String correlationId;\n        private final User user;\n",
                "newContent": "private final ScriptEventDetails details;\n"
            },
            {
                "fromLine": 186,
                "toLine": 193,
                "oldContent": "this.feature = feature;\n            this.context = context;\n            this.correlationId = correlationId;\n            this.user = user;\n",
                "newContent": "this.details = details;\n"
            },
            {
                "fromLine": 195,
                "toLine": 199,
                "oldContent": "ScriptListener.fireScriptOutput(new String(new byte[] { (byte) b }, charset), feature, context, correlationId, user);\n",
                "newContent": "ScriptListener.fireScriptOutput(new String(new byte[] { (byte) b }, charset), details);\n"
            },
            {
                "fromLine": 202,
                "toLine": 206,
                "oldContent": "ScriptListener.fireScriptOutput(writtenString, feature, context, correlationId, user);\n",
                "newContent": "ScriptListener.fireScriptOutput(writtenString, details);\n"
            }
        ],
        "core/src/main/java/jenkins/util/DefaultScriptListener.java": [
            {
                "fromLine": 45,
                "toLine": 59,
                "oldContent": "public void onScriptExecution(String script, Binding binding, @NonNull Object feature, Object context, @NonNull String correlationId, User user) {\n",
                "newContent": "public void onScriptExecution(String script, Binding binding, ScriptEventDetails details) {\n"
            }
        ],
        "core/src/main/java/hudson/cli/GroovyCommand.java": [
            {
                "fromLine": 75,
                "toLine": 79,
                "oldContent": "ScriptListener.fireScriptExecution(script, binding, GroovyCommand.class, null, scriptListenerCorrelationId, User.current());\n",
                "newContent": "ScriptListener.fireScriptExecution(script, binding, new ScriptEventDetails(GroovyCommand.class, null, scriptListenerCorrelationId, User.current()));\n"
            }
        ],
        "core/src/main/java/hudson/cli/GroovyshCommand.java": [
            {
                "fromLine": 84,
                "toLine": 88,
                "oldContent": "ScriptListener.fireScriptExecution(null, null, GroovyshCommand.class, null, scriptListenerCorrelationId, User.current());\n",
                "newContent": "ScriptListener.fireScriptExecution(null, null, new ScriptEventDetails(GroovyshCommand.class, null, scriptListenerCorrelationId, User.current()));\n"
            },
            {
                "fromLine": 144,
                "toLine": 148,
                "oldContent": "ScriptListener.fireScriptExecution(line, binding, GroovyshCommand.class, null, scriptListenerCorrelationId, User.current());\n",
                "newContent": "ScriptListener.fireScriptExecution(line, binding, new ScriptEventDetails(GroovyshCommand.class, null, scriptListenerCorrelationId, User.current()));\n"
            }
        ],
        "core/src/main/java/hudson/util/RemotingDiagnostics.java": [
            {
                "fromLine": 121,
                "toLine": 127,
                "oldContent": "ScriptListener.fireScriptExecution(script, new Binding(), RemotingDiagnostics.class, context, correlationId, User.current());\n        final String output = channel.call(new Script(script));\n        ScriptListener.fireScriptOutput(output, RemotingDiagnostics.class, context, correlationId, User.current());\n",
                "newContent": "ScriptEventDetails details = new ScriptEventDetails(RemotingDiagnostics.class, context, correlationId, User.current());\n        ScriptListener.fireScriptExecution(script, new Binding(), details);\n        final String output = channel.call(new Script(script));\n        ScriptListener.fireScriptOutput(output, details);\n"
            }
        ],
        "core/src/main/java/jenkins/util/groovy/GroovyHookScript.java": [
            {
                "fromLine": 135,
                "toLine": 139,
                "oldContent": "ScriptListener.fireScriptExecution(s.getScriptText(), bindings, this.getClass(), s.getFile(), this.getClass().getName() + \":\" + hook, User.current());\n",
                "newContent": "ScriptListener.fireScriptExecution(s.getScriptText(), bindings, new ScriptEventDetails(this.getClass(), s.getFile(), this.getClass().getName() + \":\" + hook, User.current()));\n"
            }
        ]
    },
    "extractedClasses": {
        "ScriptEventDetails.java": "package jenkins.util;\n\nimport hudson.model.User;\nimport javax.annotation.CheckForNull;\nimport javax.annotation.NonNull;\n\npublic class ScriptEventDetails {\n    @NonNull\n    private final Object feature;\n    @CheckForNull\n    private final Object context;\n    @NonNull\n    private final String correlationId;\n    @CheckForNull\n    private final User user;\n\n    public ScriptEventDetails(@NonNull Object feature, @CheckForNull Object context, @NonNull String correlationId, @CheckForNull User user) {\n        this.feature = feature;\n        this.context = context;\n        this.correlationId = correlationId;\n        this.user = user;\n    }\n\n    @NonNull\n    public Object getFeature() {\n        return feature;\n    }\n\n    @CheckForNull\n    public Object getContext() {\n        return context;\n    }\n\n    @NonNull\n    public String getCorrelationId() {\n        return correlationId;\n    }\n\n    @CheckForNull\n    public User getUser() {\n        return user;\n    }\n}\n"
    }
}